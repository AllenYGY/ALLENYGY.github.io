<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[NOTE]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://www.allenygy.vip/</link><image><url>https://www.allenygy.vip/lib/media/favicon.png</url><title>NOTE</title><link>https://www.allenygy.vip/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Fri, 27 Dec 2024 09:16:08 GMT</lastBuildDate><atom:link href="https://www.allenygy.vip/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Fri, 27 Dec 2024 09:13:01 GMT</pubDate><copyright><![CDATA[AllenYGY]]></copyright><ttl>60</ttl><dc:creator>AllenYGY</dc:creator><item><title><![CDATA[Sliding Window]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> 
 <br><br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
<br>枚举右端点，挪动左端点
<br>挪动左端点的判断条件一定枚举右端点出发的
<br>判断条件是难点
<br>int left=0;
for(int right=0;right&lt;n;i++){
	# 常常伴有哈系
	while(condition){
		left+=1;
	}
	# 更新ans
}
return ans;
<br><br>class Solution {
public:
	int lengthOfLongestSubstring(string s) {
		int ans=0,left=0,n=s.size();
		unordered_map&lt;char,int&gt;m;
		for(int right=0;right&lt;n;right++){
			m[s[right]]++;
			while(m[s[right]]&gt;1){
				m[s[left]]--;
				left++;
			}ans=max(ans,right-left+1);
		}	
		return ans;
	}
};
]]></description><link>https://www.allenygy.vip/algorithm/basic-algorithm/sliding-window.html</link><guid isPermaLink="false">Algorithm/Basic Algorithm/Sliding Window.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:34 GMT</pubDate></item><item><title><![CDATA[Discretization]]></title><description><![CDATA[ 
 <br><br>
<br>排序
<br>去重
<br>二分查找获取下标
<br>vector&lt;int&gt; discretization(vector&lt;int&gt; &amp;a) {
	vector&lt;int&gt; alls(a);
	sort(alls.begin(), alls.end()); // 排序
	alls.erase(unique(alls.begin(), alls.end()), alls.end()); //去重
	for (int &amp;x : a) { //重新赋值原数组
 		x = lower_bound(alls.begin(), alls.end(), x) - alls.begin();
	}
	return alls; //用于查表
}
]]></description><link>https://www.allenygy.vip/algorithm/basic-algorithm/discretization.html</link><guid isPermaLink="false">Algorithm/Basic Algorithm/Discretization.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Binary Search]]></title><description><![CDATA[ 
 <br><br><br>// &gt;=
int index = lower_bound(X.begin(),X.end(),x)-X.begin();
// &gt;
int index = lower_bound(X.begin(),X.end(),x+1)-X.begin();
// &lt;
int index = lower_bound(X.begin(),X.end(),x)-1-X.begin();
//&lt;=
int index = lower_bound(X.begin(),X.end()+1,x+1)-1-X.begin();
]]></description><link>https://www.allenygy.vip/algorithm/basic-algorithm/binary-search.html</link><guid isPermaLink="false">Algorithm/Basic Algorithm/Binary Search.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:01:27 GMT</pubDate></item><item><title><![CDATA[Basic-Algorithm-Overview]]></title><description><![CDATA[ 
 <br><br>
<br>前缀和
<br>差分
<br>倍增
<br><a data-tooltip-position="top" aria-label="Discretization" data-href="Discretization" href="https://www.allenygy.vip/Discretization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">离散化</a><a data-tooltip-position="top" aria-label="Discretization" data-href="Discretization" href="https://www.allenygy.vip/algorithm/basic-algorithm/discretization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">离散化</a>
<br><a data-tooltip-position="top" aria-label="Binary Search" data-href="Binary Search" href="https://www.allenygy.vip/Binary Search" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">二分查找</a><a data-tooltip-position="top" aria-label="Binary Search" data-href="Binary Search" href="https://www.allenygy.vip/algorithm/basic-algorithm/binary-search.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">二分查找</a>
<br><a data-tooltip-position="top" aria-label="Sliding Window" data-href="Sliding Window" href="https://www.allenygy.vip/Sliding Window" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">双指针</a><a data-tooltip-position="top" aria-label="Sliding Window" data-href="Sliding Window" href="https://www.allenygy.vip/algorithm/basic-algorithm/sliding-window.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">双指针</a>
]]></description><link>https://www.allenygy.vip/algorithm/basic-algorithm/basic-algorithm-overview.html</link><guid isPermaLink="false">Algorithm/Basic Algorithm/Basic-Algorithm-overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Union-Find]]></title><description><![CDATA[ 
 <br><br>
<br>用于解决元素分组问题
<br>联通问题
<br>操作
<br>合并 (Union)
<br>查询 (Find)
<br><br>
<br>初始化时每个元素各成一个集合
<br>fa[i] 即指向 ---〉i 所在集合的代表元素
<br>int fa[MAXN];
void init(int n){
	for (int i = 1; i &lt;= n; ++i)
		fa[i] = i;
}
<br><br>
<br>每个集合只能有一个代表元素
<br>故查询时回溯至找到代表元素是停止
<br>find(x) 应定义为x元素的所在集合的代表元素
<br>int find(int x){
	if(fa[x] == x)
		return x;
	else
		return find(fa[x]);
}
<br><br>
<br>合并的基本逻辑是另一个集合的代表元素变成另一个集合的代表元素
<br>分解操作

<br>find(i) i元素所在集合的代表元素
<br>fa[i] 即指向 ---〉集合的代表元素
<br>find(j) j元素所在集合代表元素


<br>
找到i元素所在集合的代表元素 使该元素的代表元素指向 j元素的代表元素
<br>void merge(int i, int j){
	fa[find(i)] = find(j);
}
<br><br>
<br>令所有节点都指向同一个父节点
<br>int find(int x){
	if(x == fa[x])
		return x;
	else{
		fa[x] = find(fa[x]); //父节点设为根节点
		return fa[x]; //返回父节点
	}
}

int find(int x){
	return x == fa[x] ? x : (fa[x] = find(fa[x]));
}
<br><br>
<br>初始化
<br>void init(int n){
	for (int i = 1; i &lt;= n; ++i){
		fa[i] = i;
		rank[i] = 1;
	}
}
<br>
<br>合并
<br>void merge(int i, int j){
	int x = find(i), y = find(j); // * 先找到两个根节点
	if (rank[x] &lt;= rank[y])
		fa[x] = y;
	else
		fa[y] = x;
	if (rank[x] == rank[y] &amp;&amp; x != y)
		rank[y]++; // * 如果深度相同且根节点不同，则新的根节点的深度+1
	}
<br><br>class Ufds {

private:
	vector&lt;int&gt; parents;
	vector&lt;int&gt; ranks;
public:
	Ufds(int n) {
		parents.resize(n);
		ranks.resize(n);
		for (int i = 0; i &lt; n; i++) {
			parents[i] = i;
			ranks[i] = i;
		}
	}
	int findSet(int a) {
		if (parents[a] != a) {
			parents[a] = findSet(parents[a]);
		}
		return parents[a];
	}
	void unionSets(int a, int b) {
		a = findSet(a);
		b = findSet(b);
		if (a == b) return;
		if (ranks[a] &lt; ranks[b]) {
			int temp = a;
			a = b;
			b = temp;	
		}
		parents[b] = a;
		ranks[a]++;	
	}
	};
<br><br><br>若某个家族人员过于庞大，要判断两个是否是亲戚，确实还很不容易，现在给出某个亲戚关系图，求任意给出的两个人是否具有亲戚关系。<br><br>规定： 和  是亲戚， 和  是亲戚，那么  和  也是亲戚。如果 ， 是亲戚，那么  的亲戚都是  的亲戚， 的亲戚也都是  的亲戚。<br><br>第一行：三个整数 ，（），分别表示有  个人， 个亲戚关系，询问  对亲戚关系。<br>以下  行：每行两个数 ，，，表示  和  具有亲戚关系。<br>接下来  行：每行两个数 ，询问  和  是否具有亲戚关系。<br><br> 行，每行一个 Yes 或 No。表示第  个询问的答案为“具有”或“不具有”亲戚关系。<br><br><br>
6 5 3

1 2

1 5

3 4

5 2

1 3

1 4

2 3

5 6

<br><br>
Yes

Yes

No

<br><br>
#include &lt;cstdio&gt;

#define MAXN 5005

int fa[MAXN], rank[MAXN];

inline void init(int n)

{

for (int i = 1; i &lt;= n; ++i)

{

fa[i] = i;

rank[i] = 1;

}

}

int find(int x)

{

return x == fa[x] ? x : (fa[x] = find(fa[x]));

}

inline void merge(int i, int j)

{

int x = find(i), y = find(j);

if (rank[x] &lt;= rank[y])

fa[x] = y;

else

fa[y] = x;

if (rank[x] == rank[y] &amp;&amp; x != y)

rank[y]++;

}

int main()

{

int n, m, p, x, y;

scanf("%d%d%d", &amp;n, &amp;m, &amp;p);

init(n);

for (int i = 0; i &lt; m; ++i)

{

scanf("%d%d", &amp;x, &amp;y);

merge(x, y);

}

for (int i = 0; i &lt; p; ++i)

{

scanf("%d%d", &amp;x, &amp;y);

printf("%s\n", find(x) == find(y) ? "Yes" : "No");

}

return 0;

}

  

## 婴儿的名字

  

<br>每年，政府都会公布一万个最常见的婴儿名字和它们出现的频率，也就是同名婴儿的数量。有些名字有多种拼法，例如，John 和 Jon 本质上是相同的名字，但被当成了两个名字公布出来。给定两个列表，一个是名字及对应的频率，另一个是本质相同的名字对。设计一个算法打印出每个真实名字的实际频率。注意，如果 John 和 Jon 是相同的，并且 Jon 和 Johnny 相同，则 John 与 Johnny 也相同，即它们有传递和对称性。<br>在结果列表中，选择 字典序最小 的名字作为真实名字。<br>示例：<br>
输入：names = ["John(15)","Jon(12)","Chris(13)","Kris(4)","Christopher(19)"], synonyms = ["(Jon,John)","(John,Johnny)","(Chris,Kris)","(Chris,Christopher)"]

输出：["John(27)","Chris(36)"]

<br>提示：<br>
<br>
<br>
class Solution {

private:

unordered_map&lt;string, string&gt; parent;

unordered_map&lt;string, int&gt; frequency;

  

string find(string x) {

if (parent.find(x) == parent.end())

return x;

if (parent[x] != x)

parent[x] = find(parent[x]);

return parent[x];

}

  

void merge(string i, string j) {

string x = find(i);

string y = find(j);

if (x==y) return;

if (x &lt; y) {

parent[y] = x;

frequency[x] += frequency[y];

frequency[y] = 0;

}

else{

parent[x]=y;

frequency[y]+=frequency[x];

frequency[x]=0;

}

}

  

public:

vector&lt;string&gt; trulyMostPopular(vector&lt;string&gt;&amp; names, vector&lt;string&gt;&amp; synonyms) {

// Parse and initialize frequencies

for (const string&amp; name : names) {

int pos = name.find('(');

string nameStr = name.substr(0, pos);

int freq = stoi(name.substr(pos + 1, name.size() - pos - 2));

parent[nameStr] = nameStr;

frequency[nameStr] = freq;

}

  

// Process synonyms

for (const string&amp; synonym : synonyms) {

int pos = synonym.find(',');

string name1 = synonym.substr(1, pos - 1);

string name2 = synonym.substr(pos + 1, synonym.size() - pos - 2);

merge(name1, name2);

}

  

// Build the result

vector&lt;string&gt; result;

for (auto&amp; entry : frequency) {

string name = entry.first;

int freq = entry.second;

if (name == find(name)) {

string nameFreq = name + "(" + to_string(freq) + ")";

result.push_back(nameFreq);

}

}

  

return result;

}

};

]]></description><link>https://www.allenygy.vip/algorithm/daa/algorithm/union-find.html</link><guid isPermaLink="false">Algorithm/DAA/Algorithm/Union-Find.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Sort Algorithm]]></title><description><![CDATA[ 
 <br><br>
<br>Bubble Sort
<br>Insertion Sort
<br>Merge Sort
<br>Quick Sort
<br>Heap Sort
<br>稳定排序：排序前后两个相等的数相对位置不变，则算法稳定<br>
Bubble sort, Insertion sort, Merge sort<br>
非稳定排序：排序前后两个相等的数相对位置发生了变化，则算法不稳定<br>
Quick sort, Heap sort<br>Default order from smallest to largest<br><br>
<br>Final不考先不写
<br>  public static void sort(int nums[]){
    Bubble(nums, nums.length-1);
  }

  //* 优化 每次循环的最后一次交换后   该下标往右都不会再发生交换 */
  public static void Bubble(int nums[],int j){    
    if(j==0) return ;
    int x=0;
    for(int i=0;i&lt;j;i++){
      if(nums[i]&gt;nums[i+1]) {
        int temp=nums[i];
        nums[i]=nums[i+1];
        nums[i+1]=temp;
        x=i;
      }
    }
    Bubble(nums, x);
  }
<br><br>
<br>
遍历第一个元素到数组最后一个元素

<br>
每遍历一个元素就比较已经排好序的部分，倒序遍历回去知道找到可以插入的位置

<br>
Example:

<br>654321
<br>564321
<br>456321
<br>345621
<br>234561
<br>123456


<br>❌ Error: Expected an atom of EOF but received ordinary at position 8: `  A[i+1]↱ = key`<br>
<br>Non-Recursion
<br>public static void insertionSort(int A[]){
  for(int p=1;i&lt;A.length;p++){
    int key=A[p]; int i=p-1;
    while(i&gt;=0 &amp;&amp; A[i]&gt;key){
      A[i+1]=A[i]; //挪位置
      i=i-1;
    }
    A[i+1]=key;
  }
}
<br>
<br>Recursion
<br>不断缩小排序范围<br>public static void insertionSort(int A[]){
    Insertion(A, 1);
  }
public static void insertionSort(int A[],int p){
  if(p==A.length) return;
  int key=A[p]; int i=p-1;
  while(i&gt;=0 &amp;&amp; key&lt;A[i]){
    A[i+1]=A[i];
    i--;
  }
  A[i+1]=key;
  Insertion(A, p+1);
}
<br><br>
<br>Best-Case:  已经排好序的数组，扫一遍
<br>Worst-Case:  倒序的数组
<br>Average-Case: 
<br><br>
<br>重点讲下merge的过程

<br>对于两个有序数组第一个元素下标分别为


<br>❌ Error: Expected an atom of EOF but received ordinary at position 3: `11.↱ Copy B to A[l`<br><br><br><br>
<br>
<br><br>❌ Error: Expected an atom of EOF but received ordinary at position 3: `15.↱   swap A[i] a`<br><br><br>Use the first element as a pivot<br>
<br>if the input is random, ok
<br>if the input is presorted (or in reverse order)

<br>all the elements go into S2 (or S1)
<br>this happens consistently throughout the recursive calls<br>
Results in  behavior


<br><br>Choose the pivot randomly<br>
<br>generally safe
<br>random number generation can be expensive
<br><br>Use the median of the array 中位数<br>
The median is the middle element if the array is sorted.<br>
<br>Partitioning always cuts the array into roughly half
<br>An optimal quicksort: O(N log N)
<br>However, it is expensive to find the exact median<br>
e.g., sort an array to pick the value in the middle
<br><br>We will use the median of three<br>
Compare just three elements: the left-most, right-most, and center<br>Swap these elements if necessary so that<br>
<br>A[left] =  Smallest
<br>A[right]   =  Largest
<br>A[center]  = Median of three
<br>Pick A[center] as the pivot
<br>Swap A[center] and A[right – 1] so that the pivot is at second-last position
<br><br>
<br>Assumptions<br>
Pivot Selection: Median of 3<br>
Base Case: Array size &lt;= 10
<br>Running time 

<br>Divide

<br>Pivot selection: O(1)
<br>Partitioning: O(n)
<br>Recursive calls: T(i) + T(n-i-1)


<br>Conquer and Combine: O(1)


<br><br>
<br>Worst-Case

<br>The pivot is the smallest element, all the time
<br>Partition is always unbalanced


<br><br>
<br>Best-Case

<br>Partition is perfectly balanced
<br>Pivot is always in the middle (median of the array)


<br><br><br><br><br><br><br><br><br>
<br>Average-Case
<br>
<br><br>
<br>The inner loop consists of an increment/decrement (by 1, which is fast), a test, and , a jump.
<br>There is no extra juggling as in mergesort.
<br><br><br>The priority queue is a data structure that allows at least two operations<br>
<br>insert
<br>delete in/deleteMax

<br>finds, returns, and removes the minimum elements in the priority queue


<br><br>Heaps are “almost perfect binary trees”<br>
<br>All levels are full except possibly the lowest level
<br>If the lowest level is not full, then nodes must be packed to the left
<br><br>Given a binary heap of node number n and height h<br>
<br>n is within 
<br>The height <br>
The structure is so regular, it can be represented in an array and no links are necessary !!!
<br>Insert in  time<br>
Locate the current minimum in  time<br>
Delete the current minimum in  time<br>❌ Error: Expected an atom of EOF but received ordinary at position 2: `9.↱     return Tr`<br>Note:<br>
节点A：<br>
父节点：<br>❌ Error: Expected an atom of EOF but received ordinary at position 3: `11.↱   return min`<br>❌ Error: Expected an atom of EOF but received ordinary at position 2: `5.↱ &nbsp; &nbsp;     A[i] `]]></description><link>https://www.allenygy.vip/algorithm/daa/algorithm/sort.html</link><guid isPermaLink="false">Algorithm/DAA/Algorithm/Sort.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Graph-algorithm]]></title><description><![CDATA[ 
 <br><br>Def: Graph
A graph is a pair of <br>
V is the collection of vertices<br>
E is the collection of edges
<br>Def: Directed Graph
(u, v)  and (v, u) are distinct for some edges (u, v) .
<br>Def: Undirected Graph
(u, v)  and (v, u) are identical for all edges (u, v) .
<br><br>Adjacency list Representation<br>
<br> is a linked list of all v that (u, v) .

<br> ,  
<br>In directed graphs,  is the out degree of v


<br>Adjacency matrix Representation<br>
<br> is a  matrix such that   if .  
<br><br>What does DFS do?

<br>Traverse all vertices in graph, and thereby
<br>Reveal properties of the graph.

Four array s are used to keep information gathered during traversal.
<br>Four Arrays

<br> : the color of each vertex visited

<br>white: undiscovered
<br>gray : discovered but not finished processing 
<br>black: finished processing


<br> : the predecessor pointer pointing back to the vertex from which u was discovered
<br> : the discovery time

<br>a counter indicating when vertex u is discovered 


<br>: the finishing time

<br>a counter indicating when the processing of vertex  ( and all its descendants ) is finished



<br>


Algorithm DFS(G)



Input: Graph GGG

Output: Vertex traversal of graph GGG

for all vertex u∈V(G)u \in V(G)u∈V(G) do


color[u]←whitecolor[u] \gets \text{white}color[u]←white//Initialize

pred[u]←NULLpred[u] \gets \text{NULL}pred[u]←NULL


end for

time←0time \gets 0time←0

for all vertex u∈V(G)u \in V(G)u∈V(G) do//Start a new tree


if color[u]==whitecolor[u] == \text{white}color[u]==white then


DFSVisit(uuu)


end if


end for



Export to clipboard<br>


Algorithm DFSVisit



color[u]←graycolor[u] \gets \text{gray}color[u]←gray//u is discovered

d[u]←++d[u] \gets ++d[u]←++time//u's discovery time

for all v∈adj[u]v \in \text{adj}[u]v∈adj[u] do//Visit undiscovered vertex


if color[v]==whitecolor[v] == \text{white}color[v]==white then


pred[v]←upred[v] \gets upred[v]←u

DFSVisit(vvv)


end if


end for

color[u]←blackcolor[u] \gets \text{black}color[u]←black//u has finished

f[u]←++f[u] \gets ++f[u]←++time//u finish time



Export to clipboard<br>The output of DFS

<br>The time stamp arrays: d[v], f[v]
<br>The predecessor array: pred[v]

<br>Def: DFS Forest
Use  to define a graph  as follows:<br>
<br>
It is a graph with no cycles, and a collection of trees.
<br>HandShaking Theorem
If G=(V, E) is an undirected graph<br>
If G=(V, E) is an directed graph<br>

<br><br><br><br><br>DFS Properties 

<br>u is a descendant ( in DFS trees ) of v, if and only if  is a subinterval of .
<br>u is an ancestor of v, if and only if  contains  .
<br>u is unrelated to v, if and only if  and  are disjoint intervals.

<br><img alt="Time-Stamp-1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/DFS/Time-Stamp-Structure-1.png" referrerpolicy="no-referrer"><br>Proof 
The idea is to consider every case.<br>
Assume   wlog.

<br>If  , then

<br>u is discovered when v is still not finished y et ( marked gray)  u is a descendant of v ;
<br>u is discovered later than v   u should finish before v;
<br>hence we have  is a subinterval of .


<br>If , then

<br>Obviously  and $[d[v] , f[v]] are disjoint;
<br>Which means that when u or v is discovered, the others are not marked gray; 
<br>And hence neither vertex is a descendant of the other



<br><br>Theorem
An edge in an undirected graph is either a tree edge or a back edge.
<br>Proof 
Assume . Then, v is be discovered while u is gray.<br>
Hence v is in the DFS subtree rooted at u.

<br>If ,   is a tree edge.
<br>If ,   is a back edge.

<br><br><br>Def: Articulation 
Let  G=(V, E) be a connected undirected graph.<br>
An articulation point (cut vertex) of G is a vertex whose removal disconnects G<br>
<img align="left" style="zoom:40%;" alt="Articulation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/DFS/Articulation-point.png" referrerpolicy="no-referrer">
<br>Given a connected graph G, how to find all articulation points?

<br>Brute Force Solution 
<br>

<br><br>
<br>Remove a vertex and its corresponding edges one by one one from G.
<br>Test whether the resulting graph is still connected or not say by DFS.
<br>The running time is O (n ∗(n + e)) .<br><br>
<br>The root of the DFS tree is an articulation point if it has two or more children.
<br>A leaf of the DFS tree is not an articulation point.
<br>And for other internal vertex v in the DFS tree, v is an articulation point if<br>
if there is one subtree rooted at a child of v that does not have a back edge which climbs higher than v.
<br><br>Def: Low and high
Using the discovery time in the DFS tree to define low and high.
<br>If there is a subtree rooted at a children of v which does not have a back edge connecting to a vertex with discovery time smaller than d[v] , then v is an articulation point.<br>
<br>Let Low (w) be the smallest value that a descendant of w can climb up by a back edge.
<br>We use d[v] to express the “hight” of v.
<br>v is “higher” than u if v and u are on the same branch of the DFS tree and d[v] &lt; d[u] .
<br>If v and u are on different branches, d[v] and d[u] are not compatible by the time-stamp structure.
]]></description><link>https://www.allenygy.vip/algorithm/daa/algorithm/graph-algorithm.html</link><guid isPermaLink="false">Algorithm/DAA/Algorithm/Graph-algorithm.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/DFS/Time-Stamp-Structure-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/DFS/Time-Stamp-Structure-1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Enumeration]]></title><description><![CDATA[ 
 <br><br>枚举 <br>自右向左取<br>for(int i = 1; i &lt; (1 &lt;&lt; n) ; ++i){
	for(int j = 0 ; j &lt; n ; ++j){
		if( i &amp; (1 &lt;&lt; j )){ 
		}
	}
}
<br>自左向右取<br>for(int i = 1; i &lt; (1 &lt;&lt; n); ++i){
	for(int j = 0 ; j &lt; n ; ++j){
		if( (i &gt;&gt; n ) &amp; 1){
		}
	}
}
<br><br><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/maximum-points-in-an-archery-competition/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/maximum-points-in-an-archery-competition/" target="_blank">射箭比赛中的最大得分</a>]]></description><link>https://www.allenygy.vip/algorithm/daa/algorithm/enumeration.html</link><guid isPermaLink="false">Algorithm/DAA/Algorithm/Enumeration.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Enumeration-subset]]></title><description><![CDATA[ 
 <br><br><br>从1−n这n个整数中随机选取任意多个，每种方案里的数从小到大排列，按字典序输出所有可能的选择方案。<br>
<br>每种方案都有选或者不选两种情况
<br>#include&lt;iostream&gt;
#incldue&lt;algorithm&gt;

using namespace std;

const int N=20;
bool st[N]; //记录每个元素状态 选或不选
int n;

void dfs(int u){ //u 为当前状态
	if(u&gt;n){ //Base Case
		for(int i=1;i&lt;=n;i++){
			if(st[i]) cout&lt;&lt;i&lt;&lt;" ";
		}
		puts("");
		return ;
	}
	st[u]=true; // 选择当前元素
		dfs(u+1);
	st[u]=false;// 不选择当前元素
		dfs(u+1);
}

int main(){
	cin&gt;&gt;n;
	dfs(1);
	return 0;
}

<br><br>把&nbsp;1∼n 这 n 个整数排成一行后随机打乱顺序，输出所有可能的次序。<br>
<br>每次都需要选一个数
<br>通过一个数组记录选数的顺序
<br>#include&lt;iostream&gt;

using namespace std;

const int N=20;

bool used[N];
int way[N];

int n;

void dfs(int u){//当前选了几个数
	if(u&gt;n){//输出
		for(int i=1;i&lt;=n;i++){
			cout&lt;&lt;way[i]&lt;&lt;" ";
		}
		puts("");
		return ;
	}
	for(int i=1;i&lt;=n;i++){
		if(used[i]) continue;
		used[i]=true;
		way[u]=i;
		dfs(u+1);
		used[i]=false;
	}
}

int main(){
	cin&gt;&gt;n;
	dfs(1);
	return 0;
}

<br><br>把&nbsp;1∼n 这 n 个整数中随机选出m个，输出所有的可能的选择方案<br>#include&lt;iostream&gt;  
using namespace std;
const int N=30;
bool used[N];
int way[N];
int n;
int m;

void dfs(int u,int cnt){
	if(cnt==m){
		for(int i=1;i&lt;=m;i++){
			cout&lt;&lt;way[i]&lt;&lt;" ";
		}
		puts("");
		return ;
	}
	for(int i=1;i&lt;=n;i++){
		if(way[u-1]&lt;i &amp;&amp; !used[i]){
			used[i]=true;
			way[u]=i;
			dfs(u+1,cnt+1);
			used[i]=false;
		}  		
	}
}

int main(){
	cin&gt;&gt;n&gt;&gt;m;
	dfs(1,0);
	return 0;
}
]]></description><link>https://www.allenygy.vip/algorithm/daa/algorithm/enumeration-subset.html</link><guid isPermaLink="false">Algorithm/DAA/Algorithm/Enumeration-subset.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Divide-and-Conquer]]></title><description><![CDATA[ 
 <br><br>


Algorithm Algorithm Divide and Conquer



if sizeof(P)\text{sizeof}(P)sizeof(P) is small then




return sol(P)\text{sol}(P)sol(P)


else


Split PPP into P1,P2,P3,…P_1, P_2, P_3, \ldotsP1​,P2​,P3​,…

for i←1i \gets 1i←1 to nnn do


si←DC(Pi)s_i \gets \text{DC}(P_i)si​←DC(Pi​)


end for



return combine(s1,s2,…)\text{combine}(s_1, s_2, \ldots)combine(s1​,s2​,…)


end if



Export to clipboard<br><br> Example By 2<br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br> Example By 2 and Solve it With n<br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br><br>
<br>Input: R = [1 ... n] is an array of n integers 
<br>Output: R = R [i...j] is a subarray of R, s.t.

<br>A pair of two integer  
<br>sum (R)=Sum(R[i...j]) is maximized
<br>


<br>Respect to

<br>sum(R[i...j])= 


<br>Maximum

<br>


<br>Subarray of R
<br><br>
<br>Input: An array R of n integers
<br>Output: The value of MCS 
<br>VMAX = R[1],mi=0,mj=0
for i = 1 to N do 
	V = 0 
	for j = i to N do 
		// calculate V ( i, j )
		V = V + R [ j ] 
		if V &gt; VMAX then 
			VMAX = V
			mi=i
			mj=j 
		end if
	end for
end for 
return VMAX
<br>


Algorithm Maximum Contiguous Subarray Problem {Brute Force Reuse Data}



VMAX=R[1]VMAX = R[1]VMAX=R[1]

mi=0m_i = 0mi​=0

mj=0m_j = 0mj​=0

for i=1i = 1i=1 to NNN do


V=0V = 0V=0

for j=ij = ij=i to NNN do


//calculate V(i,j)V(i, j)V(i,j)

V=V+R[j]V = V + R[j]V=V+R[j]

if V&gt;VMAXV &gt; VMAXV&gt;VMAX then


VMAX=VVMAX = VVMAX=V

mi=im_i = imi​=i

mj=jm_j = jmj​=j


end if


end for


end for

return VMAXVMAXVMAX



Export to clipboard<br><br>
<br>Input: R[i...j]
<br>Output: MCS of R[i...j]
<br>


Algorithm Maximum Contiguous Subarray Problem



if i=ji = ji=j then




return R[i]R[i]R[i]


else


s1←MCS(R,i,⌊(i+j)/2⌋)s1 \gets \text{MCS}(R, i, \lfloor(i+j)/2\rfloor)s1←MCS(R,i,⌊(i+j)/2⌋)//Using floor function for lower rounding

s2←MCS(R,⌊(i+j)/2⌋+1,j)s2 \gets \text{MCS}(R, \lfloor(i+j)/2\rfloor + 1, j)s2←MCS(R,⌊(i+j)/2⌋+1,j)

A←MaxSuffix(R,i,⌊(i+j)/2⌋)+MaxPrefix(R,⌊(i+j)/2⌋+1,j)A \gets \text{MaxSuffix}(R, i, \lfloor(i+j)/2\rfloor) + \text{MaxPrefix}(R, \lfloor(i+j)/2\rfloor + 1, j)A←MaxSuffix(R,i,⌊(i+j)/2⌋)+MaxPrefix(R,⌊(i+j)/2⌋+1,j)



return MAX(s1,s2,A)\text{MAX}(s1, s2, A)MAX(s1,s2,A)


end if



Export to clipboard<br>
<br>Cpp 解法
<br>class Solution {
public:
	int maxPreffix(vector&lt;int&gt;&amp;nums,int i ,int j){
		int ans=nums[i];
		int tmp=0;
		for(;i&lt;=j;i++){
			tmp+=nums[i];
			if(tmp&gt;ans){
				ans=tmp;
			}
		}
		return ans;
	}
	int maxSuffix(vector&lt;int&gt;&amp;nums,int i ,int j){
		int ans=nums[j];
		int tmp=0;
		for(;i&lt;=j;j--){
			tmp+=nums[j];
			if(tmp&gt;ans){
			ans=tmp;
			}
		}
		return ans;
	}
	int MSA(vector&lt;int&gt;&amp;nums,int i ,int j){
		if(i==j){
			return nums[i];
		}
		else{
			int S1=MSA(nums,i,(i+j)/2);
			int S2=MSA(nums,(i+j)/2+1,j);
			int A = maxSuffix(nums,i,(i+j)/2)+maxPreffix(nums,(i+j)/2+1,j);
			return max({S1,S2,A});
		}
	}
	int maxSubArray(vector&lt;int&gt;&amp; nums) {
		return MSA(nums,0,nums.size()-1);
	}
};
<br><br>Definition: A x B<br>
 is the multiplication of A x B s.t<br>
(i+j=k)0\leq k\leq n+m$$<br>
<br>Brute Force 
<br><br>


Algorithm Polynomial Multi1(A(x),B(x)A(x),B(x)A(x),B(x))



if n=0n=0n=0 then


return a0×b0a_0 \times b_0a0​×b0​


else


A0(x)=a0+a1x+⋯+a⌊n2⌋−1x⌊n2⌋−1A_0(x) = a_0 + a_1x + \dots + a_{\lfloor \frac{n}{2} \rfloor - 1}x^{\lfloor \frac{n}{2} \rfloor -1}A0​(x)=a0​+a1​x+⋯+a⌊2n​⌋−1​x⌊2n​⌋−1

A1(x)=a⌊n2⌋+a⌊n2⌋+1x+⋯+anxn−⌊n2⌋A_1(x) = a_{\lfloor \frac{n}{2} \rfloor} + a_{\lfloor \frac{n}{2} \rfloor +1}x + \dots + a_nx^{n-\lfloor \frac{n}{2} \rfloor}A1​(x)=a⌊2n​⌋​+a⌊2n​⌋+1​x+⋯+an​xn−⌊2n​⌋

B0(x)=b0+b1x+⋯+b⌊n2⌋−1x⌊n2⌋−1B_0(x) = b_0 + b_1x + \dots + b_{\lfloor \frac{n}{2} \rfloor - 1}x^{\lfloor \frac{n}{2} \rfloor -1}B0​(x)=b0​+b1​x+⋯+b⌊2n​⌋−1​x⌊2n​⌋−1

B1(x)=b⌊n2⌋+b⌊n2⌋+1x+⋯+bnxn−⌊n2⌋B_1(x) = b_{\lfloor \frac{n}{2} \rfloor} + b_{\lfloor \frac{n}{2} \rfloor +1}x + \dots + b_nx^{n-\lfloor \frac{n}{2} \rfloor}B1​(x)=b⌊2n​⌋​+b⌊2n​⌋+1​x+⋯+bn​xn−⌊2n​⌋

U(x)=PolyMult1(A0(x),B0(x))U(x) = \text{PolyMult1}(A_0(x), B_0(x))U(x)=PolyMult1(A0​(x),B0​(x))

V(x)=PolyMult1(A0(x),B1(x))V(x) = \text{PolyMult1}(A_0(x), B_1(x))V(x)=PolyMult1(A0​(x),B1​(x))

W(x)=PolyMult1(A1(x),B0(x))W(x) = \text{PolyMult1}(A_1(x), B_0(x))W(x)=PolyMult1(A1​(x),B0​(x))

Z(x)=PolyMult1(A1(x),B1(x))Z(x) = \text{PolyMult1}(A_1(x), B_1(x))Z(x)=PolyMult1(A1​(x),B1​(x))

return U(x)+(V(x)+W(x))x⌊n2⌋+Z(x)x2⌊n2⌋U(x) + (V(x) + W(x))x^{\lfloor \frac{n}{2} \rfloor} + Z(x)x^{2\lfloor \frac{n}{2} \rfloor}U(x)+(V(x)+W(x))x⌊2n​⌋+Z(x)x2⌊2n​⌋


end if



Export to clipboard<br>
<br>Time Complexity<br>
 Example By 2


<br>


Algorithm Polynomial Multi2(A(x),B(x)A(x),B(x)A(x),B(x))



if n=0n=0n=0 then


return a0×b0a_0 \times b_0a0​×b0​


else


A0(x)=a0+a1x+⋯+a⌊n2⌋−1x⌊n2⌋−1A_0(x) = a_0 + a_1x + \dots + a_{\lfloor \frac{n}{2} \rfloor - 1}x^{\lfloor \frac{n}{2} \rfloor -1}A0​(x)=a0​+a1​x+⋯+a⌊2n​⌋−1​x⌊2n​⌋−1

A1(x)=a⌊n2⌋+a⌊n2⌋+1x+⋯+anxn−⌊n2⌋A_1(x) = a_{\lfloor \frac{n}{2} \rfloor} + a_{\lfloor \frac{n}{2} \rfloor +1}x + \dots + a_nx^{n-\lfloor \frac{n}{2} \rfloor}A1​(x)=a⌊2n​⌋​+a⌊2n​⌋+1​x+⋯+an​xn−⌊2n​⌋

B0(x)=b0+b1x+⋯+b⌊n2⌋−1x⌊n2⌋−1B_0(x) = b_0 + b_1x + \dots + b_{\lfloor \frac{n}{2} \rfloor - 1}x^{\lfloor \frac{n}{2} \rfloor -1}B0​(x)=b0​+b1​x+⋯+b⌊2n​⌋−1​x⌊2n​⌋−1

B1(x)=b⌊n2⌋+b⌊n2⌋+1x+⋯+bnxn−⌊n2⌋B_1(x) = b_{\lfloor \frac{n}{2} \rfloor} + b_{\lfloor \frac{n}{2} \rfloor +1}x + \dots + b_nx^{n-\lfloor \frac{n}{2} \rfloor}B1​(x)=b⌊2n​⌋​+b⌊2n​⌋+1​x+⋯+bn​xn−⌊2n​⌋

Y(x)=PolyMult2(A0(x)+A1(x),B0(x)+B1(x))Y(x) = \text{PolyMult2}(A_0(x)+A_1(x), B_0(x)+B_1(x))Y(x)=PolyMult2(A0​(x)+A1​(x),B0​(x)+B1​(x))

U(x)=PolyMult2(A0(x),B0(x))U(x) = \text{PolyMult2}(A_0(x), B_0(x))U(x)=PolyMult2(A0​(x),B0​(x))

Z(x)=PolyMult2(A1(x),B1(x))Z(x) = \text{PolyMult2}(A_1(x), B_1(x))Z(x)=PolyMult2(A1​(x),B1​(x))

return U(x)+(Y(x)−U(x)−Z(x))x⌊n2⌋+Z(x)x2⌊n2⌋U(x) + (Y(x) - U(x) - Z(x))x^{\lfloor \frac{n}{2} \rfloor} + Z(x)x^{2\lfloor \frac{n}{2} \rfloor}U(x)+(Y(x)−U(x)−Z(x))x⌊2n​⌋+Z(x)x2⌊2n​⌋


end if



Export to clipboard]]></description><link>https://www.allenygy.vip/algorithm/daa/algorithm/divide-and-conquer.html</link><guid isPermaLink="false">Algorithm/DAA/Algorithm/Divide-and-Conquer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[DAA-Programming-Assignment]]></title><description><![CDATA[ 
 <br><br><br>The Maximum Subarray Sum problem seeks to find the contiguous subarray (containing at least one number) which has the largest sum among all possible subarrays of a given integer array.<br><br>Define  as the maximum sum of a subarray ending at index . The recurrence relation can be expressed as:<br><br>where  is the value of the array at index .<br><br>
<br>
: The input array containing integers.

<br>
: The maximum sum of a subarray ending at position  in array .

<br>
: A function returning the maximum of its arguments.

<br><br>The pseudocode for the Dynamic Programming solution of this problem is as follows:<br>


Algorithm MCS



function MCS(SSS)


if SSS is empty then




return 0


end if

F[0]←S[0]F[0] \gets S[0]F[0]←S[0]

maxSum←S[0]maxSum \gets S[0]maxSum←S[0]

for i←1i \gets 1i←1 to length(S)−1\text{length}(S) - 1length(S)−1 do


F[i]←max⁡(F[i−1]+S[i],S[i])F[i] \gets \max(F[i-1] + S[i], S[i])F[i]←max(F[i−1]+S[i],S[i])

if F[i]&gt;maxSumF[i] &gt; maxSumF[i]&gt;maxSum then


maxSum←F[i]maxSum \gets F[i]maxSum←F[i]


end if


end for



return maxSummaxSummaxSum


end function



Export to clipboard<br><br>
<br>
Initialization: The initialization of F[0] and maxSum takes constant time, .

<br>
Loop: The loop runs  times if  is the length of the array. Within each iteration, the operations (calculating  and updating maxSum) take constant time.

<br>
Overall: The overall time complexity of the algorithm is , where  is the number of elements in the input array, as each element is processed exactly once.

<br><br>
<br>This documentation was written in a Markdown file.
<br>In my code, it can output all optimal solutions, both on the screen and to an output file.
<br>The number of integers in the input is unknown. You can input an array of arbitrary size.<br>
Here's a refined version of the guideline section of your documentation:
<br><br>The implementation was performed using standard C and compiled with the GCC compiler.<br><br>
<br>
Directory Structure<br>
To compile the code, ensure you are in the correct directory.  If you are in the correct path, you could see the following file tree structure:
.
├── Makefile
├── README.md
├── in
├── in_out
├── lib.c
├── lib.h
├── lib.o
├── mcs
├── mcs.c
└── mcs.o


<br>
Compile the Code:<br>
Once you have confirmed the directory structure, simply type make in the terminal:
make

This command will compile the source files and should produce the following output:
gcc -c mcs.c
gcc -c lib.c
gcc mcs.o lib.o -o mcs


<br><br>After compiling the code, you can execute the program by entering the following command in the terminal:<br>./mcs &lt;InputFilename&gt;
<br>For example, to run the program with the input file named in, type:<br>./mcs in
<br>This command will run the program using the data specified in the in file. Make sure that the input file is in the correct format and location as expected by the program.]]></description><link>https://www.allenygy.vip/algorithm/daa/assignment/daa-programming-assignment.html</link><guid isPermaLink="false">Algorithm/DAA/Assignment/DAA-Programming-Assignment.md</guid><dc:creator><![CDATA[Junya YANG]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[DAA-Assignment-2]]></title><description><![CDATA[ 
 <br><br><br><img style="zoom:90%;" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-1.png" referrerpolicy="no-referrer"><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-2.png" referrerpolicy="no-referrer"><br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-3.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-4.png" referrerpolicy="no-referrer"><br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-5.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-6.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-7.png" referrerpolicy="no-referrer"><br><br>A tree &nbsp;is the maximum spanning tree of a graph &nbsp;if &nbsp;is a spanning tree of &nbsp;and the weight on the tree &nbsp;is maximized.<br>Mr. Smart designs an algorithm to find the maximum spanning tree. Is his algorithm correct?<br>


Algorithm MaxST(G, w)


Require: a connected graph G=(V,E)G = (V, E)G=(V,E) with a weight function w:E→Zw: E \to \mathbb{Z}w:E→Z

Ensure: the maximum spanning tree TTT of GGG


begin

E←sort(E)E \gets \text{sort}(E)E←sort(E) in decreasing order based on www

A←{}A \gets \{\}A←{}

for all u∈Vu \in Vu∈V do


CREATE-SET(u)\text{CREATE-SET}(u)CREATE-SET(u)


end for

for all (u,v)∈E(u, v) \in E(u,v)∈E do


if FIND-SET(u)≠FIND-SET(v)\text{FIND-SET}(u) \neq \text{FIND-SET}(v)FIND-SET(u)​=FIND-SET(v) then


add (u,v)(u, v)(u,v) to AAA

UNION(u,v)\text{UNION}(u, v)UNION(u,v)


end if


end for



return (V,A)(V, A)(V,A)

end



Export to clipboard<br>Note that his algorithm is exactly same as Kruskal’s algorithm except that the loop from line 7 to 12 iterates on edges in the decreasing order. (15pts)<br>I think his opinion is correct.<br><br>
<br>Heavy Edge: An edge is considered a heavy edge crossing a cut if its weight is the maximum among all edges crossing that cut.
<br>Safe Edge: An edge is considered safe if its inclusion in the growing forest does not violate the properties of the maximum spanning tree (i.e., it does not create a cycle with edges already included in the MST and its addition results in a spanning tree with the maximum possible total weight).
<br><br>Case I: Heavy Edge is Safe Edge<br>
<br>If the heavy edge is part of the MST, then by definition, it contributes to forming the maximum possible weight of the MST.
<br>Since it is the heaviest edge across a particular cut and it is part of the MST, it is safe because its exclusion would result in a non-optimal tree (i.e., a tree with less total weight).
<br>Case II: Heavy Edge is Not Safe Edge<br>
<br>Assume for contradiction that there is a heavy edge across a cut which is not included in the MST, implying it is not safe.
<br>If is the heaviest edge crossing the cut and is not included, then to maintain connectivity and maximize total weight, there must be another edge through the cut.
<br>However, was defined as the heaviest edge, so no edge can have a greater weight than.
<br>This leads to a contradiction because it would imply that the current MST is not truly the maximum spanning tree as excluding reduces the possible total weight.
<br><br>Given a weighted connect graph , a path from &nbsp;to &nbsp;is simple if no vertex on the path is repeated. A simple path is maximum if the length on the simple path is the largest. Such length is called maximum distance from  to  , denoted as .<br>Mr. Smart designs the following algorithm to find the maximum simple path from one vertices to all other vertices. Is his algorithm correct? Prove your answer.<br>


Algorithm MaxSP(G, w, s)


Require: a connected graph G=(V,E)G = (V,E)G=(V,E) with a weight function w:E→Zw: E \rightarrow \mathbb{Z}w:E→Z, a source vertex s∈Vs \in Vs∈V

Ensure: the maximum distance Δ(s,v)\Delta(s,v)Δ(s,v) for all v∈Vv \in Vv∈V


begin

for all u∈Vu \in Vu∈V do


d[u]←∞d[u] \gets \inftyd[u]←∞

color[u]←Wcolor[u] \gets Wcolor[u]←W


end for

d[s]←0d[s] \gets 0d[s]←0

pred[s]←NULLpred[s] \gets \text{NULL}pred[s]←NULL

Q←new&nbsp;PriorityQueue(V)Q \gets \text{new PriorityQueue}(V)Q←new&nbsp;PriorityQueue(V)

while QQQ is not empty do


u←Q.extractMax()u \gets Q.\text{extractMax}()u←Q.extractMax()

for all v∈adj[u]v \in \text{adj}[u]v∈adj[u] do


if d[u]+w(u,v)&gt;d[v]d[u] + w(u,v) &gt; d[v]d[u]+w(u,v)&gt;d[v] then


d[v]←d[u]+w(u,v)d[v] \gets d[u] + w(u,v)d[v]←d[u]+w(u,v)

Q.increaseKey(v,d[v])Q.\text{increaseKey}(v, d[v])Q.increaseKey(v,d[v])

pred[v]←upred[v] \gets upred[v]←u


end if


end for

color[u]←Bcolor[u] \gets Bcolor[u]←B


end while



return d[u]d[u]d[u] for each u∈Vu \in Vu∈V

end



Export to clipboard<br>Note that his algorithm is exactly same as Dijkstra’s algorithm except that the priority queue is implemented by a Max Heap. Each round of the loop from line 9 to 19 extract the largest weight edge. And &nbsp;is updated if . (15pts)<br>I think his algorithm is not correct.<br>
<br>When updating distances using the condition , the algorithm attempts to assign new values based on the assumption that there exists a greater path value from   through  to.
<br>However, since all  are initially , the algorithm's condition will always find that  is false, because you cannot have a real number that is greater than . This results in no updates to  .
<br><br>From the lecture, Mr. Smart knows that Prim’s algorithm runs in  time and Kruskal’s algorithm runs in &nbsp;time. Then, Mr. Smart claims that the time complexity of Prim’s algorithm is lower than Kruskal’s algorithm. Is he correct? Prove your answer. (10pts)<br>I think he is not correct.<br><br>
<br>Prim's Algorithm: Actually as , where  is the number of edges, and  is the number of vertices.
<br>Kruskal's Algorithm: Commonly has a complexity of .
<br><br>
<br>In dense graphs, there are far more edges than vertices, for example .
<br>The time complexity of Prim's algorithm is .<br>
The time complexity of Kruskal's algorithm is .<br>
In this case, the time complexity of Prim's algorithm is lower than Kruskal's algorithm.<br><br>
<br>In a sparse graph, the number of edges is close to the number of vertices, that is, .
<br>The time complexity of Kruskal's algorithm is , because the number of edges is small, the sorting burden is relatively light.<br>
The time complexity of Prim's algorithm is .<br>
In this case, the time complexity of Kruskal's algorithm is lower than that of Prim algorithm.<br><br>Therefore, it cannot be said that the time complexity of Prim's algorithm is always lower than that of Kruskal's algorithm.]]></description><link>https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-2.html</link><guid isPermaLink="false">Algorithm/DAA/Assignment/DAA-Assignment-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/As2-1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DAA-Assignment-1]]></title><description><![CDATA[ 
 <br><br><br>Given the input A=[11, -7, 8, 12, 6, 5, -6, 3] , track the divide-and-conquer algorithm to find the maximum contiguous subarray. You need to show the recursive calls as a tree. The input and output for each recursive call should also be indicated as well.<br>
<br>Input: A=[11, -7, 8, 12, 6, 5, -6, 3]
<br>Output: MCS of A 
<br>


Algorithm Maximum Contiguous Subarray Problem



if i=ji = ji=j then




return R[i]R[i]R[i]


else


s1←MCS(R,i,⌊(i+j)/2⌋)s1 \gets \text{MCS}(R, i, \lfloor(i+j)/2\rfloor)s1←MCS(R,i,⌊(i+j)/2⌋)//Using floor function for lower rounding

s2←MCS(R,⌊(i+j)/2⌋+1,j)s2 \gets \text{MCS}(R, \lfloor(i+j)/2\rfloor + 1, j)s2←MCS(R,⌊(i+j)/2⌋+1,j)

A←MaxSuffix(R,i,⌊(i+j)/2⌋)+MaxPrefix(R,⌊(i+j)/2⌋+1,j)A \gets \text{MaxSuffix}(R, i, \lfloor(i+j)/2\rfloor) + \text{MaxPrefix}(R, \lfloor(i+j)/2\rfloor + 1, j)A←MaxSuffix(R,i,⌊(i+j)/2⌋)+MaxPrefix(R,⌊(i+j)/2⌋+1,j)



return MAX(s1,s2,A)\text{MAX}(s1, s2, A)MAX(s1,s2,A)


end if



Export to clipboard<br><img alt="T1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/AS2/T1.png" referrerpolicy="no-referrer"><br><br>Given two polynomials  and , track the &nbsp;algorithm to calculate . You need to show the recursive calls as a tree. The input and output for each recursive call should also be indicated as well.<br>
<br>Input: Two polynomials A(X) and B(x) of order n
<br>Output: The polynomial C(X) = A(x)B(x)
<br>


Algorithm Polynomial Multi2(A(x),B(x)A(x),B(x)A(x),B(x))



if n=0n=0n=0 then


return a0×b0a_0 \times b_0a0​×b0​


else


A0(x)=a0+a1x+⋯+a⌊n2⌋−1x⌊n2⌋−1A_0(x) = a_0 + a_1x + \dots + a_{\lfloor \frac{n}{2} \rfloor - 1}x^{\lfloor \frac{n}{2} \rfloor -1}A0​(x)=a0​+a1​x+⋯+a⌊2n​⌋−1​x⌊2n​⌋−1

A1(x)=a⌊n2⌋+a⌊n2⌋+1x+⋯+anxn−⌊n2⌋A_1(x) = a_{\lfloor \frac{n}{2} \rfloor} + a_{\lfloor \frac{n}{2} \rfloor +1}x + \dots + a_nx^{n-\lfloor \frac{n}{2} \rfloor}A1​(x)=a⌊2n​⌋​+a⌊2n​⌋+1​x+⋯+an​xn−⌊2n​⌋

B0(x)=b0+b1x+⋯+b⌊n2⌋−1x⌊n2⌋−1B_0(x) = b_0 + b_1x + \dots + b_{\lfloor \frac{n}{2} \rfloor - 1}x^{\lfloor \frac{n}{2} \rfloor -1}B0​(x)=b0​+b1​x+⋯+b⌊2n​⌋−1​x⌊2n​⌋−1

B1(x)=b⌊n2⌋+b⌊n2⌋+1x+⋯+bnxn−⌊n2⌋B_1(x) = b_{\lfloor \frac{n}{2} \rfloor} + b_{\lfloor \frac{n}{2} \rfloor +1}x + \dots + b_nx^{n-\lfloor \frac{n}{2} \rfloor}B1​(x)=b⌊2n​⌋​+b⌊2n​⌋+1​x+⋯+bn​xn−⌊2n​⌋

Y(x)=PolyMult2(A0(x)+A1(x),B0(x)+B1(x))Y(x) = \text{PolyMult2}(A_0(x)+A_1(x), B_0(x)+B_1(x))Y(x)=PolyMult2(A0​(x)+A1​(x),B0​(x)+B1​(x))

U(x)=PolyMult2(A0(x),B0(x))U(x) = \text{PolyMult2}(A_0(x), B_0(x))U(x)=PolyMult2(A0​(x),B0​(x))

Z(x)=PolyMult2(A1(x),B1(x))Z(x) = \text{PolyMult2}(A_1(x), B_1(x))Z(x)=PolyMult2(A1​(x),B1​(x))

return U(x)+(Y(x)−U(x)−Z(x))x⌊n2⌋+Z(x)x2⌊n2⌋U(x) + (Y(x) - U(x) - Z(x))x^{\lfloor \frac{n}{2} \rfloor} + Z(x)x^{2\lfloor \frac{n}{2} \rfloor}U(x)+(Y(x)−U(x)−Z(x))x⌊2n​⌋+Z(x)x2⌊2n​⌋


end if



Export to clipboard<br><img alt="T2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/AS2/T2.png" referrerpolicy="no-referrer"><br><br><br><br><br><br><br>In the deterministic linear-time divide-and-conquer algorithm taught in class for the selection problem, the input array is divided into groups of 5 elements. Analyze the running time of the algorithm if the input array is divided into groups of 7. Does your algorithm run in linear time?<br>The Algorithm is still run in linear time<br>


Algorithm Deterministic-Select(A,p,r,iA,p,r,iA,p,r,i)



if p=rp=rp=r then


return A[p]A[p]A[p]


end if

q=Deterministic−Partition(A,p,r)q = Deterministic-Partition(A,p,r)q=Deterministic−Partition(A,p,r)

k=q−p+1k = q - p + 1k=q−p+1

if i=ki = ki=k then


return A[q]A[q]A[q]


end if

if i&lt;ki &lt; ki&lt;k then


return Deterministic−Select(A,p,q−1,i)Deterministic-Select(A,p,q-1,i)Deterministic−Select(A,p,q−1,i)


end if

if i&gt;ki &gt; ki&gt;k then


return Deterministic−Select(A,q+1,r,i−k)Deterministic-Select(A,q+1,r,i-k)Deterministic−Select(A,q+1,r,i−k)


end if



Export to clipboard<br><br>Assume always Deterministic-Select Right (wlog)<br><br><br>Proof  Let   if a is large enough; <br>
By strong induction<br>
Base case: When Assume for all  Goal  <br><br>
<br>
<br><br><br><br><br><br><br><br><br>A segment &nbsp;is a pair of positive integers , where . Two segments &nbsp;and &nbsp;intersect if  .<br>Given a sequence &nbsp;of &nbsp; of  segments sorted increasingly by ’s ( &nbsp;if  ) within the &nbsp;r ( &nbsp;for all ), design a divide-and-conquer algorithm to justify if there are two segments intersect.<br><br>
<br>Input:  

<br>Segments a sequence &nbsp;of &nbsp; of  segments sorted increasingly by ’s ( &nbsp;if  ) within the &nbsp;r ( &nbsp;for all )
<br>Left to indicate left endpoint
<br>Right to indicate right endpoint
<br>R to indicate r ( &nbsp;for all )


<br>Output:

<br>Boolean value indicating whether there is at least one pair of intersecting segments.


<br>
<br>If the left and right indexes coincide, the intersect cannot be found. Return false;
<br>Divide the array into two halves: the left sublist and the right sublist.
<br>Recursively apply the algorithm to the left sublist to check for intersections.
<br>Recursively apply the algorithm to the right sublist to check for intersections.
<br>If any recursive call finds an intersection, return 'true' because we have already found the intersecting segments.
<br>Otherwise look for MaxLeftB in the left sublist and MinRightA in the right list
<br>If MinRightA is less than MaxLeftB, intersect is found
<br>Otherwise return 'false'.
<br><br><br>


Algorithm Check for Intersection in Segments



function DoesIntersect(SegmentsSegmentsSegments, LeftLeftLeft, RightRightRight, RRR)


if Left≥RightLeft \geq RightLeft≥Right then


return false


end if

Mid←⌊(Left+Right)/2⌋Mid \gets \lfloor(Left + Right) / 2\rfloorMid←⌊(Left+Right)/2⌋

LeftIntersect←LeftIntersect \getsLeftIntersect← DoesIntersect(SegmentsSegmentsSegments, LeftLeftLeft, MidMidMid, RRR)

RightIntersect←RightIntersect \getsRightIntersect← DoesIntersect(SegmentsSegmentsSegments, Mid+1Mid + 1Mid+1, RightRightRight, RRR)

if LeftIntersectLeftIntersectLeftIntersect or RightIntersectRightIntersectRightIntersect then


return true


end if

MaxLeftB←MaxLeftB \getsMaxLeftB← FindMaxB(SegmentsSegmentsSegments, LeftLeftLeft, MidMidMid)

MinRightA←MinRightA \getsMinRightA← FindMinA(SegmentsSegmentsSegments, Mid+1Mid + 1Mid+1, RightRightRight)

if MaxLeftB&gt;MinRightAMaxLeftB &gt; MinRightAMaxLeftB&gt;MinRightA then


return true


end if

return false


end function

function FindMaxB(Segments,Left,MidSegments, Left, MidSegments,Left,Mid)


MaxB←−∞MaxB \gets -\inftyMaxB←−∞

for i←Lefti \gets Lefti←Left to MidMidMid do


MaxB←max⁡(MaxB,Segments[i].b)MaxB \gets \max(MaxB, Segments[i].b)MaxB←max(MaxB,Segments[i].b)


end for



return MaxBMaxBMaxB


end function

function FindMinA(Segments,Mid,RightSegments, Mid, RightSegments,Mid,Right)


MinA←∞MinA \gets \inftyMinA←∞

for i←Mid+1i \gets Mid + 1i←Mid+1 to RightRightRight do


MinA←min⁡(MinA,Segments[i].a)MinA \gets \min(MinA, Segments[i].a)MinA←min(MinA,Segments[i].a)


end for



return MinAMinAMinA


end function



Export to clipboard<br><br><br><br><br>When <br>
When <br>
<br><br><br><br>Assume: The number of terms in the polynomials is always an integer power of <br>In other words,  for some <br><br>
<br>If the number of terms of the polynomial is not a power of two
<br>Then by adding the number of terms to the polynomial until the number of terms becomes a power of two, the coefficient of the added term is 0
<br><br><br>Hint: please pay attention to the input size<br>
<br>Input: Two polynomials  and  of order 
<br>Output: The polynomials 
<br>


Algorithm PolyMulti(A(x),B(x))





A′(x)=M(A(x))A^{'}(x)=M(A(x))A′(x)=M(A(x))

B′(x)=M(B(x))B^{'}(x)=M(B(x))B′(x)=M(B(x))

return GPolyMultic(A′(x),B′(x)A^{'}(x),B^{'}(x)A′(x),B′(x))



Export to clipboard<br>It will not increase the time complexity comparing to the original algorithm.<br>
The time cost will slightly increase.<br>
Suppose there are 2 polynomials with  terms.<br>
After the operation it now turn to  terms.<br>
In original algorithm the time complexity is <br>
Now the time complexity is <br>
There are almost the same time complexity <br>]]></description><link>https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-1.html</link><guid isPermaLink="false">Algorithm/DAA/Assignment/DAA-Assignment-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/AS2/T1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DAA/AS2/T1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DAA-Assignment-0]]></title><description><![CDATA[ 
 <br><br><br>For Euclidean Algorithm to find GCD<br>
<br>Define the problem solved by the algorithm (6pt)

<br>Input: 2 positive integer A,B
<br>Output: A positive integer that is Greatest Common Divisor of A and B


<br>Give a high-level presentation of the algorithm (6pt)

<br>Divide the larger number by the smaller number, then remove the divisor by the remainder that occurs (the first remainder), then remove the first remainder by the remainder that occurs (the second remainder), and so on until the final remainder is zero. If you are finding the greatest common divisor of two numbers, then the final divisor is the greatest common divisor of those two numbers.


<br>Write the pseudo code (8pt)
<br>


Algorithm Euclidean Algorithm



while B≠0B \neq 0B​=0 do


temp←Btemp \gets Btemp←B

B←a mod bB \gets a \bmod bB←amodb

A←tempA \gets tempA←temp


end while

return AAA



Export to clipboard<br><br>
<br>Input: A task t
<br>Output: "Yes" or "No"
<br>


Algorithm Task Work Procedure



if atomic(ttt) then




return accomplishable(ttt)


end if

subtasks←subtasks \getssubtasks← destruct(ttt)

for each subtasksubtasksubtask in subtaskssubtaskssubtasks do


if work(subtasksubtasksubtask) == ‘‘No'' then




return ‘‘No''


end if


end for



return ‘‘Yes''



Export to clipboard<br><br><br><br>
<br>
<br>
<br>
<br>
<br>Verification: 
<br>The array A is known to be in ascending order and the length of the array is n.  When we search for the target number x, we compare it with the middle element of the array. 

<br>If , the target number is found;
<br>if , the search needs to be narrowed down, the search needs to be done in the array containing elements from  to ; 
<br>if , the search needs to be done in the array containing elements from to .


<br><br><br>
<br>
...<br>
<br>
<br><br>
<br>
<br>
<br><br>
<br>
<br><br>The main goal of algorithm analysis is to understand the rate at which an algorithm's running time or space requirement grows with input size. Although multiplication has a slower running time than addition, it does not affect the overall time complexity in general.]]></description><link>https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-0.html</link><guid isPermaLink="false">Algorithm/DAA/Assignment/DAA-Assignment-0.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Tutorial-1]]></title><description><![CDATA[ 
 <br><br><br>Given the problem: “For the given positive integer, justify if it is a prime.”<br>
<br>
Formally define the problem

<br>
Give some instances and corresponding outputs

<br>3.&nbsp;Construct an algorithm and describe it with/without using pseudo code<br>
<br>Input: a positive integer n
<br>Output: Yes, if n is a prime; No, Otherwise
<br>❌ Error: Expected an atom of EOF but received ordinary at position 3: `end↱`<br>


Algorithm Quicksort



procedure Quicksort(A,p,rA, p, rA,p,r)


if p&lt;rp &lt; rp&lt;r then


q=q = q= Partition(A,p,rA, p, rA,p,r)

Quicksort(A,p,q−1A, p, q - 1A,p,q−1)

Quicksort(A,q+1,rA, q + 1, rA,q+1,r)


end if


end procedure

procedure Partition(A,p,rA, p, rA,p,r)


x=A[r]x = A[r]x=A[r]

i=p−1i = p - 1i=p−1

for j=pj = pj=p to r−1r - 1r−1 do


if A[j]&lt;xA[j] &lt; xA[j]&lt;x then


i=i+1i = i + 1i=i+1

exchange A[i]A[i]A[i] with A[j]A[j]A[j]


end if

exchange A[i]A[i]A[i] with A[r]A[r]A[r]


end for


end procedure



Export to clipboard]]></description><link>https://www.allenygy.vip/algorithm/daa/tutorial/tutorial-1.html</link><guid isPermaLink="false">Algorithm/DAA/Tutorial/Tutorial-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[DSA-As-2]]></title><description><![CDATA[ 
 <br><br><br>GETSUM(A, left, right)

  IF left &gt; right

    return 0

  center = left + (right - left) / 2

  if(A[center] == 0 AND center + 1 &lt; A.size AND A[center + 1] == 1)

    return A.size - center - 1

  else if(A[center] == 1)

    return GETSUM(A, left, center - 1)

  else

    return GETSUM(A, center + 1, right)
<br><br><br>
<br>
<br>When <br>
<br>
<br><br>
<br>initial state:

<br>|1|3|6|5|4|7|


<br>insert(1)

<br>|1|3|6|5|4|7|


<br>insert(3)

<br>|3|1|6|5|4|7|


<br>insert(6)

<br>|6|1|3|5|4|7|


<br>insert(5)

<br>|6|5|3|1|4|7|


<br>insert(4)

<br>|6|5|3|1|4|7|


<br>insert(7)

<br>|7|5|6|1|4|3|


<br>deleteMax()

<br>|6|5|3|1|4|7|


<br>deleteMax()

<br>|5|4|3|1|6|7|


<br>deleteMax()

<br>|4|1|3|5|6|7|


<br>deleteMax()

<br>|3|1|4|5|6|7|


<br>deleteMax()

<br>|1|3|4|5|6|7|


<br><br>isBST(node, lower, upper)<br>
IF node IS NULL<br>
RETURN TRUE<br>
IF node.key &lt;= lower OR node.key &gt;= upper<br>
RETURN FALSE<br>
RETURN isBST(node.left, lower, node.key) AND isBST(node.right, node.key, upper)<br>isBST(root, INT_MIN, INT_MAX)<br><br>initial state:<br>                              25|3                              
                ┌───────────────┴───────────────┐               
              13|1                            80|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
       6|0            15|0            58|1            82|0      
                                        └───┐                   
                                          65|0       
<br>insert:29<br>                              25|3                              
                ┌───────────────┴───────────────┐               
              13|1                            80|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
       6|0            15|0            58|1            82|0      
                                    ┌───┴───┐                   
                                  29|0    65|0          
<br>insert:70<br>                              25|3                              
                ┌───────────────┴───────────────┐               
              13|1                            65|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
       6|0            15|0            58|1            80|1      
                                    ┌───┘           ┌───┴───┐   
                                  29|0            70|0    82|0  
<br>insert:68<br>                              65|3                              
                ┌───────────────┴───────────────┐               
              25|2                            80|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
      13|1            58|1            70|1            82|0      
    ┌───┴───┐       ┌───┘           ┌───┘                       
   6|0    15|0    29|0            68|0    
<br><br>a)<br><br>
<br>
<br>
<br>
<br>b)<br><img alt="insert" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/insert.png" referrerpolicy="no-referrer"><br>
<img alt="delete" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/delete.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-2.html</link><guid isPermaLink="false">Algorithm/DSA/Assignment/DSA-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:08:46 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/insert.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/insert.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DSA Assignment 1]]></title><description><![CDATA[ 
 <br><br><br>


Algorithm GETminimum(A)



SORT(A)

if A[0]−A[A.length−1]&lt;0A[0] - A[A.\text{length} - 1] &lt; 0A[0]−A[A.length−1]&lt;0 then




return A[0]−A[A.length−1]A[0] - A[A.\text{length} - 1]A[0]−A[A.length−1]


else


min←∞min \gets \inftymin←∞

for i←1i \gets 1i←1 to A.length−1A.\text{length} - 1A.length−1 do


if A[i]−A[i−1]&lt;minA[i] - A[i - 1] &lt; minA[i]−A[i−1]&lt;min then


min←A[i]−A[i−1]min \gets A[i] - A[i - 1]min←A[i]−A[i−1]


end if


end for


end if



return minminmin



Export to clipboard<br><br>
<br><img alt="BST" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BST.png" referrerpolicy="no-referrer">
<br><img alt="BST-1" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BST-1.png" referrerpolicy="no-referrer">
<br>|14|25|40|52|58|85|
<br><br><br>a.<br>
Initial State<br>              52|2              
        ┌───────┴───────┐       
      15|1            85|0      
    ┌───┴───┐                   
   8|0    31|0
<br>Insert 82:<br>              52|2              
        ┌───────┴───────┐       
      15|1            85|1      
    ┌───┴───┐       ┌───┘       
   8|0    31|0    82|0
<br>Insert 6:<br>                              52|3                              
                ┌───────────────┴───────────────┐               
              15|2                            85|1              
        ┌───────┴───────┐               ┌───────┘               
       8|1            31|0            82|0                      
    ┌───┘                                                       
   6|0                     
<br>Insert 65:<br>                              52|3                              
                ┌───────────────┴───────────────┐               
              15|2                            82|1              
        ┌───────┴───────┐               ┌───────┴───────┐       
       8|1            31|0            65|0            85|0      
    ┌───┘                                                       
   6|0                        
<br>b.<br>1<br>                              52|3                              
                ┌───────────────┴───────────────┐               
               8|1                            82|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
       6|0            15|0            65|1            85|1      
                                        └───┐           └───┐   
                                          72|0            95|0
<br>2<br>                              65|3                              
                ┌───────────────┴───────────────┐               
              15|2                            82|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
       8|1            31|0            72|0            85|1      
    ┌───┘                                               └───┐   
   6|0                                                    95|0
<br>3<br>                              52|3                              
                ┌───────────────┴───────────────┐               
              15|2                            85|2              
        ┌───────┴───────┐               ┌───────┴───────┐       
       8|1            31|0            65|1            95|0      
    ┌───┘                               └───┐                   
   6|0                                    72|0  
<br><br>
<br>
Insertion Time: To insert an element into an <a data-href="AVL" href="https://www.allenygy.vip/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-href="AVL" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a> tree, we perform a binary search to find the correct position for the new element and then possibly perform some rotations to maintain the <a data-href="AVL" href="https://www.allenygy.vip/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-href="AVL" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a> property. The time complexity of both these operations is  because the tree is balanced.

<br>
Building the Tree: If we insert  distinct integers into an <a data-tooltip-position="top" aria-label="AVL" data-href="AVL" href="https://www.allenygy.vip/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-tooltip-position="top" aria-label="AVL" data-href="AVL" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a> tree, each insert operation takes  time. Since there are  elements, the total time to build the tree is .

<br>
In-order Traversal: Once the <a data-href="AVL" href="https://www.allenygy.vip/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-href="AVL" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a> tree is built, we can perform an in-order traversal to retrieve the elements in sorted order. An in-order traversal of a binary search tree visits the nodes in ascending order, which is what we want for sorting. The time complexity for in-order traversal is , as each node is visited exactly once.

<br>
Total Time Complexity: The total time complexity of sorting an array using an <a data-tooltip-position="top" aria-label="AVL" data-href="AVL" href="https://www.allenygy.vip/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-tooltip-position="top" aria-label="AVL" data-href="AVL" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a> tree is the time to build the tree () plus the time for the in-order traversal (). Hence, the overall time complexity is .

<br>Therefore, we have shown that using an <a data-href="|AVL" href="https://www.allenygy.vip/|AVL" class="internal-link" target="_self" rel="noopener nofollow">|AVL</a> tree to sort an array of distinct integers has a time complexity of .<br><br>a.<br><br><br><br>
<br>: Each leaf node can hold up to 16 records.
<br>: Each internal node can have up to 171 children (170 keys + 1 extra pointer).
<br>b.<br>
<br><img alt="insert-1" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/insert-1.png" referrerpolicy="no-referrer">
<br><img alt="delete-1" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/delete-1.png" referrerpolicy="no-referrer">
]]></description><link>https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-1.html</link><guid isPermaLink="false">Algorithm/DSA/Assignment/DSA-AS-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:08:31 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BST.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BST.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DSA-AS-am]]></title><description><![CDATA[ 
 <br><br><br>What is the total number of basic operations that the following code piece consume? Make your answer precise and list your steps of calculation.<br>int afunc(int n){
    int res = 0;   // 1
    for(int i=0;i&lt;n;i++){   // 3n+2
        for(int j=0;j&lt;n;j++){ // (6n+2)n
            res+=i*j;
        }
    }
    return res; // 1
}
<br>The total number of basic operations that the code piece consumes is<br><br>
<br><br>For each pair of  and  below, decide if , , or . Justify your answer using the definition of this asymptotic notation. Note that more than one of these relations may hold for a given pair; list all correct ones.<br>
<br>
 and .
(1) prove 
   when 
 
 
(2) prove 
 <br>
Now prove 
   prove 
 
 
 
 
 

<br>
<br> and .
<br>Suppose , then<br><br><br><br>Let f(n) be an asymptotically positive function. Prove or disprove each of the following conjectures.<br>
Hint: You can prove a conjecture using its definition or disprove a conjecture by giving negative examples.<br>(a) <br><br><br> is a constant<br><br>(b) <br><br><br><br><br><br>Solve the following recurrence relation and represent T(n) using a formula of n.<br><br><br><br><br>
=T(\frac{n}{2^2})+2=T(\frac{n}{2^3})+3=T(\frac{n}{2^4})+4...=T(\frac{n}{2^i})+i$<br>let <br>
<br><br>In the merge sort algorithm, we divide an array into two halves, recursively sort the subarrays, and then merge them into a sorted array. Now Ming proposes a “merge sort pro” algorithm. In “merge sort pro”, an array is divided evenly into four subarrays instead of two, and the rest of the steps are similar to those of merge sort. What do you think is the time cost of “merge sort pro” if the input size is n? Prove your answer.<br><br>
<br><br>
<br>
<br>
Let <br>
<br>
<br><br>We are given an array of n items and for any two items A and B: • We can check if A and B are equal. • We cannot check which one is greater and which one is smaller, so we cannot sort them. For example, the array may be {♥,♥,☆,○,△,♥,♥,♥,♥,♫,☆,■,♥}. Our task is to find the majority of the array, if it has one. The majority of an array is defined as the item that appears strictly more than n/2 times. For example, in the sample array above, the array size is 13 and item ♥ appears 7 times, so ♥ is the majority. Use a divide-and-conquer algorithm to solve the problem in O(n*log.n). Describe your algorithm in pseudo-code.<br>MERGECOUNT(A, left, right)
1.     IF left &gt;= right
2.          RETURN
3.     center = (left + right) / 2
4.     MERGECOUNT(A, left, center)
5.     MERGECOUNT(A, center + 1, right)
6.     MERGE_WITH_COUNT(A, left, center, right)

MERGE_WITH_COUNT(A, left, center, right)
1.     Create an empty map/dictionary charCount
2.     FOR i = left to right
3.         IF A[i] exists in charCount
4.             Increment count of A[i] in charCount
5.         ELSE
6.             Set count of A[i] in charCount to 1
7.     maxChar = character with maximum count in charCount
8.     maxCount = count of maxChar in charCount
]]></description><link>https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-am.html</link><guid isPermaLink="false">Algorithm/DSA/Assignment/DSA-AS-am.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:09:08 GMT</pubDate></item><item><title><![CDATA[Tree]]></title><description><![CDATA[ 
 <br><br>
<br>Basic Concepts
<br>Binary Trees
<br>Binary Search Trees
<br><br>A tree is a collection of nodes<br>
<br>The collection can be empty
<br>(recursive definition) If not empty, a tree consists of a distinguished node r (the root), and zero or more nonempty subtrees , each of whose roots are connected by a directed edge from root
<br>Concept<br>
<br>Root and Leaf
<br>Child and Parent

<br>Every node except the root has one parent
<br>A node can have an zero or more children
<br>A leaf node has no children


<br>Sibling<br>
nodes with same parent
<br>Path<br>
<br>a sequence of edges
<br>Length of a path<br>
Depth of a node<br>
<br>length of the unique path to the root
<br>Height of a node<br>
<br>length of the longest path to a leaf
<br>Tree height<br>
<br>the height of the root
<br>the depth of the deepest leaf
<br>Ancestor and descendant<br>
<br>If there is a path from n1 to n2
<br>n1 is an ancestor of n2, n2 is a descendant of n1
<br>Proper ancestor and proper descendant
<br><br>A perfect binary tree is the tree where a node can have 0 or 2 children and all leaves are at the same depth<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DSA/Tree/PerfectBinaryTree.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/algorithm/dsa/binarytree.html</link><guid isPermaLink="false">Algorithm/DSA/BinaryTree.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DSA/Tree/PerfectBinaryTree.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DSA/Tree/PerfectBinaryTree.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<span class="math math-inline is-loaded"><mjx-container class="MathJax" jax="CHTML"><mjx-math class="MJX-TEX"><mjx-msup><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D435 TEX-I"></mjx-c></mjx-mi><mjx-script style="vertical-align: 0.363em;"><mjx-mo class="mjx-n" size="s"><mjx-c class="mjx-c2B"></mjx-c></mjx-mo></mjx-script></mjx-msup><mjx-mtext class="mjx-n"><mjx-c class="mjx-cA0"></mjx-c></mjx-mtext><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D447 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D45F TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D452 TEX-I"></mjx-c></mjx-mi><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D452 TEX-I"></mjx-c></mjx-mi></mjx-math></mjx-container></span>]]></title><description><![CDATA[ 
 <br><br><br>
<br>
Binary search tree has one key to decide which of the two branches to take

<br>
M-ary search tree needs M-1 keys to decide which branch to take

<br>
M-ary search tree should be balanced in some way.

<br>We don’t want an M-ary search tree to degenerate to a linked list, or even a binary search tree


<br>
Thus, require that each node is at least half full!

<br><br>
<br>A B+ tree of order M
<br>Each internal node has at most M children (M-1 keys)
<br>Each internal node, except the root, has between  and  keys<br>
Each leaf has between  keys and corresponding data items
<br><br>
<br>
A  of order M (M&gt;3) is an M-ary tree with the following properties:

<br>
The data items are stored in leaves

<br>
The root is either a leaf or has between two and M children

<br>
The non-leaf nodes store up to M-1 keys to guide the searching; key i represents the smallest key in subtree i+1

<br>
All non-leaf nodes (except the root) have between  and M children

<br>
All leaves are at the same depth and have between  and L data items, for some L (usually L &lt;&lt; M, but we will assume M=L in most examples)

<br>
Keys in internal Nodes

<br>
key i in an internal node is the smallest key in its i+1 subtree (i.e. right subtree of key i)

<br><br><br>
<br>Suppose that we want to insert a key K and its associated record.
<br>Search for the key K using the search procedure. This will bring us to a leaf x
<br>Insert K into x
<br>Insert Into Leaf<br>
<br>If leaf x contains &lt; L keys, then insert K into x (at the correct position in node x)
<br>If x is already full (i.e. containing L keys) then split x

<br>Cut x off from its parent
<br>Insert K into x, pretending x has space for K. Now x has L+1 keys.
<br>After inserting K, split x into 2 new leaves  and , with  containing the  smallest keys, and  containing the remaining   keys.  Let J be the minimum key in 
<br>Make a copy of J to be the parent of  and , and insert the copy together with its child pointers into the old parent of x.


<br>Insert Into Internal Node When leaf is Full and Internal Node is also Full<br>To insert a key K into a full internal node x:<br>
<br>Cut x off from its parent
<br>Insert K and its left and right child pointers into x, pretending there is space.  Now x has M keys (and M+1 pointers).
<br>Split x into 2 new internal nodes  and , with  containing the   smallest keys, and  containing the  largest keys.  Note that the  key J is not placed in  or <br>
Make J the parent of xL and xR, and insert J together with its child pointers into the old parent of x.
<br><br>Situation I:<br>
<br>The target is a key in some internal node (needs to be replaced, according to our convention)
<br>Situation II:<br>
<br>After deleting target from leaf x, x contains less than  keys (needs to merge nodes)
<br><br>After deleting from node x, we can access y directly and replace target by the new smallest key in x<br><br>Let u be the leaf that has  keys (too few)<br>
Let v be a sibling of u with at least  keys<br>
Let k be the key in the parent of u and v that separates the pointers to u and v<br>
There are two cases<br><br>Case 1: v contains  or more keys and v is the right sibling of u<br>
Move the leftmost record from v to u<br><br>v contains  or more keys and v is the left sibling of u<br>
Move the rightmost record from v to u<br>
Then set the key in parent of u that separates u and v to be the new smallest key in u]]></description><link>https://www.allenygy.vip/algorithm/dsa/b+tree.html</link><guid isPermaLink="false">Algorithm/DSA/B+Tree.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[AVL]]></title><description><![CDATA[ 
 <br><br>
<br>二叉搜索树，在插入和删除时可能失衡
<br>如在插入和删除时旋转，始终令其保持平衡，则成为自平衡点二叉搜索树
<br>AVL是自平衡二叉搜索树的实现之一
<br><br>
<br>LL 一次右旋

<br>失衡节点左边高
<br>失衡节点左孩子左边高


<br>LR 失衡节点左子树左旋，再右旋

<br>失衡节点左边高
<br>失衡节点左孩子右边高


<br>RL 失衡节点右子树右旋，再左旋

<br>失衡节点右边高
<br>失衡节点右孩子左边高


<br>RR 一次左旋

<br>失衡节点右边高
<br>失衡节点右孩子右边高


]]></description><link>https://www.allenygy.vip/algorithm/dsa/avl.html</link><guid isPermaLink="false">Algorithm/DSA/AVL.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Fenwick|树状数组]]></title><description><![CDATA[ 
 <br><br>最简单的树状数组支持两种操作，时间复杂度均为<br>
巧妙地利用了二进制（实际上，树状数组的英文名BIT，直译过来就是二进制下标树）<br>
<br>单点修改：更改数组中一个元素的值
<br>区间查询：查询一个区间内所有元素的和
<br><br>
<br> 二进制数最右边的一个1，连带着它之后的0
<br>  维护  区间
<br><br>
<br>
<br><br>
<br>单点修改
<br>void update(int i, int val) {
	for (; i &lt; tree.size(); i += i &amp; -i) {
		tree[i] += val;
	}
}
<br>
<br>求前n项和
<br>// 返回下标在 [1,i] 的元素之和,
int pre(int i) {
	int res = 0;
	while (i &gt; 0) {
		res += tree[i];
		i &amp;= i - 1;
	}
	return res;
}
<br>
<br>区间求和
<br>// 返回下标在 [l,r] 的元素之和
int query(int l, int r) {
	if (r &lt; l) {
		return -1;
	}
	return pre(r) - pre(l - 1);
}
<br><br>class Fenwick {
	vector&lt;int&gt; tree;
public:
	Fenwick(int n) : tree(n) {}
	// 把下标为 i 的元素增加 1
	
	void add(int i) {
		while (i &lt; tree.size()) {
			tree[i]++;
			i += i &amp; -i; // i &amp; -i 会得到 i 的最后一个 1 即 lowbit
		}
	}
	
	void update(int i, int val) {
		for (; i &lt; tree.size(); i += i &amp; -i) {
			tree[i] += val;
		}
	}
  
	// 返回下标在 [1,i] 的元素之和
	int pre(int i) {
		int res = 0;
		while (i &gt; 0) {
			res += tree[i];
			i &amp;= i - 1;
		}
		return res;
	}
	
	// 返回下标在 [l,r] 的元素之和
	int query(int l, int r) {
		if (r &lt; l) {
			return -1;
		}
		return pre(r) - pre(l - 1);
	}

};
<br><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/distribute-elements-into-two-arrays-ii/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/distribute-elements-into-two-arrays-ii/" target="_blank">3072. 将元素分配到两个数组中 II</a>]]></description><link>https://www.allenygy.vip/algorithm/dsa/fenwick.html</link><guid isPermaLink="false">Algorithm/DSA/Fenwick.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Graph-Overview]]></title><description><![CDATA[ 
 <br><br><br>
<br>阶（Order）：图G中点集V的大小称作图G的阶

<br>子图（Sub-Graph）：当图，其中 ，则称作图的子图


<br>生成子图（Spanning Sub-Graph）：指满足条件V(G′) = V(G)的G的子图
<br>度（Degree）：一个顶点的度是指与该顶点相关联的边的条数，顶点v的度记作d(v)。
<br>入度（In-degree）和出度（Out-degree）：一个顶点的入度是指与其关联的各边之中，以其为终点的边数；出度则是相对的概念，指以该顶点为起点的边数。
<br>自环（Loop）：若一条边的两个顶点为同一顶点，则此边称作自环。
<br>路径（Path）：从a到b的一条路径是指一个序列a(v0),e_1,v_1,e_2,v_2,…,e(k-1),b(vk) ，其中e_i的顶点为v_i及v(i-1)，k称作路径的长度。如果它的起止顶点相同，该路径是“闭”的，反之，则称为“开”的。
<br>行迹（Trace）：如果路径P(a,b)中的边各不相同，则该路径称为a到b的一条行迹。闭的行迹称作回路（Circuit）。
<br>轨道（Track）：如果路径P(u,v)中的顶点各不相同，则该路径称为a到b的一条轨道。闭的轨道称作圈（Cycle）。
<br>桥（Bridge）：若去掉一条边，便会使得整个图不连通，该边称为桥。
<br>行迹一定是轨道，轨道不一定是行迹<br><br>
<br>最短路
<br>最小生成树 
<br>二分图 
<br>拓扑排序
<br>基环树 
<br>欧拉路径
<br><br>vector&lt;int&gt; topo_sort(int k, vector&lt;vector&lt;int&gt;&gt; &amp;edges) {
	vector&lt;vector&lt;int&gt;&gt; g(k);
	vector&lt;int&gt; in_deg(k);
	for (auto &amp;e : edges) {
		int x = e[0], y = e[1] ; // 顶点编号从 0 开始，方便计算
		g[x].push_back(y);
		++in_deg[y];
	}
	vector&lt;int&gt; order;
	queue&lt;int&gt; q;
	for (int i = 0; i &lt; k; ++i)
		if (in_deg[i] == 0)
			q.push(i);
		while (!q.empty()) {
			int x = q.front();
			q.pop();
			order.push_back(x);
			for (int y : g[x])	
				if (--in_deg[y] == 0)
					q.push(y);
		}
	return order;
}
]]></description><link>https://www.allenygy.vip/algorithm/graph/graph-overview.html</link><guid isPermaLink="false">Algorithm/Graph/Graph-Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Prime-Sieve|质数筛]]></title><description><![CDATA[ 
 <br><br><br>vector&lt;int&gt; prime;
bool is_prime[N];
void Eratosthenes(int n) {
	is_prime[0] = is_prime[1] = false;
	for (int i = 2; i &lt;= n; ++i) is_prime[i] = true;
	for (int i = 2; i &lt;= n; ++i) { 
		if (is_prime[i]) { prime.push_back(i); 
		if ((long long)i * i &gt; n) continue; 
		for (int j = i * i; j &lt;= n; j += i) 
		// 因为从 2 到 i - 1 的倍数我们之前筛过了，这里直接从 i 
		// 的倍数开始，提高了运行速度 
		is_prime[j] = false; 
		// 是 i 的倍数的均不是素数 
		}
	 } 
}
<br><br>vector&lt;int&gt; pri; 
bool not_prime[N]; 
void pre(int n) { 
	for (int i = 2; i &lt;= n; ++i) { 
		if (!not_prime[i]) pri.push_back(i);
		for (int pri_j : pri) { 
			if (i * pri_j &gt; n) break; 
			not_prime[i * pri_j] = true; 
			if (i % pri_j == 0) { 
				// i % pri_j == 0 
				// 换言之，i 之前被 pri_j 筛过了 
				// 由于 pri 里面质数是从小到大的，所以 i 乘上其他的质数的结果一定会被 
				// pri_j 的倍数筛掉，就不需要在这里先筛一次，所以这里直接 break 
				// 掉就好了 
				break; 
			} 
		} 
	} 
}
<br><br><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/count-primes/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/count-primes/" target="_blank">204. 计数质数</a>]]></description><link>https://www.allenygy.vip/algorithm/numbertheory/prime-sieve.html</link><guid isPermaLink="false">Algorithm/NumberTheory/Prime-Sieve.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[递推]]></title><description><![CDATA[ 
 <br><br><br>递推是按照一定的规律来求序列中的每一项,一般是通过计算前面的一些项来得出序列中的指定项。<br>
其思想是把一个复杂的庞大的计算过程转化为对简单过程的多次重复,该算法利用了计算机运算速度快和不知疲倦的机器特点。<br><br>
<br>将问题用数组形式表达
<br>求解递推关系,列出递推表达式
<br>寻找边界值
<br><br>
<br>首先知道小规模的数列
<br>求解递推关系,列出递推表达式
<br><br>🐰的故事
已知一对兔子，每个月可以生一对小兔子，小兔子出生后的第二个月会变成成年兔子，会继续生小兔子。<br>
第一个月，我们有1对小兔子。<br>
第二个月，我们有1对成年兔子的兔子。<br>
第三个月，我们有1对成年兔子的兔子，有1对小兔子，共2对。<br>
第四个月，我们有2对成年兔子的兔子，有1对小兔子，共3对。<br>
第五个月，我们有3对成年兔子的兔子，有2对小兔子，共5对。<br>
现在我们希望知道第n个月，一共有多少只兔子。
<br>题解
假设：第个月的大兔为幼兔为,总数.

已知：一对成年兔每个月可以生一对小兔子

已知：下个月的成年兔是由上个月的成年兔和幼兔组成的


<br>

<br><br>#include &lt;bits/stdc++.h&gt;
#include &lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

const int MOD = 1000;
const int MAXN = 1000000;

int val[MAXN] = {0};
val[1]=1, val[2]=1;

signed main() {
	int n;
	cin &gt;&gt; n;
	if(val[n]!=0){
		cout &lt;&lt; val[n] &lt;&lt; endl;
		return 0;
	}
	for(int i=3;i&lt;=x;i++){
		val[i]=(val[i-1]+val[i-2])%MOD;
	}
	cout &lt;&lt; val[x] &lt;&lt; endl;
	return 0;
}
<br><br>母牛的故事

有一头母牛，从第二年起，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？

输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(0&lt;n&lt;55)，n的含义如题目中描述。
n=0表示输入数据的结束，不做处理。

对于每个测试实例，输出在第n年的时候母牛的数量。每个输出占一行。

Input
2
4
5
0

Output
2
4
6

<br> 题解
第n年的牛的数量为：n-1年的数量和今年新出生的牛的数量<br>
今年新出生的牛的数量为 n-3 年前牛的数量
<br><br>#include &lt;bits/stdc++.h&gt;
#include &lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

const int MOD = 1000;
const int MAXN = 1000000;

int val[MAXN] = {0};

void solve(int x)
{

    if(val[x]!=0){
        cout &lt;&lt; val[x] &lt;&lt; endl;
        return;
    }
    val[1]=1;
    val[2]=2;
    val[3]=3;
    for(int i=4;i&lt;=x;i++){
        val[i]=(val[i-1]+val[i-3]);
    }
    cout &lt;&lt; val[x] &lt;&lt; endl;
}

signed main()
{
    int x;
    cin &gt;&gt; x;
    while (x)
    {
        solve(x);
        cin &gt;&gt; x;
    }
    return 0;
}
<br><br><br><br>楼梯有阶台阶,上楼时可以一步上阶,也可以一步上阶,也可以一步上阶<br>
编程计算共有多少种不同的走法。<br><br>输入的每一行包括一组测试数据，即为台阶数n。最后一行为0，表示测试结束。<br><br>每一行输出对应一行输入的结果，即为走法的数目。<br><br>Input<br>1
2
3
4
0
<br>Output<br>1
2
4
7
<br><br>Success

表示走到第级台阶的走法
<br>Why？
要上第级楼梯 <br>
可以从级楼梯一次走一步上去 <br>
可以从级楼梯一次性走两步上去 <br>
可以从级楼梯一次性走三步上去 
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

int a[101]={0};

signed main() {
    a[1]=1;
    a[2]=2;
    a[3]=4;
    int n;
    cin &gt;&gt; n;
    while(n){
        for(int i=4;i&lt;=n;i++){
            a[i]=a[i-1]+a[i-2]+a[i-3];
        }
        cout &lt;&lt; a[n] &lt;&lt; endl;
        cin &gt;&gt; n;
    }
    return 0;
}
<br><br><br>在2×n的一个长方形方格中,用一个1×2的骨牌铺满方格,输入n ,输出铺放方案的总数. 例如n=3时,为2× 3方格，骨牌的铺放方案有三种,如下图：<br><br>输入数据由多行组成，每行包含一个整数n,表示该测试实例的长方形方格的规格是2×n (0&lt; n&lt;=50)。<br><br>&nbsp;对于每个测试实例，请输出铺放方案的总数，每个实例的输出占一行。<br><br>Input<br>1
3
2
<br>Output<br>1
3
2
<br><br>为了使方格铺满，每次要么铺一个2×1的骨牌，要么铺两个1×2的骨牌，要么铺两个2×1的骨牌首先，分析边界值：2×1方格只有1种铺法，2×2方格只有2种铺法.如图：<br><img alt="骨牌问题" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Share/202406101734284.png" referrerpolicy="no-referrer"><br>
]表示铺满的长方形方格，一共有多少方案数

<br> 铺到最后要么剩或者
<br> 表示前 已铺满，剩最后只能竖着放
<br>为铺满  网格的方案数<br>
(如果前面的2*(n-2)的网格已经铺满, 那么最后的只能是横着放两块,否则会与重复).

<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;
int a[51]={0};
signed main() {
    a[1]=1, a[2]=2;
    int n=0;
    while(cin&gt;&gt;n){
        for(int i=3;i&lt;=n;i++){
            a[i]=a[i-1]+a[i-2];
        }
        cout &lt;&lt; a[n] &lt;&lt; endl;
    }
    return 0;
}

<br><br><br>桂林山水甲天下，漓江更是美不胜收。 漓江上竹筏整齐排列，形成了美丽的风景线，津津、菲菲和皮皮决定乘坐竹筏游览漓江景色。 已知竹筏有2种规格：一种是单人竹筏，长度为1，宽度为1；另一种是双人竹筏，长度为 2，宽度为2。假设漓江江面的面积是n*3，请问多少种不同的竹筏安排方案？<br><br>一行一个整数n,0&lt;n&lt;1000.<br><br>一行一个整数，为铺设方案的数量模12345的结果。<br><br>Input<br>2
<br>Output<br>3
<br><br>$$f(n)=\begin{cases}  
\ 1 &amp; n= 1\<br>
\ 2 &amp; n= 2\<br>
d[i-1]+2\times d[i-2] \ &amp;n&gt;2<br>
\end{cases}$d[i]$  表示 江面宽度为时铺设方案的数
<br>Why  ?
当宽度是二的时候，有两种排列方法
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n';
using namespace std;

const int MOD=12345;

int f(int n){
    if(n==1) return 1;
    if(n==2) return 3;
    return f(n-1)+2*f(n-2);
}

signed main(){
    int n;
    cin&gt;&gt;n;
    int d[n+1];
    d[0]=0,d[1]=1,d[2]=3;
    for(int i=3;i&lt;=n;i++){
        d[i]=(d[i-1]+2*d[i-2])%MOD;
    }
    cout&lt;&lt;d[n]&lt;&lt;endl;
    return 0;
}
<br><br><br>桂林为了欢迎广大游客，决定在桂林的各大街道上布置迎宾彩带。 目前有白色、蓝色和红色的彩带，并满足以下两个条件：<br>
<br>相同颜色的彩带不能放在相邻的位置
<br>一条蓝色的彩带必须放在一条白色的彩带和一条红色的彩带中间。 津津、菲菲和皮皮决定写一个程序，了解放置彩带的方案数有多少种。
<br><br>一行一个整数n，表示橱窗的宽度（或者说彩带数目）。<br><br>一行一个整数，表示装饰橱窗的彩带放置方案数。<br><br>Input<br>3
<br>Output<br>4
<br><br>$$f(n)=\begin{cases}  
\ 2 &amp; n= 1\<br>
\ 2 &amp; n= 2\<br>
d(i-1)+d(i-2) \ &amp;n&gt;2<br>
\end{cases}$d[i]$  表示当橱窗宽度是  时，彩带放置方案数
<br>Why ?

<br>假设一共有  条彩带，当前  条彩带排好后，则最后一条彩带

<br>一定只能是红色或者只能是白色


<br>对于第  条彩带存在两种可能
<br>蓝色或者不是蓝色<br>
- 当为蓝色时第  条彩带也必然是确定的 <br>
- 不为蓝色时第  条彩带不能确定 <br>


<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n';
using namespace std;
signed main(){
    int n;
    cin&gt;&gt;n;
    int a[n+1]={0};
    a[1]=2,a[2]=2;
    for(int i=3;i&lt;=n;i++){
        a[i]=a[i-2]+a[i-1];
    }
    cout&lt;&lt;a[n]&lt;&lt;endl;
    return 0;
}

<br><br><br>桂林的景点很多，为了让更多的游客可以顺利游玩。在不影响游览品质的前提下，旅游公司 决定通过改变路线的方法分流游客。 方案是：每个旅行团都跳过其中的一个景点（但是不能跳过号和号景点），使得它从号景点开始，到达号景点所经过的总距离最小。 假设每一个景点i都有一个坐标，从的景点到 的景点  的距离为：  <br><br>第1行1个正整数n，表示城市个数。<br>接下来的n行，每行2个数x_i和y_i,表示城市i的坐标。<br><br>一行一个数，使得它从1号城市开始，跳过某一个城市，到达n号城市所经过的最小总距离。<br><br>Input<br>4
0 0
8 3
11 -1
10 0
<br>Output<br>14
<br><br>
<br>先计算出总距离S (每个景点之间的曼哈顿距离总和)
<br>逐个跳过景点维护最小距离
<br>Success


<br> 初始化为 
<br>  表示跳过景点 的总距离
<br> 表示不跳过任何一个景点的总距离
<br> 表示从景点 到 景点 的距离
<br> 表示 两景点之间的曼哈顿距离

<br><br>假设 A, B两点坐标分别为 ，<br>
从到的曼哈顿距离为:   <br>int manhattandist(int x1, int y1, int x2, int y2){
    return abs(x1 - x2) + abs(y1 - y2);
}
<br><br>#include &lt;bits/stdc++.h&gt;
#include &lt;iostream&gt;
#define int long long
#define endl '\n'

using namespace std;

int n, m, b, s, a[100005], x[100005], y[100005];

int manhattandist(int x1, int y1, int x2, int y2){
    return abs(x1 - x2) + abs(y1 - y2);
}


int dist(int i, int j){
    return manhattandist(x[i], y[i], x[j], y[j]);
}


signed main(){
    cin &gt;&gt; n;
    for (int i = 1; i &lt;= n; i++){
        cin &gt;&gt; x[i] &gt;&gt; y[i];
        if (i &gt; 1)
            a[i] = dist(i, i - 1); 
        s += a[i];                
    }
    m = s;
    for (int i = 2; i &lt;= n - 1; i++){
        b = s - a[i] - a[i + 1] + dist(i - 1, i + 1);
        m = min(m, b); 
    }
    cout &lt;&lt; m &lt;&lt; endl;
    return 0;
}

<br><br><br>猴子吃桃子问题：猴子第一天摘下若干个桃子，当即吃了一半还不过瘾，又多吃了一个；第二天又将剩下的桃子吃掉一半又多吃了一个；以后每天早上都吃了前一天剩下的一半零一个。到了第十天想再吃时，见只剩下一个桃子，求第一天共摘了多少个桃子？<br><br>无<br><br>一个整数，第一天共有多少个桃子<br><br>#include &lt;iostream&gt;
using namespace std;

int peaches_2(int day) {
    if (day == 10) {
        return 1; 
    } else {
        return (peaches_2(day + 1) + 1) * 2;
    }
}

int peaches_1(int day) {
    int total_peaches = 1;
    for (int i = 10; i &gt; 1 ; --i) {
        total_peaches = (total_peaches + 1) * 2;
    }
    return total_peaches;
}

int main() {
    int day = 1; 
    int total_peaches = peaches_1(day);
    cout &lt;&lt; total_peaches &lt;&lt; endl;
    return 0;
}
<br><br><br>有1×n（n&lt;=50）的一个长方形，用1×1、1×2和1×3的骨牌铺满方格，请问有多少种铺法？ 例如当n=3时为1×3的方格。此时用1×1、1×2和1×3的骨牌铺满方格，共有四种铺法。如下图：<img title="a0c46b6c3a466ecaa86db38ca5ca6072.png" alt="a0c46b6c3a466ecaa86db38ca5ca6072.png" src="https://img.lsyz.top/2022/11/11/24b69da8710e7.png" referrerpolicy="no-referrer"><br><br>一个整数n（n&lt;=50）<br><br>骨牌的铺法<br><br>Input<br>3
<br>OutPut<br>4
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;

#define int long long
#define endl '\n'

using namespace std;

signed main(){
    int n=0;
    cin&gt;&gt;n;
    int dp[52];   
    dp[0]=0;
    dp[1]=1;
    dp[2]=2;
    dp[3]=4;
    for(int i=4;i&lt;=n;i++){
        dp[i]=dp[i-1]+dp[i-2]+dp[i-3];
    }
    cout&lt;&lt;dp[n]&lt;&lt;endl;
    return 0;
}
<br><br><br>Pell数列的定义是这样的，，。&nbsp;给出一个正整数k，要求Pell数列的第项模上是多少。<br><br>第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数k (1 ≤ k &lt; 1000000)。<br><br>n行，每行输出对应一个输入。输出应是一个非负整数。<br><br>Input<br>2
1
8
<br>Output<br>1
408
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

int a[1000001]={0};

void solve(int n){

    a[1]=1;
    a[2]=2;
    for(int i=3;i&lt;=n;i++){
        a[i]=(2*a[i-1]+a[i-2])%32767;
    }
}

signed main() {
    int T=0;
    cin&gt;&gt;T;
    while(T--){
        int n=0;
        cin&gt;&gt;n;
        if(a[n]!=0)
            cout&lt;&lt;a[n]&lt;&lt;endl;
        else{
            solve(n);
            cout&lt;&lt;a[n]&lt;&lt;endl;
        }
    }
    return 0;
}
<br><br><br>请编程求出所有的n位数中，有多少个数中有偶数个数字3.结果模12345。(1&lt;=n&lt;=1000)<br><br>一行一个正整数n，0&lt;n&lt;1000.<br><br>一行一个正整数，表示n位数中有多少个数有偶数个3.<br><br>input<br>2
<br>Output<br>73
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

signed main(){
  int f[1001][2],n,i,x=9;
  cin&gt;&gt;n;
  f[1][1]=1;f[1][0]=9;                        
  for(i=2;i&lt;=n;i++)    {   
     if(i==n)  // i是最高位
      x-=1;
      f[i][0]=(f[i-1][0]*x+f[i-1][1])%12345;
      f[i][1]=(f[i-1][1]*x+f[i-1][0])%12345;   
   }
   cout&lt;&lt;f[n][0]; 
   return 0;
}
]]></description><link>https://www.allenygy.vip/algorithm/recursion/递推.html</link><guid isPermaLink="false">Algorithm/Recursion/递推.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Share/202406101734284.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Share/202406101734284.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[递归]]></title><description><![CDATA[ 
 <br><br><br>程序调用自身的编程技巧称为递归 Recursion<br>
<br>递归作为一种算法在程序设计语言中广泛应用。
<br>一个过程或函数在其定义或说明中有直接或间接调用自身的一种方法，它通常把一个大型复杂的问题层层转化为一个与原问题相似的规模较小的问题来求解。
<br>递归策略只需少量的程序就可描述出解题过程所需要的多次重复计算，大大地减少了程序的代码量。 
<br>一般来说，递归需要有边界条件、递归前进段和递归返回段。
<br>当边界条件不满足时，递归前进；当边界条件满足时，递归返回。
<br>递归的能力在于用有限的语句来定义对象的无限集合。<br><br>递归：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门，你继续打开它。若干次之后，你打开面前的门后，发现只有一间屋子，没有门了。然后，你开始原路返回，每走回一间屋子，你数一次，走到入口的时候，你可以回答出你到底用这你把钥匙打开了几扇门。<br>循环：你打开面前这扇门，看到屋里面还有一扇门。你走过去，发现手中的钥匙还可以打开它，你推开门，发现里面还有一扇门（若前面两扇门都一样，那么这扇门和前两扇门也一样；如果第二扇门比第一扇门小，那么这扇门也比第二扇门小，你继续打开这扇门，一直这样继续下去直到打开所有的门。但是，入口处的人始终等不到你回去告诉他答案。<br><br>1. 明确递归终止条件（递归出口）<br>我们知道，递归就是有去有回，既然这样，那么必然应该有一个明确的临界点，程序一旦到达了这个临界点，就不用继续往下递去而是开始实实在在的归来。换句话说，该临界点就是一种简单情境，可以防止无限递归。<br>2. 给出递归终止时的处理办法<br>我们刚刚说到，在递归的临界点存在一种简单情境，在这种简单情境下，我们应该直接给出问题的解决方案。一般地，在这种情境下，问题的解决方案是直观的、容易的。<br>3. 提取重复的逻辑，缩小问题规模<br>我们在阐述递归思想内涵时谈到，递归问题必须可以分解为若干个规模较小、与原问题形式相同的子问题，这些子问题可以用相同的解题思路来解决。从程序实现的角度而言，我们需要抽象出一个干净利落的重复的逻辑，以便使用相同的方式解决子问题。<br><br><br><br>柳州传说是歌仙刘三姐的传歌之地，最近举办了一次山歌大赛。 在这个项目中，参赛者每次完成一个段都会得到一个分数。总分数的计算方式基于一个特殊 的数学表达式 f(x,n)。表达式 f(x,n) 的定义如下：<br><img title="4e4fe6b7f35886e021f9a1fa1334df4.jpg" alt="4e4fe6b7f35886e021f9a1fa1334df4.jpg" src="https://img.lsyz.top/2022/08/09/25ad9e9d95723.jpg" referrerpolicy="no-referrer"><br>其中，x 表示参赛者的基本得分，n 表示参赛者完成的山歌段落数。<br>津津、菲菲和皮皮的任务是编写一个程序，并计算选手 A（x=4.2,n=10）、选手 B（x=2.5,n=15） 时 f(x,n)的值<br><br>输入x和n。<br><br>函数值，保留两位小数。<br><br>Input<br>4.2 10
<br>Output<br>3.68
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

double f(double x, int n){
    if(n==1) return sqrt(1+x);
    return sqrt(n+f(x,n-1));
}

signed main() {
    double x; 
    int n;
    cin&gt;&gt;x&gt;&gt;n;
    cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;f(x,n)&lt;&lt;endl;
    return 0;
}
<br><br><br>用递归的方法求 Hermite 多项式的值。<br><br><br>给定的   和正整数 <br><br>对给定的   和正整数 ，求多项式的值。<br><br>Input<br>1 2
<br>Output<br>4.00
<br><br>#include&lt;bits/stdc++.h&gt;
#include&lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

double h(double x, int n){
    if(n==0) return 1;
    if(n==1) return 2*x;
    return 2*x*h(x,n-1)-2*(n-1)*h(x,n-2);
}

signed main() {
    int n;
    double x;
    cin&gt;&gt;n&gt;&gt;x;
    cout&lt;&lt;fixed&lt;&lt;setprecision(2)&lt;&lt;h(x,n)&lt;&lt;endl;
    return 0;
}
<br><br><br>有一头母牛，从第二年起，它每年年初生一头小母牛。每头小母牛从第四个年头开始，每年年初也生一头小母牛。请编程实现在第n年的时候，共有多少头母牛？<br><br>输入数据由多个测试实例组成，每个测试实例占一行，包括一个整数n(0&lt;n&lt;55)，n的含义如题目中描述。<br>n=0表示输入数据的结束，不做处理。<br><br>对于每个测试实例，输出在第n年的时候母牛的数量。每个输出占一行。<br><br>Input<br>2
4
5
0
<br>Output<br>2
4
6
<br><br>第n年的牛的数量为：n-1年的数量和今年新出生的牛的数量<br>
今年新出生的牛的数量为 n-3 年前牛的数量<br><br>#include &lt;bits/stdc++.h&gt;
#include &lt;iostream&gt;
#define int long long
#define endl '\n'
using namespace std;

const int MOD = 1000;
const int MAXN = 1000000;

int val[MAXN] = {0};

void solve(int x)
{

    if(val[x]!=0){
        cout &lt;&lt; val[x] &lt;&lt; endl;
        return;
    }
    val[1]=1;
    val[2]=2;
    val[3]=3;
    for(int i=4;i&lt;=x;i++){
        val[i]=(val[i-1]+val[i-3]);
    }
    cout &lt;&lt; val[x] &lt;&lt; endl;
}

signed main()
{
    int x;
    cin &gt;&gt; x;
    while (x)
    {
        solve(x);
        cin &gt;&gt; x;
    }
    return 0;
}
]]></description><link>https://www.allenygy.vip/algorithm/recursion/递归.html</link><guid isPermaLink="false">Algorithm/Recursion/递归.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://img.lsyz.top/2022/08/09/25ad9e9d95723.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://img.lsyz.top/2022/08/09/25ad9e9d95723.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<strong>Recursion-BinaryTree</strong>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:achievement" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#achievement</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> 
 <br><br><br>刚开始直接左右节点分别遍历，取最小值<br>
没考虑根节点只有一个分支的情况<br>class Solution {
public:
	int minDepth(TreeNode* root) {
		if(root==nullptr) return 0;
		int left = minDepth(root-&gt;left);
		int right = minDepth(root-&gt;right);	
		return min(left,right)+1;	
	}
};
<br>每一层的情况递归时没有加一<br>class Solution {
public:
	int minDepth(TreeNode* root) {
		if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr) return 1;
		else if(root-&gt;left==nullptr&amp;&amp;root-&gt;right!=nullptr) 					return minDepth(root-&gt;right);
		else if(root-&gt;left!=nullptr&amp;&amp;root-&gt;right==nullptr) 					return minDepth(root-&gt;left);
		else 
			return 
				min(minDepth(root-&gt;right),minDepth(root-&gt;left));
	}
};
<br>class Solution {
public:
	int minDepth(TreeNode* root) {
		if(root==nullptr)return 0;
		if(root-&gt;left==nullptr &amp;&amp; root-&gt;right==nullptr) 
			return 1;
		int m1=minDepth(root-&gt;right);
		int m2=minDepth(root-&gt;left);
		if(root-&gt;left==nullptr||root-&gt;right==nullptr) 
			return m1+m2+1;
		return min(m1,m2)+1;
	}
};
<br><br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
叶子节点的定义<br>node-&gt;left==nullptr&amp;&amp;node-&gt;right==nullptr
<br>class Solution {
public:
	bool hasPathSum(TreeNode* root, int targetSum) {
		if(root==nullptr)return false;
		if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr) 
			return targetSum==root-&gt;val;
		bool l = hasPathSum(root-&gt;left,targetSum-root-&gt;val);
		bool r = hasPathSum(root-&gt;right,targetSum-root-&gt;val);
		return l||r;
	}
};
<br><br><a href="https://www.allenygy.vip?query=tag:achievement" class="tag" target="_blank" rel="noopener nofollow">#achievement</a><br>
第一次独立写出，递归，回溯？哈哈哈哈<br>class Solution {
vector&lt;vector&lt;int&gt;&gt; res;
vector&lt;int&gt; v;
public:
	void dfs(TreeNode* root, int targetSum) { 
		if(root==nullptr) return ;
		if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr)
			if(targetSum==root-&gt;val){
				v.push_back(root-&gt;val);
				res.push_back(v);
				v.pop_back();
			}
		if(root-&gt;left){
			v.push_back(root-&gt;val);
			dfs(root-&gt;left,targetSum-root-&gt;val);
			v.pop_back();
		}
		if(root-&gt;right){
			v.push_back(root-&gt;val);
			dfs(root-&gt;right,targetSum-root-&gt;val);
			v.pop_back();
		}
}

	vector&lt;vector&lt;int&gt;&gt; pathSum(TreeNode* root, int targetSum) {
    	if(root==nullptr)return {};
    	dfs(root,targetSum);
    	return res; 
    }

};
<br><br>class Solution {
vector&lt;vector&lt;int&gt;&gt;res;
vector&lt;int&gt;v;
public:
	void dfs(TreeNode* root){
		if(root-&gt;left==nullptr&amp;&amp;root-&gt;right==nullptr){	
			v.push_back(root-&gt;val);
            res.push_back(v);
            v.pop_back();
		}
        if(root-&gt;left){
            v.push_back(root-&gt;val);
            dfs(root-&gt;left);
            v.pop_back();
		}			
		if(root-&gt;right){
			v.push_back(root-&gt;val);
            dfs(root-&gt;right);
            v.pop_back();	
		}	
	}

    int sumNumbers(TreeNode* root) {
    	if(root==nullptr)return 0;
	    dfs(root);
	    int ans=0;
        for(auto row:res){
        	int tmp=0;
        	for(int num:row){
        		tmp=((tmp*10)+num);
    		}	
	    	ans+=tmp;
    	}
    	return ans;
	}
};
<br>官解简洁写法<br>class Solution { 
public: 
	int dfs(TreeNode* root, int prevSum) {
		if (root == nullptr) { return 0; } 
		int sum = prevSum * 10 + root-&gt;val; 
		if (root-&gt;left == nullptr &amp;&amp; root-&gt;right == nullptr){ 				return sum;
		} else { 
			return dfs(root-&gt;left, sum) + dfs(root-&gt;right,sum);
		} 
	} 
	int sumNumbers(TreeNode* root) {
		 return dfs(root, 0); 
	} 
};
<br><br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
把变量当作参数传递进函数，则不需要回溯变量<br>class Solution {
public:
	void construct_paths(TreeNode* root, string path, vector&lt;string&gt;&amp; paths) {
    	if (root != nullptr) {
    		path += to_string(root-&gt;val);
    		if (root-&gt;left == nullptr &amp;&amp; root-&gt;right == nullptr) { // 当前节点是叶子节点
    			paths.push_back(path); // 把路径加入到答案中
    		} else {
    			path += "-&gt;"; // 当前节点不是叶子节点，继续递归遍历
    			construct_paths(root-&gt;left, path, paths);
    			construct_paths(root-&gt;right, path, paths);
    		}
    	}
    
    }
	vector&lt;string&gt; binaryTreePaths(TreeNode* root) {
		vector&lt;string&gt; paths;
		construct_paths(root, "", paths);
		return paths;
	}
};
<br><br>class Solution {
public:
	int goodNodes(TreeNode* root,int mx=INT_MIN) {
		if(root==nullptr) return 0;
		int left = goodNodes(root-&gt;left,max(mx,root-&gt;val));
		int right = goodNodes(root-&gt;right, max(mx,root-&gt;val));
		return left+right+(mx&lt;=root-&gt;val);
	}
};
<br><br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
先遍历右子树并根据深度决定是否记录该节点<br>class Solution {
vector&lt;int&gt;ans;
public:
	void dfs(TreeNode* root,int depth){
		if(depth==ans.size()) ans.push_back(root-&gt;val);
		if(root-&gt;right) dfs(root-&gt;right,depth+1);
		if(root-&gt;left) dfs(root-&gt;left,depth+1);
	}
	vector&lt;int&gt; rightSideView(TreeNode* root) {
		if(root==nullptr)return {};
		dfs(root,0);
		return ans;
	}
};
<br><br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
开始的时候犹豫当前节点判断，左子树判断和右子树判断<br>
后来发现并列就好了<br>class Solution {
public:
	bool isSameTree(TreeNode* p, TreeNode* q) {
		if(p==nullptr||q==nullptr)return (p==q);
		return (p-&gt;val==q-&gt;val)&amp;&amp;(isSameTree(p-&gt;left,q-&gt;left))&amp;&amp;(isSameTree(p-&gt;right,q-&gt;right));
	}
};
<br><br>class Solution {
public:
	bool isSame(TreeNode* p,TreeNode *q){
		if(p==nullptr||q==nullptr)return (p==q);
		return (p-&gt;val==q-&gt;val)&amp;&amp;isSame(p-&gt;left,q-&gt;right)&amp;&amp;isSame(p-&gt;right,q-&gt;left);
	}
	bool isSymmetric(TreeNode* root) {
		return isSame(root-&gt;left,root-&gt;right);
	}
};
<br><br>class Solution {
public:
	int get_height(TreeNode *node){
		if(node==nullptr)return 0;
		int leftH = get_height(node-&gt;left);
		if(leftH==-1) return -1;
		int rightH = get_height(node-&gt;right);
		if(rightH==-1||abs(leftH-rightH)&gt;1)return -1;
		return max(leftH,rightH)+1;
	}
	bool isBalanced(TreeNode* root) {
		return get_height(root)!=-1;
	}
};
<br><br>class Solution {
public:
	TreeNode* invertTree(TreeNode* root) {
		if(root==nullptr)return nullptr;
		root-&gt;left=invertTree(root-&gt;left);
		root-&gt;right=invertTree(root-&gt;right);
		TreeNode*tmp=root-&gt;left;
		root-&gt;left=root-&gt;right;
		root-&gt;right=tmp;
		return root;
	}
};
<br><br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a> <br>
<br>我理解到，只能先删叶子节点<br>
判断叶子节点
<br>if (root-&gt;left == root-&gt;right) 
<br>
<br>如果 limit &gt; 0 说明从根到叶子的路径和小于 limit，删除叶子，否则不删除
<br>如果有儿子没被删除，就不删 root，否则删 root<br>
判断是否存在子节点
<br>if(root-&gt;left || root-&gt;right)
<br>class Solution {
public:
	TreeNode* sufficientSubset(TreeNode* root, int limit) {
		limit -= root-&gt;val;
		if (root-&gt;left == root-&gt;right) 
			return limit &gt; 0 ? nullptr : root;
		if(root-&gt;left) root-&gt;left = sufficientSubset(root-&gt;left, limit);
		if(root-&gt;right) root-&gt;right = sufficientSubset(root-&gt;right, limit);
		return root-&gt;left || root-&gt;right ? root : nullptr;
	}
};
<br><br>class Solution {
	int ans = 0; // 用于记录最大长度的全局变量
	void getlongestZigZag(TreeNode* root, bool is_left, int len) {
    	if (root == nullptr) {
    	    ans = max(ans, len); // 更新最大长度
    	    return;
        }   
        // 递归地在左右子树中查找交错路径
        if (is_left) {
    	// 如果当前方向是左，那么我们要在右子树中继续找交错路径，并且长度加一
    	    getlongestZigZag(root-&gt;right, false, len + 1); // 向右走
    	    getlongestZigZag(root-&gt;left, true, 1); // 重新开始计数
        } else {
        // 如果当前方向是右，那么我们要在左子树中继续找交错路径，并且长度加一
     		getlongestZigZag(root-&gt;left, true, len + 1); // 向左走
         	getlongestZigZag(root-&gt;right, false, 1); // 重新开始计数
    	}	
	}
public:
	int longestZigZag(TreeNode* root) {
		getlongestZigZag(root-&gt;left, true, 1); // 当我们从根节点向左移动时，路径长度变为1
		getlongestZigZag(root-&gt;right, false, 1); // 同理，当我们从根节点向右移动时，路径长度变为1
		return ans -1; // 因为长度是从1开始的，我们需要减去1
	}
};
]]></description><link>https://www.allenygy.vip/algorithm/recursion/递归-二叉树.html</link><guid isPermaLink="false">Algorithm/Recursion/递归-二叉树.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Z Function]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/algorithm/string/z-function.html</link><guid isPermaLink="false">Algorithm/String/Z-Function.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Tire-Tree]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/algorithm/string/tire-tree.html</link><guid isPermaLink="false">Algorithm/String/Tire-Tree.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[String-Overview]]></title><description><![CDATA[ 
 <br><br>
<br><a data-tooltip-position="top" aria-label="Tire-Tree" data-href="Tire-Tree" href="https://www.allenygy.vip/Tire-Tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">字典树</a><a data-tooltip-position="top" aria-label="Tire-Tree" data-href="Tire-Tree" href="https://www.allenygy.vip/algorithm/string/tire-tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">字典树</a>
<br><a data-href="KMP" href="https://www.allenygy.vip/KMP" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">KMP</a><a data-href="KMP" href="https://www.allenygy.vip/algorithm/string/kmp.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">KMP</a>
<br><a data-tooltip-position="top" aria-label="Aho-Corasick" data-href="Aho-Corasick" href="https://www.allenygy.vip/Aho-Corasick" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AC自动机</a><a data-tooltip-position="top" aria-label="Aho-Corasick" data-href="Aho-Corasick" href="https://www.allenygy.vip/algorithm/string/aho-corasick.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AC自动机</a>
<br><a data-tooltip-position="top" aria-label="Manacher-Algorithm" data-href="Manacher-Algorithm" href="https://www.allenygy.vip/Manacher-Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">马拉车</a><a data-tooltip-position="top" aria-label="Manacher-Algorithm" data-href="Manacher-Algorithm" href="https://www.allenygy.vip/algorithm/string/manacher-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">马拉车</a>
<br><a data-tooltip-position="top" aria-label="Z-Function" data-href="Z-Function" href="https://www.allenygy.vip/Z-Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">z 函数</a><a data-tooltip-position="top" aria-label="Z-Function" data-href="Z-Function" href="https://www.allenygy.vip/algorithm/string/z-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">z 函数</a>
]]></description><link>https://www.allenygy.vip/algorithm/string/string-overview.html</link><guid isPermaLink="false">Algorithm/String/String-Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Manacher Algorithm]]></title><description><![CDATA[ 
 <br><br><br>最长回文子串
给定一个字符串&nbsp;s，找到&nbsp;s&nbsp;中最长的回文子串。
示例 1：
输入：s = "babad"<br>
输出："bab"<br>
解释："aba" 同样是符合题意的答案。
示例 2：
输入：s = "cbbd"<br>
输出："bb"
提示：

<br>1 &lt;= s.length &lt;= 1000
<br>s&nbsp;仅由数字和英文字母组成

<br><br>
<br>对每个字符都向两侧扩展，判断是否为回文串
<br>偶数回文串无法直接中心扩展
<br><img alt="中心扩展" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-7.png" referrerpolicy="no-referrer"><br><br>
<br>在每个字符前后插入一个扩展字符，使字符串长度一定为奇数
<br>可以方便的寻找奇长度、偶长度的回文，扩展字符可以随意设置，不会影响计算
<br><img alt="Manacher扩展串" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-3.png" referrerpolicy="no-referrer"><br><br>回文覆盖最右边界r、回文中心c<br><img alt="Manacher Algorithm" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-5.png" referrerpolicy="no-referrer"><br>
<br>在一个大的回文区域内，无需对回文中心之后的每个字符暴力扩展，就可以得到该字符的最大回文半径
<br><img alt="Manacher Algorithm" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-6.png" referrerpolicy="no-referrer"><br>假设一个字符串 s， 字符串s的 Manacher扩展串为 p，p[i] 表示当前字符可以扩展的最长回文串的长度<br><br>现在假设我们要对下一个&nbsp;&nbsp;计算 &nbsp;，此时之前所有的值已计算完毕。我们将通过下列方式计算：<br>
<br>
如果  位于当前子回文串之外，即，那么使用暴力解法

<br>以i为中心想两侧扩展，检验字符是否相同，直到不同


<br>
如果 ， 则尝试通过已经计算出的, 加速当前的计算

<br>首先计算出对称点的下标

<br>当前下标与其对称点（假设为 ）关于当前回文中心  对称<br>
即




<br><br>，对称点  的回文半径()，在大回文区域以内，直接确定 <br>
<br>因为其对称点已经无法扩展，所以其本身也无法扩展<img alt="Case1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-Case1.png" referrerpolicy="no-referrer">
<br><br>，对称点 2*c-i 的回文半径 s[2*c-i]，在大回文区域以外，直接确定，当前大回文区域半径-当前下标<br>
<br>因为大回文串已经无法扩展，所以其本身也无法扩展<img alt="Case2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-Case2.png" referrerpolicy="no-referrer">
<br><br>，对称点  的回文半径()，刚好在大回文区域的边界<br>
<br>从r之外的位置进行扩展<img alt="Case3" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-Case3.png" referrerpolicy="no-referrer">
<br><br>当前字符最长回文串的实际长度 <br>
<br>每个子字符串扩展后的长度为 
<br>每个子回文字符串扩展后的回文半径为 
<br><img alt="回文半径和实际回文串长度的对应关系" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-4.png" referrerpolicy="no-referrer">
<br><br>实际回文串终止位置 = 扩展回文串结尾下标 / 2<br>
<br> 
<br><img alt="扩展回文串结尾下标和实际回文串终止位置的对应关系" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-8.png" referrerpolicy="no-referrer">
<br><br>string Preprocess(string s) { // 字符串预处理
	string res = "#"; //在每个字符前后添加扩展字符
	for (int i = 0; i &lt; s.size(); i++) {
		res += s[i];
		res += "#";	
	}
	return res;
}

string Manacher(string s) {
	string t = Preprocess(s);
	string ans = "";
	vector&lt;int&gt; p(t.size(), 0);
	int mx = 0;
	for(int i = 0, c = 0, r = 0, len; i &lt; t.size(); i++) {
		// 当 i &lt; r 时,
			// 若此时 i + s[i] 在 r 内， 则 r - i &gt;= p[2 * c - i]
			// len = p[2 * c - i]
			// 若此时 i + s[i] 在 r 外， 则 r - i &lt;= p[2 * c - i]
			// len = r - i
		// 当 i &gt;= r 时
			// 回文字符串即为 i 本身，len = 1
		len = i &lt; r ? min(r - i, p[2 * c - i]) : 1; 
		
		while (i + len &lt; t.size() &amp;&amp; i - len &gt;= 0 &amp;&amp; t[i + len] == t[i - len]){	// 不管是否可以扩展，都尝试扩展
			len++;
		}
		if (i + len &gt; r){ //更新新的回文中心和回文半径
			r = i + len;
			c = i;
		}
		if(len &gt; mx){ // 维护最长回文子字符串
			mx = len;
			ans = s.substr((i - len + 1)/2, len - 1);
		}
		p[i] = len;
	}
	return ans;
}
<br><br><br>回文子串
返回字符串s的回文子串数量
<br><br>不重叠回文子字符串的最大数目
给定一个字符串str和一个正数k<br>
你可以随意把str切分成多个子串<br>
目的是找到某一种划分方案，有尽可能多的回文子串<br>
并且每个回文子串都要求长度&gt;=k、且彼此没有重合的部分<br>
返回最多能划分出几个这样的回文子串
<br><br>拉拉队排练
长度前k名的奇数长度回文子串长度乘积<br>
给定一个字符串s和数值k，只关心所有奇数长度的回文子串<br>
返回其中长度前k名的回文子串的长度乘积是多少<br>
如果奇数长度的回文子串个数不够k个，返回-1
<br><br>最长双回文串
最长双回文串长度<br>
输入字符串s，求s的最长双回文子串t的长度<br>
双回文子串就是可以分成两个回文串的字符串<br>
比如"aabb"，可以分成"aa"、"bb"
<br>]]></description><link>https://www.allenygy.vip/algorithm/string/manacher-algorithm.html</link><guid isPermaLink="false">Algorithm/String/Manacher-Algorithm.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-7.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Algorithm/STRING/Manacher-7.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Aho–Corasick]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/algorithm/string/aho-corasick.html</link><guid isPermaLink="false">Algorithm/String/Aho-Corasick.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Algorithm]]></title><description><![CDATA[ 
 <br><br><br>#include&lt;bits/stdc++.h&gt;

using namespace std;
#define all(x) (x).begin(), x.end()
#define endl '\n'  // 避免刷新缓冲区
#define inf32 0x3f3f3f3f
#define inf64 1LL &lt;&lt; 60
#define max32 INT_MAX
#define max64 LONG_LONG_MAX

// 类型别名
using i64 = long long;
using u64 = unsigned long long;
using i128 = __int128;
using pii = std::pair&lt;int, int&gt;;

int read(){
    int x = 0, f = 1;
    char ch = getchar();
    while (ch &lt; '0' || ch &gt; '9'){
        if (ch == '-')
            f = -1;
        ch = getchar();
    }
    while (ch &gt;= '0' &amp;&amp; ch &lt;= '9')
        x = x * 10 + ch - '0', ch = getchar();
    return x * f;
}
 
void write(int x){
    if (x &lt; 0)
        putchar('-'), x = -x;
    if (x &gt; 9)
        write(x / 10);
    putchar(x % 10 + '0');
}
 
void solve(){
       
}
 
signed main() {
 
    return 0;
}
<br><br>// &gt;=
int index = lower_bound(X.begin(),X.end(),x)-X.begin();
// &gt;
int index = lower_bound(X.begin(),X.end(),x+1)-X.begin();
// &lt;
int index = max(0,lower_bound(X.begin(),X.end(),x)-1-X.begin());
//&lt;=
int index = max(0,lower_bound(X.begin(),X.end(),x+1)-1-X.begin());
<br><br>int fastpow(int a,int n){
    int ans=1;
    while(n){
        if(n&amp;1) ans*=a;
        a*=a;
        n&gt;&gt;=1;
    }
    return ans;
}

int fastpowmod(int a,int n,int mod){
    int ans=1;
    a%=mod;
    while(n){
        if(n&amp;1) ans = (ans*a)%mod;
        a = (a*a)%mod;
        n&gt;&gt;=1;
    }
    return ans;
}
<br>#include&lt;bits/stdc++.h&gt;

using namespace std;

struct Person {
    std::string name;
    int age;
};

bool compareByName(const Person&amp; a, const Person&amp; b) {
    return a.name &lt; b.name;  // 按名称升序排序
}

bool compareByAge(const Person&amp;a,const Person&amp;b){
    return a.age&lt;b.age;
}

int main() {
    std::vector&lt;Person&gt; people = {{"Alice", 25}, {"Bob", 20}, {"Charlie", 30}};
    sort(people.begin(), people.end(), compareByName);
    for (const auto&amp; person : people) {
        std::cout &lt;&lt; person.name &lt;&lt; " - " &lt;&lt; person.age &lt;&lt; std::endl;
    }
    return 0;
}
]]></description><link>https://www.allenygy.vip/algorithm/algorithm.html</link><guid isPermaLink="false">Algorithm/Algorithm.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 14:16:07 GMT</pubDate></item><item><title><![CDATA[Bioinfo-Assignment-1]]></title><description><![CDATA[ 
 <br><br><br><img alt="De Bruijin" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8eogvt.jpg" referrerpolicy="no-referrer"><br>Path:<br>
<br>ATGCTAG 
<br>ATGCTGACTAG
<br><br><img alt="2" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlGlO8.png" referrerpolicy="no-referrer"><br><br><br><br><br>: <br>
: <br>
:  for a match;  for a mismatch;  for each indel<br><br>: GATC_AGATCGA<br>
: GGT_AA_A_CGT<br><br>Search genes associated with colon cancer in human genome.<br><br><a data-tooltip-position="top" aria-label="https://www.ncbi.nlm.nih.gov/nuccore/NM_000249.4/?report=fasta" rel="noopener nofollow" class="external-link" href="https://www.ncbi.nlm.nih.gov/nuccore/NM_000249.4/?report=fasta" target="_blank">DNA Sequence of <em></em></a>MLH1*<br>&gt;NM_000249.4 Homo sapiens mutL homolog 1 (MLH1), transcript variant 1, mRNA
AGACGTTTCCTTGGCTCTTCTGGCGCCAAAATGTCGTTCGTGGCAGGGGTTATTCGGCGGCTGGACGAGA
CAGTGGTGAACCGCATCGCGGCGGGGGAAGTTATCCAGCGGCCAGCTAATGCTATCAAAGAGATGATTGA
GAACTGTTTAGATGCAAAATCCACAAGTATTCAAGTGATTGTTAAAGAGGGAGGCCTGAAGTTGATTCAG
ATCCAAGACAATGGCACCGGGATCAGGAAAGAAGATCTGGATATTGTATGTGAAAGGTTCACTACTAGTA
AACTGCAGTCCTTTGAGGATTTAGCCAGTATTTCTACCTATGGCTTTCGAGGTGAGGCTTTGGCCAGCAT
AAGCCATGTGGCTCATGTTACTATTACAACGAAAACAGCTGATGGAAAGTGTGCATACAGAGCAAGTTAC
TCAGATGGAAAACTGAAAGCCCCTCCTAAACCATGTGCTGGCAATCAAGGGACCCAGATCACGGTGGAGG
ACCTTTTTTACAACATAGCCACGAGGAGAAAAGCTTTAAAAAATCCAAGTGAAGAATATGGGAAAATTTT
GGAAGTTGTTGGCAGGTATTCAGTACACAATGCAGGCATTAGTTTCTCAGTTAAAAAACAAGGAGAGACA
GTAGCTGATGTTAGGACACTACCCAATGCCTCAACCGTGGACAATATTCGCTCCATCTTTGGAAATGCTG
TTAGTCGAGAACTGATAGAAATTGGATGTGAGGATAAAACCCTAGCCTTCAAAATGAATGGTTACATATC
CAATGCAAACTACTCAGTGAAGAAGTGCATCTTCTTACTCTTCATCAACCATCGTCTGGTAGAATCAACT
TCCTTGAGAAAAGCCATAGAAACAGTGTATGCAGCCTATTTGCCCAAAAACACACACCCATTCCTGTACC
TCAGTTTAGAAATCAGTCCCCAGAATGTGGATGTTAATGTGCACCCCACAAAGCATGAAGTTCACTTCCT
GCACGAGGAGAGCATCCTGGAGCGGGTGCAGCAGCACATCGAGAGCAAGCTCCTGGGCTCCAATTCCTCC
AGGATGTACTTCACCCAGACTTTGCTACCAGGACTTGCTGGCCCCTCTGGGGAGATGGTTAAATCCACAA
CAAGTCTGACCTCGTCTTCTACTTCTGGAAGTAGTGATAAGGTCTATGCCCACCAGATGGTTCGTACAGA
TTCCCGGGAACAGAAGCTTGATGCATTTCTGCAGCCTCTGAGCAAACCCCTGTCCAGTCAGCCCCAGGCC
ATTGTCACAGAGGATAAGACAGATATTTCTAGTGGCAGGGCTAGGCAGCAAGATGAGGAGATGCTTGAAC
TCCCAGCCCCTGCTGAAGTGGCTGCCAAAAATCAGAGCTTGGAGGGGGATACAACAAAGGGGACTTCAGA
AATGTCAGAGAAGAGAGGACCTACTTCCAGCAACCCCAGAAAGAGACATCGGGAAGATTCTGATGTGGAA
ATGGTGGAAGATGATTCCCGAAAGGAAATGACTGCAGCTTGTACCCCCCGGAGAAGGATCATTAACCTCA
CTAGTGTTTTGAGTCTCCAGGAAGAAATTAATGAGCAGGGACATGAGGTTCTCCGGGAGATGTTGCATAA
CCACTCCTTCGTGGGCTGTGTGAATCCTCAGTGGGCCTTGGCACAGCATCAAACCAAGTTATACCTTCTC
AACACCACCAAGCTTAGTGAAGAACTGTTCTACCAGATACTCATTTATGATTTTGCCAATTTTGGTGTTC
TCAGGTTATCGGAGCCAGCACCGCTCTTTGACCTTGCCATGCTTGCCTTAGATAGTCCAGAGAGTGGCTG
GACAGAGGAAGATGGTCCCAAAGAAGGACTTGCTGAATACATTGTTGAGTTTCTGAAGAAGAAGGCTGAG
ATGCTTGCAGACTATTTCTCTTTGGAAATTGATGAGGAAGGGAACCTGATTGGATTACCCCTTCTGATTG
ACAACTATGTGCCCCCTTTGGAGGGACTGCCTATCTTCATTCTTCGACTAGCCACTGAGGTGAATTGGGA
CGAAGAAAAGGAATGTTTTGAAAGCCTCAGTAAAGAATGCGCTATGTTCTATTCCATCCGGAAGCAGTAC
ATATCTGAGGAGTCGACCCTCTCAGGCCAGCAGAGTGAAGTGCCTGGCTCCATTCCAAACTCCTGGAAGT
GGACTGTGGAACACATTGTCTATAAAGCCTTGCGCTCACACATTCTGCCTCCTAAACATTTCACAGAAGA
TGGAAATATCCTGCAGCTTGCTAACCTGCCTGATCTATACAAAGTCTTTGAGAGGTGTTAAATATGGTTA
TTTATGCACTGTGGGATGTGTTCTTCTTTCTCTGTATTCCGATACAAAGTGTTGTATCAAAGTGTGATAT
ACAAAGTGTACCAACATAAGTGTTGGTAGCACTTAAGACTTATACTTGCCTTCTGATAGTATTCCTTTAT
ACACAGTGGATTGATTATAAATAAATAGATGTGTCTTAACATAA
<br><br><a data-tooltip-position="top" aria-label="https://www.ncbi.nlm.nih.gov/nuccore/NC_000913.3?report=fasta" rel="noopener nofollow" class="external-link" href="https://www.ncbi.nlm.nih.gov/nuccore/NC_000913.3?report=fasta" target="_blank">DNA Sequence of <em></em></a>E. coli mismatch repair gene mutS<br>&gt;NC_000913.3:2857093-2859654 Escherichia coli str. K-12 substr. MG1655, complete genome
ATGAGTGCAATAGAAAATTTCGACGCCCATACGCCCATGATGCAGCAGTATCTCAGGCTGAAAGCCCAGC
ATCCCGAGATCCTGCTGTTTTACCGGATGGGTGATTTTTATGAACTGTTTTATGACGACGCAAAACGCGC
GTCGCAACTGCTGGATATTTCACTGACCAAACGCGGTGCTTCGGCGGGAGAGCCGATCCCGATGGCGGGG
ATTCCCTACCATGCGGTGGAAAACTATCTCGCCAAACTGGTGAATCAGGGAGAGTCCGTTGCCATCTGCG
AACAAATTGGCGATCCGGCGACCAGCAAAGGTCCGGTTGAGCGCAAAGTTGTGCGTATCGTTACGCCAGG
CACCATCAGCGATGAAGCCCTGTTGCAGGAGCGTCAGGACAACCTGCTGGCGGCTATCTGGCAGGACAGC
AAAGGTTTCGGCTACGCGACGCTGGATATCAGTTCCGGGCGTTTTCGCCTGAGCGAACCGGCTGACCGCG
AAACGATGGCGGCAGAACTGCAACGCACTAATCCTGCGGAACTGCTGTATGCAGAAGATTTTGCTGAAAT
GTCGTTAATTGAAGGCCGTCGCGGCCTGCGCCGTCGCCCGCTGTGGGAGTTTGAAATCGACACCGCGCGC
CAGCAGTTGAATCTGCAATTTGGGACCCGCGATCTGGTCGGTTTTGGCGTCGAGAACGCGCCGCGCGGAC
TTTGTGCTGCCGGTTGTCTGTTGCAGTATGCGAAAGATACCCAACGTACGACTCTGCCGCATATTCGTTC
CATCACCATGGAACGTGAGCAGGACAGCATCATTATGGATGCCGCGACGCGTCGTAATCTGGAAATCACC
CAGAACCTGGCGGGTGGTGCGGAAAATACGCTGGCTTCTGTGCTCGACTGCACCGTCACGCCGATGGGCA
GCCGTATGCTGAAACGCTGGCTGCATATGCCAGTGCGCGATACCCGCGTGTTGCTTGAGCGCCAGCAAAC
TATTGGCGCATTGCAGGATTTCACCGCCGGGCTACAGCCGGTACTGCGTCAGGTCGGCGACCTGGAACGT
ATTCTGGCACGTCTGGCTTTACGAACTGCTCGCCCACGCGATCTGGCCCGTATGCGCCACGCTTTCCAGC
AACTGCCGGAGCTGCGTGCGCAGTTAGAAACTGTCGATAGTGCACCGGTACAGGCGCTACGTGAGAAGAT
GGGCGAGTTTGCCGAGCTGCGCGATCTGCTGGAGCGAGCAATCATCGACACACCGCCGGTGCTGGTACGC
GACGGTGGTGTTATCGCATCGGGCTATAACGAAGAGCTGGATGAGTGGCGCGCGCTGGCTGACGGCGCGA
CCGATTATCTGGAGCGTCTGGAAGTCCGCGAGCGTGAACGTACCGGCCTGGACACGCTGAAAGTTGGCTT
TAATGCGGTGCACGGCTACTACATTCAAATCAGCCGTGGGCAAAGCCATCTGGCACCCATCAACTACATG
CGTCGCCAGACGCTGAAAAACGCCGAGCGCTACATCATTCCAGAGCTAAAAGAGTACGAAGATAAAGTTC
TCACCTCAAAAGGCAAAGCACTGGCACTGGAAAAACAGCTTTATGAAGAGCTGTTCGACCTGCTGTTGCC
GCATCTGGAAGCGTTGCAACAGAGCGCGAGCGCGCTGGCGGAACTCGACGTGCTGGTTAACCTGGCGGAA
CGGGCCTATACCCTGAACTACACCTGCCCGACCTTCATTGATAAACCGGGCATTCGCATTACCGAAGGTC
GCCATCCGGTAGTTGAACAAGTACTGAATGAGCCATTTATCGCCAACCCGCTGAATCTGTCGCCGCAGCG
CCGCATGTTGATCATCACCGGTCCGAACATGGGCGGTAAAAGTACCTATATGCGCCAGACCGCACTGATT
GCGCTGATGGCCTACATCGGCAGCTATGTACCGGCACAAAAAGTCGAGATTGGACCTATCGATCGCATCT
TTACCCGCGTAGGCGCGGCAGATGACCTGGCGTCCGGGCGCTCAACCTTTATGGTGGAGATGACTGAAAC
CGCCAATATTTTACATAACGCCACCGAATACAGTCTGGTGTTAATGGATGAGATCGGGCGTGGAACGTCC
ACCTACGATGGTCTGTCGCTGGCGTGGGCGTGCGCGGAAAATCTGGCGAATAAGATTAAGGCATTGACGT
TATTTGCTACCCACTATTTCGAGCTGACCCAGTTACCGGAGAAAATGGAAGGCGTCGCTAACGTGCATCT
CGATGCACTGGAGCACGGCGACACCATTGCCTTTATGCACAGCGTGCAGGATGGCGCGGCGAGCAAAAGC
TACGGCCTGGCGGTTGCAGCTCTGGCAGGCGTGCCAAAAGAGGTTATTAAGCGCGCACGGCAAAAGCTGC
GTGAGCTGGAAAGCATTTCGCCGAACGCCGCCGCTACGCAAGTGGATGGTACGCAAATGTCTTTGCTGTC
AGTACCAGAAGAAACTTCGCCTGCGGTCGAAGCTCTGGAAAATCTTGATCCGGATTCACTCACCCCGCGT
CAGGCGCTGGAGTGGATTTATCGCTTGAAGAGCCTGGTGTAA
<br><br><img alt="Blastn" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/xOdPD1.png" referrerpolicy="no-referrer"><br><img alt="NJwzTn" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/NJwzTn.png" referrerpolicy="no-referrer"><br><br>Human MLH1 Protein Sequence<br>MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERCL

<br><img alt="MLH" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/j9O8tT.png" referrerpolicy="no-referrer"><br>E. coli mismatch repair gene mutS Protein Sequence<br>MSAIENFDAHTPMMQQYLRLKAQHPEILLFYRMGDFYELFYDDAKRASQLLDISLTKRGASAGEPIPMAGIPYHAVENYL
AKLVNQGESVAICEQIGDPATSKGPVERKVVRIVTPGTISDEALLQERQDNLLAAIWQDSKGFGYATLDISSGRFRLSEP
ADRETMAAELQRTNPAELLYAEDFAEMSLIEGRRGLRRHPLWEFEIDTARQQLNLQFGTRDLVGFGVENAPRGLCAAGCL
LQYAKDTQRTTLPHIRSITMEREQDSIIMDAATRRNLEITQNLAGGAENTLASVLDCTVTPMGSRMLKRWLHMPVRDTRV
LLERQQTIGALQDFTAGLQPVLRQVGDLERILARLALRTARPRDLARMRHAFQQLPELRAQLETVDSAPVQALREKMGEF
AELRDLLERAIIDTPPVLVRDGGVIASGYNEELDEWRALADGATDYLERLEVRERERTGLDTLKVGFNAVHGYYIQISRG
QSHLAPINYMRRQTLKNAERYIIPELKEYEDKVLTSKGKALALEKQLYEELFDLLLPHLEALQQSASALAELDVLVNLAE
RAYTLNYTCPTFIDKPGIRITEGRHPVVEQVLNEPFIANPLNLSPQRRMLIITGPNMGGKSTYMRQTALIALMAYIGSYV
PAQKVEIGPIDRIFTRVGAADDLASGRSTFMVEMTETANILHNATEYSLVLMDEIGRGTSTYDGLSLAWACAENLANKIK
ALTLFATHYFELTQLPEKMEGVANVHLDALEHGDTIAFMHSVQDGAASKSYGLAVAALAGVPKEVIKRARQKLRELESIS
PNAAATQVDGTQMSLLSVPEETSPAVEALENLDPDSLTPRQALEWIYRLKSLV
<br><img alt="E.coli" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/bSGMBG.png" referrerpolicy="no-referrer"><br><br><img alt="homology sequence" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/qwAifm.png" referrerpolicy="no-referrer"><br>&gt;AAA17374.1 human homolog of E. coli mutL gene product, Swiss-Prot Accession Number P23367 [Homo sapiens]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSVFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;NP_000240.1 DNA mismatch repair protein Mlh1 isoform 1 [Homo sapiens]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;AAQ02400.1 mutL-like 1, colon cancer, nonpolyposis type 2, partial [synthetic construct]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERCL
&gt;AKI70020.1 MLH1, partial [synthetic construct]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLDMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;BAG35497.1 unnamed protein product [Homo sapiens]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEVVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;AKI70018.1 MLH1, partial [synthetic construct]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNDYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;AAT44531.1 hypothetical rhabdomyosarcoma antigen MU-RMS-40.5, partial [Homo sapiens]
SFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERFT
TSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIAT
RRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAFK
MNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEES
ILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPLS
KPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVEM
VEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELFY
QILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLPL
LIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIVY
KALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;AKI70017.1 MLH1, partial [synthetic construct]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKFTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;AKI70019.1 MLH1, partial [synthetic construct]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSVHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVAAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKIHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINEQGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC
&gt;XP_001170433.1 DNA mismatch repair protein Mlh1 isoform X1 [Pan troglodytes]
MSFVAGVIRRLDETVVNRIAAGEVIQRPANAIKEMIENCLDAKSTSIQVIVKEGGLKLIQIQDNGTGIRKEDLDIVCERF
TTSKLQSFEDLASISTYGFRGEALASISHVAHVTITTKTADGKCAYRASYSDGKLKAPPKPCAGNQGTQITVEDLFYNIA
TRRKALKNPSEEYGKILEVVGRYSIHNAGISFSVKKQGETVADVRTLPNASTVDNIRSIFGNAVSRELIEIGCEDKTLAF
KMNGYISNANYSVKKCIFLLFINHRLVESTSLRKAIETVYAAYLPKNTHPFLYLSLEISPQNVDVNVHPTKHEVHFLHEE
SILERVQQHIESKLLGSNSSRMYFTQTLLPGLAGPSGEMVKSTTSLTSSSTSGSSDKVYAHQMVRTDSREQKLDAFLQPL
SKPLSSQPQAIVTEDKTDISSGRARQQDEEMLELPAPAEVTAKNQSLEGDTTKGTSEMSEKRGPTSSNPRKRHREDSDVE
MVEDDSRKEMTAACTPRRRIINLTSVLSLQEEINERGHEVLREMLHNHSFVGCVNPQWALAQHQTKLYLLNTTKLSEELF
YQILIYDFANFGVLRLSEPAPLFDLAMLALDSPESGWTEEDGPKEGLAEYIVEFLKKKAEMLADYFSLEIDEEGNLIGLP
LLIDNYVPPLEGLPIFILRLATEVNWDEEKECFESLSKECAMFYSIRKQYISEESTLSGQQSEVPGSIPNSWKWTVEHIV
YKALRSHILPPKHFTEDGNILQLANLPDLYKVFERC

<br><br>Write a program to calculate similarity between any pairs of protein sequences in the given input ﬁle “APOBEC3A.fasta”. (global alignment, gap penalty and gap extend penalty=-5). You can download scoring matrix from <a data-tooltip-position="top" aria-label="https://www.ncbi.nlm.nih.gov/IEB/ToolBox/C_DOC/lxr/source/data/BLOSUM62" rel="noopener nofollow" class="external-link" href="https://www.ncbi.nlm.nih.gov/IEB/ToolBox/C_DOC/lxr/source/data/BLOSUM62" target="_blank">here</a><br>
According to your program, which two sequences are most similar?<br>from Bio import SeqIO

def read_fasta(file):
    sequences = []
    for record in SeqIO.parse(file, "fasta"):
        sequences.append(str(record.seq))
    return sequences
sequences = read_fasta("APOBEC3A.fasta")

def load_blosum62(file):
    blosum62 = {}
    with open(file) as f:
        lines = f.readlines()
        amino_acids = lines[0].split() 
        for line in lines[1:]:
            parts = line.split()
            row_acid = parts[0]  
            scores = list(map(int, parts[1:]))  
            blosum62[row_acid] = dict(zip(amino_acids, scores))
    return blosum62
def needleman_wunsch(seq1, seq2, gap_penalty, blosum62):
    n = len(seq1)
    m = len(seq2)
    score_matrix = [[0] * (m + 1) for _ in range(n + 1)]

    for i in range(1, n + 1):
        score_matrix[i][0] = gap_penalty * i
    for j in range(1, m + 1):
        score_matrix[0][j] = gap_penalty * j

    for i in range(1, n + 1):
        for j in range(1, m + 1):
            match = score_matrix[i-1][j-1] + blosum62[seq1[i-1]][seq2[j-1]]
            delete = score_matrix[i-1][j] + gap_penalty
            insert = score_matrix[i][j-1] + gap_penalty
            score_matrix[i][j] = max(match, delete, insert)

    return score_matrix[n][m]
<br><br>blosum62 = load_blosum62("BLOSUM62.txt")
gap_penalty = -5
sequences = read_fasta("APOBEC3A.fasta")
ans=(0,1)
res=-1
for i in range(len(sequences)):
    for j in range(i + 1, len(sequences)):
        score = needleman_wunsch(sequences[i], sequences[j], gap_penalty, blosum62)
        if score&gt;res:
            res=score
            ans=(i,j)
        # print(f"Similarity between sequence {i+1} and {j+1}: {score}")

print(f"The most similar sequences are {ans[0]+1} and {ans[1]+1} with a similarity score of {res}")
<br><br>The most similar sequences are sequence APOBEC3A_Macaca_fascicularis and sequence APOBEC3A_Macaca_leonina with a similarity score of 1103]]></description><link>https://www.allenygy.vip/bioinfo/assignment/as-1/bioinfo-assignment-1.html</link><guid isPermaLink="false">Bioinfo/Assignment/As-1/Bioinfo-Assignment-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8eogvt.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8eogvt.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Pairwise-sequence-alignment]]></title><description><![CDATA[ 
 <br>########################################
# Program: needle
# Rundate: Wed 25 Sep 2024 07:11:13
# Commandline: needle
#    -auto
#    -stdout
#    -asequence emboss_needle-I20240925-071108-0349-62579891-p1m.asequence
#    -bsequence emboss_needle-I20240925-071108-0349-62579891-p1m.bsequence
#    -datafile EBLOSUM62
#    -gapopen 10.0
#    -gapextend 0.5
#    -endopen 10.0
#    -endextend 0.5
#    -aformat3 pair
#    -sprotein1
#    -sprotein2
# Align_format: pair
# Report_file: stdout
########################################

#=======================================
#
# Aligned_sequences: 2
# 1: EMBOSS_001
# 2: EMBOSS_001
# Matrix: EBLOSUM62
# Gap_penalty: 10.0
# Extend_penalty: 0.5
#
# Length: 199
# Identity:     176/199 (88.4%)
# Similarity:   186/199 (93.5%)
# Gaps:           0/199 ( 0.0%)
# Score: 962.0
# 
#
#=======================================

EMBOSS_001         1 MEASPASGPRHLMDPHIFTSNFNNGIGRHKTYLCYEVERLDNGTSVKMDQ     50
                     |||||||||||||||.:|||||||||..||||||||||||||||.|||||
EMBOSS_001         1 MEASPASGPRHLMDPCVFTSNFNNGIRWHKTYLCYEVERLDNGTWVKMDQ     50

EMBOSS_001        51 HRGFLHNQAKNLLCGFYGRHAELRFLDLVPSLQLDPAQIYRVTWFISWSP    100
                     |||||||||:|.|.|..|||||||||.|:|..||||||||||||||||||
EMBOSS_001        51 HRGFLHNQARNPLYGLDGRHAELRFLGLLPYWQLDPAQIYRVTWFISWSP    100

EMBOSS_001       101 CFSWGCAGEVRAFLQENTHVRLRIFAARIYDYDPLYKEALQMLRDAGAQV    150
                     |||||||.:|||||||||||||||||||||||||||||||||||||||||
EMBOSS_001       101 CFSWGCARQVRAFLQENTHVRLRIFAARIYDYDPLYKEALQMLRDAGAQV    150

EMBOSS_001       151 SIMTYDEFKHCWDTFVDHQGCPFQPWDGLDEHSQALSGRLRAILQNQGN    199
                     ||||||||::||:||||||||||||||||:||||||||:|:|||.||||
EMBOSS_001       151 SIMTYDEFEYCWNTFVDHQGCPFQPWDGLEEHSQALSGKLQAILLNQGN    199


#---------------------------------------
#---------------------------------------
]]></description><link>https://www.allenygy.vip/bioinfo/lab/lab-1/pairwise-sequence-alignment.html</link><guid isPermaLink="false">Bioinfo/Lab/Lab-1/Pairwise-sequence-alignment.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Bio-Lab1]]></title><description><![CDATA[ 
 <br><br><br>Using the human APOBEC3A (hAPOBEC3A) protein sequence (ID: NP_663745.1) as query, use BLASTp to search for its homologous protein sequence.<br><img alt="homologous protein sequence" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/9IPRfp.png" referrerpolicy="no-referrer"><br><br><br>For the APOBEC3A.fasta ﬁle (from iSpace), perform multiple sequence alignment and construct phylogenetic tree. <br>Multiple Sequence Alignment<br><img alt="MSA" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/k0LeCY.png" referrerpolicy="no-referrer"><br>Phylogenetic Tree<br><br><br>Attempt to interpret the results of this phylogenetic tree. <br>The phylogenetic tree shows evolutionary relationships between primate species based on the APOBEC3A gene.<br>
Species that are closer together, such as orangutans (Pongo pygmaeus) and orangutans (Pongo abelii), have a more recent common ancestor, while species that are more distant, such as Homo sapiens and Colobus guereza, are more distantly related.<br>
The number next to each species represents genetic distance, with higher values indicating greater differences from a common ancestor.<br>
The scale (0.10) helps explain these distances.<br>
Overall, the tree reflects the evolutionary history of these primates.<br><br><br>Based on the phylogenetic tree, select the sequences closest to hAPOBEC3A and generate pairwise sequence alignment, attempt to interpret the speciﬁc diﬀerences between the two sequences (hAPOBEC3A and target sequence).  Closest: Pongo pygmaeus APOBEC3A protein  <br><img alt="Pairwise sequence alignment" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/dHUBrm.png" referrerpolicy="no-referrer"><br>The pairwise alignment between human APOBEC3A and Pongo pygmaeus APOBEC3A shows 88.4% identity and 93.5% similarity, with no gaps. Key differences include substitutions like Aspartic acid (D) to Cysteine (C) at position 15 and Phenylalanine (F) to Glutamic acid (E) at position 155, which could affect protein structure or function but likely don't drastically change its core role due to the high similarity.<br>]]></description><link>https://www.allenygy.vip/bioinfo/lab/lab-1/bioinfo-lab-1.html</link><guid isPermaLink="false">Bioinfo/Lab/Lab-1/Bioinfo-Lab-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/9IPRfp.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/9IPRfp.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Lab-2]]></title><description><![CDATA[ 
 <br><br><br>install.packages("BiocManager")
BiocManager::install(c("S4Vectors", "IRanges", "GenomicRanges", "SummarizedExperiment", 
                       "BiocGenerics", "Biobase", "BiocParallel", "matrixStats", "locfit", "ggplot2"))
<br><br>In this step, we load the raw counts and sample mapping data for further analysis.<br>rawCounts &lt;- read.delim("E-GEOD-50760-raw-counts.tsv")
sampleData &lt;- read.delim("E-GEOD-50760-experiment-design.tsv") 
<br># Prepare countData and colData
countData &lt;- subset(rawCounts, select = -c(Gene.Name, Gene.ID))
rownames(countData) &lt;- rawCounts$Gene.ID

colData &lt;- data.frame(condition = sampleData$Sample.Characteristic.biopsy.site.)
rownames(colData) &lt;- sampleData$Run
<br><br>Read the DESeq2 manual for reference: DESeq2 Manual<br># Load DESeq2
library(DESeq2)
# Create DESeq2 dataset
dds &lt;- DESeqDataSetFromMatrix(countData = countData,
                              colData = colData,
                              design = ~condition)

# Run DESeq2 to identify differentially expressed genes
dds &lt;- DESeq(dds)
res &lt;- results(dds)

# Summary of results
summary(res)
<br># Filter and save DE genes by p-value
DE_genes &lt;- subset(res, padj &lt; 0.05)
write.csv(as.data.frame(DE_genes), file = "DE_genes.csv")  # Save as .csv
<br><br>Identify functional enrichment of the DE genes using clusterProfiler and org.Hs.eg.db packages.<br># Load necessary libraries
library(clusterProfiler)
library(org.Hs.eg.db)
library(ggplot2)

# Gene set enrichment analysis
gene_id_list &lt;- rownames(DE_genes)
GO_result &lt;- enrichGO(gene_id_list,
                      OrgDb = org.Hs.eg.db,
                      ont = "ALL",
                      pvalueCutoff = 0.05,
                      pAdjustMethod = "BH",
                      keyType = 'ENSEMBL')

# Plotting gene set enrichment results
dotplot(GO_result, x = "GeneRatio", color = "p.adjust", showCategory = 10, title = "Gene Ontology Dotplot") +
  theme(axis.text.y = element_text(size = 8))

barplot(GO_result, x = "GeneRatio", color = "p.adjust", showCategory = 10, title = "Gene Ontology Barplot") +
  theme(axis.text.y = element_text(size = 8))

cnetplot(GO_result, showCategory = 10)
<br><br><img alt="rOV8OR" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/rOV8OR.png" referrerpolicy="no-referrer"><br>
<img alt="JjjaVo" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/JjjaVo.png" referrerpolicy="no-referrer"><br>
<img alt="dWrsUs" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/dWrsUs.png" referrerpolicy="no-referrer"><br>The results of your gene set enrichment analysis (GSEA) for the differentially expressed (DE) genes between tumor and normal samples provide insights into the biological processes that are significantly associated with the observed differences.<br>The dot plot and bar plot you generated highlight the top enriched Gene Ontology (GO) terms based on the adjusted p-value (p.adjust). The size of each point in the dot plot represents the count of genes associated with each GO term, while the color gradient shows the level of significance, with red representing the most significant terms. In both plots, terms related to metabolic processes, particularly those involved in amino acid and small molecule metabolism, are prominently enriched.<br>
<br>Metabolic Processes: Many of the significant GO terms, such as “small molecule catabolic process,” “steroid metabolic process,” and “amino acid metabolic process,” suggest that metabolic reprogramming may play a crucial role in differentiating tumor cells from normal cells. This is consistent with the well-known phenomenon of altered metabolism in cancer cells, often referred to as the “Warburg effect.”
<br>Catabolic Processes: Processes like “organic acid catabolic process” and “alpha-amino acid catabolic process” are enriched, indicating that these pathways might be more active in tumor cells, possibly to meet the high energy and biosynthetic demands of rapidly proliferating cells.
<br>The GSEA results support the idea that tumor cells may have a distinct metabolic profile compared to normal cells, potentially highlighting pathways that could be targeted for therapeutic intervention.<br><br>Apply hierarchical clustering to genes and generate a heatmap.<br># Load pheatmap
library(pheatmap)

# Create heatmap
pheatmap(cor(countData),
         annotation = colData,
         cluster_cols = FALSE,
         color = hcl.colors(50, "BluYl"))  # Adjust color for heatmap
]]></description><link>https://www.allenygy.vip/bioinfo/lab/lab-2/bioinfo-lab-2.html</link><guid isPermaLink="false">Bioinfo/Lab/Lab-2/Bioinfo-Lab-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/rOV8OR.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/rOV8OR.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Bioinfo-Lab-3]]></title><description><![CDATA[ 
 <br><br><br>import palantir

fig, ax = palantir.plot.plot_molecules_per_cell_and_gene(data.T)

filtered_data = palantir.preprocess.filter_counts_data(data.T, cell_min_molecules=1000, genes_min_cells=10)

from sklearn.preprocessing import MinMaxScaler, StandardScaler

scaler_minmax = MinMaxScaler()

data_minmax= pd.DataFrame(scaler_minmax.fit_transform(filtered_data), columns=filtered_data.columns)

print("Min-Max Scaling:")
data_minmax


scaler_zscore = StandardScaler()
data_zscore = pd.DataFrame(scaler_zscore.fit_transform(filtered_data),columns=filtered_data.columns)
print("\nZ-Score Normalization:")
data_zscore

import numpy as np
data_log = np.log(filtered_data+1)
print("Log-transformed Data:")
data_log

<br>
<br>
Mouse Retina Dataset

<br>
<img alt="Mouse Retina Dataset" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Snipaste_2024-11-26_23-25-23.png" referrerpolicy="no-referrer">

<br>
Mesc Dataset

<br>
<img alt="Snipaste_2024-11-26_23-37-16" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Snipaste_2024-11-26_23-37-16.png" referrerpolicy="no-referrer">

<br>
Embryo cortex Dataset

<br>
<img alt="Snipaste_2024-11-26_23-40-48" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Snipaste_2024-11-26_23-40-48.png" referrerpolicy="no-referrer">

<br><br>import magic
magic_operator=magic.MAGIC()
data_magic =magic_operator.fit_transform(data_log, genes='all_genes')
<br>
<br>Mouse Retina Dataset
<br><img alt="Mb9wcS" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Mb9wcS.png" referrerpolicy="no-referrer"><br>
<br>Mesc Dataset
<br><img alt="3v13U5" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/3v13U5.png" referrerpolicy="no-referrer"><br>
<br>Embryo cortex Dataset
<br><img alt="QqSrSJ" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/QqSrSJ.png" referrerpolicy="no-referrer"><br><br>from sklearn.manifold import TSNE 
import matplotlib.pyplot as plt

tsne = TSNE(n_components=2)
data_tsne =tsne.fit_transform(data_log)
data_magic_tsne = tsne.fit_transform(data_magic)
import matplotlib.pyplot as plt

fig, axs = plt.subplots(1, 2, figsize=(12, 6))

axs[0].scatter(data_tsne[:,0], data_tsne[:,1], s=3)
axs[0].set_title('t-SNE Projection before imputation')
axs[0].set_xlabel('t-SNE 1')
axs[0].set_ylabel('t-SNE 2')

axs[1].scatter(data_magic_tsne[:,0], data_magic_tsne[:,1], s=3)
axs[1].set_title('t-SNE Projection after imputation')
axs[1].set_xlabel('t-SNE 1')
axs[1].set_ylabel('t-SNE 2')

plt.tight_layout()

plt.show()


<br>
<br>Mouse Retina Dataset
<br><img alt="HBDUZv" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/HBDUZv.png" referrerpolicy="no-referrer"><br>
<br>Mesc Dataset
<br><img alt="XQWAOZ" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/XQWAOZ.png" referrerpolicy="no-referrer"><br>
<br>Embryo cortex Dataset
<br><img alt="EIXDys" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EIXDys.png" referrerpolicy="no-referrer"><br><br>from sklearn.decomposition import PCA

pca = PCA(n_components=2)
data_pca =pca.fit_transform(data_log)

import umap
reducer =  umap.UMAP(n_neighbors=5)

data_umap = reducer.fit_transform(data_log)

<br><br>from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=10)
kmeans_labels = kmeans.fit_predict(data_umap)

from sklearn.cluster import AgglomerativeClustering

model =AgglomerativeClustering(n_clusters =10, metric = 'euclidean', linkage='ward')

hierarchical_labels = model.fit_predict(data_umap)
<br><br>from sklearn.metrics import adjusted_rand_score
import pandas as pd

# ground_truth = pd.read_csv("data/data1_mouse_retina/sample_cluster_ref_filtered.txt", sep='\t', header=None, index_col=0)
# ground_truth = pd.read_csv("data/data2_mesc/sample_cluster_ref_filtered.txt", sep='\t', header=None, index_col=0)
ground_truth = pd.read_csv("data/data3_embryo_cortex/sample_cluster_ref_filtered.txt", sep=' ', header=None, index_col=0)


ground_truth.index = ground_truth.index.astype(str)
filtered_data.index = filtered_data.index.astype(str)
print(ground_truth.head())
filter_truth = ground_truth[ground_truth.index.isin(filtered_data.index)]

truth_labels = filter_truth.iloc[:, 0].values.flatten()

ari_kmeans = adjusted_rand_score(truth_labels, kmeans_labels)
ari_hierarchical = adjusted_rand_score(truth_labels, hierarchical_labels)

ari_kmeans, ari_hierarchical

<br><br>Draw barplot to compare the ARI of different clustering method across different datasets.<br>import matplotlib.pyplot as plt
import numpy as np

# Data
groups = ["Mouse retina", "Mesc", "Embryo cortex"]
ari_kmeans = [ 0.3667557727356677,0.4606159477762726,0.32104987981911626]
ari_hierarchical = [0.30282121097059833,0.39561124324721736, 0.36705405669210917]

# Visualization
x = np.arange(len(groups))
width = 0.35  # Width of bars

fig, ax = plt.subplots(figsize=(8, 5))
bars1 = ax.bar(x - width/2, ari_kmeans, width, label="ARI K-Means")
bars2 = ax.bar(x + width/2, ari_hierarchical, width, label="ARI Hierarchical")

# Labels and Title
ax.set_xlabel("Groups")
ax.set_ylabel("ARI Scores")
ax.set_title("ARI Scores for K-Means and Hierarchical Clustering")
ax.set_xticks(x)
ax.set_xticklabels(groups)
ax.legend()

# Adding data labels
for bar in bars1:
    height = bar.get_height()
    ax.annotate(f'{height:.2f}', xy=(bar.get_x() + bar.get_width()/2, height),
                xytext=(0, 3), textcoords="offset points", ha='center', va='bottom')
for bar in bars2:
    height = bar.get_height()
    ax.annotate(f'{height:.2f}', xy=(bar.get_x() + bar.get_width()/2, height),
                xytext=(0, 3), textcoords="offset points", ha='center', va='bottom')

plt.tight_layout()
plt.show()
<br><img alt="BioinfoARIClusters" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BioinfoARIClusters.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/bioinfo/lab/lab-3/bioinfo-lab-3.html</link><guid isPermaLink="false">Bioinfo/Lab/Lab-3/Bioinfo-Lab-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 26 Nov 2024 15:48:52 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Snipaste_2024-11-26_23-25-23.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Snipaste_2024-11-26_23-25-23.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Bioinfo-Lab-4]]></title><description><![CDATA[ 
 <br><br><br>data &lt;- read.table("Gene_expression_table_filtered.txt", header=TRUE, row.names=1)
adj_matrix &lt;- cor(data, method="pearson")
<br><br>hist(as.vector(adj_matrix), breaks=50, main="Histogram of adj", xlab="adj")
<br><img alt="distribution" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8XMZWH.png" referrerpolicy="no-referrer"><br><br>
A &lt;- which(abs(adj_matrix) &gt; 0.5, arr.ind = T)

node_list &lt;- colnames(data)

edges &lt;- cbind(node_list[A[, 1]], node_list[A[, 2]], adj_matrix[A])

colnames(edges) &lt;- c("source", "target", "weight")

write.csv(edges, file = "mouse_retina_adj.csv",quote = F)


<br><br>library(igraph)

distancematrix &lt;- 1 - abs(adj_matrix) 

<br><br>G1 &lt;- graph.adjacency(distancematrix, mode="undirected", weighted=TRUE, diag=TRUE)


clusterlouvain &lt;- cluster_louvain(G1)


tmp=c()
label=c()

for (i in c(1:2)){
    tmp=c(tmp,clusterlouvain[i])   
    label = c(label,rep(i,length(clusterlouvain[[i]])))
}
result=cbind(tmp,label)

write.csv(result,file="mouse_retina_node_label.csv")
<br><br><img alt="mouse_retina_adj.csv" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/mouse_retina_adj.csv.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/bioinfo/lab/lab-4/bioinfo-lab-4.html</link><guid isPermaLink="false">Bioinfo/Lab/Lab-4/Bioinfo-Lab-4.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 01 Dec 2024 17:43:50 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8XMZWH.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8XMZWH.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Compiler-As-3]]></title><description><![CDATA[ 
 <br><br><br>Use the grammar rules and attribute definitions in Lecture 10 Page 19 to construct the parse tree and syntax tree for expression "" assuming the expression is tokenized as "" <br>Parse  Tree:	<br><br><img alt="Tree" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/1MA9zZ.png" referrerpolicy="no-referrer"><br>Syntax Tree:<br>
<img alt="Syntax Tree" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/HT4DYO.png" referrerpolicy="no-referrer"><br><br>Use the grammar rules and attribute definitions in “Grammar+Typing.docx” (the grammar is in Lec 12 on pg 20) to analyze the source code<br>bool flip(bool x) not x; flip (flase)
<br>Parse Tree<br><br><br>Symbol Table<br><br><br>The language in Lec 11 on Page 27 has two production rules: <br><br>So, it is possible to have valid variable declarations<br>int *[10]x; int[10]* y;
<br>Please follow the corresponding type checking rules on the same page to give the type of  and . You need to explain your answer. <br>The type of x is <br>
The type of y is <br><br><br>The language in Lec 11 on Page 27 is too weak. It cannot make assignment from a memory location to a pointer. Thus, we power-up the language by modifying the grammar rules. (New or modified rules are in red color.) Define the correct type checking rules for the new grammar rules. Type checking for old grammar rules remain unchanged. <br>
<br>    
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>  
<br>
<br><br> <br><br>
<br><br><br><br>
<br><br><br> <br>   no need to define type<br>
   no need to define type<br>
   no need to define type	<br><br>Let the following grammar rules be the syntax of integer arithmetic.<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>Remark:<br>
<br>Token "num" is an integer constant.
<br>"+" and "×" are integer addition and multiplication respectively.<br>
Multiplication has the higher precedence. Furthermore, both operators are (left and right) associative.
<br>However, this language is not perfect. It may contain many redundant parentheses. <br>For example, ((2 × 3) + 4) can be entirely without the parentheses as 2 × 3 + 4.<br>
(You can try to parse them.) Thus, please design semantics for the grammar rules to remove redundant parentheses. (25 pt)<br>Hint:<br>
<br>The semantics should have at least two attributes.
<br>One attribute is "expression", which holds the expression for each substructure.
<br>After computing the semantics, E.expression has the final outcome — the<br>
arithmetic expression without useless parentheses.
<br>The value of attribute "expression" is treated as a string. And the operator ""<br>
can be used (in semantic rules) to concatenate two strings.
<br><br>Define the semantics for the grammar rules. <br>
<br>expression: Stores the simplified expression without redundant parentheses.
<br>priority: Stores the priority of the operator in the expression. 
<br> denotes the concatenation of two strings.<br>Define a function for checking whether parentheses are needed for a given expression.<br>function checkParen(childExpr, childPriority, parentPriority):
    if childPriority &lt; parentPriority then
        return "(" + childExpr + ")"
    else
        return childExpr
<br>
<br>
  

<br>
<br>  


<br>
  

<br>
<br>


<br>
  

<br>
<br>  


<br>
  

<br>
<br>  


<br>
  

<br>
<br> 


<br>
  

<br> 
<br>  


]]></description><link>https://www.allenygy.vip/compiler-construction/assignment/compiler-as-3.html</link><guid isPermaLink="false">Compiler Construction/Assignment/Compiler-As-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 22 Dec 2024 15:51:08 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/1MA9zZ.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/1MA9zZ.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Compiler-As-2]]></title><description><![CDATA[ 
 <br><br><br>Given the set of tokens  (pay attention to the underline "_ ") and the following CFG grammar:<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>and answer the following questions. Show the detail of each step.<br><br>Left-most derivation:<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>Right-most derivation:<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br><br>There is only one production rule that has left recursion, which is . We can eliminate it by introducing a new non-terminal symbol  and rewrite the grammar as follows:<br>
<br>
<br>Eliminate the left recursions：<br>
<br>
<br>
<br>Due to  ; Therefore,<br>
<br>
<br>
<br>
<br>can be simplified as follows:<br><br>
<br>Rewrite the grammar as follows:<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br>There are several productions that have common prefixes:<br>
<br>
<br>
<br>We can left factorize the grammar as follows:<br>
<br>


<br>


<br>


<br>


<br>And it can be simplified as follows:<br>
<br>
<br>
<br>Rewrite the grammar as follows:<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>These are terminal symbols. So, Follow() is only influenced by the productions involving .<br><br><br><br> parsing table<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br><br>
<br>
<br>
<br>
<br>
<br>Construct the corresponding augmented grammar<br>
<br>
<br>
<br>
<br>
<br>
<br>Construct the  items:<br><br>
<br>
<br>
<br>
<br><br>For   nothing can be done<br>For <br>
<br>
<br>For <br>
<br>
<br><br>For <br>
<br>
<br>
<br>
<br>
<br>
<br>For <br>
<br>
<br>
<br>
<br><br>For <br>
<br>
<br>
<br>For  nothing can be done<br>For <br>
<br>
<br>For  nothing can be done<br>
For   nothing can be done<br>
For  nothing can be done<br><br>For <br>
<br>


<br>


<br>


<br>For <br>
<br>
<br>
<br>
<br>
<br>For <br>
<br>
<br>
<br>
<br><br>For <br>
<br>
<br>For  nothing can be done<br>
For  nothing can be done<br><br>For <br>
<br>
<br><br>For <br>
<br>
<br>
<br>
<br><br>For  nothing can be done<br>Here is the list of sets of items.<br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br> parsing table<br><br><br><br><br><br><br><br><br>
<br>
<br>
<br><br>The grammar  is ambiguous if there is a sentence in   from which it is possible to construct multiple parse trees (using any type of derivation).<br>For example the sentence  can be derived in two different ways:<br>
<br>
<br>
<br><br>Obviously, the sentence  can be derived in two different ways, which means the grammar is ambiguous.<br><br>For example the sentence  can be derived in two different ways:<br>Left-Most Derivation:<br>
<br>
<br>
<br>
<br>
<br>
<br>x
<br>Right-Most Derivation:<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>]]></description><link>https://www.allenygy.vip/compiler-construction/assignment/compiler-as-2.html</link><guid isPermaLink="false">Compiler Construction/Assignment/Compiler-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 14:23:01 GMT</pubDate></item><item><title><![CDATA[Compiler-As-1]]></title><description><![CDATA[ 
 <br><br><br>Let Design a DFA for each following language (6 marks for each)<br><br><br><img alt="1-a-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/O1JjaA.png" referrerpolicy="no-referrer"><br><br><br><img alt="1-b-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/9YeJ26.png" referrerpolicy="no-referrer"><br><br><br><img alt="1-c-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IMAFSB.png" referrerpolicy="no-referrer"><br><br>Design a regular expression for each language in Q1. (6 marks for each)<br>a. <br>
b. 	<br>
c. <br><br>Let  Convert the regular expression &nbsp;to an NFA. (10 marks)<br><img alt="3-NFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/NWWors.png" referrerpolicy="no-referrer"><br><br>Given the following NFA<br><img alt="4-NFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/6HfyY3.png" referrerpolicy="no-referrer"><br><br>First iteration <br>
<br>
<br>
<br>
<br>
<br>
<br>Second iteration<br>
<br>
<br>
<br>
<br>
<br>Third iteration<br>
<br>
<br>
<br>
<br>
<br>Fourth iteration<br>
<br>
<br>
<br>
<br>
<br>Fifth iteration<br>
<br>
<br>
<br>
<br>
<br>Sixth iteration<br>
<br>	
<br>
<br>	
<br>
<br>Seventh iteration<br>
<br>	
<br>
<br>	
<br>
<br><br><img alt="4-a-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/7x8efU.png" referrerpolicy="no-referrer"><br><br>Initially, <br>
<br>
<br>
<br>
<br>
<br> and  act in the same way, Thus  and  should be in the same group.<br>  <br><br>
<br>
<br>
<br>
<br><br> and  act in the same way, Thus  and  should be in the same group.<br><br>Finally, the minimized DFA is:<br><br>
<br>
<br>
	<br><img alt="4-b-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/9jcEQZ.png" referrerpolicy="no-referrer"><br><br>Consider a new alphabet <br><br><img alt="5-a-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/iXEqxf.png" referrerpolicy="no-referrer"><br><br>]]></description><link>https://www.allenygy.vip/compiler-construction/assignment/compiler-as-1.html</link><guid isPermaLink="false">Compiler Construction/Assignment/Compiler-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 16:30:36 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/O1JjaA.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/O1JjaA.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[05-Compiler-Intermediate Code Generation &amp; Code Optimization]]></title><description><![CDATA[ 
 <br><br>
<br>Three Address Code 
<br>Control Sequence 
<br>Variable Declaration
<br><br><br>Intermediate code separates the front end and the back end.<br>
It is an intermediate level between<br>
<br>a high level parse tree and
<br>low level microprocessor instructions.
<br>It is internal to compilers. Different compilers may have different intermediate codes.<br>Possible types of intermediate code:<br>
<br>Syntax trees 
<br>Static single assignment 
<br>Three address code 
<br><br>Each 3AC instruction consists of at most <br>
<br>one operator (binary or unary) and three address (variable number)
<br>For example,<br>
<br> (binary operator)
<br> (unary operator)
<br> (copy/ assignment)
<br> (unconditional ,  is the label of the destination)
<br> (conditional goto) 
<br>To convert a parse tree to 3AC, we need two synthesized attributes for each node in the parse tree.<br>Suppose we have a grammar production <br>
<br> stores the name of the variable containing the value of .
<br> stores the sequence of 3AC that computes the value if .
<br>The function  is used when the temporary variable names for intermediate results are generated.<br><br>Define the attributes for the following grammar <br>
<br>
<br>
<br><br><br>
<br>"||" means "followed by"
<br>No  because  is an assignment, not computing a value. 
<br><br>
<br>
<br>
<br><br>
<br>
<br>
<br><br>
<br>
<br>
<br><br>
<br>
<br>
<br><br>
<br> (intrinsic)
<br> (nothing to compute)
<br><br><br><br>]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/05-compiler-intermediate-code-generation-&amp;-code-optimization.html</link><guid isPermaLink="false">Compiler Construction/Lecture/05-Compiler-Intermediate Code Generation &amp; Code Optimization.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 22 Dec 2024 13:41:43 GMT</pubDate></item><item><title><![CDATA[06-Compiler-Solution For LR Parsing Algorithm, LR(0) items, SLR Parsing Table Construction]]></title><description><![CDATA[ 
 <br><br><br>
<br>Put the special symbol $ at the end of the input.
<br>Put state 0 at the bottom of the stack.
<br>In each iteration, suppose the current configuration is<br>
the current state is  and the next input token is 

<br>If  is "", then the next configuration is<br>

<br>If  is "", then the next configuration is<br>
where  and . At the same time, the parser outputs <br>
 就是下一个栈顶元素，换句话说就是当前状态的上一个状态<br>
首先先判断归约的 Production Rule，可以知道当前的token 会被归约成哪个token<br>
然后根据  token，去找到下一个状态	
<br>If  is "accept" and the current configuration is<br>
Where  is the start symbol of the grammar, the parser accepts the input.
<br>For all other cases, like  is blank, the parser finds a syntax error and switch to error recovery.


<br><br><br>]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/07-compiler-solution-for-lr-parsing-algorithm,-lr(0)-items,-slr-parsing-table-construction.html</link><guid isPermaLink="false">Compiler Construction/Lecture/07-Compiler-Solution For LR Parsing Algorithm, LR(0) items, SLR Parsing Table Construction.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 01 Dec 2024 08:52:23 GMT</pubDate></item><item><title><![CDATA[06-Compiler-solution for First set, Follow set and LL(1) Parsing table]]></title><description><![CDATA[ 
 <br><br><br>To compute FIRST(X) for all grammar symbols X, apply the following rules until no more terminals or ε can be added to any FIRST set.<br>
<br>
If X is a terminal, then .

<br>
If X is a nonterminal and  is a production for some , then place  in  if for some ,  is in , and  is in all of . If  is in  for all , then add  to . For example, everything in  is surely in . If  does not derive , then we add nothing more to , but if , then we add , and so on.

<br>
If  is a production, then add  to .

<br>Now, we can compute  for any string as follows. Add to  all non- symbols of . Also add the non- symbols of , if  is in ; the non- symbols of , if  is in  and ; and so on. Finally, add  to  if, for all ,  is in .<br><br>To compute  for all nonterminals , apply the following rules until nothing can be added to any  set:<br>
<br>
Place $ in , where  is the start symbol, and $ is the input right end marker.

<br>
If there is a production , then everything in  except  is in .

<br>
If there is a production , or a production , where  contains , then everything in  is in .

<br><br>
<br>对于文法的开始符号,置 $ 于中；
<br>若是一个产生式，则把加入到中
<br>若是一个产生式，或是一个产生式且 ，则把加入到中
<br>（可以是终结符或者非终结符(包括)，β可以是终结符或者非终结符)<br><br>Suppose the parsing table  is , where  is the number of nonterminals and  is the number of terminals. The table is initialized to be empty. <br>The entry  is a production rule that parser will apply when the current nonterminal is  and the next input symbol is . <br>For each production  in the (left factored, non-left recursive) grammar, do the following:<br>
<br>Foe each token  in , add the grammar production  to .
<br>If  is in  then, for each token  in the , add  to .
<br>All other entries in the table are left blank and correspond to a syntax error.
<br><br>流程：<br>遍历两次 Production Rule<br>第一次遍历，对每个 Production Rule 检查 Rule-1 <br>
<br>如果  是终结符，则把  加入到  中
<br>如果  是非终结符，则把  加入到 
<br>第二次遍历，对每个 Production Rule 检查 Rule-2<br>查看Production Rule 中所有可以产生  的非终结符<br>
对这些非终结符把  加入到  <br>]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/06-compiler-solution-for-first-set,-follow-set-and-ll(1)-parsing-table.html</link><guid isPermaLink="false">Compiler Construction/Lecture/06-Compiler-Solution For First set, Follow set and LL(1) Parsing table.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 29 Nov 2024 12:00:17 GMT</pubDate></item><item><title><![CDATA[04-Compiler Semantic Analysis]]></title><description><![CDATA[ 
 <br><br>
<br>Semantic rules
<br>Syntax-directed definition
<br>Attribute grammar
<br>Synthesized attribute
<br>Inherited attribute
<br>Syntax tree
<br>After syntax analysis, the next phase is semantic analysis and intermediate code generation.<br>
The two steps are all based on syntax-directed translation, which is procedure to compute the attribute of each grammar symbol in a syntax-tree.<br>To compute the attributes, we use attribute computation functions, also called semantic rules.<br>
Each grammar production rule has zero or multiple semantic rules to compute the attributes.<br>The attributes can record a lot of information that a compiler wants to know, for example the values of a math expression, the type of a variable, etc.<br><br>Two different ways to specify the semantic rules in syntax directed translation:<br>
<br>Translation schemes

<br>specify the order to compute the attributes.


<br>Syntax-directed definitions

<br>do not specify the order to compute the attributes.


<br>Syntax-directed definitions are more flexible and easier to understand. 	<br><br>In syntax-directed definitions, attributes are of two types:<br>
<br>Synthesized attributes: computed bottom-up in a parse tree.
<br>Inherited attributes: computed top-down and left-right or right-left in a parse tree.
<br>合成属性 自底向上计算属性<br>
继承属性 自顶向下，从左至右或从右至左计算属性<br><br>For a grammar production , a semantic rule to compute a synthesized attribute has the form<br>
<br>语义规则的形式 ：这里的  表示非终结符  的某个综合属性 ，它通过函数  来计算，而  的输入是产生式右侧各符号  的属性值 。<br>
<br>
The attribute of  (denoted by ) depends (only) on the attributes  of the grammar symbols .<br>
换句话说，在一棵语法树中，父节点的属性仅取决于其子节点的属性。

<br>
The symbol  means the LHS is defined by the RHS. 符号“:=”的意思是左边的值由右边定义，即  的值是通过右侧符号的属性值计算得来的。<br>
这说明 综合属性是自下而上的计算过程，因为必须先计算子节点的属性，才能计算父节点的属性。

<br>In other words, in a parse tree, the attribute  of  only depends on the attributes of the children of  in the tree. Thus, this is a bottom-up procedure.<br>综合属性遵循 自下而上（bottom-up） 的计算模式，这与语法分析中语法树的构建过程密切相关。例如，在语法分析中，叶子节点的值（通常是终结符的属性）被逐步向上传递，最终计算根节点的属性。<br><br>On the other hand, an inherited attribute is computed by  <br><br>
<br>
The attribute  of the grammar symbol  on the RHS of a production rule.

<br>
Different from synthesized attributes, which is a grammar symbol on the LHS.

<br>
 depends on: 

<br>all attributes of other symbols in the RHS,
<br>the attribute of the symbol on the LHS.


<br>
In a parse tree,  depends both on the attributes of the siblings and on the attribute of the parent.

<br>The order to compute the attributes of all siblings is unclear.<br><br>The computation of synthesized attributes is in fact a recursion.<br>For every grammar symbol ,<br>
<br>
If  is a nonterminal, then there must be a production rule .<br>
Following the recursion,<br>


<br>
If  is a token, the computation reaches the base case. The attribute  depends on the token itself.

<br>Thus, synthesized attributes for tokens are called intrinsic.<br>
Meaning that they are not computed by any semantic rule.<br><br>In both the synthesized and inherited cases, the attribute computation function  (strictly speaking) can be either<br>
<br>a function: only has outputs but no side effects; or
<br>a procedure: only has side effects but no outputs.
<br>If all semantic rules in syntax-directed definitions are functions, then the syntax-directed definitions and the corresponding grammar productions together form an attribute grammar.<br>Which is a special case of syntax-directed definition.<br>语法制导定义（Syntax-Directed Definitions, SDD）：<br>
<br>定义语法与语义规则之间的关系。
<br>语义规则可以是函数或过程。
<br>属性文法（Attribute Grammar, AG）： <br>
<br>如果语法制导定义中的所有语义规则都是函数（即没有副作用），则语法制导定义与文法规则结合就构成了属性文法。
<br>属性文法是一种语法制导定义的特殊情况，具有更强的确定性和可分析性。
<br><br>In semantic rules, if all the attributed are synthesized, then the syntax-directed definitions are called -attributed.<br>换句话说，𝑆-attributed定义是指向语法的定义，其所有属性都可以在解析树中自下而上地计算。<br>
<br>For implementation interests, if a compiler uses an (bottom-up) parser and all grammar symbols are -attributed, then the compiler does not need an individual phase to compute and check the attribute.
<br><br><br>Here is an example of -attributed definitions that compute and print the value of an arithmetic expression:<br><br><br>Note: <br>
<br>In rule 2, the symbol  is given an index to distinguish the LHS and the RHS in the sematic rule. Same as rule 4.
<br>In syntax rule 2, "+" is a token returned by the lexical analyzer. But in semantic rule 2, "+" is purely semantic, which is an arithmetic operator predefined in the compiler. Same as rule 4.
<br> in the above semantic rule is undefined, because it is given by the lexical analyzer.
<br><img alt="S-Attributed Definitions Example" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Q4M7ki.png" referrerpolicy="no-referrer"><br><br><br>Think about a sequence of variable definitions like int x,y,z.<br>The production rules can be easily defined as <br><br><br><br>And the compiler wants to check the type for each variable.<br>
Synthesized attributes do not work in this example.<br>
The attributes for the tokens derived by  depend on the attribute of the ones from .<br>
Thus, inherited attributes are used here.<br><br>Note that  is the token identifier for user defined names.<br>
<br>All ’s are stored in the symbol table for reference.
<br> like a pointer pointing to its location in the symbol table.
<br>The semantic rule 4 does two things: pass the attribute  from  to  , and call the procedure addtype to sign the attribute to , which is stored in the symbol table.<br> and  mean inherited attributes and  attributes respectively.<br>Thus, the above syntax-directed definitions are -attributed.<br><br><br>Syntax trees are tractive in implementations because<br>
they are much smaller than parse trees, and they only depends on the source program, but not the grammars.<br>Many compilers use syntax tree to represent the intermediate code instead of three-address code.<br>Given the following grammar and the corresponding -attribute definitions.<br>
<br> allocate a new leaf node for a  token and stores the corresponding value. 
<br> allocates a new leaf node for an  token and stores the corresponding location of the token in the symbol table.
<br>The attributes in the above cases are intrinsic.<br>
<br> create a new node for the syntax tree and stores in it the token for an operator (binary in this example), along with two pointers pointing to the two operands.
<br>We also use a synthesized  (Node PoinTeR) attribute to store pointers to the syntax tree nodes.<br><br><br>For -attributed definitions is simple.<br>
Remember synthesized attributes are computed in the bottom-up order. <br>We do not need an individual phase for semantic analysis.<br>The attributes are computed at the same time with parsing.<br>
<br>If the parser shifts a token from the input onto the stack, then the associated attribute is intrinsic. Thus, the attribute comes from the lexer or the corresponding entry in the symbol table.
<br>If the parser reduces the top of the stack, then the attribute is computed by the semantic rule.
<br><br>For -attributed, the attribute evaluation is non-trivial.<br>Remember that inherited attributes have to be computed top-down, left-right, or right-left.<br>Infeasible to be done at the same time as parsing.<br>Therefore, it needs another phase for -attributed.<br>Sometimes, the computation can be very chaotic when<br>
<br>some of the attributes are computed left-right, 
<br>some are right-left,
<br>some other can even be in a dynamic order (case dependent). 
<br>That’s why people usually try to avoid using inherited attributes.<br>But sometimes the inherited attributes are unavoidable.<br>Fortunately, there is a one case that the computation is tractable, when all attributes can be computed in a single depth-first traversal.<br>DFS(A){
	Evaluate the inherited attributes of A
	For each child $X_i$ of $A$ (from left to right) do {
		DFS($X_i$)
	}
	Evaluate the synthesized attributes of A	
}
<br>The depth-first traversal can also be presented in a parse tree.<br><img alt="depth-first traversal" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/RCUJgh.png" referrerpolicy="no-referrer"><br>If all synthesized and inherited attributes of the syntax-directed definitions can be computed in a single depth-first traversal, the definitions are called -attributed.<br>Note that all -attributed definitions are -attributed.<br><br>Semantic Analysis is the last phase in the front-end.<br>This phase commonly checks <br>
<br>is every variable and function defined before it is used?
<br>is every variable initialized before it is used?
<br>Are all expressions and statements in the correct type? 
<br>This course only focus on type checking using synthesized attributes.<br>Thus, this can be done by a simple bottom-up computation together with parsing.<br>To keep our life easier, we only stick with simple programming languages, like C.<br>
We won’t discuss advanced features like classes or polymorphism in OOPs.<br>
Type check these advanced features cannot be done by easily using attributes.<br><br>The goal of type checking is to compute a type for each expression and statement in a program.<br>
And check that all these types are coherent.<br>
<br>If some types are inconsistent then the type checker should inform the user about the error.
<br>If all types are correct, then the parse tree will be converted to the intermediate code.
<br>A type is a syntactic description of a set of possible runtime values.<br>
"Syntactic" means that a type is only a syntax, given by the source program.<br>At compile time, the type checker gives a meaning to the syntax, which is a set of values.<br>
The values that the corresponding expression is allowed to have when the program is running.<br>And thus, types do not exist at runtime.<br>
At runtime, the microprocessor only manipulates bits in the memory.<br>For examples, 110101011 is only a bit string. Microprocessors cannot know if string represents a float, an integer, a pointer, or other things.<br>Some programming languages, like Python or php, do not have types.<br>
Compilers/Interpreters for these languages do not to type checking at all.<br>
In these languages, each value has an extra tag at runtime.<br>
Which describes what kind of value the program is dealing with.<br><br>There are two kinds of types:<br>
<br>Basic types (or primitive types, or atomic types) 

<br>Simplest types which cannot be split further. 
<br>Only to those values directly supported by microprocessors
<br>Like, char, int, long, float, etc. 


<br>Constructed types

<br>Made of combinations of smaller types.
<br>Can be split into basic types.
<br>Like, array, structures, pointers, etc.


<br><br>A type expression is the internal representation of a type inside the compiler. <br>Compilers use type expressions to represent the types of statements in the source program.<br>The type checker computes a type expression for each expression in the source program.<br>
<br>Starts from the types specified by the programmer in the source code.
<br>Transforms them into type expressions.
<br>Combines the type expression in different ways to compute type expressions for other statements.
<br><br>Basic type expressions <br>
<br>directly represent the basic types 
<br>they are atomic 
<br>e.g. character, integer, boolean, etc. 
<br>type_error <br>
<br>a special basic type 
<br>representing an error detected during type checking
<br>void <br>
<br>a special basic type
<br>representing the absence of a type 
<br>for pieces of programs that we do not compute a value
<br><br><br>Let’s look at our first typing rules. <br>Given the following grammar for a small programming language. <br><br><br><br><br><br>A program in this language is a sequence of variable definitions followed by a single expression.<br>The type for a variable can be a basic type, like char or int.<br>
It can also be a constructed type, like pointer.]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/04-compiler-semantic-analysis.html</link><guid isPermaLink="false">Compiler Construction/Lecture/04-Compiler Semantic Analysis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 17 Dec 2024 12:56:31 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Q4M7ki.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Q4M7ki.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Compiler Syntax Analysis]]></title><description><![CDATA[ 
 <br><br>Syntax analysis is the second phase of a compiler.<br>
<br>Take a stream of tokens from the lexer as input.
<br>Analyze the structure of the tokens.
<br>Detect syntax errors.
<br>Out put a parsing tree to present the structure.
<br>Use context-free grammar (CFG) for analysis.<br><br>Why CFG?

<br>CFG is more powerful than regular expressions.
<br>CFGs are not the most powerful formal language (see Chomsky hierarchy),
<br>but CFGs are enough to describe the structures for most of the languages.

<br><br>Context free grammar
A Context free grammar is a , where

<br> is a finite set called Variables
<br> is a finite set, disjoint from , called the terminals,
<br> is a finite set of production rules, with each rule being a variable  and a string  of  variables and terminals in the form , and
<br> is the start variable.

<br>The production rules are same as the rules in the regular definition.<br>We can use the rules to derive the strings in a context-free language.<br>Terminals are the symbols which cannot produce more symbols. In a compiler, they are tokens.<br>Variables only exists when the production is unfinished.<br>
They are not symbols in the alphabet, neither tokens. Thus, they are not in the strings of the language.<br><br>For example,<br>
<br> Variables
<br> Terminals
<br>
<br>
<br>The production rules can also be "combined" and rewritten as<br>
<br><br>
The symbol "|" is same as it is in regular expressions, meaning that there are multiple options.
<br>The rules can be combined only if the LHS are the same.<br>
Sometimes the set of production rules is enough to define a grammar because<br>
<br>Variables can be obtained by looking at the LHS of each production rule,
<br>Terminals are the symbols on the RHS of the rules excluding the variables, and
<br>The start symbol is usually denoted by .
<br>Then, the above grammar can be<br><br><br>Derivations
Given a grammar , we can generate strings in the language  by using a derivation.<br>
A derivation (informally) is a procedure to apply the production rules from the start symbol to a string which only contains terminals.
<br>Each production is denoted by .<br>For example, given the grammar<br><br>left-most derivation, meaning that each iteration we replace the left most nonterminal.<br><br><br>Similarly, the right-most derivation replaces the right most nonterminal in each iteration.<br><br>Each sequence of nonterminals and tokens that we derive at each step is called a sentential form.<br>
<br>
The last sentential form only contains tokens and is called a sentence, which is a syntactically correct string in the programming language.

<br>
If  is a sentence and  is the start symbol, we can write<br>


<br>
 means derive in zero or more steps. It also means the RHS is derivable by the LHS.

<br>
From the above example,<br>


<br><br>The grammar  is ambiguous if there is a sentence in  from which it is possible to construct multiple parse trees (using any type of derivation).<br><br>Some properties

<br>Each derivation (left-most, right-most, or otherwise) corresponds to exactly one parse tree, whether the grammar is ambiguous or not.
<br>每个推导（无论是最左推导、最右推导或其他推导）对应唯一一个语法树，无论语法是否有歧义。
<br>Each parse tree corresponds to multiple derivations, whether the grammar is ambiguous or not.<br>
每个语法树可以对应多个推导，无论语法是否有歧义。
<br>Each parse tree corresponds to exactly one left-most derivation and exactly one right-most derivation, whether the grammar is ambiguous or not.<br>
每个语法树对应唯一的最左推导和最右推导。
<br>All derivations of the same sentence correspond to the same parse tree if the grammar is not ambiguous.<br>
如果语法没有歧义，同一语句的所有推导对应相同的语法树。
<br>Multiple derivations of the same sentence may not correspond to the same parse tree if the grammar is ambiguous.<br>
如果语法没有歧义，同一语句的所有推导对应相同的语法树。
<br>In general, deciding a grammar is ambiguous or not is undecidable, or uncomputable (like the halting problem).
<br>一般来说，判断一个语法是否有歧义是不可判定或不可计算的。

<br><br>A compiler cannot use an ambiguous grammar because each input program must be parsed to a unique parse tree to show the structure.<br>To remove ambiguity in a grammar, we can transform it by hand into an unambiguous grammar.<br>
This method is possible in theory but not widely used in practical because of the difficulty.<br>Most compilers use additional information to avoid ambiguity.<br><br><br><br>
<br>
To prove a language is not context-free, you need pumping lemma for context free languages.

<br>
To powerup the CFG/PDA, we can try again to add another stack to the machine, same as what we did to finite automata.

<br>
This upgrade is ultimate. A finite automata with two stacks is as powerful as a Turing machine, which is the most powerful computational model that human can implement right now.

<br><br>Intuitively, a PDA is a finite automata plus a stack with some modifications on the transitions to fit stack behaviors.<br>
<br>An NPDA is (formally) a 6-tuple , where

<br> is a finite set of states,
<br> is a finite set of the input alphabet,
<br> is a finite set of the stack alphabet,
<br> is the transition function,
<br> is the start state, and
<br> is the set of accept states.


<br>For example, the context-free language  has grammar<br><br><br><br>
<br>
Now, we want to implement a parser which

<br>takes a sequence of tokens as input;
<br>analyze the structure of the input;
<br>generates a parse tree; and
<br>indicates the syntax errors if there is any.


<br>
There are two types of parsers:

<br>top-down
<br>bottom-up.


<br>Top-down parsing tries to construct a sequence of tokens from the grammar which is same as the input.<br>
Bottom-up parsing tries to match the input tokens with grammar rules.<br><br>Top-down parsing is only for a subset of context-free grammars.<br>
<br>
Top-down parsing means that we generate the parse tree from top to bottom.

<br>
Remember that the internal vertices in a parse tree are the nonterminals (variables), while the leaves are the terminals (tokens).

<br>
The parse tree construction depends on the production rules in the grammar.

<br>
If we want to construct the parse tree from top to bottom, the production rules have to be nicely designed.

<br><br>The RHS of each production rule always starts from a different terminal. 	<br>
The parsing on the left branch always finishes before the right branch.<br>For example, the following grammar parses single variable declarations (if we do not care about types here).<br><br><br>Suppose the input is .<br>
The input tokens can be uniquely parsed into<br><br><br>However, our life cannot be that easy in most of cases.<br>
<br>The previous grammar does not allow multiple variable declarations in one statement.
<br>So, consider this grammar.<br><br><br>and try to parse <br>We have two different choices for the first derivation.<br><br>We cannot decide which production rule can be used for the derivation.<br>
The parser will pick a valid rule randomly.<br>If the guess is wrong, the parser cannot proceed parsing on some input tokens and it will backtrack.<br>Actually, you have seen backtracking in other places … Depth First Search.<br>We can express the parsing by using a DFS tree.<br>
<br>Each vertex in the tree is a valid sentential form (a stream of terminals and nonterminals). In this example, the stream to the RHS of  , given by a step number .
<br>Each edge is defined by applying a production rule.
<br>The minor difference here is that we don’t need to go back to the root (as DFS) when the parsing is finished.<br>Note that this DFS is different from the parse tree because a vertex presents a sentential form, which is equivalent to a (partial) parse tree.<br><img alt="DFS" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/yDXF14.png" referrerpolicy="no-referrer"><br>Each nonterminal  is implemented by an individual function.<br>
<br>Iterate on every rule starts with  on LHS.
<br>Remember to resume the tokens when derivation fails.
<br><img alt="Implementation" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/VM6ClD.png" referrerpolicy="no-referrer"><br>The parse tree generation can be done at Row 4 and Row 6, when the algorithm continues parsing.<br>You can also record the derivation rules and generate the parse tree when parsing is finished.<br>Resuming the parsed tokens at Row 9 can be implemented by a stack. When a token is matched with a terminal, push the token into the stack. When error occurs, we pop the tokens and put them back to the input.<br>The main routine starts from matching the start variable.<br>The parser reports syntax error when the main routine has tried all possible production rules. A syntax error can be<br>
<br>the parser receives a token which cannot be parsed;
<br>after processing all tokens, the parse is incomplete (some leaves are nonterminals); or
<br>when the parsing is complete (all leaves are terminals), there are some tokens remained in the input.
<br><br>
<br>The implementation (in code) can be very complicated/ugly because it needs to try many production rules, imaging many try-catch scopes nested with each other.
<br>It waste a lot of time on backtracking.
<br>It needs additional space to store the tokens for resuming purpose.
<br>In practical, nobody uses recursive descent parser.
<br><br><br>To avoid backtracking, we want to design a parser which can guess the next token from the input.<br>A correct guess can let the parser uniquely choose a production rule for parsing.<br>The idea is using a temporary space to store some tokens in advanced, like a buffer. Then, use the buffered tokens to make decisions.<br>This technique is very similar to space-time trade-off in the dynamic programming, what we have learned in algorithms.<br>The time complexity of recursions with backtracking can go up to .<br>But, if we can choose rules uniquely, the time complexity becomes .<br><br>Consider the grammar<br><br><br><br>which is equivalent to the above one and try to parse <br>
<br>
In the first iteration, the parser has to use the rule .

<br>
In the second iteration, there are two production rules "" or " "

<br>
This uncertainty can be easily solved by just “looking” at the next token from the lexer. This token is called lookahead token.

<br>
Normally, when lexer returns a token to parser, the token is consumed. But the lookahead token remains in the input.

<br>
The lookahead token in this example is " ". So, the parser knows the rule is .

<br>Because the parser reads tokens from left to right, does leftmost derivation, and looks at most one lookahead token(could not be a non-terminal); this parser/grammar is called  .<br>Some grammars may not be  .<br>
<br>For example, the one we have seen.
<br><br>
<br>
Looking one token ahead is insufficient for this grammar.

<br>
 ; and  ,  agree on the first token.

<br>
If the lookahead token is “”, we cannot decide which rule will be used. Thus, to parse this grammar without recursions, the parser needs to look 2 tokens ahead.

<br>This is  grammar.


<br>In general, we can design  grammar, for constant .<br>In practical, more lookahead tokens make no big differences but increase the implementation difficulties.<br>More importantly,   grammar is already powerful enough.<br><br>Left-factoring is a grammar transformation to convert a grammar to  .<br>Back to the example,<br><br>is not  because the first token of the two rules are the same. One lookahead token is not enough to the two productions.<br>We can solve this issue by introducing a new nonterminal .  提取相同的token<br>And convert the grammar to<br><br><br>The new grammar is , which is equivalent to<br><br><br>This conversion is called left-factoring.<br>More formally, for each nonterminal  which has multiple productions starting with the same prefix :<br><br>where  is a non-empty sequence of grammar symbols (terminals and nonterminals),  and  are (possibly empty) sequences of grammar symbols.<br>Create a new nonterminal  and transform the rules as<br><br><br><br>Some grammars are not good enough even after left factoring.<br>
<br>For example, again to parse the variable declaration
<br><br><br>
<br>No production rule has a same prefix on RHS. But lookahead tokens do not work.
<br>Suppose, the parser at some point needs to derive the nonterminal .<br>One may try: if the lookahead token is , the parser uses <br>
If the lookahead token is , it uses .<br>Be careful!   is a nonterminal but not a token. A lexer can never find such a lookahead token.<br>As a result,  ,  will never be used. Obviously, this is wrong.<br>The problem is cause by . The RHS starts from a nonterminal, which cannot be used to match with a lookahead token.<br>This type of grammar is called left recursive.<br>Note that this still left-most derivation. Left-most or right-most derivation is not related to grammar itself. It only relates to in which order we derive the nonterminals.<br>Formally, a left recursive grammar has a valid derivation  ,<br>
where  is a nonterminal and  is a string of grammar symbols.<br>In general, a left recursive production rule has the form<br><br>This production can be derive <br>The parsing stops at  , and can produce as many  as possible.<br>So, we can let  derives  first and followed by some .<br><br><br>Note that the production from   can be <br>
But this is not <br>Formally, for each nonterminal  which has one or more productions with RHSs starting with the same nonterminal :<br><br>where  and  are (possibly empty) sequences of grammar symbols.<br>Create a new nonterminal  and transform the grammar as<br><br><br><br>Given the following grammar, try to do left factoring and eliminate left recursions.<br><br><br><br>Ans:<br><br><br><br><br><br>In the last example, the grammar is left associative before conversion, but becomes right associative after conversion.<br>This totally changes the structure of the parse tree for some expressions, like<br>
“".<br>In fact, top-down parsing cannot solve this issue. We need to either use a bottom-up parser or be stuck into the implementation details.<br>There are also some unambiguous context-free grammar cannot be converted into   even after doing left factoring and left recursion elimination.<br>
<br>For example, the one we used to show ambiguity elimination
<br><br><br><br>After left factoring  becomes<br><br><br>Here are some last words about (recursive) predictive parsers.<br>
<br>A predictive parser can always correctly predict what it has to do next.
<br>Predictive parsers can always be implemented by a recursive parser without using lookahead tokens.
<br>Without further specification, we consider recursive parsers and predictive parsers are the same.
<br>One major disadvantages of (recursive) predictive parsers is that they are not very efficient in implementations. Each production rule is implemented as a function. The parser needs to make many function calls and returns, which consume a lot of resources.
<br>To avoid the function calls, we introduce nonrecursive predictive parsers.<br><br>To avoid recursions, we introduce non-recursive predictive parsers.<br>Intuitively, predictions are required when a nonterminal has multiple production rules.<br>The predictions are based on the next token. One token is enough because we are parsing  grammars.<br>However, this method has troubles when the RHS of some rules start with nonterminals.<br>
<br>For example
<br><br><br><br>
<br>We cannot decide whether we are going to use  or 𝐴 without looking at  and .
<br>Thus, we can "preprocess" the grammar to find the first tokens derived by each nonterminal before parsing the tokens.<br>The result of preprocessing is presented by a table, called parsing table.<br>
The rows are the nonterminals and the columns are terminals.<br>
The entry  is a production rule  meaning that if the input token is , we will apply the rule .<br>
The parser can parse the input tokens by checking the parsing table and using a stack.<br>This method is similar to the push-down automata but presented differently.<br>
<br>Initially, push $ and  into the stack ( on top of $ ) where  is the first nonterminal.<br>
Also insert $ to the end of the input stream of tokens.
<br><br>
<br>
In each iteration,

<br>Assume the next input token is ;
<br>Pop the first item from the stack denoted by ;
<br>If  is a terminal, then try to match it with the next input token ;
<br>If  is a nonterminal, then  in the parsing table is a production rule, denoted by . Then, push everything in  to stack from right to left.


<br>
When the stack pops $ and all input tokens are consumed, the parsing halts.

<br>
$ is an artificial token, means the end of the stream.

<br><br>Given the parsing table and try to parse<br><br><br><br>Some entries  in the parsing table are empty.<br>Meaning that id you try to parse the token  by a nonterminal , the parser returns an error message.<br>For example, assume the input tokens are , the parsing will be stuck somewhere in the middle.<br>The error handling will be discussed at the end.<br>Intuitively, a parsing table enumerates all possible tokens can be derived by a nonterminal.<br>When a parser reads a token from input, it has a unique production rule to apply.<br>Thus, we need to analyze the grammar and find the prefix (the first token) of all possible sentential form derived by each nonterminal.<br><br>By putting all the firstly produced tokens into a set, we defined  .<br>
<br>For example,
<br><br><br>
<br> because 
<br> because .
<br> because .
<br>  because .
<br>Formally,  for each grammar symbol is computed by<br><img alt="Find_First" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/KoP6hF.png" referrerpolicy="no-referrer"><br>Note: each  on line 3-5 can be either a terminal or a nonterminal.<br><br>When a terminal produces , things get complicated.<br>
<br>For example,
<br><br><br><br>
<br>The parser need to use the rule  to parse .
<br>However,  is not an input token which can be used for making predictions.<br>To handle this case, we also define , the next token possibly derived by some rules after .<br>
<br>
In this example,  because .

<br>
When the parser receives  as the next token, it knows  is the correct rule.

<br><img alt="Find_Follow" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BtR5ed.png" referrerpolicy="no-referrer"><br><br>Recall the parsing table  is , where  is the number of nonterminals and  is the number of terminals.<br>The entry  is a production rule that the parser will apply when the current nonterminal is 𝐴 and the next token is .<br>For each production  in the (left factored, non-left recursive) grammar, do the following:<br>
<br>For each token  in , add the grammar production  to 
<br>If , then for each token  in , add  to 
<br>All other entries in the table are left blank and correspond to a syntax error.
<br>Note that Rule 2 is applied when  is   because  is in .<br>To create a parsing table for a non-recursive parser,<br>
<br>eliminate any ambiguity from the grammar,
<br>eliminate left recursion from the grammar,
<br>left factor the grammar,
<br>compute the  sets for all tokens and nonterminals,
<br>compute the  sets for all nonterminals, and
<br>use those  and  sets to construct the parsing table.
<br><br><br>Back to the example in Top-Down Parsing. The following grammar is left-recursive.<br><br><br>Thus, top-down parsing needs to eliminate left recursion first.<br><br><br><br>However, the conversion changes the structure of some sentences, like .<br><br><br>Bottom-up parsing is more natural to human.<br>Think about how we analyze the arithmetic expressions.<br>
First, we calculate the subexpression in parentheses or the operator of the highest precedence.<br>
Then, the intermediate result will involve in the following calculations.<br>
The procedure is not from left to right.<br>Same thing happens when we analyze sentences in a program.<br>To the parse tree construction, the bottom-up procedure starts from isolated leaves, merges some of them to form a subtree, and eventually constructs the entire tree by placing a root.<br>The parse tree generated by bottom-up has no difference with by top-down, the internal vertices are nonterminals and leaves are tokens.<br>In fact, you have seen the similar procedure in Algorithm – the construction of Huffman code.<br>Because the bottom-up parsing is an inverse of top-down paring, the basic strategy is to use the LHS of some production rules to replace the RHS after reading some input tokens.<br>Thus, in the bottom-up parsing, there are two basic operations.<br>
<br>Shift

<br>The parser needs to read more tokens from the input.
<br>The tokens have already read are insufficient for any production rule.


<br>Reduce

<br>The parser has already read enough tokens.
<br>It can replace the RHS by the LHS of some production rules.


<br>The parser is called shift-reduce parser.<br>The parser also needs a stack to hold the tokens which are read but not consumed (reduced) yet.<br><br>
<br>Let’s look at a small example first. Given the following grammar and try to parse .
<br><br><br><br><br><br>The above example shows how bottom-up parsing works on a small instance.<br>However, to formally define a bottom-up parser, we need to generalize this procedure to all grammars. Many details will be discussed.<br>Even within this small example, careful reader may find the above procedure has some problems.<br>
In Step2, we read b. Then, we immediately reduce 𝑏 to A in Step3.<br>
But the thing is different in Step4. We read b again, but the parser waits until it reads another c and reduces Abc to A.<br>In general, similar to the predictive parser, there might be multiple options in bottom-up parsing. We need to clearly define which option is used under a certain condition.<br><br><br>There are many different ways to solve the above problem, like using recursions (Same as what we did in the predictive parsing, recursions simply enumerate all possible options.)<br>In this course, we only introduce  parsers (k lookahead tokens, LR parser for short) because<br>
<br> parsers can be used to almost all (but not all) context-free grammars.
<br>They are the most powerful non-backtracking shift-reduce parsers;
<br>they can be implemented very efficiently; and
<br>they are strictly more powerful than  grammars.
<br>When a reduction is performed, the  of the production rule is already on the stack, which is some additional information to help decision making.<br>The parser puts state symbols into the stack to speedup checking the content on the stack.<br>Imaging that you want to check what’s on the given stack. You need to pop everything out, see if the content is same as what you want, then push everything back. This is very inefficient.<br>Thus, we use a state symbol to indicate the current content on the stack.<br>This symbol is called state symbol because it is exactly same the states in a DFA.<br>We can consider each state in a DFA means that "To reach this state, the input must be some specific strings."<br>Also, each  is corresponds to an , like a pair.<br>To parse a  grammar, you are also given a parsing table.<br>
This parsing table again enumerates the actions the parser needs to take in all possible situations.<br>Each row in the table represents a state in PDA.<br>
The columns are split into two individual fields: ACTION and GOTO.<br>
<br>Each column in ACTION represents a terminal.
<br>Each column in GOTO represents a nonterminal.
<br>The value of the entry ACTION  shows the action taken by the parser when the current state is  and the input token is 
<br>The value are of two types:

<br> , meaning that the parser pushes the next input token into the stack and move to the state ;
<br>, meaning that the parser reduces some (non)terminals using the production rule .


<br>The value of the entry  is a state symbol,  for example, meaning that the parser goes to the state  after it reduces the stack uses a production rule , for some .
<br>LR Parsing Algorithm

<br>Put the special symbol $ at the end of the input.
<br>Put state 0 at the bottom of the stack.
<br>In each iteration, suppose the current configuration is , the current state is , and the next input token is .

<br>If  is "shift S", then the next configuration is .	
<br>If  is "reduce ", then the next configuration is , where  and . At the same time, the parser outputs .
<br>If   is "accept" and the current configuration is  , where  is the start symbol of the grammar, the parser accepts the input.
<br>For all other cases, like   is blank, the parser finds a syntax error and switch to error recovery.



<br><br><br><br><br>Previously, we have introduced the  parsing algorithm using the parsing table.<br>
Now, the question is how to construct a parsing table for a given context-free grammar.<br>In fact, there are many ways to construct a parsing table for different 𝐿𝑅 parsers:<br>, ,,  etc. (by increasing power).<br>For  with  are not used in practice because of the complexity.<br>We will focus on  (simple ), then move on to  ,   , and  .<br><br>To construct an  parsing table, we do three things<br>
<br>augment the context-free grammar;
<br>construct a DFA based on the computation of set of items;
<br>represent the DFA using the transition table;
<br>The construction in  is very similar to transforming an NFA to a DFA, except that it will be based on sets of items of the same behavior instead of sets of NFA states.<br><br>Given a grammar with a start symbol .<br><br><br>we construct the corresponding augmented grammar by artificially introducing a nonterminal  and a production rule.<br><br><br><br>This artificial production rule seems to be useless, but it guarantees that the parser accepts the input when it reduces using .<br><br>The  items are originally defined for   parser, but do the same thing in  .<br>An  item (item, for short)is simply a grammar production with a dot somewhere in its RHS.<br>
<br>For example, the production  can create 4 items 
<br><br><br><br><br>As a special case, the production  only generates <br>Each item represents a state that the parser is currently in.<br>
If the parser is in the state corresponding to , it means the parser has already push  into the stack and expects to match  from the input.<br>If  is a nonterminal and the grammar also has a production , then the parser also expects to see .<br>Thus, the parser state corresponds to  correspond .<br><br>Keep this intuition in mind, we find the closure of a set of items  recursively using the following algorithm.<br>
<br>
Every item in  is in .

<br>
If  is an item in  and if  is a production, where  and  are nonterminals and ,  , and  are any sequence of terminals and nonterminals, then add the item  to .

<br>
Repeat the above two steps until  does not change.

<br>
For example,

<br><br><br><br><br><br><br>Then, we define  function.<br>For all the items of the form  in a set of items , where  is an arbitrary grammar symbol (token or nonterminal), we define  as the closure of the set of items of the form .<br>
<br>
For example, given the set of items , to find :

<br>the item  does not create any new item by taking "+";
<br>the item  implies the new item 


<br>
Thus,

<br><br><br>更新时，当一个token 时non-terminal 时，继续传递<br><br><br>Next, we construct the DFA to decide the tokens in the stack.<br>
This method is called set-of-items construction algorithm.<br>
Each set of items  represents a state in the DFA.<br>
<br>Compute  and add the unmarked  to ,  where  is the start symbol of the augmented grammar and  is the set of DFA states.
<br>While there is an unmarked DFA state , do the following:

<br>For each grammar symbol , do the following:

<br>Compute the DFA state .
<br>If  and  then add the unmarked  to .
<br>If  then define .


<br>Mark  in .


<br><br>For example,<br><br><br>Initially, <br><br>Then, we consider the  function from  by taking each grammar symbol.<br>
<br>For :<br>

<br><br>Thus, <br>
<br>
<br>Similarly,<br>
<br>
<br>
<br>
<br>
<br>
DFA



<br>In the following,  will be omitted for symbol .<br>
Consider the  function for <br>
<br>
<br><br>
<br>
<br><br>
<br>
<br>
<br>
<br>
<br>
<br><br>
<br> and  are omitted because they are  for all .
DFA



<br><br>We continue computing the  function from new states:<br>
<br>


<br>


<br>


<br>


<br><br>
<br>


<br>


<br>


<br><br>
<br>


<br>


<br><br><br>In the last iteration<br>
<br>
<br><br>Here is the list of sets of items.<br><br><br>In the DFA we constructed above, we don’t need final states.<br>
Because we use states to show the content in the stack.<br>
And the stack is reduced if DFA reaches a final state.<br>
More interestingly, a state, together with the string to reach the state, form a pair in the configuration.<br><br><br>First, we construct the  part of a  parsing table.<br>
<br>If  (where  is a token) is an item in the set of items  and , then set  to "shift j".
<br>If  is an item in the set of items , then set  to "reduce " for all  in .
<br>If  (where S' is the start symbol of the augmented grammar) is an item in the set of items , then set  to accept.
<br>For item 2, we give a number to each grammar production  and put in the table "reduce" followed by the production's number.<br>Then, we construction the  part.<br>
<br>If , where  is a nonterminal, then set  to ""
<br><br>Here are the steps to create a parsing table for an  parser:<br>
<br>Eliminate any ambiguity from the grammar.

<br>Eliminate left recursion from the grammar.
<br>Left factor the grammar.


<br>Augment the grammar with a new start symbol. 
<br>Compute the sets of items for the grammar and build the corresponding DFA.
<br>Number the grammar productions.
<br>Compute the  sets for all tokens and nonterminals.
<br>Compute the  sets for all nonterminals.
<br>Use the sets of items, DFA, and the  sets to construct the parsing table.
<br><br><br><br>In fact,  cannot avoid  conflict entirely. <br>Consider the following ambiguous grammar.<br><br>Construct the set of items <br><br><br><br><br>In addition,  contains the token ‘ = ’.<br>Thus, the parsing table construction algorithm will put both =  and  into the entry 𝐴𝐶𝑇𝐼𝑂𝑁 [2 , ] , which is conflict.<br>Sometimes, when current state is , next token is "=", parser does not reduce <br><br><br><br>To eliminate the conflict, we analyze the above grammar.<br>Then, we can see reduce(R → L) is not supposed to be performed in all the cases when the next input token is in FOLLOW(R).<br>
<br>If L appears on the LHS of =, reduce(R → L) is only needed when there is a * before L.
<br>And if an L is on the RHS of =, this specific L can only be followed by $, but not =.
<br>For example, if the input is * id = id, the parsing is as follows:<br>
<br>· * id = id → shift
<br>* · id = id → shift
<br>* id · = id → shift
<br>* L · = id → reduce(L → id)
<br>* R · = id → reduce(R → L) (highlighted in red)
<br>L · = id → reduce(L → * R)
<br>L = · id → shift
<br>L = id · → shift
<br>L = L · → reduce(L → id)
<br>L = R · → reduce(L → R) (highlighted in red)
<br>S · → reduce(S → L = R)
<br><br>In addition to  items, an  item consists of an  item and followed by a token.<br>For example, .<br>This additional token does not do anything in most cases.<br>Only for the items in the type . The parser reduces the stack using the rule  only if the input token is .<br>Thus,  is a token in .<br>For other tokens in , the parser does not reduce.<br>Therefore, one state in the DFA for  items is possibly split into multiple states in the DFA for .<br>For the previous grammar, the state which has  is split into two states:<br>
<br>one has 
<br>and the other has 
<br>However, even the parsing table is upgraded in this way, some grammar can still create shift–reduce conflict.<br>Then, we can let each  item be followed by a pair – the combination of two tokens, which results in an  item using two lookahead tokens.<br>This upgrading process can continue and define an  grammar, like . But for this course,  is enough, and we stop here.<br><br>Instead of trying to solve more problems but creating chaos, sometimes we want to ignore some problems and keep our life easier.<br>
Thus, LALR(1) item is introduced.<br>Consider two  items:  and .<br>
<br>An  item merges these two items as .
<br>This undoes the splitting from  to .
<br>The merging reduces the number of states and loses very little power.
<br>Back to the example, $ is the LALR(1) item.]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/03-compiler-syntax-analysis.html</link><guid isPermaLink="false">Compiler Construction/Lecture/03-Compiler Syntax Analysis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 01 Dec 2024 08:51:57 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/yDXF14.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/yDXF14.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Compiler Lexical Analysis]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/02-compiler-lexical-analysis.html</link><guid isPermaLink="false">Compiler Construction/Lecture/02-Compiler Lexical Analysis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 14:37:35 GMT</pubDate></item><item><title><![CDATA[Compiler Introduction]]></title><description><![CDATA[ 
 <br><br>Compiler Definition
A compiler is a program that reads a program written in one programming language (the source language) and translates it into an equivalent program in another programming language (the target language).
<br><br><img alt="Compiler" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/b5MFWx.png" referrerpolicy="no-referrer"><br>
<br>Input: source program
<br>Source Code Analysis (front end)
<br>Intermediate Code Generator 中间代码发生器
<br>Synthesis (back end) Output: target program
<br><br>Analysis comes in three phases:<br>
<br>Lexical analysis
<br>Syntax analysis
<br>Semantic analysis
<br><img alt="Analysis" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/P0lnxo.png" referrerpolicy="no-referrer"><br><br>The program does lexical analysis is called lexer or scanner.<br>
<br>Reads the input program character by character as a stream.
<br>Splits the stream into lexemes, means “lexical elements”.
<br>Classifies each lexeme into a category of lexemes, called token.
<br>We use regular expressions to do lexical analysis.<br>Example<br>num=1+23;
<br><br><br>Here is a list of common tokens:<br>
<br>identifier: names the programmer chooses, like variable names; 变量名
<br>keywords: names already in the programming language, like if;关键字
<br>separator: punctuation characters and paired-delimiters, like {};
<br>operator: symbols operate on arguments and produce results, like +;
<br>literal: numeric, logical, textual, reference literals, like true, 123;字面量
<br>comment
<br><br>The program which does syntax analysis is called a parser.<br>
<br>Uses a grammar to analyze the form of tokens.
<br>And groups the tokens into a nested hierarchical structure.

<br>The structure is called a parse tree.


<br>The parse tree shows the structure of the program.
<br>Internal vertices are called non-terminals. Leaves are called terminals.
<br>Same as using English grammar to check if the nouns, verbs, adjectives, etc., in a sentence are in the correct order.<br>Sometimes the parse tree can be extremely large.<br>
<br>To simplify the structure, we can remove the internal vertices and let the operators be the parents.
<br>This is called syntax tree.
<br><br>
<br>It takes a parse tree as input.
<br>Checks the “meaning” of the program.
<br>Searching errors in the program.

<br>For example,
<br>undefined variables,
<br>uninitialized variables,
<br>multiple declaration,
<br>types of variables for operations and functions, etc.


<br>Semantic Analysis also does type conversions for many programming languages.<br>float x=3.5;
int y=x;
<br>the compiler adds a type conversion on  before signing the value to  .<br><br><br><br>]]></description><link>https://www.allenygy.vip/compiler-construction/lecture/01-compiler-introduction.html</link><guid isPermaLink="false">Compiler Construction/Lecture/01-Compiler Introduction.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 27 Nov 2024 01:32:13 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/b5MFWx.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/b5MFWx.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Compiler Project Language Features]]></title><description><![CDATA[ 
 Compiler Project Set Algebra Calculator Language Features]]></description><link>https://www.allenygy.vip/compiler-construction/project/compiler-project-language-features.html</link><guid isPermaLink="false">Compiler Construction/Project/Compiler-Project-Language-Features.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 02 Dec 2024 14:18:47 GMT</pubDate></item><item><title><![CDATA[DCN-Assignment1]]></title><description><![CDATA[ 
 <br><br><br>What is the OSI model?<br><br> There are 7 layers in the in OSI Model<br>
<br>Physical Layer

<br>It is concerned with transmitting raw bits over a communication channel.


<br>Data Link Layer

<br>It is to transform a raw transmission facility into a line that appears free of undetected transmission errors to the network layer.


<br>Network Layer

<br>It controls the operation of the subnet.


<br>Transport Layer

<br>It is to accept data from above, split it up into smaller units if need be, pass these to the network layer, and ensure that the pieces all arrive correctly at the other hand.


<br>Session Layer

<br>It allows users on different machines to establish sessions between them.


<br>Presentation Layer

<br>It is concerned with the syntax and semantics of the information transmitted.


<br>Application Layer

<br>It contains a variety of protocols that are commonly needed by users, such as HTTP, Email, etc.


<br><br>There are no Session Layer and Presentation Layer in TCP/IP models<br><br>A company’s computer network is the backbone of its business as it connects all its computers and related devices, allowing staff to work more efficiently across the organization. Suppose a commercial company has about 8000 staff. As a computer officer in the company, you are required to design a computer network for that company. Note that network design involves evaluating and understanding how all the elements of the network link together and how they can be made to run as efficiently as possible. Please answer the following questions.<br><br>
<br>Star topology will be used in this network
<br><br>
<br>Central Connection Point (Hub, Switch, or Router)
<br>Nodes (Computers, Printers, Servers, etc.)
<br>Cabling
<br><br>
<br>Cost: This includes the initial setup expenses as well as ongoing maintenance and operation costs. Effective design balances affordability with performance and scalability requirements.
<br>Stability: A stable network ensures consistent availability and reliability, minimizing downtime and supporting productivity. This involves choosing dependable hardware and implementing redundancy where necessary.
<br>Scalability: The network should be able to grow and adapt to increased demands without extensive redesigns. This means planning for future expansions in users, devices, and data volumes.
<br>Performance: Network performance affects data transmission speed and efficiency. A well-designed network minimizes latency and maximizes throughput to provide a smooth user experience.
<br>Complexity: While some complexity might be necessary for functionality, a simpler network is generally easier to manage and troubleshoot. The goal is to find the optimal balance that meets the network's objectives without unnecessary complication.
<br><br><img alt="Star" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Star.png" referrerpolicy="no-referrer"><br><br>The CRC method is used to transmit a bit-stream of  with the generator polynomial . <br><br><br>
Frame: <br>
Message after 3 zero bits are appended: <br>
Reminder:  <br><br>Show that this error is detected at the receiver’s end.<br><br>
Receive Frame: <br>
Receive Data: <br>
Calculate Reminder: <br>
<br>
 it can detect the error<br><br><br><img alt="1001 1000" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DCN/AS-1/Manchester.png" referrerpolicy="no-referrer"><br><br><br><br>  the Hamming code for the bit-stream is<br>1010 1010 1010 1010 0<br><br>Error correction, and error-detection, and retransmission can be used to tackle error bits in data communication. State two reasons why some applications use error correction instead of error detection and retransmission.<br>
<br>For some application that need Real-time or Low latency, Delays in processes such as waiting for retransmissions can degrade the quality of service and the user experience.
<br>In environments where communication channels are inherently noisy or prone to high error rates (e.g., deep space communications, underwater communications), it may not be practical or efficient to retransmit data every time an error is detected.
<br><br>The Internet of Things (IoT) is doing great in many fields and services. Numerous IoT applications can ease our commercial operations. Suppose you are a project leader in a software house, and your team is required to write a proposal about IoT innovation. Please suggest what kind of application you would propose and why.<br>Proposal:<br>
<br>A Smart Waste Management System. This system would leverage IoT technology to optimize waste collection and processing in urban areas.
<br>Why:<br>
<br>A Smart Waste Management System utilizing IoT technology offers a holistic solution to urban waste challenges by enhancing environmental sustainability, reducing operational costs through optimized routes and schedules.
]]></description><link>https://www.allenygy.vip/computer-network/assignment/dcn-as-1.html</link><guid isPermaLink="false">Computer Network/Assignment/DCN-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Star.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Star.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[USTC L1]]></title><description><![CDATA[ 
 <br><br><br>
<br>网络

<br>节点与边构成的大小形状无关的拓扑
<br>电话网，社交网络....


<br>计算机网络---具体构成角度

<br>联网计算机构成的系统
<br>节点

<br>主机节点，及其运行的应用程序 ⬛
<br>数据交换节点 ⭕️

<br>路由器、交换机等网络设备 既不是源也不是目标，转发数据
<br>根据层次不同可分

<br>中继器
<br>交换机 链路层
<br>路由器 网络层
<br>负载均衡设备 更高层






<br>边：通信链路

<br>接入网链路<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>：主机连接到互联网的链路
<br>骨干链路<a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>：路由器间的链路


<br>协议：

<br>对等层实体在通信过程当中的应该遵守的规则的集合，包括语法、语义和时序
<br>协议定义了两个或多个通信实体之间交换的报文格式和次序，以及在报文传输和/或接收/或其他事件方面所采取的动作

<br>PDU：协议数据单元


<br>按照层次不同

<br>物理层协议
<br>链路层协议

<br>网络层协议

<br>IP


<br>传输层协议

<br>TCP
<br>UDP


<br>应用层协议








<br>互联网：从具体组成角度
“网络的网络”

<br>数以亿计、互联的计算设备

<br>主机 = 端系统 end system host
<br>运行网络应用程序


<br>通信链路

<br>光纤、同轴电缆、无线电、卫星
<br>传输速率=带宽（bps）bit / second


<br>分组交换设备：转发分组（packets）

<br>路由器和交换机



<br>
<br>Internet 标准

<br>RFC: Request for comments
<br>IEFC: Internet Engineering Task Force


<br>互联网： 从服务角度

<br>使用通信设施进行通信的分布式应用

<br>Web、VoIP、email、分布式游戏....


<br>通信基础设施为 apps 提供编程接口（通信服务）

<br>将发送和接收数据的 apps 与互联网连接起来
<br>为 app 应用提供服务选择类似与邮政服务

<br>无连接 不可靠的服务
<br>面相连接的可靠服务





<br><br><br><br>
<br>
<br>Access<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Backbone<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/computer-network/lecture/ustc-l1.html</link><guid isPermaLink="false">Computer Network/Lecture/USTC L1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Data Link Layer]]></title><description><![CDATA[ 
 <br><br>The data link layer combines the following 3 functions to achieve the delivery of data from one node to another. 

<br>Framing 
<br>Flow control 
<br>Error control

<br><br>The data link layer needs to pack bits into frames, so that each frame is distinguishable from another.<br>
<img alt="Framing" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Framing.png" referrerpolicy="no-referrer"><br><br>Character Count 
Use a field in the header to specify the number of the characters in the frame.

<br><img alt="CharacterCount" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/CharacterCount.png" referrerpolicy="no-referrer"><br>
易出错

<br><br>Flag bytes with byte stuffing

<br>Each frame starts and ends with special bytes.
<br>If the flag byte’s bit pattern occurs in that data, a special escape byte (ESC) will be inserted just before the bit pattern.<br>
<img alt="Framing-FBBS" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Framing-FBBS.png" referrerpolicy="no-referrer">

<br><br>Starting and ending flags with bit stuffing 

<br>Each frame begins and ends with a special bit pattern, 01111110.
<br>If the sender encounters five consecutive 1s in the data, a 0 bit will be inserted just after 1s.
<br><img alt="Framing-FBBS" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Framing-SEFBS.png" referrerpolicy="no-referrer">

<br><br>Finally Goal
Check Each data frame is correct?

<br>Sender send data{k bits} and check bit{n-k}
<br>Receiver receive data and Check bit

<br>According data calculate check bit compare 2 check bit



<br><br><img alt="ErrorControl-sender" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/ErrorControl-sender-1.png" referrerpolicy="no-referrer"><br>
<img alt="ErrorControl-Receiver" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/ErrorControl-Receiver.png" referrerpolicy="no-referrer"><br><br>Parity Check
 Append a parity bit to the end of a block of data (e.g., there are d bits in a block).<br>
分为偶数校验和奇数校验

<br>Even parity scheme: the sender includes one additional bit and chooses its value such that the total number of 1s in the d+1 bits (the original information plus a parity bit) is even.
<br>Odd parity scheme: the parity bit value is chosen such that there is an odd number of 1s.<br>
<img alt="Parity Check" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/ParityCheck.png" referrerpolicy="no-referrer">

<br><br>Two-dimensional Parity Check 
Two-dimensional parity is a generalization of single-bit ParityCheck.png 

<br>In this scheme, the data is formed as a rectangular matrix j bits wide and i bits high.
<br>A parity value is computed for each row and column. It has following properties:

<br>A single bit error can be detected.
<br>If there is a single error, we can use the column and row indices to identify the bit that was corrupted and correct that error.



<br> 2D Parity Check 
让我们通过一个具体的例子来说明二维奇偶校验（2D Parity Check）是如何工作的。假设我们有一个由二进制数据组成的3x3矩阵，我们想要通过添加行校验位和列校验位，以及一个额外的校验位来确保数据的完整性。

假设初始数据矩阵如下：
1 0 1
0 1 0
1 1 0

我们的目标是添加校验位，使得每行和每列的总和都是偶数（这里我们选择偶校验作为例子）。

首先，对于每一行，我们计算一个校验位，使得包括校验位在内的每一行的总位数（即1的数量）是偶数。

<br>第一行：1 0 1 有两个1，已经是偶数，所以校验位是0。
<br>第二行：0 1 0 有一个1，不是偶数，所以校验位是1。
<br>第三行：1 1 0 有两个1，已经是偶数，所以校验位是0。

添加行校验位后的矩阵：
1 0 1 | 0
0 1 0 | 1
1 1 0 | 0


然后，对于每一列（包括新添加的行校验位），我们也计算一个校验位，以确保每列的1的数量是偶数。

<br>第一列：1 0 1 有两个1，校验位是0。
<br>第二列：0 1 1 有两个1，校验位是0。
<br>第三列：1 0 0 有一个1，校验位是1。
<br>行校验列：0 1 0 有一个1，校验位是1。

添加列校验位后的矩阵：
1 0 1 | 0
0 1 0 | 1
1 1 0 | 0
------+---
0 0 1 | 1


最终，我们得到一个包含行校验位和列校验位的矩阵，还有一个右下角的额外校验位，用于整个矩阵的校验：
1 0 1 | 0
0 1 0 | 1
1 1 0 | 0
------+---
0 0 1 | 1

在这个例子中，每行和每列的1的数量都是偶数，包括最后添加的校验位行和校验位列。这样，在数据传输或存储过程中，如果任何单一位发生变化（变成错误），接收方可以通过检查行和列的校验位来发现并确定错误的具体位置。如果只有一位出错，那么错误可以被精确地定位和纠正。然而，如果有多个错误，这种方法可能只能检测到错误存在，而无法精确定位或纠正所有错误。
<br><br>Cyclic Redundancy Check (CRC)
CRC treats bit streams as representations of polynomials with coefficients of 0 and 1 only.

<br>Modulo-2 arithmetic is used for computing CRC.
<br>In modulo-2, there are no carriers for addition or borrows for subtraction.
<br>When the polynomial code method is employed, the sender and receiver must agree upon a generator polynomial, G(x) in advance.

<br>CRC Process
 To compute the checksum for some frame with m bits, corresponding to the polynomial  , we have following steps: 	

<br>Let  be the degree of . 
<br>Append zero bits to the low-order end of the frame so it now contains bits and corresponds to the polynomial 
<br>Divide  into  using modulo-2 division.
<br>Subtract the remainder from  using modulo-2 subtraction.
<br>Append the remainder to the end of  to form the transmitted data frame.

To detect the error, the receiver divides the checksummed frame by . If there is a remainder, there has been a transmission error.
<br>CRC Example
<img alt="CRC" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/CRC.png" referrerpolicy="no-referrer">
<br><br>
<br>The use of error-correcting codes is often referred to as forward error correction (FEC).
<br>Basic concepts<br>
-  Each block of data is mapped into an n-bit block, which consists of m data bits and r redundant. This n-bit block is referred to as an n-bit codeword.<br>
- Hamming distance is defined as the number of bit positions in which two code-words differ. For example (Hamming distance = 3):
Hamming Distance



<br>When transmission, each m-bits sequence is mapped into n-bit codeword. For example,  is mapped to  in the codeword table.<br><br>When the receiver receives an invalid codeword (detects an error), then the valid codeword that is closest to it (minimum hamming distance) is selected.<br><br>Hamming code---二进制的妙用
Design to correct single bit errors.<br>
Consists of two kinds of bits: check-bit and data-bit.<br>
The check-bits are in the positions which are power of 2 (i.e., 1, 2, 4, 8, etc);<br>
The data-bits are in the rest position  (3, 5, 6, 7, 9, etc)<br>
Each check bit forces the parity of some collection of bits, including itself, to be even (or odd). 每个检验位对一组特定 位数进行包括其本身 进行奇偶检验
<br><br>The number of check bits can be obtained by:<br><br>c is the number of check bit<br>
d is the number of data bit <br><br><br>]]></description><link>https://www.allenygy.vip/computer-network/lecture/03-data-link-layer.html</link><guid isPermaLink="false">Computer Network/Lecture/03-Data Link Layer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Framing.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Framing.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Standardized Networks]]></title><description><![CDATA[ 
 <br><br><br>Hub is a repeater with some additional network management functionality (such as performance or accounting management)<br>Work on <a data-tooltip-position="top" aria-label="02-Physical Layer" data-href="02-Physical Layer" href="https://www.allenygy.vip/02-Physical Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Physical Layer</a><a data-tooltip-position="top" aria-label="02-Physical Layer" data-href="02-Physical Layer" href="https://www.allenygy.vip/computer-network/lecture/02-physical-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Physical Layer</a> <br>
<br>定义：Hub是一种网络设备，用于将多个以太网设备连接在一起，使它们能够作为一个网络段进行通信。
<br>工作层次：物理层（OSI模型第1层）。
<br>工作原理：Hub通过广播的方式将收到的数据包发送到所有连接的端口，无论数据包的目的地是哪个设备。
<br>优点：价格低廉，易于安装和使用。
<br>缺点：效率低，所有端口共享带宽，容易发生碰撞（Collision），不适合大规模网络。
<br><br>Bridge: bridge operates on Ethernet frames and thus a layer-2 device. It does the following two functions:<br>
<br>Filtering: determine whether a frame should be forwarded to some interface or should just be dropped.
<br>Forwarding: determine the interfaces to which a frame should be directed.
<br>Work on <a data-tooltip-position="top" aria-label="03-Data Link Layer" data-href="03-Data Link Layer" href="https://www.allenygy.vip/03-Data Link Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Data Link Layer</a><a data-tooltip-position="top" aria-label="03-Data Link Layer" data-href="03-Data Link Layer" href="https://www.allenygy.vip/computer-network/lecture/03-data-link-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Data Link Layer</a> <br>
<br>定义：Bridge是一种网络设备，用于连接两个或多个网络段，主要用于分割网络冲突域。
<br>工作层次：数据链路层（OSI模型第2层）。
<br>工作原理：Bridge根据MAC地址表转发数据帧，只将数据帧发送到目的地所在的网络段，减少不必要的流量。
<br>优点：减少网络冲突，提升网络效率。
<br>缺点：管理复杂度高，不支持多播和广播控制。
<br><br>
<br>Router: router is a store-and-forward packet switch that forward packets using network-layer addresses (layer-3).
<br>Although a bridge is also a store- and-forward packet switch, it forwards packets using LAN addresses.
<br>As a network administrator, how to choose between bridge and router?
<br>Work on <a data-tooltip-position="top" aria-label="04-Network Layer" data-href="04-Network Layer" href="https://www.allenygy.vip/04-Network Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Network Layer</a><a data-tooltip-position="top" aria-label="04-Network Layer" data-href="04-Network Layer" href="https://www.allenygy.vip/computer-network/lecture/04-network-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Network Layer</a> <br>
<br>定义：Router是一种网络设备，用于连接不同的网络，能够根据IP地址进行数据包转发。
<br>工作层次：网络层（OSI模型第3层）。
<br>工作原理：Router根据路由表和IP地址选择最佳路径，将数据包转发到目的地网络。
<br>优点：能够连接不同类型的网络，支持复杂的路由选择协议，提供广域网（WAN）连接。
<br>缺点：成本较高，配置和管理相对复杂。
<br><br>
<br>
Switch: switch is in essence a high-performance multi-interface bridge. The difference between a bridge and switch:

<br>
Bridges usually two or four interfaces, whereas switches have dozens of interfaces (e.g., 24 ports).

<br>
Switches are usually used to connect individual computers, and operate in a full-duplex mode.

<br>Work on <a data-tooltip-position="top" aria-label="03-Data Link Layer" data-href="03-Data Link Layer" href="https://www.allenygy.vip/03-Data Link Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Data Link Layer</a><a data-tooltip-position="top" aria-label="03-Data Link Layer" data-href="03-Data Link Layer" href="https://www.allenygy.vip/computer-network/lecture/03-data-link-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Data Link Layer</a> <br>
<br>定义：Switch是一种网络设备，用于连接多个设备，能够根据MAC地址进行数据帧的交换和转发。
<br>工作层次：数据链路层（OSI模型第2层），一些高端交换机也支持网络层功能（第3层交换）。
<br>工作原理：Switch通过MAC地址表将数据帧准确地转发到目标设备所在的端口，提高网络效率和安全性。
<br>优点：高效的数据帧转发，减少碰撞，支持全双工通信，适合大规模网络。
<br>缺点：比Hub稍贵，配置和管理比Hub复杂。
<br><br>
<br>
工作层次：

<br>Hub：物理层（第1层）。
<br>Bridge：数据链路层（第2层）。
<br>Router：网络层（第3层）。
<br>Switch：数据链路层（第2层），部分支持网络层（第3层）。


<br>
数据转发方式：

<br>Hub：广播方式，将数据包发送到所有端口。
<br>Bridge：基于MAC地址，将数据帧发送到目标网络段。
<br>Router：基于IP地址，选择最佳路径将数据包转发到目标网络。
<br>Switch：基于MAC地址，精准转发数据帧到目标设备。


<br>
使用场景：

<br>Hub：小型网络，简单的设备互连。
<br>Bridge：分割冲突域，提高网络效率。
<br>Router：连接不同网络，实现跨网络通信。
<br>Switch：大规模网络，高效数据传输和交换。


<br><br>
<br>Hub：适用于小型、简单网络，通过广播转发数据。
<br>Bridge：用于连接和分割网络段，减少冲突。
<br>Router：连接不同网络，基于IP地址转发数据包。
<br>Switch：高效的数据帧交换设备，适合大规模网络。
]]></description><link>https://www.allenygy.vip/computer-network/lecture/07-standardized-networks.html</link><guid isPermaLink="false">Computer Network/Lecture/07-Standardized Networks.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[DCN Review]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Protocol 
<br>Sender
<br>Message
<br>Medium 
<br>Receiver
<br><br>
<br>Simplex
<br>Half-duplex 
<br>Full-duplex
<br><br><br>
<br>Assumption: noise free in the channel
<br>Formula: 

<br>B = Bit Rate (bit/sec)
<br>F = Channel Bandwidth in Hertz 
<br>M = Number of levels in a signal (two for binary)


<br><br>
<br>In reality, the signal may be corrupted by electrical noise. 
<br>Formula: 

<br>B = Actual Bit Rate (bit/sec) 
<br>F = Channel Bandwidth in Hertz 
<br>S = Signal Power in watts 
<br>N = Noise Power in watts


<br><br>
<br>
The signal-to-noise ratio is often given in decibels.

<br>
<br>


<br>
Assume that  = 36 and the channel bandwidth is 2 MHz.

<br>
<br>


<br><br>
<br>
Physical Layer: 

<br>It is concerned with transmitting raw bits over a communication channel. 
<br>This layer deals with the issues including mechanical, electrical, timing interfaces, and the physical transmission medium.


<br>
Data Link Layer: 

<br>It is to transform a raw transmission facility into a line that appears free of undetected transmission errors to the network layer.


<br>
Network Layer:

<br>It controls the operation of the subnet. 
<br>It routes packets from source to destination. 

<br>The routing algorithm can be static or dynamic.




<br>
Transport Layer: 

<br>It is to accept data from upper layers.
<br>Split it up into smaller units if need be, pass these to the network layer, 
<br>Ensure that the pieces all arrive correctly at the other hand.


<br>
Session Layer: 

<br>It allows users on different machines to establish sessions between them.


<br>
Presentation Layer:

<br>It is concerned with the syntax and semantics of the information transmitted.


<br>
Application Layer: 

<br>It contains a variety of protocols that are commonly needed by users.

<br>Such as HTTP, Email, etc.




<br><br>Physical Layer: <br>
<br>It is concerned with transmitting raw bits over a communication channel. 
<br>This layer deals with the issues including mechanical, electrical, timing interfaces, and the physical transmission medium.
<br><br>Guided media, which are those that provide a conduit from one device to another.<br>
<br>Guide wired

<br>Twisted-pair cable
<br>Coaxial cable 
<br>Fiber-optic


<br><br>
<br>Mode

<br>Multimode

<br>Step index
<br>Graded index 


<br>Single mode


<br><br>Unguided media transport electromagnetic waves without using a physical conductor.<br>
<br>Unguided wireless

<br>Free space


<br>Two common signal encoding methods:<br>
<br>Frequency hopping spread spectrum (e.g., Bluetooth)
<br>Direct sequence spread spectrum (e.g.,CDMA mobile network)
<br>The Electromagnetic Spectrum<br>
<br>Propagation Methods 

<br>Ground Propagation 
<br>Sky Propagation 
<br>Line-of-sight Propagation 


<br><br>Data Link Layer: <br>
<br>It is to transform a raw transmission facility into a line that appears free of undetected transmission errors to the network layer.
<br><br>
<br>Character Count
<br>Flag bytes with byte stuffing
<br>Starting and ending flags with bit stuffing
<br><br><br>
<br>Parity Check
<br>Two-dimensional Parity Check
<br>Cyclic Redundancy Check (CRC)
<br><br><br>
<br>Hamming Distance
<br>Hamming Code
<br><br>
<br>
Error detection: 

<br>To send additional information, so incorrect data can be detected and rejected.


<br>
Error correction: 

<br>To send additional information, so incorrect data can be corrected and accepted.

<br>Error correction is the additional ability to reconstruct the original data.




<br><br>
<br>Stop-and-Wait Protocols
<br>Sliding Window Protocols
<br><br>
<br>Channelization: 

<br>Frequency-Division Multiple Access (FDMA)
<br>Time-Division Multiple Access (TDMA)
<br>Code-Division Multiple Access (CDMA)


<br>Random Access Protocols:

<br>Aloha 
<br>Carrier Sense Multiple Access
<br>CSMA with Collision Detection 
<br>CSMA with Collision Avoidance


<br>Controlled-Access Protocols: Collision-Free Protocol

<br>Reservation
<br>Polling
<br>Token passing 


<br><br>Network Layer:<br>
<br>It controls the operation of the subnet. 
<br>It routes packets from source to destination. 

<br>The routing algorithm can be static or dynamic.


<br><br>
<br>IP is a protocol which governs the data format of packets sent over the Internet.
<br>The main functions provided by IP are addressing and network routing.
<br><br><br><br>
<br>Version 
<br>Type of service
<br>Total length
<br>Time to live
<br>Source address, destination address
<br><br>
<br>Version 
<br>Traffic class
<br>Flow label 
<br>Payload length 
<br>Next header 
<br>Hop limit
<br><br><br>
<br>Dual stack
<br>Tunneling 
<br>Header translation
<br><br>Network routing selects a path over an internetwork to transmit one or more packets from the source to the destination.<br><br><br><br><br><br>Transport Control Protocol (TCP)<br>
<br>Source port and destination port: to identify the local end points of the connections.
<br>Sequence number and acknowledgement number
<br>TCP header length: to tell how many 32-bit words are contained in the header
<br>Six 1-bit flags
<br>Window size: to tell how many bytes may be sent starting at the byte acknowledged.
<br>Checksum
<br>Options: to provide a way to extend the header
<br><br>User Datagram Protocol (UDP)<br>
<br>Connectionless protocol
<br>Provide a way for applications to send encapsulated IP datagrams and send them without having to establish a connection.
<br>8-byte header 
<br>UDP Datagram Header
<br><br><br>
<br>API stands for application programming interface. 
<br>Socket API is specifically designed for the network programming interface.
<br><br>Socket is an abstraction through which an application may send and receive data. <br>
<br>A socket is uniquely identified together by 

<br>Internet address
<br>End-to-end protocol (e.g. TCP or UDP)
<br>Port number


<br><br>
<br>Stream socket is designed for TCP, which provides reliable byte stream service. 
<br>Datagram socket is specifically designed for UDP, which provides best-effort datagram service.
<br><br><br>
<br>WSAStartup
<br>socket 
<br>connect 
<br>(send, recv) (recusive) 
<br>closesocket
<br>WSACleanup
<br><br>
<br>WSAStartup
<br>socket 
<br>bind
<br>listen
<br>accept
<br>(recv, send) (recursive)
<br>closesocket (pair up with accept)
<br>WASCleanup.
<br><br><br>int socket_desc=socket(AF_INET,SOCK_STREAM,0); 
if (socket_desc==-1) perror("Create socket");
<br><br>struct sockaddr_in address;
/* type of socket created in socket() */ 
address.sin_family = AF_INET; 
address.sin_addr.s_addr = INADDR_ANY; /* 7000 is the port to use for connections */ 
address.sin_port = htons(7000); /* bind the socket to the port specified above */ 
bind(socket_desc,(struct sockaddr *)&amp;address,sizeof(address));
<br><br>listen(socket_desc,3);
<br><br>int addrlen; 
struct sockaddr_in address;
addrlen = sizeof(struct sockaddr_in);
new_socket = accept(socket_desc, (struct sockaddr *)&amp;address, &amp;addrlen); if (new_socket&lt;0) perror("Accept connection");
<br><br>char *message="This is a message to send\n\r"; 
send(socket_desc, message, strlen(message), 0);
<br><br>int bufsize=1024; /* a 1K buffer */
char *buffer=malloc(bufsize);
recv(socket_desc,buffer,bufsize,0);
<br><br>closesocket(msg_sock); 
// close(socket_desc);
WSACleanup();
<br><br>#include &lt;process.h&gt;
for(int i = 0; i &lt; 100; i++){ 
	_beginthread(accept_conn, 0, NULL ); 
}//for loop 
_endthread();
// create a function to accept a connection 
void accept_conn(void *dummy) { 
// doing something here 
}
<br><br><br>
<br>Standard Ethernet 10 Mbps
<br>Fast Ethernet  100 Mbps
<br>Gigabit Ethernet  1 Gbps
<br>Ten Gigabit  Ethernet 10 Gbps
<br><br>Data transmission time <br><br>
<br>  = Cable length （线缆长度）
<br> = Propagation speed （传播速度）
<br> = Bit rate （比特率，单位为比特/秒）
<br> = Minimum data size （最小数据大小）
<br><br><br>Hub is a repeater with some additional network management functionality (such as performance or accounting management)<br>Work on <a data-tooltip-position="top" aria-label="02-Physical Layer" data-href="02-Physical Layer" href="https://www.allenygy.vip/02-Physical Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Physical Layer</a><a data-tooltip-position="top" aria-label="02-Physical Layer" data-href="02-Physical Layer" href="https://www.allenygy.vip/computer-network/lecture/02-physical-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Physical Layer</a> <br>
<br>定义：Hub是一种网络设备，用于将多个以太网设备连接在一起，使它们能够作为一个网络段进行通信。
<br>工作层次：物理层（OSI模型第1层）。
<br>工作原理：Hub通过广播的方式将收到的数据包发送到所有连接的端口，无论数据包的目的地是哪个设备。
<br>优点：价格低廉，易于安装和使用。
<br>缺点：效率低，所有端口共享带宽，容易发生碰撞（Collision），不适合大规模网络。
<br><br>Bridge: bridge operates on Ethernet frames and thus a layer-2 device. It does the following two functions:<br>
<br>Filtering: determine whether a frame should be forwarded to some interface or should just be dropped.
<br>Forwarding: determine the interfaces to which a frame should be directed.
<br>Work on <a data-tooltip-position="top" aria-label="03-Data Link Layer" data-href="03-Data Link Layer" href="https://www.allenygy.vip/03-Data Link Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Data Link Layer</a><a data-tooltip-position="top" aria-label="03-Data Link Layer" data-href="03-Data Link Layer" href="https://www.allenygy.vip/computer-network/lecture/03-data-link-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Data Link Layer</a> <br>
<br>定义：Bridge是一种网络设备，用于连接两个或多个网络段，主要用于分割网络冲突域。
<br>工作层次：数据链路层（OSI模型第2层）。
<br>工作原理：Bridge根据MAC地址表转发数据帧，只将数据帧发送到目的地所在的网络段，减少不必要的流量。
<br>优点：减少网络冲突，提升网络效率。
<br>缺点：管理复杂度高，不支持多播和广播控制。
<br><br>
<br>Router: router is a store-and-forward packet switch that forward packets using network-layer addresses (layer-3).
<br>Although a bridge is also a store- and-forward packet switch, it forwards packets using LAN addresses.
<br>As a network administrator, how to choose between bridge and router?
<br>Work on <a data-tooltip-position="top" aria-label="04-Network Layer" data-href="04-Network Layer" href="https://www.allenygy.vip/04-Network Layer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Network Layer</a><a data-tooltip-position="top" aria-label="04-Network Layer" data-href="04-Network Layer" href="https://www.allenygy.vip/computer-network/lecture/04-network-layer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Network Layer</a> <br>
<br>定义：Router是一种网络设备，用于连接不同的网络，能够根据IP地址进行数据包转发。
<br>工作层次：网络层（OSI模型第3层）。
<br>工作原理：Router根据路由表和IP地址选择最佳路径，将数据包转发到目的地网络。
<br>优点：能够连接不同类型的网络，支持复杂的路由选择协议，提供广域网（WAN）连接。
<br>缺点：成本较高，配置和管理相对复杂。
<br><br>
<br>
Switch: switch is in essence a high-performance multi-interface bridge. The difference between a bridge and switch:

<br>
Bridges usually two or four interfaces, whereas switches have dozens of interfaces (e.g., 24 ports).

<br>
Switches are usually used to connect individual computers, and operate in a full-duplex mode.

]]></description><link>https://www.allenygy.vip/computer-network/lecture/dcn-review.html</link><guid isPermaLink="false">Computer Network/Lecture/DCN Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Application Layer]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/computer-network/lecture/06-application-layer.html</link><guid isPermaLink="false">Computer Network/Lecture/06-Application Layer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Transport Layer]]></title><description><![CDATA[ 
 <br><br><br>
<br>Operation of TCP 

<br>When a sender transmits a segment, it also starts a timer.
<br>When the segment arrives at the destination, the receiving TCP entity sends back a segment (with data if any) bearing an acknowledgement number equal to the next sequence number it expects to receive.
<br>If the sender’s timer goes off before the acknowledgement is received, the sender transmits the segment again.


<br>3-way handshaking 

<br><img alt="3-way handshaking" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/3way.png" referrerpolicy="no-referrer">
<br>To release a connection, either party can send a TCP segment with the FIN bit set.


<br><br><img alt="TCP-Segments" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/TCP-Segments.png" referrerpolicy="no-referrer"><br><br>The main focus of congestion control and quality of service is data traffic.<br>
<br>In congestion control we try to avoid traffic congestion.
<br>In quality of service, we try to create an appropriate environment for the traffic.
<br>So, before talking about congestion control and quality of service, we discuss the data traffic itself.
<br><img alt="Traffic Profile" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/TrafficProfile.png" referrerpolicy="no-referrer"><br><br>In general, we can divide congestion control mechanisms into two broad categories: open-loop congestion control (prevention) and closed-loop congestion control (removal).<br>
<br>Open-loop

<br>Retransmission Policy
<br>Window Policy 
<br>Acknowledgement Policy 
<br>Discard Policy 
<br>Admission Policy 


<br>Closed-loop 

<br>Back Pressure
<br>Choke Packet
<br>Implicit signaling
<br>Explicit signaling


<br>Metrics Used to Monitor a Subnet for Congestion<br>
<br>Percentage of all packets discarded for lack of buffer space;
<br>Average of queue lengths;
<br>Number of packets that time out and are retransmitted;
<br>Average packet delay;
<br>Standard deviation of packet delay, etc.
]]></description><link>https://www.allenygy.vip/computer-network/lecture/05-transport-layer.html</link><guid isPermaLink="false">Computer Network/Lecture/05-Transport Layer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/3way.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/3way.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Network Layer]]></title><description><![CDATA[ 
 <br><br><br> An IP datagram consists of a header part and a text part. 
<br><br><img alt="Ipv4" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/IPv4.png" referrerpolicy="no-referrer"><br>
<br>IPv4 Header

<br>The header has a 20-byte fixed part and a variable length optional part.

<br>Fixed Part include:

<br>Version 
<br>IHL
<br>TOS
<br>Total Length 
<br>Identification 
<br>DF and MF
<br>Fragment offset
<br>TTL 
<br>Protocol 
<br>Header checksum
<br>Source address and destination address






<br><br><br>Version: to keep track of which version of the protocol the datagram belongs to. 4 bit<br><br>IHL: to provide the length of the header, in 32-bit words. 4 bit<br>
- When the value is 5, which applies no options are present.<br><br>TOS: (Type of service) to distinguish between different classes of services. 8 bit<br>
- Three-bit precedence field and three flags, D, T, and R {Delay, Throughput and Reliability}.  3 bit<br>
- 三位优先字段（precedence field）和三标志位（D、T、R）用于指示数据报的服务质量需求和优先级。这些字段通常位于IPv4首部的服务类型（Type of Service, TOS）字段中。<br><br>这个表格展示了服务类型字段的不同比特组合及其对应的描述。每种组合表示数据报在传输过程中不同的服务质量要求，例如默认服务、最小化成本、最大化可靠性、最大化吞吐量和最小化延迟。<br><br>Total Length: to provide the length of the datagram (including header and data). 16 bit<br><br>
<br>Identification: to identify each datagram. 16 bit
<br><br>
<br>DF and MF: don’t fragment, and more fragments. 3 bit
<br>Fragment offset: To tell where in the current datagram this fragment belongs. 13 bit
<br><br>
<br>Time to live: a counter used to limit packet lifetimes. 8 bit
<br><br>
<br>Protocol: to tell which protocol process to give it to (e.g., TCP or UDP). 8 bit
<br>Header checksum: to detect errors in the datagram. 16 bit
<br><br><img alt="Address Classification" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Addressclassification.png" referrerpolicy="no-referrer"><br>
<br>
Source address and destination address 32 bit

<br>
Unique: no two machines on the Internet have the same IP address.

<br>32-bit long.<br><br><br>总结：IPv4首部的基本部分是20字节（160位），但如果包含选项字段，长度可能会超过20字节。选项字段的长度是可变的，最大可达40字节，因此整个IPv4首部的最大长度是60字节。<br><br><img alt="IPv6" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/IPv6.png" referrerpolicy="no-referrer"><br><br>
<br>Three transition strategies

<br>Dual stack
<br>Tunneling
<br>Header translation 


<br><br><img alt="Dual Stack" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Transition-DualStack.png" referrerpolicy="no-referrer"><br><br><img alt="Tunneling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Transition-Tunneling.png" referrerpolicy="no-referrer"><br><br><img alt="Header Translation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Translation-Header.png" referrerpolicy="no-referrer"><br><br><br>
<br>The network layer supervises the handling of the packets by the underlying physical networks.
<br>We define this handling as the delivery of a packet.
<br>Direct and indirect delivery
<br><img alt="Delivery" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Delivery.png" referrerpolicy="no-referrer"><br><br>
<br>Forwarding means to place the packet in its route to its destination. 转发
<br>Forwarding requires a host or a router to have a routing table.
<br>When a host has a packet to send or when a router has received a packet to be forwarded, it looks at this table to find the route to the final destination.
<br><br>Shortest Path Routing <br>
<br>To study the routing algorithms, a graph is commonly used to represent a subnet.
<br>Each node of the graph represents a router and each arc of the graph represents a communication line.
<br>The path length can be measured in terms of the number of hops, the geographic distance, etc.
<br><br>Dijkstra Algorithm

<br>Set the value of the initial node to zero and set all other nodes to infinity.
<br>Mark all nodes unvisited. Set the initial node as starting point.
<br>For the current node, consider all of its unvisited neighbors and calculate their tentative distances.
<br>Mark the current node as visited and remove it from the unvisited set. A visited node will never be checked again.
<br>If the destination node has been marked visited or if the smallest tentative distance among the nodes in the unvisited set is infinity, then stop. The algorithm has finished.
<br>Set the unvisited node marked with the smallest tentative distance as the next current node and go back to step 3.

<br><br>
<br>Every incoming packet is sent out on every outgoing line except the one it arrived on. 
<br>To solve the vast numbers of duplicate packets, a hop counter is introduced.
<br>The hop counter is contained in the header of each packet.
<br>It decremented at each hop. The packet will be discarded when the counter reached zero.
<br><br>
<br>It is a dynamic routing algorithm.
<br>Each router maintains a table giving the best known distance to each destination and which line to use to get there.
<br>These tables are updated by exchanging information with their neighbors.
<br>An entry of routing tables contains two parts: the preferred outgoing line to be used for the destination, and an estimate of the distance to that destination.
<br>]]></description><link>https://www.allenygy.vip/computer-network/lecture/04-network-layer.html</link><guid isPermaLink="false">Computer Network/Lecture/04-Network Layer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/IPv4.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/IPv4.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Physical Layer]]></title><description><![CDATA[ 
 <br><br><br>The French mathematician J.B. Fourier proved that any reasonably behaved period function, g(t) with period T can be constructed as the sum of a number of sines and cosines:<br><br>Where  is the fundamental frequency,  and  are the sine and cosine amplitudes of the  harmonics, and c is a constant.<br><br><img alt="Transmission Medium and Physical Layer" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/TMPH.png" referrerpolicy="no-referrer"><br><br>Transmission media 

<br>Guide wired

<br>Twisted-pair cable
<br>Coaxial cable 
<br>Fiber-optic


<br>Unguided wireless

<br>Free space



<br><img alt="Classes of Transmission Media" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/TypeofTransmissionMedia.png" referrerpolicy="no-referrer"><br><br>
<br>Guided media, which are those that provide a conduit from one device to another.
<br>Include twisted-pair cable, coaxial cable, and fiberoptic cable.
<br><br>
<br>A twisted pair consists of two insulated copper wires, typically about 1 mm think.
<br><img alt="Twisted-pair" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Twisted-Pair.png" referrerpolicy="no-referrer">
]]></description><link>https://www.allenygy.vip/computer-network/lecture/02-physical-layer.html</link><guid isPermaLink="false">Computer Network/Lecture/02-Physical Layer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/TMPH.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/TMPH.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Basic Concepts]]></title><description><![CDATA[ 
 <br><br>
<br>The term telecommunication means communication at a distance.
<br>The word data refers to information presented in whatever form is agreed upon by the parties creating and using the data. 
<br>Data communications are the exchange of data between two devices via some form of transmission medium such as a wire cable.
<br><br><img alt="Data Communication Components" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/protocol.png" referrerpolicy="no-referrer"><br>
<br>Five components of data communication

<br>Sender
<br>Medium
<br>Receiver
<br>Protocol
<br>Message


<br>Network Protocol

<br>Communication node is machine
<br>All communication activity in the Internet is controlled by protocols
<br>Protocols define formats, order of sending and receiving of messages, and the actions that the reception initiates

<br><br>
<br>Simplex 单向 单向同时只有一路信号

<br>TV


<br>Half-duplex 半双工 双向同时只有一路信号

<br>Interphone


<br>Full-duplex 全双向 双向同时有两路信号<br>
<img alt="DataFlow" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Dataflow.png" referrerpolicy="no-referrer">
<br><br><br>
<br>Analog signals are continuous electrical signals that vary in time. 模拟信号
<br>Digital signals are non-continuous. 数字信号<br>
- They consist of pulses or digits with discrete levels or values.<br>
- The value of each pulse is constant.<br>
- Digital signals usually have two amplitude levels such as 1 or 0, HIGH or LOW.<br>
<img alt="Signal" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Signals.png" referrerpolicy="no-referrer">
<br><br>
<br>Less sensitive to the interferences (e.g., noise, magnetic field) 对扰动不敏感
<br>Easier for further processing (e.g., error correction, storage, etc.) 方便后续处理<br>
<img alt="NoiseSignal" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/NoiseSignal.png" referrerpolicy="no-referrer">
<br><br><br>
<br>Non-return to zero digital encoding scheme 不归零数字编码方案

<br>‘1’ bit is sent as a high value and ‘0’ bit is sent as a low value.
<br>The receiver may lose synchronization because the data may contain long runs of consecutive bits with the same value [no changes in voltage].


<br>Manchester digital encoding scheme  曼彻斯特数字编码方案

<br>The digital data is represented as: ‘0’ bit by a voltage from low to high; ‘1’ bit by a voltage from high to low.
<br>Manchester encoding is a synchronous clock encoding technique to encode the clock and data of a synchronous bit stream.
<br>数字数据表示为:“0”位由电压由低到高; “1”位由电压由高到低。 曼切斯特编码是一种同步时钟编码技术，用于对同步比特流的时钟和数据进行编码。
<br><img alt="Manchester" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/EncodingScheme/Manchester.png" referrerpolicy="no-referrer">
<br>Efficiency : 50%


<br>4B/5B digital encoding scheme 

<br>It produces a signal for a group of bits each time, rather than outputting a signal for each individual bit.
<br>Each time, a 4-bit input data (16 different bit patterns) is encoded as a 5-bit data (32 different bit patterns).
<br>By carefully choosing the 5-bit patterns which always contain two '1's even if the input data is all '0's, the clock synchronizations can be achieved.
<br>它每次为一组位产生信号，而不是为每个单独的位输出信号。 每次，4位输入数据(16种不同的位模式)被编码为5位数据(32种不同的位模式)。 通过仔细选择总是包含两个'1'的5位模式，即使输入数据都是'0'，也可以实现时钟同步。
<br>Efficiency : 80%


<br><br>
<br>AM - Amplitude Modulation  调幅

<br>Carrier载波
<br>On/Off 机械的表达

<br>Presence of the carrier:1
<br>Absence (or no carrier) :0


<br><img alt="AM" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/AM.png" referrerpolicy="no-referrer">


<br>FM - Frequency Modulation 调频

<br>A 0 is represented by the original carrier frequency
<br>A 1 by a much higher frequency (the cycles are spaced closer together).
<br><img alt="FM" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/FM.png" referrerpolicy="no-referrer">
<br>Frequency Modulation modifies the frequency of the carrier to represent the 1s or 0s. 操纵频率表示0/1


<br>PM - Phase Modulation 调相

<br>载波相位在每次出现1位时切换，但在0位时不受影响。 
<br>这些位被定时以符合特定的载波周期数。
<br><img alt="PM" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/PM.png" referrerpolicy="no-referrer">


<br><br>
<br>Pulse Coding Modulation 脉冲编码调制

<br>Sampling 采样

<br>是模拟-数字转换过程中的第一步，涉及按照特定的时间间隔（采样率）测量连续模拟信号的瞬时值。采样率必须至少是信号中最高频率的两倍，这是根据奈奎斯特定理来决定的，以确保信号可以被无失真地重建。


<br>Quantitation  量化

<br>采样后的步骤是量化，这个过程涉及将每个采样点的模拟值映射到最接近的数字级别。量化步骤确定了信号的数字表示可以取的不同值的数量。在图像中，量化被表示为一系列的水平线，每一条线对应一个量化级别。每个采样值被"量化"到最接近的这些水平线上。在量化过程中，采样值是用比特数表示的，而这个比特数（8位到24位）决定了可能的量化级别的数量，也就是量化精度。




<br><img alt="Convert Signal" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/ConvertSignals.png" referrerpolicy="no-referrer">
<br>PCM samples the signal from 8 to 192 thousand times per second; each sample is represented by 8 to 24 bits.
<br><br>
<br>
<br>Assumption: noise free in the channel
<br>Formula:  

<br>B = Bit Rate (bit/sec)
<br>F = Channel Bandwidth in Hertz
<br>M = Number of levels in a signal (two for binary)


<br>
<br>In reality, the signal may be corrupted by electrical noise.
<br>Formula: 

<br>B = Actual Bit Rate (bit/sec)
<br>F = Channel Bandwidth in Hertz
<br>S = Signal Power in watts 
<br>N = Noise Power in watts


<br><br>

<br><br>
<br>A network is a set of devices(often referred to as nodes) connected by communication links.
<br>A node can be a computer, printer, or any other device capable of sending and/or receiving data generated by other nodes on the network.
<br><br>
<br>The computer networks can classified as the following 4 categories

<br>Local loop
<br>LANs
<br>MANs
<br>WANs


<br><br>
<br>It refers to the “last mile” of analog phone line that goes from the Exchange Centre to your house. 指从交换中心到您家的 "最后一英里 "模拟电话线。

<br>Voice lines 话频线路
<br>Modem (56 kbps) 调制解调器
<br>ISDN (Integrated Services Digital Network): 2 x 64 kbps digital lines 
<br>ADSL (Asymmetrical Digital Subscriber Line): up to 8 Mbps
<br>Cable Modems (up to 30 Mbps)  电缆调制解调器
<br>Network cable


<br><br>
<br>LANs are privately-owned networks within a single building or campus of up to a few kilometers in size.
<br>LANs run at speeds of 10Mbps to 10Gbps, have low delay, and make very few errors.
<br>The topologies 拓扑 of LANs are various: Bus, Ring, Star, etc.
<br><br>
<br>MANs are networks that connect LANs together within a city. 

<br>Example: Cable television network 


<br><br>
<br>WANs connect LANs together between cities.
<br>A WAN spans a large geographical area, often a country or continent.
<br><br>
<br>Many networks exists in the world with different hardware and software;  
<br>To communicate, it is better to connect different networks together.
<br>A collection of interconnected networks is called an internetwork or internet (which is used in a generic sense, in contrast to the worldwide Internet).
<br><br><br>Networks are recognized as a stack of layers or levels, each one built upon the one below it.<br>
<br>Each layer offers certain services to the higher layers, shielding those layers from the details of how the offered services are implemented.
<br>Between each pair of adjacent layers is an interface. The interface defines which primitives operations and services the lower layer makes available to the upper one.每一对相邻层之间都有一个接口。接口定义了下层向上层提供哪些基本操作和服务。
<br><br>Management of complex systems:<br>
<br>Modularization simplifies 

<br>Design 
<br>Maintenance
<br>Updating of a system


<br>Explicit structure allows

<br>Identification of the individual parts
<br>Relations among them


<br>Clear structure: layering

<br>Layered reference model
<br>Goal: different implementation of one layer fit with all implementations of other layers


<br><br>
<br>Addressing: Every layer needs a mechanism for identifying senders and receivers.
<br>Rules of data transfer: simplex or duplex, no. of channels
<br>Error control: Both sender and receiver must agree on some sort of error-detecting and error-correcting codes.
<br>Sequence: The protocol must provide solution for receiver to reassemble the messages properly.
<br>Flow control: The protocol should provide a mechanism for sender and receiver to regulate the transmission rate.
<br>Routing: A mechanism must be provided to choose a route when there are multiple paths between source and destination.
<br><br><br>
<br>To establish a connection, the sender, receiver and the subnet conduct a negotiation about parameters to be used, such as maximum message size, quality of service required, etc.

<br>The Quality of Service can be characterized in terms of Data Loss Rate, Delay Jitter, Data Rate, etc.
<br>Application Example: File transfer


<br><br>
<br>Each message carries the full destination address, and each one is routed through the system independent of all the others. 
<br>No negotiation is needed between sender and receiver.
<br><br>A service is formally specified by a set of primitives (operations) available to a user process to access the service. These primitives tell the service to perform some action or report on an action taken by a peer entity.<br><br><br>
<br>Network Topology refers to the layout of a network.
<br>Different configurations of network cable, computers and devices form different topologies.<br>
<img alt="Topology" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology.png" referrerpolicy="no-referrer">
<br><br>
<br>Bus topology: All devices are connected to a common backbone.
<br><img alt="Bus" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Bus.png" referrerpolicy="no-referrer">
<br>Advantages 

<br>Easy to connect a computer or peripheral to a linear bus. 方便连接
<br>Requires less cable length than a star topology. 耗材少


<br>Disadvantages

<br>Entire network shuts down if there is a break in the main cable. 不可靠
<br>Terminators are required at both ends of the backbone cable.
<br>Difficult to identify the problem if the entire network shuts down. o Not meant to be used as a stand-alone solution in a large building.


<br><br>
<br>Ring topology

<br>In a ring network, every device has exactly two neighbors for communication purposes 管理复杂


<br>All messages travel through a ring in the same direction (either "clockwise" or "counterclockwise")
<br><img alt="Ring" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Ring.png" referrerpolicy="no-referrer">
<br><br>
<br>Star topology

<br>A star topology is designed with each node (file server, workstations, and peripherals) connected directly to a central network hub or concentrator.
<br>Data on a star network passes through the hub or concentrator before continuing to its destination.
<br>The hub or concentrator manages and controls all functions of the network.
<br>It also acts as a repeater for the data flow.


<br>Advantages Current-connections

<br>Easy to install and wire.
<br>No disruptions to the network then connecting or removing devices.
<br>Easy to detect faults and to remove parts.


<br>Disadvantages

<br>Requires more cable length than a linear topology.
<br>If the hub or concentrator fails, nodes attached are disabled.
<br>More expensive than linear bus topologies because of the cost of the concentrators.


<br><img alt="Star" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Star.png" referrerpolicy="no-referrer">
<br><br>
<br>A tree topology combines characteristics of star and linear bus topologies.
<br>Tree topologies allow for the expansion of an existing network. 

<br>For example, enabling schools to configure a network for labs.


<br>Advantages

<br>Point-to-point wiring for individual segments.
<br>Supported by several hardware and software venders. 


<br>Disadvantages

<br>Overall length of each segment is limited by the type of cabling used.
<br>If the backbone line breaks, the entire segment goes down.
<br>More difficult to configure and wire than other topologies. 


<br><img alt="Tree" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Tree.png" referrerpolicy="no-referrer">
<br><br>
<br>A Mesh topology consists of a network where every device on the network is physically connected to every other device on the network.
<br>Advantages

<br>It provides a great deal of performance and reliability. 


<br>Disadvantages

<br>However the complexity and difficulty of creating one increases geometrically as the number of nodes on the network increases.


<br><img alt="Mesh" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/Topology/Mesh.png" referrerpolicy="no-referrer">
<br><br>
<br>Open System Interconnection (OSI) Model has seven layers.

<br>Physical Layer
<br>Data Link Layer
<br>Network Layer
<br>Transport Layer
<br>Session Layer
<br>Presentation Layer
<br>Application Layer


<br><img alt="OSI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/OSI.png" referrerpolicy="no-referrer">
<br><img alt="OSI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/OSI_Exchange.png" referrerpolicy="no-referrer">
]]></description><link>https://www.allenygy.vip/computer-network/lecture/01-basic-concepts.html</link><guid isPermaLink="false">Computer Network/Lecture/01-Basic Concepts.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/protocol.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Network/protocol.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Data-Communication-Network]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/computer-network/computer-network-overview.html</link><guid isPermaLink="false">Computer Network/Computer Network Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Assignment-1]]></title><description><![CDATA[ 
 <br><br><br>
<br>
Define what a Turing machine is.

<br>Turing machine is the abstract model of all computers.
<br>A Turing machine consists of a tape divided into cells, a moving read/write head, a state register storing the state of the Turing machine.


<br>
What is a UTM?

<br>UTM is a Turing machine that could simulate all other Turing machines.


<br><br>
<br>Describe the seven levels of transformations of a computer system.
<br>
<br>The seven levels of transformations in a computer system represent the progression from identifying a problem to the physical realization in a device. It starts with understanding the problem and formulating an algorithm, then translating it into a program. The program is mapped to an instruction set architecture, which is further implemented in a microarchitecture. At a lower level, the microarchitecture is translated into circuits, and finally, these circuits are realized in physical devices.
 

<br><br>
<br>
Explain the fetch-decode-execute cycle of the von Neumann Architecture.

<br>the control unit fetch the next instruction from the memory
<br>the instruction is decoded into a language that the ALU understands
<br>data operands are fetched from the memory into the registers inside CPU
<br>the ALU executes the instruction and places the result into the registers or memory


<br><br>
<br>Given 8 bits, represent the numbers +53 and -109 into binary using the following approach: 1) Signed-magnitude; 2) One’s complement; 3) Two’s complement.
<br>
<br>+53:

<br>Signed-magnitude: 00110101
<br>One’s complement: 00110101
<br>Two’s complement: 00110101


<br>-109

<br>Signed-magnitude: 11101101
<br>One’s complement: 10010010
<br>Two’s complement: 10010011


<br><br>
<br>Convert -57.625 into binary using 32 bits floating number representation. Show your steps.
<br>
<br>-57.625 in binary using 32 bits floating number representation:

<br>1100 0010 0110 0110 1000 0000 0000 0000


<br><br>
<br>Consider two hexadecimal numbers: x434F4D50 and x55544552. What values do they represent for each of the five data types shown?
<br><br><br><br><br>
<br>The following Turing Machine is supposed to count in base 2. Fill in the missing rules.
<br>{
   "name": "Binary Increment",
   "max_state": 25,
   "symbols": "xyzabc01$@",
   "tape": "100",
   "position": 2,
   "rules": [
      [ 0, "#", "1", 1, "R" ],
      [ 0, "0", "1", 1, "R" ],
      [ 0, "1", "0", 0, "L" ],
      [ 1, "#", "#", 0, "L" ],
      [ 1, "0", "0", 1, "R" ],
      [ 1, "1", "1", 1, "R" ]
   ]
}
<br><br>
<br>
Show that 

<br>

<br>Using truth table; (5 points)


<br><br>
<br>

<br>Using Boolean identities; (5 points)


<br><br>
<br>
<br><br>a. Write the Boolean expression in sum-of-products form.<br>
<br>
<br>b. Write the Boolean expression in product-of-sums form.<br>
<br>
<br>c. Simplify the sum-of-products form using Boolean identities;<br>
<br>
<br>
<br>
<br>d. Draw the logical circuit diagram for the simplified Boolean expression;<br><img alt="CO-logic" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/logic.png" referrerpolicy="no-referrer"><br><br>
<br>Simplify the above Boolean expression using K-MAP.
<br><br>
<br>
]]></description><link>https://www.allenygy.vip/computer-organization/assignment/assignment-1/co-assignment-1.html</link><guid isPermaLink="false">Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/logic.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/logic.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CO-Assignment-2]]></title><description><![CDATA[ 
 <br><br><br>For the following transistor-level circuit, fill in the truth table. What is the logical expression of Z in terms of A and B? (12 points)<br><br><br><br>Fibonacci numbers are the sequence of numbers Fn defined by the linear recurrence equation  where . It is conventional to define . Given a word size of four bits, design a circuit to detect if a given input binary number  is a Fibonacci number or not. Show the following steps: (20 points)<br>
<br>Truth Table
<br><br>
<br>Sum of Product
<br><br>
<br>Simplify the logical expression using logical  identities
<br><br><br><br>
<br>Simplify the logical expression using K-MAP.
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/K-MAP.png" referrerpolicy="no-referrer"><br><br>
<br>Draw the logical circuit and verify it.
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Fibonacci.png" referrerpolicy="no-referrer"><br><br>Draw a combinational logic circuit of an eight-input multiplexor where the inputs (D7, D6, D5, D4, D3, D2, D1, D0) are each one-bit variables. Label the values of inputs and outputs of each gate of the circuit, assuming the eight inputs have the values (1, 0, 0, 1, 1, 1, 0, 0) respectively, and assuming D1 is selected. [Note: Assume you have an 3-8 decoder to use as a black box and do not draw the decoder circuit which is part of the multiplexor.] (8 points)<br><img alt="502y6j" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/502y6j.png" referrerpolicy="no-referrer"><br><br>Investigate the operation of the following circuit. Assume the initial state is 0000. Trace the outputs (the Qs) as the clock ticks and determine the purpose of the circuit. You must show your trace to complete your answer. (10 points)<br>
<img alt="JRr3J4" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/JRr3J4.png" referrerpolicy="no-referrer"><br>
<br>
Equation

<br>
Clock equation

<br>


<br>
Dirve equation

<br>
<br>
<br>
<br>


<br>
State equation

<br>Feature equation: 
<br>
<br>
<br>
<br>




<br>
State

<br><br> <br>
<br>
<img alt="StateDiagram" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/StateDiagram.png" referrerpolicy="no-referrer"><br>
This state diagram describes the function of a four-bit binary right-cycling shifter.<br><br>Complete the truth table for the following sequential circuit: (8 points)<br><img alt="4f6xhs" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/4f6xhs.png" referrerpolicy="no-referrer"><br><br><br>Design a finite state machine (FSM) for a counter that counts through the 3-bit prime numbers downwards and loop: . Assume the counter starts with initial prime set to 111 as its first 3 bit prime number. (12 points)<br>
<br>You need to provide the state transition diagram. Assume that the state is stored in three D Flip Flops. Hint: The set of all 3-bit prime numbers includes 2, 3, 5 and 7. (4 points)
<br>
<br>State Diagram
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/StateDiagram-2.png" referrerpolicy="no-referrer"><br>
<br>Design the sequential circuit for the counter. The circuit is driven by the clock. The output is a 7 segment LED display. The various digits from 0 through 9 can be displayed using a 7-segment display as shown in the following figure.
<br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><img alt="zGv0xW" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/zGv0xW.jpg" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/computer-organization/assignment/assignment-2/co-assignment-2.html</link><guid isPermaLink="false">Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/K-MAP.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/K-MAP.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CO-Assignment-3]]></title><description><![CDATA[ 
 <br><br><br>Suppose a 32-bit instruction takes the following format: (10 points)<br>If there are 225 opcodes and 120 general purpose registers<br>
<br>What is the minimum number of bits required to represent the OPCODE? Explain why. (2 points)
<br>minimun number of bits to represent the opcode: 8 bits<br>
There are 225 opcodes  <br>
so we need at least 8 bits to represent the opcode<br>
<br>What is the minimum number of bits required to represent the Destination Register (DR)? Explain why. (2 points)
<br>minimun number of bits to represent the : 7 bits<br>
There are 120 General purpose registers <br>
so we need at least 7 bits to represent the opcode<br>
<br>What is maximum number of UNUSED bits in the instruction encoding? Explain why. (2 points)
<br>opcode: 8 bits<br>
DR: 7 bits<br>
SR1: 7 bits<br>
SR2: 7 bits<br>Unused bits: 32-8-21= 3 bits<br>
<br>Suppose the address space contains  memory locations and the addressability is 32 bits. How many bytes can the memory store in total?
<br>There are  bytes the memory can store in total.<br>
<br>
<br>How many address lines are necessary? How many data lines are necessary?
<br>32 address lines are necessary<br>
32 data lines are necessary<br><br>The LC-3 does not have an opcode for the logical function OR. That is, there is no instruction in the LC-3 ISA that performs the OR operation. However, we can write a sequence of instructions to implement the OR operation. The four instruction sequence below performs the OR of the contents of register 1 and register 2 and puts the result in register 3. Fill in the two missing instructions so that the four instruction sequence will do the job.<br>(1): 1001 100 001 111111<br>
(2): 1001 101 010 111111   <br>
(3): 0101 110 100 000 101<br>
(4): 1001 111 110 111111   <br><br>Address X3010:  1110 0110 0011 1111<br>
Address X3011:  0110 1000 1100 0000<br>
Address X3012:  0110 1101 0000 0000<br>
<br>Explain what each instruction does. (6 points)
<br>In the first instruction: <br>
It firstly extend the 9 bits offset  into 16 bits then add PC<br>
x3F+x3011=x3050<br>
 &lt;- x3050<br>In the second instruction: <br>
It firstly extend the 6 bits offset  into 16 bits, then add the content store in register , finally according the result of add operation find the address in memory then the content to the register .<br>In the third instruction: <br>
It firstly extend the 6 bits offset  into 16 bits, then add the content store in register , finally according the result of add operation find the address in memory then the content to the register .<br>
<br>What is that value to be loaded into R6? (2 points)
<br><br>
<br>
<br>
 X<br>
 X<br>
 X<br>
<br>We could replace the three-instruction sequence with a single instruction. What is it?  Write the instruction in binary. (2 points)
<br><br>
<br><br>Suppose the following LC-3 program is loaded into memory starting at location x30FF: (12 points)<br>
<br>Explain what each instruction does. (10 points)
<br>x30FF 1110 001 00000001<br>
<br>
x3100 0110 010 001 000010<br>
<br>
x3101 1111 0000 00100101<br>
<br>
x3102 0001 010 001 000001<br>
<br>
x3103 0001 010 010 000010<br>
<br>X30FF: Load x3100 to <br>
X3100: M[R1+2]-&gt;R2 Load the value of M[R1+2](x1441) to R2<br>
X3101: TRAP x25<br>
X3102: R1+R1-&gt;R2 R2=x6200<br>
X3103: R2+R2-&gt;R2 R2=xC400<br>
<br>If the program is executed, what is the value in R2 at the end of execution? (2 points)
<br>=<br><br>
<br>Construct the symbol table for the following LC-3 assembly language program. (10 points)
<br>AGAIN x3002<br>
ASCII x3009<br>
NEG x300A<br>
DSR x300B<br>
DDR x300C<br>
<br>Assemble it into binary machine code line by line by hand. (30 points)
<br>.ORIG 0011 0000 0000 0000<br>
x3000 0010 0000 0000 1000<br>
x3001 0010 0010 0000 1000<br>
x3002 1010 0100 0000 1000<br>
x3003 0000 0111 1111 1110<br>
x3004 1011 0000 0000 0111<br>
x3005 0001 0000 0010 0001<br>
x3006 0001 0100 0000 0001<br>
x3007 0000 1011 1111 1010<br>
x3008 1111 0000 0010 0101<br>
x3009 0000 0000 0100 0001<br>
x300A 1111 1111 1011 0110<br>
x300B 1111 1110 0000 0100<br>
x300C 1111 1110 0000 0110<br>
<br>What does the program do? (10 points)
<br>It print “ABCDEFGHI” on the console.]]></description><link>https://www.allenygy.vip/computer-organization/assignment/assignment-3/co-assignment-3.html</link><guid isPermaLink="false">Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[CO-Assignment-4]]></title><description><![CDATA[ 
 <br><br><br>Answer:<br>
<br>R1 is not to be set to zero. R1 will not be detected at assembly or run time.
<br>'SUM' is not a valid numeric literal, and it is also not in the symbol table either. This error will be detected in assembly
<br><br>Answer:<br>In this program, if the numbers that start in Memory[x4000] end with numbers 0, smaller than x8000(32768)， then it will be multiplied by two. Otherwise, it will not be changed.<br><br>Ans:<br>      .ORIG x3000 
      AND R2,R2,#0
      LD R1,DIVIDND
      NOT R1,R1
      ADD R1,R1,#1
      LD R3,DIVISOR
LOOP  ADD R3,R3,R1
      BRn DONE
      ADD R2,R2,#1
      BRnzp LOOP
DONE  LD R4,DIVIDND
      ADD R3,R4,R3
      LEA R0, Info
      PUTS
      HALT
DIVISOR .FILL #30
DIVIDND .FILL #100
Info .STRINGZ "Example: R1 = 30, R6 = 100. Therefore 100/30, R2 = 3 and R3 = 10."
    .END
<br><br>Answer:<br>
<br>
Interrupts: Using interrupts for handling I/O provides the advantage of allowing the processor to perform other tasks while waiting for I/O operations to complete. When an I/O device has finished its operation, it triggers an interrupt, allowing the CPU to immediately handle the data transfer or task associated with the I/O device. This approach is more efficient as it doesn't waste CPU cycles continuously checking the status of the I/O device.

<br>
Polling: Polling involves the CPU constantly checking the status of an I/O device to determine if it needs attention or has completed its task. It's simpler to implement but can be less efficient than using interrupts because it ties up the CPU in a loop, consuming processing power even when the I/O device doesn't need immediate attention. Polling might be used in scenarios where the hardware doesn't support interrupts or when the overhead of handling interrupts is too high compared to the frequency of I/O operations.

<br><br>Answer:<br>The last instruction in the interrupt service program is usually "RTI" (opcode 1000). It returns from the Interrupt Pops PSR and PC of the Supervisor stack, recovering the conditional code from the PSR. If necessary (i.e., if the current permission mode is User), revert from Saved.USP to a user stack pointer to R6.]]></description><link>https://www.allenygy.vip/computer-organization/assignment/assignment-4/co-assignment-4.html</link><guid isPermaLink="false">Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[CO-Lab8]]></title><description><![CDATA[ 
 <br><br>.ORIG x3000
	LD R1, HELLO
	STI R1, TRAP_26
	TRAP x26
	HALT

HELLO .FILL x3006
TRAP_26 .FILL X0026
	
	ST R7, ADDRESS
	LEA R0 SHELLO
	PUTS
	LD R7, ADDRESS
	RET

ADDRESS .FILL x046A
SHELLO .STRINGZ "Hello, world!"
	.END 

<br>
<br>At first, loading the program that print hello's address to R1.
<br>Then using STI to load this address to x0026.
<br>Finally I can use trapx26 to print "Hello,world".
]]></description><link>https://www.allenygy.vip/computer-organization/lab/co-lab8.html</link><guid isPermaLink="false">Computer Organization/Lab/CO-Lab8.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:42:43 GMT</pubDate></item><item><title><![CDATA[CO-Lab7]]></title><description><![CDATA[ 
 <br><br>Assembling the following assembly program first by hand and then verify your result using the assembler. Write a report describe the assembling process. Your report file should include the symbol table and the machine code in binary for the assembly code and other related information to describe the assembling process.<br>.ORIG x3050
LD R1,SIX
LD R2,NUMBER
AND R3,R3,#0
AGAIN ADD R3,R3,R2
      ADD R1,R1,#-1
      BRp AGAIN
HALT
NUMBER .FILL #1
SIX .FILL x0006
.END
<br>x3050  x2207 LD R1, SIX<br>
x3051  x2405 LD R2, NUMBER<br>
x3052  x56E0 AND R3, R3, #0<br>
x3053 AGAIN x16C2 ADD R3, R3, R2<br>
x3054  x127F  ADD R1, R1, #-1<br>
x3055  x03FD  BRp AGAIN<br>
x3056  xF025  HALT<br>
x3057 NUMBER  x0001<br>
x3058 SIX x0006<br>
<br>Symbol table
<br><br>
<br>
Machine code<br>
0011 0000 0000 0000<br>
x3050 0010 0010 0000 0111<br>
x3051 0010 0100 0000 0101<br>
x3052 0101 0110 1110 0000<br>
x3053 0001 0110 1101 0010<br>
x3054 0001 0010 0111 1111<br>
x3055 0000 0011 1111 1101<br>
x3056 1111 0000 0010 0101<br>
x3057 0000 0000 0000 0001<br>
x3058 0000 0000 0000 0110

<br>
Process add R2 6 times, and store the result in R3

<br>
R3 = 6

]]></description><link>https://www.allenygy.vip/computer-organization/lab/co-lab7.html</link><guid isPermaLink="false">Computer Organization/Lab/CO-Lab7.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:42:45 GMT</pubDate></item><item><title><![CDATA[CO-Lab3]]></title><description><![CDATA[ 
 <br><br>
<br>From the specifications of the circuit, determine the required number of inputs and outputs, and assign a letter symbol to each.
<br>
<br>Input: 3 
<br>Output: 1 
<br>
<br>Derive the truth table that defines the required relationship between inputs and outputs.
<br><br>
<br>Obtain the SOP and simplified Boolean functions of each outputs as function of the input variables. (You can also use the K-Map to obtain the simplest Boolean function.)
<br>
<br>
<br>
<br>Draw the logic diagram.
<br><img alt="Lab3" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Lab3.png" referrerpolicy="no-referrer">
<img alt="BL5eKv" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BL5eKv.png" referrerpolicy="no-referrer"><br>
<br>Verify the correctness of the design.
]]></description><link>https://www.allenygy.vip/computer-organization/lab/co-lab3.html</link><guid isPermaLink="false">Computer Organization/Lab/CO-Lab3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:41:14 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Lab3.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Lab3.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CO-Lab6]]></title><description><![CDATA[ 
 <br><br><br>What does the following code? (There are 3 instructions.)<br>0011000000000000<br>
1001001001111111<br>
0001010001100001<br>
0001010000000010<br>  <br>
   <br>
   <br><br>Input the following code and try to understand what it does by executing it step by step. (There are 6 instructions.)<br>LEA R1, x2FFE<br>
ADD R2, R1, #14<br>
AND R2, R2, #0<br>
ADD R2, R2, #5<br>
STR R2, R1, #14<br>
LDI R3, x2FFD<br>Firstly, it load x2FFE to R1<br>
then ADD 14 to R1's content and store it into R2<br>
then AND 0 with R2 and store its result to R2<br>
then ADD 5 to R2 and store its result to R2<br>
then Store R2's content to the address that is R1's content plus 14<br>
finally x2FFD plus PC's content then find the address's content,using this content to find the address and load the content to R3<br><br>Write a LC3 machine code program to print out “Hello World!”. Hint: consider to use Trap instruction PUTS.<br>1110 0000 0000 0010<br>
1111 0000 0010 0010<br>
1111 0000 0010 0101<br>
0000 0000 0100 1000]]></description><link>https://www.allenygy.vip/computer-organization/lab/co-lab6.html</link><guid isPermaLink="false">Computer Organization/Lab/CO-Lab6.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:42:01 GMT</pubDate></item><item><title><![CDATA[CO-Lab2]]></title><description><![CDATA[ 
 <br><br><br>
<br>Signed-magnitude: 803B
<br>1'complement: FFC4
<br>2'complement: FFC5
<br><br>1101 1011 0101 0000 0010 0000 0110 0000<br>
<br>Decimal form: $ -5.858239\times 10^{16}$
<br><br>
<br>C2378000
<br><br>
<br>'5' : 53
<br>'T' : 84
<br><br>
<br>'您': 0x60a8
<br>'好': 0x597d
]]></description><link>https://www.allenygy.vip/computer-organization/lab/co-lab2.html</link><guid isPermaLink="false">Computer Organization/Lab/CO-Lab2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:40:55 GMT</pubDate></item><item><title><![CDATA[CO-Lab5]]></title><description><![CDATA[ 
 <br><br>Select any ISA instruction you have learned in the class, and analyze the process of the fetch-decode-execution cycle step by step. It should contain change of the state and change of the registers values, and PC, IR, MAR and MDR.<br><br>
<br>Fetch:<br>
Load the address stored in the Program Counter (PC) into the Memory Address Register (MAR).<br>
Send a "read" signal from MAR to memory to fetch the instruction.<br>
Store the fetched instruction into the Instruction Register (IR).<br>
Increment the Program Counter (PC) to point to the next instruction.
<br>Decode:<br>
Extract the opcode from the Instruction Register (IR).<br>
Decode the opcode to recognize the instruction as an ADD operation.
<br>Execute:<br>
Fetch the source operands (Src1 and Src2) from the registers specified by the instruction's fields.<br>
The Arithmetic Logic Unit (ALU) receives Src1 and Src2 values from the registers.<br>
ALU performs the addition operation: ALU_result = Src1 + Src2.<br>
Store the result (ALU_result) in the designated destination register (Dst).
]]></description><link>https://www.allenygy.vip/computer-organization/lab/co-lab5.html</link><guid isPermaLink="false">Computer Organization/Lab/CO-Lab5.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:41:39 GMT</pubDate></item><item><title><![CDATA[From-Machine-Language-to-Assembly-Language]]></title><description><![CDATA[ 
 <br><br>Assembler is a program that turns symbols into binary machine instructions.<br><br>
<br>Each line of a program is one of the following:

<br>an instruction
<br>an assembler directive (or pseudo-op)
<br>a comment


<br>Whitespace (between symbols) and case are ignored.
<br>Comments (beginning with “;”) are also ign
<br><br>LABEL OPCODE OPERANDS COMMENTS<br>
<br>optional: Label, Comments
<br>mandatory: Opcode, Operands
<br><br>
<br>Opcodes:

<br>reserved symbols that correspond to LC-3 instructions
<br>example: ADD, AND, LD, LDR


<br>Operands：

<br>Registers:
<br>Numbers: #(DEC) or x(HEX)
<br>Label: symbolic name oof memory location


<br><br>placed  at the beginning of the line<br>
assigns a symbolic name to the address corresponding to line<br>Loop ADD R1,R1,#-1
     Brp LOOP
<br><br>
<br>Anything after a semincolon is comments
<br>Ignored by assembler
<br>Used by humans to document/ understand programs
<br>Tips for useful comments:

<br>avoid restating the obvious, as “decrement R1”
<br>provide additional insight, as in “accumulate product in R6”
<br>use comments to separate pieces of program


<br><br>Pseudo-operations<br>
<br>Do not refer to operations executed by program
<br>used by assembler
<br>look like instruction, but "opcode" starts whith dots
<br>]]></description><link>https://www.allenygy.vip/computer-organization/lecture/11-from-machine-language-to-assembly-language.html</link><guid isPermaLink="false">Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:22:34 GMT</pubDate></item><item><title><![CDATA[Microarchitecture]]></title><description><![CDATA[ 
 <br><br>
<br>
Microarchitecture connects circuits and ISA together.<br>
ISA = Instruction Set Architecture

<br>
ISA specifies what hardware does, but not how

<br>ISA defines the instruction code


<br>
Microarchitecture specifies how it does it

<br>Microarchitecture determine how it work it


<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Microarchitecture.png" referrerpolicy="no-referrer"><br>
<br>The ISA is the interface of a processor as seen by an assembly language programmer<br>
or compiler writer
<br>Micro-architecture transfers the ISA into an implementation
<br>For a given ISA, there might be many different microarchitectures
<br>An architecture is a collection of circuits connected
<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/John_von_Neumann.png" referrerpolicy="no-referrer" style="max-width: 100%;"><img alt="VNA" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/VNA.png" referrerpolicy="no-referrer"><br>
<br>Memory
<br>CPU

<br>Register
<br>ALU
<br>CU


<br>I/O
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Stored-Program-Computer.png" referrerpolicy="no-referrer"><br>
<br>Memory stores not only data, but coded instructions that make up a computer program
<br>CPU fetches and executes – interprets - successive instructions of the program
<br>Program is simply data for the interpreter – as in a Universal Turing Machine!
<br>Single expandable resource pool – main memory
<br>constrains both data and program size


<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/Lc-3.png" referrerpolicy="no-referrer"><br><br>
<br>Address space 

<br>means: there are  block


<br>Addressability 
<br>Each block store 16-bit instruction

<br>Each block represent by a Hexadecimal code

<br>x0000
<br>x0001
<br>....


<br>Address 逐行递增


<br>Memory is store element
<br>Basic Operations

<br>LOAD

<br>read a value from a memory location


<br>STORE<br>
- write a value to a memory location<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/Memory.png" referrerpolicy="no-referrer">


<br><br>
<br>MAR: Memory Address Register (D flip-flops)
<br>MDR: Memory Data Register (D flip-flops)<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/MAR-MDR.png" referrerpolicy="no-referrer">
<br>
<br>To read a location (A):

<br>Write the address (A) into the MAR.
<br>Send a “read” signal to the memory.
<br>Read the data from MDR.


<br>To write a value (X) to a location (A):

<br>Write the data (X) to the MDR.
<br>Write the address (A) into the MAR.
<br>Send a “write” signal to the memory.


<br><br>
<br>The brain of the computer
<br>It is the part that actually executes the machine instructions
<br>Inside the CPU

<br>Data path

<br>Registers


<br>Control Path

<br>IR (instruction register), PC (program counter), FSM (finite state machine)




<br><br>
<br>Register is store element

<br>Achieved by D filp-flop


<br>8 Register

<br>Each register represent by 3 bit to record its address

<br>000 
<br>001 
<br>010 
<br>...
<br>110 
<br>111 




<br>Source Register 1 
<br>Source Register 2 
<br>Destination Register 
<br><img alt="Register" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Register.png" referrerpolicy="no-referrer"><br>
<br>Why register?<br>
Closer to processing unit, allow quicker access to intermediate results instead of going to memory
<br><br>Perform arithmetic and logic operations (AND, NOT, ADD) on values stored in registers<br>
<br>ADD  
<br>AND  
<br>NOT A
<br>PASS A
<br><br>Control Unit: a finite state machine coordinates execution of the program<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/CU.png" referrerpolicy="no-referrer"><br>
IR Get the Instruction from Memory through PC's address<br>
<br>PC Program Counter

<br>It stores the next instruction address
<br>In each clock, PC+=1
<br>In x86 architecture also called IP Instruction Pointer


<br>IR Instruction Register

<br>Current Instruction


<br>Control Unit as a Finite State Machine<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/CU-FSM.png" referrerpolicy="no-referrer">
<br><br>
<br>Devices for getting data into and out of memory
<br>Each device has its own interface, usually a set of registers like the memory’s MAR and MDR

<br>keyboard: data register (KBDR) and status register (KBSR)
<br>console: data register (DDR) and status register (DSR)


<br><br>
<br>The instruction is the most basic unit of computer processing.
<br>One instruction specifies two things:

<br>opcode: operation to be performed
<br>operands: data/locations to be used for operation


<br>An instruction is encoded as a sequence of bits (just like data!)
<br>Control unit interprets instruction
<br>A computer’s instructions and their formats is known as its Instruction Set Architecture (ISA).
<br><br>
<br>opcode: 0001
<br>steering bit IR[5]
<br>If IR[5]=0<br>ADD DST SR1 000 SR2
0001 xxx xxx 000 xxx
<br>
<br>operands: Src1,Src2,Dst

<br>Src1+Src2-&gt;Dst


<br>If IR[5]=1<br>ADD DST SR1 1 xxxxx
0001 xxx xxx 1 xxxxx
<br>
<br>operands: Src1,Dst,xxxxx

<br>Src1+xxxxx-&gt;Dst


<br><br>
<br>
opcode: 0110

<br>
operands: Src,Dst

<br>
Load the value in memory location Src into register Dst

<br>
Move [Base + Offset] to Dst

<br>
Load memory content at address (R3 + 6) to R2

<br>LDR DST SRC offset
0110 xxx xxx xxxxxx
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/LDR.png" referrerpolicy="no-referrer"><br><br>
<br>Fetch
<br>Decode
<br>Evaluate Address
<br>Fetch operands
<br>Execute
<br>Store result
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/instruction-process.png" referrerpolicy="no-referrer"><br><br>PC-MAR-MDR-IR<br>Load next instruction (at address stored in PC)<br>
from memory into Instruction Register (IR).<br>
<br>Load contents of PC into MAR.
<br>Send “read” signal to memory.
<br>Read contents of MDR, store in IR.
<br>Then increment PC, so that it points to the next instruction in sequence.<br>
<br>PC becomes PC+1.
<br><br>First identify the opcode.<br>
<br>In LC-3, this is always the first four bits of instruction.
<br>A 4-to-16 decoder asserts a control line corresponding to the desired opcode.
<br><br>
<br>For instructions that require memory access, compute address used for access.
<br>Examples:

<br>add offset to base register (as in LDR)
<br>add offset to PC (or to part of PC)


<br><br>
<br>Obtain source operands needed to perform operation.
<br>Examples:

<br>load data from memory (LDR)
<br>read data from register file (ADD)


<br><br>
<br>Perform the operation, using the source operands.
<br>Examples:

<br>send operands to ALU and assert ADD signal
<br>do nothing (e.g., for loads and stores)


<br><br>
<br>Write results to destination (register or memory)
<br>Examples:

<br>result of ADD is placed in destination register
<br>result of memory load is placed in destination register


<br>for store instruction, data is stored to memory
<br><br>
<br>In the FETCH phase, PC is incremented by 1 automatically (counter)
<br>Other Sequence

<br>if-then, loop, function call
<br>Achieved by special instruction that changes the content of PC

<br>Jumps (unconditionals)
<br>Branches (conditional)




<br><br>Set the PC to the value obtained by adding an offset to a register.<br>JMPR 000 BASE offset
1100 000 011 000110
<br>Add the value of 6 (offset) to the contents of R3 (Base),and load the result into the PC<br>This becomes the address of the next instruction to fetch.<br><br>The clock is a signal that keeps the control unit moving.<br>
<br>
At each clock “tick,” control unit moves to the next machine cycle -- may be next instruction or next phase of current instruction.

<br>
Stopping the Computer

<br>Stopping the instruction cycle requires stopping the clock


<br><br>
<br>Three basic kinds of instructions:

<br>computational instructions (ADD, AND, …)
<br>data movement instructions (LD, ST, …)
<br>control instructions (JMP, BRnz, …)


<br><br>
<br>Computer = processing unit + memory system + I/O

<br>Processing unit = control + data path

<br>Control = FSM Finite state machine

<br>Inputs = machine instruction,datapath condition
<br>Outputs = register transfer control signal, ALU operation codes
<br>Instruction interpretation = instruction fetch, decode, execute, write


<br>Datapath = function units +registers

<br>All logic used to process information

<br>Functional units = ALU, multipliers,dividers...
<br>Register = PC program counter, IR instruction register, storage registers








]]></description><link>https://www.allenygy.vip/computer-organization/lecture/09-microarchitecture.html</link><guid isPermaLink="false">Computer Organization/Lecture/09-Microarchitecture.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:22:57 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Microarchitecture.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Microarchitecture.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[ISA]]></title><description><![CDATA[ 
 <br><br>
<br>ISA specifies what hardware does, but not how

<br>ISA defines the instruction code


<br>Microarchitecture specifies how it does it

<br>Microarchitecture determine how it work it


<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/ISA_overview.png" referrerpolicy="no-referrer"><br>The ISA specifies all the information about the computer that the software has to know.<br>
<br>Memory

<br>Address space (how many locations?)
<br>Addressability (word or byte, word size)


<br>Registers

<br>Number (how many?)
<br>Type


<br>Instructions

<br>Operations
<br>Data types
<br>Addressing modes


<br><br>
<br>Lc-3 is a finite state machine<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/FSM.png" referrerpolicy="no-referrer">
<br><br>
<br>Address space 

<br>means: there are  block


<br>Addressability 
<br>Each block store 16-bit instruction

<br>Each block represent by a Hexadecimal code

<br>x0000
<br>x0001
<br>....


<br>Address 逐行递增


<br>Memory is store element
<br>Basic Operations

<br>LOAD

<br>read a value from a memory location


<br>STORE<br>
- write a value to a memory location<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/Memory.png" referrerpolicy="no-referrer">


<br><br>
<br>
features:<br>
Special storaqge devices that are inside the GPU.<br>
Fast to access 1 clock cycle<br>
General Purpose Register GPR: accessible instructions

<br>
Register is store element

<br>Achieved by D filp-flop


<br>
Register File

<br>8 GPRs

<br>Each register represent by 3 bit to record its address

<br>000 
<br>001 
<br>010 
<br>...
<br>110 
<br>111 




<br>Source Register 1 
<br>Source Register 2 
<br>Destination Register 


<br>
Other special purpose registers:

<br>MAR,MDR
<br>PC,IR
<br>Condition codes: P,Z,N
<br>KBDR,KBSR,DDR,DSR


<br><img alt="Register" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Register.png" referrerpolicy="no-referrer"><br><br>
<br>Opcode What the instruction does
<br>Operands What the operation acts on
<br>In Lc-3<br>
<br>4 bits opcode (15)
<br>2 Sources and 1 destination<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/instruction.png" referrerpolicy="no-referrer">
<br><br><br><br>
<br>
'Immediate' addressing mode

<br>
ADD 0001

<br>
AND 0101

<br>---- --- --- --- ---
ADD  DST SR1 000 SR2
0001 xxx xxx 000 xxx

---- --- --- --- ---
AND  DST SR1 000 SR2
0001 xxx xxx 000 xxx
<br>When string bit is 0 the addressing mode is "register mode"<br>
Otherwise is "immediate mode"<br>---- --- --- - -----
ADD  DST SR1 1 Imm5
0001 xxx xxx 1 Imm5

---- --- --- - -----
AND  DST SR1 1 Imm5
0001 xxx xxx 1 Imm5
<br>Imm5 is a const integer and imm5 will be extend to 16 bits when it be calcuted.<br>
<br>subtract

<br>2's complement


<br>OR

<br>


<br>Set Zero

<br>AND 0000 0000 0000 0000


<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/AND-ADD_imm5.png" referrerpolicy="no-referrer"><br>
<br>NOT 1001 Register Addressing mode
<br>---- --- --- -------
NOT  DST SRC 111111
1001 Reg Reg 111111
<br><br>
<br>
Load read data from memory to register

<br>LD 0010 direct mode
<br>LDI 1010 base+offset mode
<br>LDR 0110 indirect mode


<br>
Store write data from register to memory

<br>ST 0011 direct mode
<br>STI 1011 base+offset mode
<br>STR 0111 indirect mode


<br>
Load effectively address compute address

<br>LEA 1110 immediate mode - does not access memory


<br>---- ---   ----------
LEA  DR/SR addr.gen.bits
1110 DR/SR addr.gen.bits
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/LEA_address_mode.png" referrerpolicy="no-referrer"><br><br>
<br>BR 0000
<br>JMP/RET 1100
<br>JSR/JSSR 0100
<br>RTI 0111
<br>TRAP 1111
<br><br>
<br>2's complement integers
<br><br>
<br>3 single bit registers (set to 1 or cleared to 0)

<br>N: when value written was negative
<br>Z: when value written was zero
<br>P: when value written was positive


<br>Affected each time any register is written
<br>Condition codes are read by conditional branch instructions
<br><br>5 addressing modes<br>
<br>Explicitly in the instruction itself 立即寻址
<br>In register 寄存器寻址
<br>In memory 内存寻址

<br>Pc-relative mode: 
<br>Base+offset mode: 
<br>Indirect mode: the address of a location that contains the address of the operand (indirect)


<br><br>
<br>LD

<br>opcode 0010
<br>effective address=(PC)+SEXT(IR[8:0])


<br>---- ---  ---------
LD   Dst  
0010 Reg  
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/lc-3/LD_address_mode.png" referrerpolicy="no-referrer"><br>
<br>ST

<br>Opcode 0011
<br>effective address=(PC)+SEXT(IR[8:0])


<br>---- ---  ----------
ST   Dst  
0011 Reg  
<br>
<br>offset 9 bits
<br>operand must be within 256 locations of the instruction<br><br>
<br>LDR

<br>opcode 0110
<br>effective address = (BaseRegister)+offset


<br>---- ---  ---   ------
LDR  Dst  BaseR offset
0110 Reg  Reg
<br>
<br>offset 6 bits
<br>Base+offset can address any location in memory<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/LDR_address_mode.png" referrerpolicy="no-referrer"><br>
<br>STR

<br>opcode 0111
<br>effective address = (BaseRegister)+offset


<br>---- ---  ---   ------
STR  Dst  BaseR offset
0111 Reg  Reg
<br><br>
<br>
An address is first formed exactly the same way as with LD and ST

<br>
This address contains the address of the operand.

<br>
Just like base+offset, indirect mode can also address any location in the memory.

<br>
Memory has to be accessed twice in order to get the address of the operand

<br>
LDI

<br>opcode 1010
<br>pointer address = (PC) + SEXT(IR[8:0])
<br>effective address = Mem[(PC)+SEXT(IR[8:0])]


<br>---- ---  ---------
LDI  Dst  Addr.Gen.bits
1010 Reg  Addr.Gen.bits
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/LDI_address_mode.png" referrerpolicy="no-referrer"><br>
<br>STI

<br>opcode 1011
<br>pointer address = (PC) + SEXT(IR[8:0])
<br>effective address = Mem[(PC)+SEXT(IR[8:0])]


<br><br>
<br>
Lc-3 has 3 conditional code registers

<br>N negative
<br>Z zero
<br>P positive


<br>
set by any instruction that stores a value to a register

<br>ADD,AND,NOT,LD,LDR,LDI,LEA


<br>
BR

<br>opcode 0000


<br>---- --- ---------
BR   NZP offset
0000 NZP offset
<br>when condition is satisfied PC=PC+offset<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Lc-3/BR_DataPath.png" referrerpolicy="no-referrer"><br>
<br>JMP jump OR goto

<br>opcode 1100


<br>---- --- ---   ------
JMP  000 BaseR 000000
1100 000 Reg   000000
<br>unconditional jump<br>
PC jump to Reg<br>
<br>TRAP Invoke a system routine

<br>opcode 1111


<br>---- ---- --------
TRAP 0000 trapvec
1111 0000
<br>PC is set to the instruction TRAP]]></description><link>https://www.allenygy.vip/computer-organization/lecture/10-isa.html</link><guid isPermaLink="false">Computer Organization/Lecture/10-ISA.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:22:26 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/ISA_overview.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/ISA_overview.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Finite-State-Machine]]></title><description><![CDATA[ 
 <br><br><br>
<br>The output of a sequential circuit is a function of the current input and the previous state 时序电路的输出是当前输入和先前状态的函数
<br>The state is stored in the storage element 状态存储在存储元件中
<br>The new state is also a function of the previous state and the current input 新状态也是前一个状态和当前输入的函数
<br><img alt="20KSlQ" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/20KSlQ.jpg" referrerpolicy="no-referrer"><br><br>
<br>A system is a finite state machine if it has the following five properties:  

<br>A finite number of states 有限状态
<br>A finite number of external inputs 有限外部输入
<br>A finite number of external outputs 有限外部输出
<br>An explicit specification of all allowed state transitions 所有合法状态转换的明确规范
<br>An explicit specification of the rules for each external output value 每个外部输出值的规则的明确规范


<br><br>
<br>Each state is shown with a circle, labeled with the state value – the contents of the circle are the outputs
<br>An arc represents a transition to a different state, with the inputs indicated on the label<br>
每个状态都用一个圆圈显示，并标有状态值 - 圆圈的内容是输出<br>
圆弧表示向不同状态的过渡，输入在标签上指示
<br><img alt="kOuuts" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/kOuuts.jpg" referrerpolicy="no-referrer"><br>
<br>3-bit counter
<br><img alt="1sA1to" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/1sA1to.jpg" referrerpolicy="no-referrer"><br>
<br>
A Danger Sign

<br>
当开关断开<br>
If the switch is turned off, all the lights are turned off and remain off

<br>
当开关闭合<br>
When the switch is in the ON position, the controller directs the lights as follows: During one unit of time, all lights will be off. In the next unit of time, lights 1 and 2 will be on. The next unit of time, lights 1, 2, 3, and 4 will be on. Then all five lights will be on. Then the sequence repeats: no lights on, followed by 1 and 2 on, followed by 1, 2, 3, and 4 on, and so forth.<br>
<img alt="WQStkW" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/WQStkW.png" referrerpolicy="no-referrer" style="max-width: 100%;"> <img alt="LfonWY" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/LfonWY.png" referrerpolicy="no-referrer">

<br>当All-on到All-off  输入0或1都可以实现而不是同时输入<br><img alt="5Nd4hq" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/5Nd4hq.png" referrerpolicy="no-referrer">
<img alt="Lrhv6a" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Lrhv6a.png" referrerpolicy="no-referrer"><br>
<br>First, the two external inputs: the switch and the clock. The switch determines whether the finite state machine will transition through the four states or whether it will transition to state A, where all lights are off. The other input (the clock) controls the transition from state A to B, B to C, C to D, and D to A by controlling the state of the storage elements. We will see how, momentarily.
<br>Second, there are two storage elements for storing state information. Since there are four states, and since each storage element can store one bit of information, the four states are identified by the contents of the two storage elements: A (00), B (01), C (10), and D (11). Storage element 2 contains the high bit; storage element 1 contains the low bit. For example, the danger sign controller is in state B when storage element 2 is 0 and storage element 1 is 1.
<br>Third, combinational logic circuit 1 shows that the on/off behavior of the lights is controlled by the storage elements. That is, the input to the combinational logic circuit is from the two storage elements, that is, the current state of the finite state machine.
<br>Finally, combinational logic circuit 2 shows that the transition from the current state to the next state depends on the two storage elements and the switch. If the switch is on, the output of combinational logic circuit 2 depends on the state of the two storage elements.
<br><br>
<br>A Turing machine is a finite state machine plus a tape memory.
<br>Each transition may be accompanied by an operation on the tape (move, read, write).
<br>Its total possible configurations are arbitrarily large, regardless of the size of the program; it expands towards infinity.
<br>Turing machines have more computational power than FSM.
]]></description><link>https://www.allenygy.vip/computer-organization/lecture/08-finite-state-machine.html</link><guid isPermaLink="false">Computer Organization/Lecture/08-Finite-State-Machine.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:23:05 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/20KSlQ.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/20KSlQ.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[From-Gates-to-Circuits-I-Combinational-Circuits]]></title><description><![CDATA[ 
 <br><br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Basic-Building-Blocks.png" referrerpolicy="no-referrer"><br>
<br>AND/NAND
<br>OR/NOR/XOR
<br>NOT
<br>3 representations logically equivalent to one another<br>
<br>Truth table
<br>Logic expression
<br>Logic circuit
<br><br>The integration of large numbers of tiny transistors into a small chip<br>
<br>Two Types of Circuits

<br>Combinational logic circuits 组合逻辑电路
<br>Sequential logic circuits 时序逻辑电路


<br><br>
<br>Circuit with no memory 无内存
<br>Multiple inputs, multiple outputs, one Boolean function for each output
<br>Abstracted as a package or a black box 可抽象成黑箱
<br>Implementation described by one of

<br>n-input-, m-output-column truth table
<br>boolean function for each output variable
<br>logic diagram (possibly using other packages)


<br><br>Only add two single bits together (a, b), s is the sum and c is the carry bit<br>
仅实现两个单bit二进制加法<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Half-Adder.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Half-Adder-Circuit.png" referrerpolicy="no-referrer"><br>Half Adder:<br>
半加器用于对两个单比特（二进制位）进行加法运算，产生两个输出结果：和（Sum）和进位（Carry）。<br>
- 输入：两个待相加的二进制位 <br>
- 输出：<br>
- 和（Sum）: 即A和B的异或结果，表示当前位相加的结果。<br>
- 进位（Carry）：，即A和B的与运算结果，表示当前位相加是否产生进位。<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Full-Adder-Circuit.png" referrerpolicy="no-referrer"><br>Full Adder:<br>
全加器用于对三个单比特（二进制位）进行加法运算，包括两个输入位（A和B）和上一位的进位（Cin），产生两个输出结果：和（Sum）和新的进位（Carry）。<br>
- 输入：三个待相加的二进制位（A、B和Cin）。<br>
- 输出：<br>
- 和（Sum）：(A ⊕ B) ⊕ Cin，即当前位相加的结果，考虑了上一位的进位。<br>
- 进位（Carry）：(A ∧ B) ∨ ((A ⊕ B) ∧ Cin)，表示下一位相加是否产生进位，综合考虑了当前位和上一位的进位。<br>
<br>半加器处理两个输入位的加法运算，产生Sum和Carry
<br>全加器处理三个输入位的加法运算，产生 和（Sum）和新的进位（Carry），能够考虑前一位的进位情况
<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/4-bit-adder.png" referrerpolicy="no-referrer"><br>feeding the Carry Out of one circuit into the Carry In of the circuit immediately to its left<br>"Ripple-Carry Adder"（连锁进位加法器）之所以被称为这个名称，是因为它的进位传递机制类似于水波纹在水面扩散的方式。它是一种最基本的加法器设计，用于将两个二进制数字相加。<br>在Ripple-Carry Adder中，当两个二进制数字的每一位相加后产生进位时，这个进位会向下一位的相加操作传递。这个传递的过程就像水波纹在水面扩散一样，从一位传递到下一位，依次传递到最高位。这一连串的进位传递是串行进行的，因此它的名字中包含了"Ripple"这个词。<br><br>A decoder uses the inputs and their respective values to select one specific output line.<br>
<br> inputs to a maximum of  outputs
<br>个输入最多可以有个输出
<br>All memory addresses in a computer are specified as binary numbers.<br>
When a memory address is referenced (whether for reading or forwriting), the computer first has to determine the actual address.<br>
Decoder（译为解码器）是数字电路中的一个常见组件，它用于将输入的编码信号转换成特定的输出信号，根据输入信号的不同编码，Decoder产生不同的输出信号。Decoder有多种用途，包括：<br>
<br>
控制逻辑：Decoder用于生成控制信号，这些信号用于控制其他数字电路的操作。例如，它可以用于选择特定的操作模式，启用或禁用特定功能等。

<br>
地址解码：在微处理器和微控制器中，Decoder用于解码指令地址，以确定下一步执行的指令或操作。

<br>Decoder是数字电路中的一种重要元件，用于将输入信号从一种编码形式转换为另一种有意义的输出信号，从而实现数据选择、控制、解码和路由等功能。<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/A2-4Decoder.png" referrerpolicy="no-referrer"><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/noYq2M.jpg" referrerpolicy="no-referrer"><br>2-4 Decoder（也称为2输入4输出解码器）是一种特定类型的解码器，它具有两个输入线和四个输出线。它的主要功能是将两个输入线的组合编码映射到四个输出线，其中每个输入组合对应一个输出线。<br>一般情况下，2-4 Decoder的真值表如下：<br><br><br>
<br>A multiplexer behaves like a channel selector
<br>It selects a single output from several inputs.
<br>The particular input chosen for output is determined by the value of the multiplexer's control lines.
<br>To be able to select among n inputs, log2 n control lines are needed
<br>多个输入一个输出  由控制线路选择选择输出线路
<br><br>4-to-1 Multiplexer（四选一多路器）是数字电路中的一个常见组件，用于从多个输入信号中选择一个输出信号。它有四个数据输入（通常称为I0、I1、I2和I3），两个控制输入（通常称为S0和S1），一个电源开关（E），一个输出（通常称为Y）。<br>4-to-1 Multiplexer的运行原理如下：<br>
<br>
控制输入：S1和S0是控制输入，它们确定要从哪一个数据输入传递到输出。这两个控制线有四种可能的组合：00、01、10和11，分别对应着选择I0、I1、I2和I3作为输出。

<br>
数据输入：有四个数据输入（I0、I1、I2和I3），每个数据输入上都可以连接一个不同的输入信号。

<br>
输出：根据S1和S0的状态，Multiplexer会选择一个数据输入作为输出。例如，如果S1=0且S0=1，那么Multiplexer会将D1的值传递到输出Y。

<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Multiplexer.png" referrerpolicy="no-referrer">
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/4-1Multiplexer.png" referrerpolicy="no-referrer"><br><br>decoder在最开始选择走哪条路<br>
multiplexer在中间选择线路通过<br><br><br>
<br>实现4个功能 AND OR NOT ADD
<br>如图F0,F1进入decoder 选择将要实现的功能
<br>右下角实现 ADD<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/1-bitALU.png" referrerpolicy="no-referrer">
<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/2-bit-ALU.png" referrerpolicy="no-referrer"><br><br>
<br>From the design specification, obtain the truth table
<br>From the truth table, derive the Sum of Products Boolean Expression.
<br>Use Karnaugh Map to minimize the Boolean expression.
<br>Use logic gates to implement the simplified Boolean Expression.
<br>Verify the result.
<br><br>
<br>Three outputs:

<br>G (“Greater”) should be 1 only when A &gt; B
<br>E (“Equal”) should be 1 only when A = B
<br>L (“Lesser”) should be 1 only when A &lt; B


<br><br><img alt="NaX6TI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/NaX6TI.jpg" referrerpolicy="no-referrer"><br><br>
<br>G: 
<br>E: 
<br>L: 
<br><img alt="vH5EJb" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/vH5EJb.jpg" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/computer-organization/lecture/05-from-gates-to-circuits-i-combinational-circuits.html</link><guid isPermaLink="false">Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:24:14 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Basic-Building-Blocks.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO/Basic-Building-Blocks.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Circuit-Design]]></title><description><![CDATA[ 
 <br><br><br>
<br>Find Input and Output
<br>Truth Table
<br>K-Map Simplify
<br>Circuit  
<br><br><br>
<br>Write Equations

<br>Clock equation 时钟方程
<br>Output equation 输出方程
<br>Drive equation 驱动方程
<br>State equation 状态方程


<br>List State

<br>状态表
<br>状态图
<br>时序图


<br>Function

<br>功能
<br>是否自启动 存在无效状态则不能自启动


<br><br>Investigate the operation of the following circuit. Assume the initial state is 0000. Trace the outputs (the Qs) as the clock ticks and determine the purpose of the circuit. You must show your trace to complete your answer.<br><img alt="JRr3J4" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/JRr3J4.png" referrerpolicy="no-referrer"><br>
<br>Equation

<br>Clock equation

<br>


<br>Ouput equation

<br>None


<br>Dirve equation

<br>
<br>
<br>
<br>


<br>State equation

<br>Feature equation: 
<br>
<br>
<br>
<br>




<br>State
<br><br>Valid status<br>
<br>
Invalid status<br>
<br><br>
<br>State Diagram
<br>State Equation
<br>Output Equation
<br>Flip-Flop
<br>Circuit
<br><br>Design a finite state machine (FSM) for a counter that counts through the 3-bit prime numbers downwards and loop: . Assume the counter starts with initial prime set to 111 as its first 3 bit prime number. (12 points)<br>
<br>You need to provide the state transition diagram. Assume that the state is stored in three D Flip Flops. Hint: The set of all 3-bit prime numbers includes 2, 3, 5 and 7. (4 points)
<br>
<br>State Diagram
<br><img alt="StateDiagram-2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/StateDiagram-2.png" referrerpolicy="no-referrer"><br>
<br>Design the sequential circuit for the counter. The circuit is driven by the clock. The output is a 7 segment LED display. The various digits from 0 through 9 can be displayed using a 7-segment display as shown in the following figure.
<br><br><br>
<br>
<br>
<br>
<br>
<br>
<br><img alt="zGv0xW" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/zGv0xW.jpg" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/computer-organization/lecture/07-circuit-design.html</link><guid isPermaLink="false">Computer Organization/Lecture/07-Circuit-Design.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:23:27 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/JRr3J4.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/JRr3J4.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[From-Gates-to-Circuits-II-Sequential-Circuits]]></title><description><![CDATA[ 
 <br><br><br>Sequential circuits’ output depends not only on its current inputs, but also its previous inputs (current state)<br>  =    <br>
<img alt="tylAV6" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/tylAV6.jpg" referrerpolicy="no-referrer"><br><br>
<br>It should be able to hold a single bit, 0 or 1.
<br>You should be able to read the bit that was saved.
<br>You should be able to change the bit. There are only two choices:

<br>Set the bit to 1
<br>Reset, or clear, the bit to 0.


<br><br><img alt="No7sF8" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/No7sF8.jpg" referrerpolicy="no-referrer"><br>
<br>
Input:

<br>: set
<br>: rese
<br>


<br>
Output:

<br>


<br>
Set Function:<br>
When  <br>
Then change  lock the state 

<br>
Reset Function:<br>
When  <br>
Then change  lock the state 

<br>When    <br>
   reach first<br>
    reach first<br>
This results in a J-K flip-flop<br>
<img alt="PRXb7m" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/PRXb7m.jpg" referrerpolicy="no-referrer"><br>
<br>
For inputs SR = 00, the next value of Q could be either or 1, depending on the current value of Q.

<br>
So the same inputs can yield different outputs, depending on whether the latch was previously set or reset.

<br>
This is very different from the combinational circuits that we’ve seen so far, where the same inputs always yield the same outputs.

<br>
4-bit latch

<br><img alt="5eYPUT" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/5eYPUT.jpg" referrerpolicy="no-referrer"><br><br>
<br>Enable 实现锁存功能

<br>当Enable为0时: S,R皆为0电路锁存


<br><img alt="S8vJZG" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/S8vJZG.jpg" referrerpolicy="no-referrer"><br><br>
<br>与SR—NOR Latch 类似
<br><img alt="MRA63x" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MRA63x.jpg" referrerpolicy="no-referrer">
<img alt="fIX38c" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/fIX38c.jpg" referrerpolicy="no-referrer"><br><br>
<br>There is a finite time delay between a change in the inputs of a gate and any change in the output. This time is called gate delay.(栅极延迟)
<br>In order to avoid glitches, we want to design storage elements that only accept input when ordered to so We use a clock to be the control input that gives orders to the circuit about when to change states
<br><br>A clock is a special circuit that produces electrical pulses<br>
Clock speed is generally measured in megahertz (Mhz), or millions of pulses per second<br>
A clock is used by a sequential circuit to decide when to update the state of the circuit 决定何时更新电路状态<br>
inputs to the circuit can only affect the storage element at given, discrete instances of time<br><img alt="CJX7UK" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/CJX7UK.jpg" referrerpolicy="no-referrer"><br><br>
<br>Edge-triggered: allowed to change their states on either the rising or falling edge of the clock signal
<br>Level-triggered: allowed to change state whenever the clock signal is either high or low
<br>Technically, a latch is level triggered, whereas a flip-flop is edge triggered<br>
锁存器是电平触发，触发器是边缘触发
<br><br>
<br>When C is 1, the circuit acts just like the NOR gate S-R latch.
<br>When C is 0, the Set and Reset inputs are disabled
<br>The latch can change only when C is true<br>
<img alt="HphHwT" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/HphHwT.jpg" referrerpolicy="no-referrer">
<br><br><img alt="uH3Pxy" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/uH3Pxy.jpg" referrerpolicy="no-referrer"><br>When {J=1,K=0,C=1} work like a SR latch<br>
When {J=0,K=1,C=1} work like a SR latch<br>
When {J=1,K=1} Q 状态反转<br><br>
<br>
It stores one bit of information

<br>
The output changes only when the value of D changes

<br>
an output value of 1 means the circuit is currently “storing” a value of 1

<br>
A D flip-flop is a true representation of physical computer memory<br>
<img alt="jNaCls" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/jNaCls.jpg" referrerpolicy="no-referrer">

<br>
D 实现设置/重置 0/1

<br>
EN 实现 锁存 当EN为0 电路锁存<br>
<img alt="D-SR-Latch" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/D-SR-Latch.png" referrerpolicy="no-referrer">

<br><br>
<br>4 input lines, 4 output lines and a WE (Write Enable) line (also called clock)
<br>WE实现锁定输出状态
<br><img alt="Cj6sQJ" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Cj6sQJ.jpg" referrerpolicy="no-referrer"><br><br><img alt="iYeQJk" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/iYeQJk.jpg" referrerpolicy="no-referrer">
<img alt="mxxLHK" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/mxxLHK.jpg" referrerpolicy="no-referrer"><br>B0 (t+1) = JK (1, 1) = NOT B0(t)<br>
B1 (t+1) = JK (B0(t), B0(t))<br>
B2 (t+1)= JK (B0(t)B1(t), B0(t)B1(t))<br>
B3 (t+1)= JK (B0(t)B1(t)B2(t), B0(t)B1(t)B2(t))<br><br>可以说是三个4-bit register组合<br>
Decoder 选择 其中一条线路<br>
输出则为 的 中的一个<br>
以选择为例，输出 的 <br>
<br>The inputs lines: In0, In1, and In2
<br>Address lines: S0 and S1
<br><img alt="MfeAxu" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MfeAxu.jpg" referrerpolicy="no-referrer"><br>
<br>Write a word to the memory
<br>

<br>An address is asserted on S0 and S1.


<br>

<br>WE (write enable) is set to high.


<br>

<br>The decoder using S0 and S1 enables only one AND gate, selecting a given word in memory.


<br>

<br>The line selected in Step 3 combined with the clock and WE select only one word.


<br>

<br>The write gate enabled in Step 4 drives the clock for the selected word.


<br>

<br>When the clock pulses, the word on the input lines is loaded into the D flip-flops.


<br><br>
<br>Let’s assume a very simple microprocessor with 10 address lines (1KB memory)
<br>Let’s assume we wish to implement all its memory space and we use 128 x 8 memory chips
<br>SOLUTION

<br>We will need 8 memory chips (8x128=1024)
<br>Chip selection: We will need 3 address lines to select each one of the 8 chips
<br>Memory location selection inside each chip: Each chip will need 7 address lines to address its internal memory cells
<br>Address: 000 0000000 ()()


<br><img alt="ivrwmk" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/ivrwmk.jpg" referrerpolicy="no-referrer">
具有10根地址线的简单微处理器（可寻址1KB内存）使用128 x 8存储芯片的方法。<br>具体来说：<br>
<br>
10根地址线的微处理器（1KB内存）：

<br>这个微处理器有10根地址线，这意味着它可以寻址 (2^{10}) 个不同的内存位置，可访问1KB（1千字节）的内存。


<br>
存储芯片：

<br>为了覆盖整个内存空间，选择了128 x 8存储芯片。每个芯片的容量为128个存储位置（128个地址），每个存储位置可存储8位（1字节）。


<br>
所需存储芯片数量：

<br>由于总内存空间为1KB，每个芯片的容量为128个存储位置，因此需要总共8个芯片（(1 \text{KB} / 128 \text{每芯片的位置})）来容纳整个内存空间（(8 \text{芯片} \times 128 = 1024 \text{位置})）。


<br>
芯片选择：

<br>为了选择8个存储芯片中的每一个，使用3根地址线。使用3根地址线可以选择8个芯片中的任意一个（因为 (2^3 = 8)）。


<br>
每个芯片内存位置的选择：

<br>在每个芯片内部，需要7根地址线来寻址内部存储单元。这7根线帮助选择每个芯片中128个存储位置中的特定一个。


<br>
地址：000 0000000：

<br>这是一个示例地址。前三位数（000）用于选择8个存储芯片中的一个。剩下的7位数（0000000）用于在选定的芯片内选择特定的存储位置，其中每个芯片有128个可用的存储位置。


<br><br>
<br>Sequential circuits can remember their previous inputs
<br>Sequential circuits require clocks to control their changes of states
<br>The basic sequential circuit unit is the flip-flop: SR, JK and D flip-flop
<br>Examples: registers, binary counter and memory
]]></description><link>https://www.allenygy.vip/computer-organization/lecture/06-from-gates-to-circuits-ii-sequential-circuits.html</link><guid isPermaLink="false">Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:23:38 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/tylAV6.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/tylAV6.jpg&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[From-Transistors-to-Gates]]></title><description><![CDATA[ 
 <br><br><img width="" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-ClaudeShannon.png" referrerpolicy="no-referrer"><br>
<br>
Claude Shannon

<br>His master's thesis in 1937, A Symbolic Analysis of Relay and Switching Circuits, is considered as "possibly the most important, and also the most famous, master's thesis of the century.”
<br>He came up with the idea that electrical switches can be used to do Boolean logic
<img alt="SwitchtoBooleanExpression" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-SwitchtoBooleanExpression.png" referrerpolicy="no-referrer">



<br>
Relay 继电器

<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Relay.png" referrerpolicy="no-referrer">

<br>
Vacuum Tube 真空管

<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-VacuumTube.png" referrerpolicy="no-referrer" style="max-width: 100%;">

<br>
Transitor 晶体管

<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Transistor.png" referrerpolicy="no-referrer">

<br><br>A transistor is a discrete electronic component that can behave like a switch 可视为开关<br>
<br>Tiny, cheap, flexible and reliable

<br>onducts when VGS is high (N Type transistor) (close)
<br>Blocks when VGS is 0 (open)


<br><br>Complementary Metal-Oxide Semiconductor 互补金属氧化物半导体<br>
<br>Two types: P-type (positive) and N-type (negative)

<br>P-type

<br>Open (insulating) if gate is “on” = 1 激活时(1)阻断
<br>Closed (conducting) if gate is “off” = 0 休眠时(0)导通


<br>N-type

<br>Open if gate is “off” = 0 激活时(1)导通
<br>Closed if gate is “on” = 1 休眠时(0)阻断




<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-COMS.png" referrerpolicy="no-referrer"><br><br>Boolean functions are implemented in digital computer circuits called logic gates.<br>
<br>A gate is an electronic device that produces a result based on two or more input values.
<br>In reality, gates consist of one to six transistors, but digital designers think of them as a single unit.
<br>Integrated circuits contain collections of gates suited to a particular purpose.
<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-InverterGate.png" referrerpolicy="no-referrer"><br>
<br>In = 0v -&gt; P conduct N insulate -&gt; Out is 1 (2.9 v)
<br>In = 1v -&gt; P insulate N conduct -&gt; Out is 0 (0 v)
<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-AND/NAND.png" referrerpolicy="no-referrer"><br>AND consists of NAND and NOT gates.<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-NorGate.png" referrerpolicy="no-referrer"><br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-ORGate.png" referrerpolicy="no-referrer"><br>OR Gate consists of NOR and NOT gates.<br><br>A universal gate is a gate which can implement any Boolean function without need to use any other gate type.<br>
<br>The NAND and NOR gates are universal gates.
<br>Demorgans'Law

<br>
<br>


<br><br>
<br>
<br>
<br>
<br><br>
<br>
<br>
<br>
<br>Demorgans'Law 记忆技巧<br>
<br> 帽子不变,一分一和

<br>
<br>


]]></description><link>https://www.allenygy.vip/computer-organization/lecture/04-from-transistors-to-gates.html</link><guid isPermaLink="false">Computer Organization/Lecture/04-From-Transistors-to-Gates.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:24:27 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-ClaudeShannon.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-ClaudeShannon.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Boolean Algebra: From Bits to Logic]]></title><description><![CDATA[ 
 <br><br>
<br>Computers represent information by bit (Binary digit)
<br>A bit has two possible values, namely 0 and 1.
<br>A bit can be used to represent a truth value, true and false.
<br>Therefore bits operations correspond to the logical operations in Boolean Algebra.
<br><br>
<br>A function is a relation that uniquely associates members of one set with members of another set
<br>A Boolean function has

<br>At least one Boolean variable
<br>At least one Boolean operator
<br>At least one input from the set {0,1}


<br>It produces an output that is also a member of the set {0,1}
<br>
<br>Precedence

<br>NOT top priority,
<br>followed by AND
<br>then OR<br>
<img alt="CO-Boolean-Identities" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Boolean-Identities.png" referrerpolicy="no-referrer">


<br><br>
<br>There are two canonical forms

<br>Sum-of-products
<br>Product-of-sums


<br><br>
<br>Also called Disjunctive Normal Form (DNF) 析取范式
<br>Look at ONE<br>
<img alt="DNF" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-DNF.png" referrerpolicy="no-referrer">
<br><br>
<br>Also called Conjunctive Normal Form (CNF) 合取范式
<br>Look at ZERO<br>
<img alt="CNF" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-CNF.png" referrerpolicy="no-referrer">
]]></description><link>https://www.allenygy.vip/computer-organization/lecture/03-boolean-algebra-from-bits-to-logic.html</link><guid isPermaLink="false">Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:24:33 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Boolean-Identities.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Boolean-Identities.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Bits Data Representation and Manipulation]]></title><description><![CDATA[ 
 <br><br><br>
<br>1 BIT = Binary digITs; 1 bit: 0 or 1
<br>1 Byte = 8 bits
<br>A word is a fixed-sized piece of data handled as a unit
<br><br>
<br>Numeric Data Representation

<br>Unsigned integers
<br>Signed integers

<br>Sign-magnitude
<br>1’s complement
<br>2’s complement


<br>Real number representation
<br>Floating-point numbers


<br>Non-numeric Data Representation
<br> bits represent  things.<br><br><br><img alt="Binary-Decimal" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Binary-Decimal.png" referrerpolicy="no-referrer"><br><br>
<br>The left most bit (the most significant bit) is used as the sign bit. 最左位数表示正负

<br> represents +
<br> represents -


<br><br>
<br>the remaining bits indicate the magnitude 剩余数字表示数字
<br>Problem: there will be 2 zero: 0000/1000
<br><br>
<br>the complement of its positive counterpart 除了第一位数剩余数字作反码操作
<br><br>
<br>one greater than the 1’s complement of the positive value
<br><br>
<br>For positive number： Signed-magnitude, 1's complement, 2's complement forms are the same.正数原码反码补码一样
<br>After two backcode complements, the original number can be obtained 经过两次反码，补码操作可得到原数
<br>For binary odd number, the most right bit must be one.
<br>For Hexadecimal number each bit represents 4bits binary number
<br><br>
<br>Scientific notation: 
<br><br>Represented by 16 bits<br>
<br>16 bits: 1 for sign; 5 for exponent; 10 for Mantissa
<br>Exponent bias (offset): 24 -1 =15; range: [-14, 15]

<br>01111 represents 0 in exponent


<br><img alt="Half-Precision" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-HalfPrecisionFloating.png" referrerpolicy="no-referrer"><br>
<img alt="Half-Precision" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Half-Precision-Floating-example.png" referrerpolicy="no-referrer"><br><br>
<br>32 bits: 1 for sign; 8 for exponent; 23 for Mantissa<br>
<img alt="Single-point-floating-number" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Single-point-floating-number.png" referrerpolicy="no-referrer">
<br><br>
<br>Textual information
<br>Audio information
<br>Colors &amp; Images
<br>Video information
<br><br>
<br>
The American Standard Code for Information Interchange

<br>
7 bits to represent 128 characters

<br>0~31: control characters
<br>32~127: symbols, digits and letters


<br>
48 represents '0'

<br>
65 represents 'A'

<br>
97 represents 'a'<br>
<img alt="ASCII-code" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ASCII-Code.png" referrerpolicy="no-referrer">

<br><br>
<br>16 bits
<br>Support unlimited characters
<br>To permit backward compatibility, ASCII is a subset of Unicode.
<br><br>
<br>A microphone converts sound to an analog electrical signal
<br>An analog-to-digital converter (ADC) converts the analog signal to a digital signal through sampling
<br>CD audio, for example, has a sampling rate of 44.1 kHz (44,100 samples per second)
<br>An digital-to-analog converter performs the reverse process, from a digital to an analog signal
<br>An analog signal can be amplified and send to a speaker to produce sound
<br><br>
<br>A video consists of a stream of frames, or images, displayed at n&gt;16 frames per second
<br>An Image consist of a collection of pixels
<br>Pixels are tiny dots of color
<br>A pixel’s color is represented by a binary number, its RGB value
<br>Thus a video can be seen as a huge binary number
<br><br>
<br>Binary Arithmetic Operations

<br>Addition and subtraction
<br>Sign Extension
<br>Overflow


<br>Boolean Logic Operations

<br>AND
<br>OR
<br>NOT
<br>XOR


]]></description><link>https://www.allenygy.vip/computer-organization/lecture/02-bits-data-representation-and-manipulation.html</link><guid isPermaLink="false">Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:43:20 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Binary-Decimal.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Binary-Decimal.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[What is a Computer]]></title><description><![CDATA[ 
 <br><br>
<br>
Definition:

<br>electronic, digital, general purpose computing machine that automatically follows a step-by-step list of instructions for solving a problem.
<br>This step-by-step list of instructions that a computer follows is also called a computer program.


<br>
Computer Part:  case, motherboard, CPU, RAM, power supply, hard drive, graphic cards.

<br><br>
<br>
In 1936, British mathematician Alan Turing developed a hypothetical device, the Turing machine, which is the abstract model of all computers

<br>
A Turing machine consists of

<br>a tape divided into cells
<br>a moving read/write head
<br>a state register storing the state of the Turing machine
<br>a finite table of instruction specifying what the machine does when reading the content of the current cell:

<br>move right/left; erase/write a symbol; change the state




<br>
All things that can be computed can be computed by a Turing machine

<br><br>
<br>Turing described a Turing machine that could simulate all other Turing machines.

<br>inputs: data + a description of computation (Turing machine)


<br>A computer is a Universal Turing Machine!
<br><br>
<br>Generation Zero: Mechanical Calculating Machines (1642-1945)  机械计算机
<br>The First Generation: Vacuum Tube Computers (1945-1953)  真空管计算机
<br>The Second Generation: Transistor Computers (1954-1965)  晶体管计算机
<br>The Third Generation: Integrated Circuit (IC) Computers (1965-1980)  集成电路计算机
<br>The Fourth Generation: VLSI Computers (1980-) (very large scale integration computer)
<br><br>
<br>
stored-program architecture

<br>
Both data and program are stored in the memory

<br>
A Central Processing Unit (CPU)

<br>Control unit 控制单元
<br>Arithmetic Logic Unit (ALU) 计算逻辑单元
<br>Registers
<br>IR: Current Instruction
<br>PC: store the address of next instruction


<br>
Main memory

<br>
I/O- system

<br>
a single path between the main memory and CPU, called the von Neumann bottleneck<br>
<img alt="The von Neumann Architecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-vonNeumannArchitecture.png" referrerpolicy="no-referrer">

<br><br>
<br>Fetch-decode-execute cycle

<br>the control unit fetch the next instruction from the memory 控制单元取指令
<br>the instruction is decoded into a language that the ALU understands 解码
<br>data operands are fetched from the memory into the registers inside CPU 从内存获取数据操作数到寄存器
<br>the ALU executes the instruction and places the result into the registers or memory 计算逻辑单元执行指令并把结果放到内存或寄存器


<br><br>
<br>CPU and memory are separate
<br>All data and code are in the memory
<br>CPU is usually faster than memory
<br>CPU is forced to wait for needed data to be transferred to or from memory
<br><br><img alt="System-bus-model" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-System-bus-model.png" referrerpolicy="no-referrer"><br><br>
<br>User level: applications such as qq.exe  app
<br>High level language: C, Java, C++ program language
<br>Assembly language
<br>Operating system
<br>Machine Language: Instruction Set A
<br>Control level: micro-code or hardwired
<br>Digital logic: circuits, gates
<br><br><img alt="Levels-of-Transformations" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Levels-of-Transformations-1.png" referrerpolicy="no-referrer"><br>
<img alt="Levels-of-Transformations" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Levels-of-Transformations-2.png" referrerpolicy="no-referrer"><br>
<br>Problem -&gt; Algorithm -&gt; Program -&gt; Instr Set Architecture -&gt; Microarch -&gt; Circuits -&gt; Device
<br><br>
<br>Instruction Set Architecture (ISA): instructions that a CPU can execute
<br>Microarchitecture: implementation of ISA
<br>Circuits: Details of electrical circuits
<br>Devices (transistors): Circuits are built by interconnecting transistors
<br>Bits: Transistors operate on bits (“0” or “1”) that represent data and information
<br><br><img alt="Layers-of-Transformations" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Layers-of-Transformations.png" referrerpolicy="no-referrer"><br>
<img alt="Hardware&amp;Software" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-Hardware&amp;Software.png" referrerpolicy="no-referrer"><br>
<br>Whatever can be done by hardware can also be done by software, and vice versa
<br>Hardware implementations are faster but fixed
<br>Software implementations are more flexible but slower
]]></description><link>https://www.allenygy.vip/computer-organization/lecture/01-what-is-a-computer.html</link><guid isPermaLink="false">Computer Organization/Lecture/01-What is a Computer.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:24:45 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-vonNeumannArchitecture.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CO-vonNeumannArchitecture.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Computer Organization]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/computer-organization/computer-organization-overview.html</link><guid isPermaLink="false">Computer Organization/Computer Organization Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:22:19 GMT</pubDate></item><item><title><![CDATA[Lab Report: Object Detection Task Using LGG Dataset]]></title><description><![CDATA[ 
 <br><br><br>This lab focuses on object detection using the LGG Segmentation Dataset. The primary goal is to extract bounding boxes from segmentation masks and train an object detection model. We chose Faster R-CNN for its high accuracy and detailed feature extraction capabilities.<br><br><br>Analyze the dataset to understand the proportion of slices with and without gliomas.<br><img style="zoom: 67%;" alt="Data Distribution" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/KW61o1.png" referrerpolicy="no-referrer"><br>Generate visualizations to show class imbalance (Positive vs. Negative) and overall slice distribution.<br>
<img style="zoom: 50%;" alt="Positive Vs Negative" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/H8sbpV.png" referrerpolicy="no-referrer"><br><img style="zoom:50%;" alt="Brain MRI Images for Brain Tumor Detection\nLGG Segmentation Dataset" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/uenQvg.png" referrerpolicy="no-referrer"><br><br><br>Process Patient Folders:<br>
<br>Iterates through patient directories in the dataset.
<br>Extract Slices:<br>
<br>Loads .tif files (excluding masks) as numpy arrays using Pillow.
<br>Saves these arrays as PNG images to the output directory.
<br>Output and Logging:<br>
<br>Ensures output directories are created.
<br>Logs the file path of each saved slice.
<br>import os
import cv2
import numpy as np
from PIL import Image

data_path = "./dataset/kaggle_3m/"  
output_slices_path = "./output/slices/"  
os.makedirs(output_slices_path, exist_ok=True)

for patient_folder in os.listdir(data_path):
    patient_path = os.path.join(data_path, patient_folder)
    if not os.path.isdir(patient_path):
        continue  
    for file_name in os.listdir(patient_path):
        if file_name.endswith(".tif") and not file_name.endswith("_mask.tif"):
            # Load 3 chanels MRI images
            file_path = os.path.join(patient_path, file_name)
            image = np.array(Image.open(file_path))  

            # save as png format
            slice_output_path = os.path.join(output_slices_path, file_name.replace(".tif", ".png"))
            cv2.imwrite(slice_output_path, image)
            print(f"Saved slice: {slice_output_path}")
<br><br>Process Mask Files:<br>
<br>Iterates through folders, focusing on _mask.tif files.
<br>Extract Bounding Boxes:<br>
<br>Uses cv2.findContours to detect object boundaries in masks.
<br>Converts contours into bounding box coordinates (x_min, y_min, x_max, y_max).
<br>Create Annotations:<br>
<br>For each mask, records:

<br>image_id: Unique identifier.
<br>file_name: Corresponding PNG slice.
<br>bboxes: List of bounding boxes.
<br>category: Object class (“LGG”).


<br>Save Annotations:<br>
<br>Outputs annotations in JSON format to output_annotations_path.
<br>import json
from PIL import Image

mask_path = "./dataset/kaggle_3m/"  
output_annotations_path = "./output/annotations.json"  

annotations = []
image_id = 0 

for patient_folder in os.listdir(mask_path):
    patient_folder_path = os.path.join(mask_path, patient_folder)
    if not os.path.isdir(patient_folder_path):
        continue  # Skip Non-Folder
    
    for file_name in os.listdir(patient_folder_path):
        if file_name.endswith("_mask.tif"):  # match masked files
            # Load Mask
            mask_file_path = os.path.join(patient_folder_path, file_name)
            mask = np.array(Image.open(mask_file_path))  # Load NumPy array
        	# Find Contours	
            contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
            bboxes = []
            for contour in contours:
                x, y, w, h = cv2.boundingRect(contour)
                bboxes.append({"x_min": x, "y_min": y, "x_max": x + w, "y_max": y + h})
            if bboxes: 
                # add anotation of COCO format
                annotations.append({
                    "image_id": image_id,
                    "file_name": file_name.replace("_mask.tif", ".png"), 
                    "bboxes": bboxes,
                    "category": "LGG"
                })
                
                image_id += 1

with open(output_annotations_path, "w") as f:
    json.dump(annotations, f, indent=4)
print(f"Annotations saved to {output_annotations_path}")
<br><br>Faster R-CNN: Known for high accuracy and detailed feature extraction.<br><br>Faster R-CNN is a state-of-the-art object detection framework known for its high accuracy and robust feature extraction capabilities. It builds upon its predecessors (R-CNN and Fast R-CNN) by introducing a novel component called the Region Proposal Network (RPN), enabling end-to-end training and faster processing.<br><br>The Faster R-CNN architecture consists of three main components:<br>
<br>
Backbone Network (Feature Extraction)

<br>Purpose: Extract features from the input image.
<br>Details:

<br>Typically uses a pre-trained Convolutional Neural Network (e.g., ResNet or VGG) as the backbone.
<br>Outputs a feature map that encodes spatial and semantic information.
<br>This feature map is shared across the Region Proposal Network (RPN) and Region of Interest (ROI) processing.




<br>
Region Proposal Network (RPN)

<br>Purpose: Generate region proposals (potential object locations) efficiently.
<br>Key Steps:

<br>Sliding Window: Applies a small convolutional filter (e.g., 3x3) over the feature map.
<br>Anchor Boxes: Predefined boxes of different sizes and aspect ratios placed at each position in the sliding window.
<br>Classification: Determines whether each anchor contains an object (foreground) or not (background).
<br>Bounding Box Regression:

<br>Refines anchor box coordinates to better fit the object.




<br>Output: A set of region proposals with scores and refined coordinates.


<br>
ROI Head (Region of Interest Processing)

<br>Purpose: Perform classification and precise bounding box regression for each region proposal.
<br>Key Steps:


<br>ROI Pooling (or ROI Align):

<br>Extracts fixed-size feature maps from variable-sized region proposals.


<br>Fully Connected Layers:

<br>Processes the pooled features using fully connected layers.


<br>Final Predictions:

<br>Outputs the class label and refined bounding box coordinates for each proposal.




<br><img alt="Architecture Overview" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/i8R572.png" referrerpolicy="no-referrer"><br><br>
<br>Input an image into the backbone network to extract feature maps.
<br>The RPN generates region proposals (object-like areas) from the feature maps.
<br>The ROI Head processes the proposals, classifying them and refining their bounding box coordinates.
<br>Output the final detected objects with class labels and bounding boxes.
<br>Faster R-CNN is particularly suitable for tasks requiring high accuracy and detailed predictions, such as medical imaging, where precision is critical.<br><br>Split the annotation dataset into training (70%), validation (20%), and testing (10%).<br>import json
from sklearn.model_selection import train_test_split

# Load COCO annotations
with open('./output/annotations.json', 'r') as f:
    annotations = json.load(f)

# Split dataset
train_data, temp_data = train_test_split(annotations, test_size=0.3, random_state=42)
val_data, test_data = train_test_split(temp_data, test_size=0.33, random_state=42)  # 20% val, 10% test

# Save split annotations
with open('./output/train_annotations.json', 'w') as f:
    json.dump(train_data, f)
with open('./output/val_annotations.json', 'w') as f:
    json.dump(val_data, f)
with open('./output/test_annotations.json', 'w') as f:
    json.dump(test_data, f)
<br><br>Data augmentation is an essential preprocessing step to improve the robustness and generalizability of a machine learning model. By applying transformations like random horizontal flips, brightness adjustments, and other changes, the model becomes less likely to overfit and better equipped to handle variations in the input data. In this example, we define a set of augmentation transformations using PyTorch’s transforms module.<br>from torchvision import transforms

# Define transformations
data_transforms = transforms.Compose([
    transforms.ToTensor(),
    transforms.RandomHorizontalFlip(0.5),
    transforms.ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1)
])
<br><br><br>Faster R-CNN is a widely-used object detection model. Here, we initialize it with pre-trained weights on the COCO dataset to leverage the learned features as a starting point. The model is further customized by adjusting the box predictor to fit the specific dataset with one class of interest plus a background class. Load the Faster R-CNN model with a pre-trained backbone (e.g., ResNet50).<br>import torchvision
from torchvision.models.detection.faster_rcnn import FastRCNNPredictor

# Load Faster R-CNN pre-trained on COCO
model = torchvision.models.detection.fasterrcnn_resnet50_fpn(weights=True)

# Modify the box predictor to match our dataset (1 class + background)
num_classes = 2   # 1 (LGG) + 1 (background)
in_features = model.roi_heads.box_predictor.cls_score.in_features
model.roi_heads.box_predictor = FastRCNNPredictor(in_features, num_classes)
<br><br>The training process involves iterating over the training dataset, feeding the data to the model, computing the loss, and updating the model parameters through backpropagation.	And train for 200 epochs.  <br>The training loop is the core process where the model learns from the data. For each batch, the model performs a forward pass to compute the loss, followed by a backward pass to update the model parameters. This implementation uses PyTorch’s gradient-based optimization process. The train_one_epoch function trains the model for one epoch, tracking the average loss for monitoring progress.<br>from tqdm import tqdm

def train_one_epoch(model, dataloader, optimizer, device="cpu"):
    """
    Train the Faster R-CNN model for one epoch.

    Args:
        model (torch.nn.Module): Faster R-CNN model to train.
        dataloader (torch.utils.data.DataLoader): DataLoader for training data.
        optimizer (torch.optim.Optimizer): Optimizer for training.
        device (str or torch.device): Device to run the training on (default "cpu").

    Returns:
        float: Average training loss for the epoch.
    """
    model.train()  # Set the model to training mode
    total_loss = 0  # Track total loss
    for images, targets in tqdm(dataloader, desc="Training"):
        # Move data to device
        images = [img.to(device) for img in images]
        targets = [{k: v.to(device) for k, v in t.items()} for t in targets]
        # Forward pass and compute loss
        loss_dict = model(images, targets)  # Loss dictionary
        loss = sum(loss for loss in loss_dict.values())  # Total loss
        # Backward pass and optimization
        optimizer.zero_grad()
        loss.backward()
        optimizer.step()

        total_loss += loss.item()  # Accumulate loss
    # Compute average loss
    average_loss = total_loss / len(dataloader)
    # print(f"Training Loss: {average_loss:.4f}")
    return average_loss
<br><img alt="Training Loss" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/79dvmV.png" referrerpolicy="no-referrer"><br><br><br>Validation assesses the performance of the model on unseen data. This function evaluates the trained model and calculates essential metrics like mean Average Precision (mAP), precision, and recall. These metrics provide insights into the model’s ability to detect objects correctly and measure its overall effectiveness. Monitor key metrics such as mean Average Precision (mAP), recall, and precision.<br><br><br>def evaluate_manual_mAP(model, dataloader, device="cpu"):
    """
    Evaluate the Faster R-CNN model on the validation set and compute mAP manually.
    Args:
        model (torch.nn.Module): Faster R-CNN model to evaluate.
        dataloader (torch.utils.data.DataLoader): DataLoader for validation data.
        device (str or torch.device): Device to run the evaluation on (default "cpu").
    Returns:
        dict: Simplified metrics including mAP, precision, and recall.
    """
    model.eval()  # Set model to evaluation mode
    all_predictions = []
    all_targets = []

    with torch.no_grad():
        for images, targets in tqdm(dataloader, desc="Evaluating"):
            # Move data to device
            images = [img.to(device) for img in images]
            targets = [{k: v.to(device) for k, v in t.items()} for t in targets]
            # Forward pass to get predictions
            outputs = model(images)
            # Store predictions and targets
            all_predictions.extend(outputs)
            all_targets.extend(targets)

    # Compute mAP manually (example implementation)
    metrics = compute_metrics(all_predictions, all_targets)
    # print(f"Validation - mAP: {metrics['map']:.4f}, Precision: {metrics['precision']:.4f}, Recall: {metrics['recall']:.4f}")
    return metrics
<br><img alt="Validation" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/AJDD4K.png" referrerpolicy="no-referrer"><br><br>Evaluate the model on the test set and provide both quantitative metrics and qualitative outputs (detected bounding boxes overlaid on test images).<br><br>import torch
from torch.optim import AdamW
from torch.utils.data import DataLoader
from torchvision.models.detection import fasterrcnn_resnet50_fpn

device = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')
model = fasterrcnn_resnet50_fpn(weights=True).to(device)
optimizer = AdamW(model.parameters(), lr=0.0001, weight_decay=0.0001)

num_epochs = 200
train_loss_history = []
val_mAP_history=[]
val_precis_history=[]
val_recall_history=[]
best_map=-1

# Training
for epoch in range(num_epochs):
    print(f"Epoch {epoch + 1}/{num_epochs}")
    train_loss = train_one_epoch(model, train_loader, optimizer, device)
    train_loss_history.append(train_loss)
    print(f"Epoch {epoch + 1} Training Loss: {train_loss:.4f}")    
    # Replace evaluate with evaluate_manual_mAP
    metrics = evaluate_manual_mAP(model, val_loader, device)
    val_mAP_history.append(metrics['map'])
    val_precis_history.append(metrics['precision'])
    val_recall_history.append(metrics['recall'])
    # Check for improvement in mAP
    if metrics['map'] &gt; best_map:
        best_map = metrics['map']
        print(f"Validation - mAP: {metrics['map']:.4f}, Precision: {metrics['precision']:.4f}, Recall: {metrics['recall']:.4f}")
        print("New best mAP achieved! Saving model.")
        # Save the model state if mAP improves
        torch.save(model.state_dict(), 'best_model.pth')

<br><img alt="Results and Analysis" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/CRf4HK.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/computer-vision/assignment/cv-as-3.html</link><guid isPermaLink="false">Computer Vision/Assignment/CV-As-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 10 Dec 2024 03:52:13 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/KW61o1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/KW61o1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Lab Report: Image Processing with 2D Discrete Fourier Transform (DFT) and Inverse DFT]]></title><description><![CDATA[ 
 <br><br><br><br>I start by resizing the image to , which allows it to be divided cleanly into 256 blocks with shape   for DFT analysis.<br>   # Load the grayscale image
   img_path = "lena.jpg"  # Replace with the actual path to the image
   image = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
   image = cv2.resize(image, (128,128))
   # Convert the image to a 2D list
   image_list = image.tolist()
<br><br>According to the formula of 2D Fourier Transform<br><br>This formula transforms the spatial domain image   into the frequency domain representation   . It can be broken down into two main components:<br>
<br>Spatial Component    - the original image in the spatial domain. 
<br>Exponential Term  - the Fourier kernel, which captures the transformation from spatial coordinates  to frequency coordinates .
<br>This exponential term can be precomputed and stored in a 4D matrix to improve computational efficiency. By preprocessing and storing this kernel in memory, we can reuse it when calculating the DFT for each block of the image.<br><br>Take a  gray scales images as an example<br>For an image of size   , if you divide it into 256 blocks with shape , the precomputed kernel matrix will have the shape   . This kernel can then be used to calculate the DFT for all 256 blocks without recalculating the kernel for each one. This preprocessing is especially beneficial because it avoids repetitive computation and accelerates the DFT calculation across multiple blocks.<br><br>Since the similar expression between DFT and IDFT, we can also preprocess the IDFT kernel matrix in the same way.<br><br><br>Here is the code to preprocess the DFT and IDFT kernel matrices:<br>	def preprocess_dft_kernel(M, N):
	       dft_kernel = [[[[0+0j for _ in range(N)] for _ in range(M)] for _ in range(N)] for _ in range(M)]
	       for u in range(M):
	           for v in range(N):
	               for x in range(M):
	                   for y in range(N):
	                       dft_kernel[u][v][x][y] = np.exp(-2j * math.pi * ((u * x) / M + (v * y) / N))
	       return dft_kernel
	
	def preprocess_idft_kernel(M, N):
	       idft_kernel = [[[[0+0j for _ in range(N)] for _ in range(M)] for _ in range(N)] for _ in range(M)]
	       for u in range(M):
	           for v in range(N):
	               for x in range(M):
	                   for y in range(N):
	                       idft_kernel[u][v][x][y] = np.exp(2j * math.pi * ((u * x) / M + (v * y) / N))
	       return idft_kernel   
<br><br>Next, I split the resized image into  blocks for localized DFT processing.<br>   def split_into_blocks(matrix, block_size=8):
       M = len(matrix)
       N = len(matrix[0])
       blocks = []
       for i in range(0, M, block_size):
           for j in range(0, N, block_size):
               block = [row[j:j+block_size] for row in matrix[i:i+block_size]]
               blocks.append(block)
       return blocks
   # Split image into blocks
   block_size = 8
   blocks = split_into_blocks(image_list, block_size)
<br><br>By using the preprocessed DFT kernel, I apply the 2D DFT to each block to transform it into the frequency domain.<br>	def dft_2d(block):
	    M, N = len(block), len(block[0])
	    global dft_kernel
	    dft_result = [[0+0j for _ in range(N)] for _ in range(M)]
	    for u in range(M):
	        for v in range(N):
	            sum_val = 0
	            for x in range(M):
	                for y in range(N):
	                    sum_val += block[x][y] * dft_kernel[u][v][x][y]
	            dft_result[u][v] = sum_val
	    return dft_result
	
	# Preprocess DFT kernel and compute DFT for each block
	dft_kernel = preprocess_dft_kernel(block_size, block_size)
	dft_blocks = [dft_2d(block) for block in blocks]
<br><br>The formulas in the image represent the amplitude and phase of a complex number ( F(u, v) ), typically the result of a Fourier Transform. They are given by:<br><br><br>This is the magnitude of  and can be calculated as:<br><br><br><br>This represents the angle of ( F(u, v) ) in the complex plane, calculated as:<br><br>Here is the code to compute the amplitude and phase for each block:<br>	def compute_amplitude_phase(dft_block):
		M, N = len(dft_block), len(dft_block[0])
	    amplitude = [[0 for _ in range(N)] for _ in range(M)]
	    phase = [[0 for _ in range(N)] for _ in range(M)]
	    for i in range(M):
	        for j in range(N):
	            amplitude[i][j] = (dft_block[i][j].real**2 + dft_block[i][j].imag**2)**0.5
	            phase[i][j] = math.atan2(dft_block[i][j].imag, dft_block[i][j].real)
	    return amplitude, phase
	
	# Compute amplitude for each DFT block
	amplitude_blocks = [compute_amplitude_phase(block)[0] for block in dft_blocks]
	# Compute phase for each DFT block
	phase_blocks = [compute_amplitude_phase(block)[1] for block in dft_blocks]
<br><br>Finally, we apply the 2D IDFT to each block, transforming it back to the spatial domain.<br>	def idft_2d(dft_block):
	    M, N = len(dft_block), len(dft_block[0])
	    global idft_kernel
	    idft_result = [[0+0j for _ in range(N)] for _ in range(M)]
	    for x in range(M):
	        for y in range(N):
	        	sum_val = 0
	            for u in range(M):
	                for v in range(N):
	                    sum_val += dft_block[u][v] * idft_kernel[u][v][x][y]  
	            idft_result[x][y] = sum_val / (M * N)
	    return idft_result
	
	# Preprocess IDFT kernel and compute IDFT for each DFT block
	idft_kernel = preprocess_idft_kernel(block_size, block_size)
	idft_blocks = [idft_2d(block) for block in dft_blocks]
<br><br>After applying the IDFT, I merge the blocks back by the order of division to obtain the reconstructed image and visualize the results.<br>   def merge_blocks(blocks, original_shape, block_size=8):
       M, N = original_shape
       merged_matrix = [[0 for _ in range(N)] for _ in range(M)]
       block_index = 0
       for i in range(0, M, block_size):
           for j in range(0, N, block_size):
               block = blocks[block_index]
               for x in range(len(block)):
                   for y in range(len(block[0])):
                       merged_matrix[i + x][j + y] = block[x][y]
               block_index += 1
       return merged_matrix

   # Merge blocks to reconstruct the image
   reconstructed_image = merge_blocks(idft_blocks, (128, 128), block_size)
   reconstructed_image_np = np.array([[z.real for z in row] for row in reconstructed_image])
<br><br>After dividing the () image into 256 blocks, I performed a Fourier Transform on each individual block. This process resulted in 256 separate amplitude and phase maps, which I then combined into a single composite image for visualization.<br>For the reconstruction of the original image, I applied the inverse Fourier Transform to each block separately. Finally, I reassembled the blocks in their original positions, following the same layout as the initial division, to form the complete reconstructed image. <br><br>Lena reconstructed image:<br><img alt="lena_reconstructed" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/lena_reconstructed.png" referrerpolicy="no-referrer"><br>Lena DFT Phase Blocks image:<br><img alt="lena_phase_blocks" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/lena_phase_blocks.png" referrerpolicy="no-referrer"><br>Lena DFT Amplitude Blocks image:<br><img alt="lena_amplitude_blocks" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/lena_amplitude_blocks.png" referrerpolicy="no-referrer"><br>Lena DFT Blocks image:<br><img alt="lena_dft_blocks" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/lena_dft_blocks.png" referrerpolicy="no-referrer"><br><br>Cartoon Photo reconstructed image:<br><img alt="cartoon_reconstructed" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/cartoon_reconstructed.png" referrerpolicy="no-referrer"><br>Cartoon  Photo DFT Phase Blocks image:<br><img alt="cartoon_phase_blocks" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/cartoon_phase_blocks.png" referrerpolicy="no-referrer"><br>Cartoon Photo DFT Amplitude Blocks image:<br><img alt="cartoon_amplitude_blocks" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/cartoon_amplitude_blocks.png" referrerpolicy="no-referrer"><br>Cartoon Photo DFT Blocks image:<br><img alt="cartoon_dft_blocks" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/cartoon_dft_blocks.png" referrerpolicy="no-referrer"><br><br><img alt="Fourier Transform" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/OgmonS.png" referrerpolicy="no-referrer"><br><img alt="Fourier Transform" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/r7IyAq.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/computer-vision/assignment/cv-as-1.html</link><guid isPermaLink="false">Computer Vision/Assignment/CV-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 08 Dec 2024 12:40:40 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/lena_reconstructed.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/lena_reconstructed.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Lab Report: Digit Classification Using Deep Learning Architectures]]></title><description><![CDATA[ 
 <br><br><br>This lab report presents a digit classification task on image data using VGG-16 and ResNet-18 neural networks. The workflow includes data preprocessing, model training, evaluation, and predictions, leveraging PyTorch for model development.<br><br>The dataset is divided into training, validation, and prediction sets:<br>
<br>Training Set: 7,000 samples for training the model.
<br>Validation Set: 35,000 samples for evaluating model performance.
<br>Prediction Set: 28,000 unlabeled samples for generating final predictions.
<br>The preprocessing steps include resizing the images, normalizing pixel values, and one-hot encoding the labels.<br>Steps:<br>
<br>Load Data: The data is loaded from CSV files and divided into training and validation sets.
<br>One-Hot Encoding: Labels are converted to one-hot encoded vectors for multi-class classification.
<br>Normalization and Reshaping: Pixel values are normalized (divided by 255), and data is reshaped to fit the model’s input size (batch size, channel, height, width).
<br>This preprocessing ensures the data is ready for training the deep learning model, with correctly shaped tensors and normalized inputs for efficient learning.<br><br>A deep convolutional neural network model with 16 layers. It can be divided into two parts: feature extraction and classification. The feature extraction part consists of convolutional and pooling layers, while the classification part consists of fully connected layers.<br><br>Feature extraction involves stacking 5 VGG blocks.<br>And Each VGG block consists of multiple convolutional layers followed by batch normalization and ReLU activation.<br><br>Extract Features:<br>self.features = nn.Sequential(
	# Block 1: 2Conv + 1MaxPool
    self.vgg_block(num_convs=2, in_channels=1, out_channels=64), # 1*224*224 -&gt; 64*112*112
	# Block 2: 2Conv + 1MaxPool
    self.vgg_block(num_convs=2, in_channels=64, out_channels=128), # 64*112*112 -&gt; 128*56*56
	# Block 3: 3Conv + 1MaxPool
    self.vgg_block(num_convs=3, in_channels=128, out_channels=256), # 128*56*56 -&gt; 256*28*28
    # Block 4: 3Conv + 1MaxPool
    self.vgg_block(num_convs=3, in_channels=256, out_channels=512), # 256*28*28 -&gt; 512*14*14
	# Block 5: 3Conv + 1MaxPool
    self.vgg_block(num_convs=3, in_channels=512, out_channels=512), # 512*14*14 -&gt; 512*7*7
)
<br>VGG Block:<br>def vgg_block(self, num_convs, in_channels, out_channels):
    layers = []
    for _ in range(num_convs): # (1 conv + 1 relu) * num_convs
       layers.append(nn.Conv2d(in_channels, out_channels,
                                kernel_size=3, padding=1))
        layers.append(nn.BatchNorm2d(out_channels))  # Batch Normalization
        layers.append(nn.ReLU(inplace=True))
        in_channels = out_channels
    layers.append(nn.MaxPool2d(kernel_size=2, stride=2)) # 1 MaxPool
    return nn.Sequential(*layers)
<br><br>After feature extraction, the classifier fully connects the extracted features to output classes. The classifier consists of:<br>
<br>Two fully connected (linear) layers, each followed by ReLU activation.
<br>The final fully connected layer maps the outputs to 10 classes (assuming digit classification with 10 categories).
<br>self.classifier = nn.Sequential(
    nn.Linear(512 * 7 * 7, 4096), # 512*7*7 -&gt; 4096
    nn.ReLU(inplace=True), 
    nn.Linear(4096, 4096),  # 4096 -&gt; 4096
    nn.ReLU(inplace=True), 
    nn.Linear(4096, num_classes),   # 4096 -&gt; 10
)
<br><br>The forward method defines how data flows through the network:<br>
<br>Input passes through the feature extractor (self.features) consisting of VGG blocks.
<br>The output is flattened into a 1D tensor.
<br>Flattened data is passed through the classifier to produce the final output.
<br>def forward(self, x):
        x = self.features(x)  # 5 VGG blocks
        x = torch.flatten(x, start_dim=1) # flatten
        x = self.classifier(x)  # 3 FC layers
        return x
<br><br>ResNet-18 is a deep neural network architecture designed with residual blocks to allow training of very deep networks by addressing the vanishing gradient problem. This model can be divided into three main parts: preprocessing, residual feature extraction, and classification.<br><br>The preprocessing layer is the initial layer of ResNet-18, which prepares the input for deeper layers by reducing its size. This layer consists of:<br>
<br>A 7x7 convolutional layer with 64 output channels, stride of 2, and padding of 3, followed by batch normalization and ReLU activation.
<br>A 3x3 max pooling layer with a stride of 2 for downsampling, resulting in reduced spatial dimensions.
<br>Preprocessing:<br>self.preprocess = nn.Sequential(
    nn.Conv2d(in_channels, 64, kernel_size=7, stride=2, padding=3),  # 1x224x224 -&gt; 64x112x112
    nn.BatchNorm2d(64),  # Batch Normalization
    nn.ReLU(inplace=True),  # ReLU
    nn.MaxPool2d(kernel_size=3, stride=2, padding=1)  # 64x112x112 -&gt; 64x56x56
)
<br><br>The Residual Block is the core building block of ResNet. It consists of two 3x3 convolutional layers followed by batch normalization and ReLU activation. Additionally, the block has a shortcut connection that adds the input directly to the output of the convolutional layers, allowing the network to "skip" layers, which helps mitigate vanishing gradients.<br>
<br>Identity Mapping: If the number of input and output channels is the same, the input is directly added to the output.
<br>1x1 Convolution (Downsampling): When there is a change in dimensions or channel depth, a 1x1 convolution is used to match the dimensions before the addition operation.
<br>Residual Block:<br>class Residual(nn.Module):
    def __init__(self, in_channels, out_channels, use_1x1conv=False, stride=1):
        super(Residual, self).__init__()
        # 3x3 Conv layer
        self.conv1 = nn.Conv2d(in_channels, out_channels, kernel_size=3, stride=stride, padding=1)
        self.bn1 = nn.BatchNorm2d(out_channels)
        self.conv2 = nn.Conv2d(out_channels, out_channels, kernel_size=3, stride=1, padding=1)
        self.bn2 = nn.BatchNorm2d(out_channels)
        # 1x1 Conv layer for down-sampling
        self.conv3 = nn.Conv2d(in_channels, out_channels, kernel_size=1, stride=stride, bias=False) if use_1x1conv else None

    def forward(self, x):
        identity = x  # Save the input for residual connection
        out = F.relu(self.bn1(self.conv1(x)))  # 3x3 Conv -&gt; BN -&gt; ReLU
        out = self.bn2(self.conv2(out))  # 3x3 Conv -&gt; BN
        # If the number of channels changes or the spatial dimensions change, use 1x1 Conv for down-sampling
        if self.conv3:
            identity = self.conv3(x)
        out += identity
        return F.relu(out)  # Apply ReLU activation at the end
<br><br>The feature extraction part is composed of four groups of residual blocks:<br>
<br>Each group has a specific number of output channels (64, 128, 256, 512).
<br>The stride of the first block in each group is set to downsample the spatial dimensions, while the subsequent blocks in the group maintain the spatial dimensions.
<br>Code for Residual Block Groups:<br>self.features = nn.Sequential(
    self.residual_block(64, 64, 2, stride=1),  # 64x56x56 -&gt; 64x56x56
    self.residual_block(64, 128, 2, stride=2),  # 64x56x56 -&gt; 128x28x28
    self.residual_block(128, 256, 2, stride=2),  # 128x28x28 -&gt; 256x14x14
    self.residual_block(256, 512, 2, stride=2),  # 256x14x14 -&gt; 512x7x7
)
<br><br>The classifier consists of:<br>
<br>An adaptive average pooling layer, which reduces the spatial dimensions to 1x1.
<br>A fully connected (linear) layer that maps the final features to the number of classes (10 in this case, assuming a digit classification task).
<br>Classifier:<br>self.classifier = nn.Sequential(
    nn.AdaptiveAvgPool2d((1, 1)),  # Adaptive average pooling layer
    nn.Flatten(),  # Flatten
    nn.Linear(512, num_classes)  # Fully connected layer
)
<br><br>The forward method defines the data flow through the ResNet model:<br>
<br>Input passes through the preprocessing layer.
<br>The result is then passed through the residual blocks.
<br>The output is pooled, flattened, and passed through the classifier to obtain the final predictions.
<br>Forward Pass Code:<br>def forward(self, x):
    x = self.preprocess(x)
    x = self.features(x)
    x = self.classifier(x)          
    return x
<br><br>The models were trained using the Adam optimizer and a categorical cross-entropy loss function. Training involved feeding augmented data batches through the network, optimizing weights iteratively.<br>optimizer = optim.Adam(model.parameters(), lr=0.001)
for epoch in range(num_epochs):
    train(train_loader, model, loss_fn, optimizer)
<br><br>After training, the models were evaluated using accuracy, precision, recall, and F1-score metrics to assess their performance on validation data.<br><br>Both VGG-16 and ResNet-18 performed well on the digit classification task, achieving accuracy above 96%. The key differences lie in training speed and computational efficiency:<br>
<br>
VGG-16: Achieved slightly higher accuracy (96.51%) but required longer training time due to its high parameter count, especially in fully connected layers. This makes it effective for tasks with moderate complexity, though it has a larger memory footprint.

<br>
ResNet-18: Trained faster due to its residual connections, which improve gradient flow and reduce the risk of vanishing gradients. Its architecture, with fewer parameters, is more memory-efficient, making it suitable for deeper networks or larger datasets.

<br>In summary, VGG-16 is advantageous when simplicity and interpretability are key, while ResNet-18 offers efficiency and scalability, especially useful in resource-constrained environments or for more complex tasks.<br><br><img alt="Visualization" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/00ftRr.png" referrerpolicy="no-referrer"><br><br><img alt="ResNet-18" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Tvkhb6.png" referrerpolicy="no-referrer"><br><br><br><br><br>Xavier Initialization is designed to maintain the variance of activations across layers. It works well with layers that use sigmoid or tanh activations.<br>Formula:<br><br>where  is the number of input units, and  is the number of output units for the layer.<br>Usage: Applied to models where activation functions like tanh or sigmoid are used. It helps maintain the activation variance, avoiding issues with vanishing or exploding gradients.<br><br>Kaiming Initialization is tailored for layers with ReLU activations. It adjusts for the fact that ReLU outputs are zero for half the inputs, which can cause gradients to vanish if not handled properly.<br>Formula:<br><br>where  is the number of input units.<br>Usage: Commonly used in CNNs with ReLU layers, such as VGG and ResNet models. It preserves the variance of gradients, which helps maintain effective backpropagation in deep networks.<br><br>
<br>VGG-16 and ResNet-18 both benefit from Kaiming Initialization due to their reliance on ReLU activations.
<br>Xavier Initialization is an alternative when experiment with different activation functions, such as tanh.
<br>These initializations ensure effective gradient flow, improve convergence, and reduce the risk of vanishing or exploding gradients.<br><br><br>Batch Normalization normalizes inputs across a mini-batch, reducing internal covariate shift and helping to stabilize training. It is applied after convolutional layers in both VGG and ResNet models, accelerating convergence and improving gradient flow.<br>Formula:<br><br>Benefits: Reduces sensitivity to initialization, improves regularization, and stabilizes gradients.<br><br>Layer Normalization normalizes inputs across all features for each sample, independent of batch size. It’s ideal for RNNs and small batch sizes.<br>Formula:<br><br>Benefits: Suitable for tasks with variable-length sequences, especially useful in RNNs and NLP models.<br><br>Instance Normalization normalizes each sample in a batch independently, typically used in tasks like style transfer where each sample has unique features.<br>Formula:<br><br>Benefits: Retains unique sample characteristics, less reliant on batch statistics.<br><br>Group Normalization splits channels into groups and normalizes each group independently, useful for small-batch training.<br>Formula:<br><br>Benefits: Reduces reliance on large batches, ideal for segmentation and detection tasks.<br><br><br>This experiment successfully implemented and evaluated VGG-16 and ResNet-18 architectures for handwritten digit classification. Through data preprocessing, model training, and evaluation, the results demonstrated that both models effectively classify digit images with high accuracy. Batch Normalization, Kaiming Initialization, and efficient use of ReLU activations contributed to stable training and strong model performance.<br>While both models achieved similar accuracy, ResNet-18 showed faster training due to its optimized residual blocks, which improve gradient flow in deeper networks. Further improvements could be achieved by experimenting with different normalization techniques (e.g., Layer, Instance, and Group Normalization) and weight initializations to optimize convergence further. Additionally, exploring hyperparameter tuning, advanced data augmentation, and other architectures, such as deeper ResNet variants, could enhance classification accuracy and robustness for more complex tasks.]]></description><link>https://www.allenygy.vip/computer-vision/assignment/cv-as-2.html</link><guid isPermaLink="false">Computer Vision/Assignment/CV-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 08 Dec 2024 12:40:44 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/00ftRr.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/00ftRr.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CV-HW-3]]></title><description><![CDATA[ 
 <br><br><br><br>Using a Gaussian filter to smooth the image and then downsample the image by a factor of 2.<br>
We can apply twice the 1D Gaussian filter to the image in the x direction and then in the y direction. then we can downsample the image by a factor of 2 in the x direction and then in the y direction.<br><br>Suppose the image is a 2D matrix.<br> with size <br>The Gaussian filter is a 2D matrix<br><br>The Downsample matrix is a 2D matrix.<br><br><br><br><br><br><br>The downsampled image is<br><br>import random
import numpy as np
def generate_matrix():
    matrix = []
    random.seed(0)
    for i in range(8):
        row = []
        for j in range(8):
            row.append(random.randint(0, 9))
        matrix.append(row)
    return matrix
def downsample(matrix, G_x, G_y):
    print("Apply G_x to matrix")
    new_matrix = np.matmul(G_x, matrix)*0.0625
    print(new_matrix)
    print("Apply G_y to new_matrix")
    new_matrix = np.matmul(new_matrix, G_y)*0.0625
    print("Downsampled Matrix:")
    print(new_matrix)
    return new_matrix

G_x = [[6, 4, 1, 0, 0, 0, 0, 0], [1, 4, 6, 4, 1, 0, 0, 0],   [0, 0, 1, 4, 6, 4, 1, 0], [0, 0, 0, 0, 1, 4, 6, 4]]

G_y = [[6,1,0,0],
       [4,4,0,0],
       [1,6,1,0],
       [0,4,4,0],
       [0,1,6,1],
       [0,0,4,4],
       [0,0,1,6],
       [0,0,0,4]]

matrix = generate_matrix()
matrix = np.array(matrix)
G_x = np.array(G_x)
G_y = np.array(G_y)
print("Original Matrix:")
print(matrix)

print("G_x:")
print(G_x)
print("G_y:")
print(G_y)

downsampled_matrix = downsample(matrix, G_x, G_y)
<br><br>    Original Matrix (8x8):
    [[6 6 0 4 8 7 6 4]
     [7 5 9 3 8 2 4 2]
     [1 9 4 8 9 2 4 1]
     [1 5 7 8 1 5 6 5]
     [9 3 8 7 7 8 4 0]
     [8 0 1 6 0 9 7 5]
     [3 5 1 3 9 3 3 2]
     [8 7 1 1 5 8 7 1]]
    
    G_x Filter:
    [[6 4 1 0 0 0 0 0]
     [1 4 6 4 1 0 0 0]
     [0 0 1 4 6 4 1 0]
     [0 0 0 0 1 4 6 4]]
    
    G_y Filter:
    [[6 1 0 0]
     [4 4 0 0]
     [1 6 1 0]
     [0 4 4 0]
     [0 1 6 1]
     [0 0 4 4]
     [0 0 1 6]
     [0 0 0 4]]
    Apply G_x to matrix
    [[4.0625 4.0625 2.5    2.75   5.5625 3.25   3.5    2.0625]
     [3.3125 6.4375 6.     6.4375 6.5625 3.4375 4.625  2.375 ]
     [5.875  3.25   5.3125 6.8125 4.     6.8125 5.1875 2.6875]
     [5.6875 3.8125 1.375  3.3125 5.0625 5.875  4.875  2.25  ]]
    Apply G_y to new_matrix
    Downsampled Matrix:
    [[2.6953125  3.2421875  3.9609375  2.98828125]
     [3.2265625  6.0859375  5.59375    3.59765625]
     [3.34765625 5.125      5.5625     4.5703125 ]
     [3.171875   2.96875    4.5859375  4.17578125]]
<br><br><br>Firstly, fill the zeros in the image by the nearest neighbor interpolation.<br>
Then apply the 2D Gaussian filter to the image.<br>Suppose the image is a 2D matrix  with size .<br>Insert zeros in the image to get a new image  with size .<br>The Gaussian filter is a 2D matrix<br><br><br>import numpy as np
from scipy.ndimage import convolve

def upsample(matrix, G):
    print("Original Matrix (4x4):")
    print(matrix)
    
    new_matrix = np.zeros((8, 8))    
    new_matrix[::2, ::2] = matrix
    print("\nUpsampled Matrix (Insert Zeros):")
    print(new_matrix)
    
    new_matrix = convolve(new_matrix, G, mode='reflect')
    
    print("\nUpsampled Matrix (After Applying Gaussian Filter):")
    print(new_matrix)
    
    return new_matrix

matrix = generate_matrix(4)
matrix = np.array(matrix)

G = [[1, 2, 1], [2, 4, 2], [1, 2, 1]]
G = np.array(G)

upsampled_matrix = upsample(matrix, G)



<br><br>    Original Matrix (4x4):
    [[6 6 0 4]
     [8 7 6 4]
     [7 5 9 3]
     [8 2 4 2]]
    
    Upsampled Matrix (Insert Zeros):
    [[6. 0. 6. 0. 0. 0. 4. 0.]
     [0. 0. 0. 0. 0. 0. 0. 0.]
     [8. 0. 7. 0. 6. 0. 4. 0.]
     [0. 0. 0. 0. 0. 0. 0. 0.]
     [7. 0. 5. 0. 9. 0. 3. 0.]
     [0. 0. 0. 0. 0. 0. 0. 0.]
     [8. 0. 2. 0. 4. 0. 2. 0.]
     [0. 0. 0. 0. 0. 0. 0. 0.]]
    
    Upsampled Matrix (After Applying Gaussian Filter):
    [[54. 36. 36. 18.  0. 12. 24. 12.]
     [42. 27. 26. 19. 12. 14. 16.  8.]
     [48. 30. 28. 26. 24. 20. 16.  8.]
     [45. 27. 24. 27. 30. 22. 14.  7.]
     [42. 24. 20. 28. 36. 24. 12.  6.]
     [45. 22. 14. 20. 26. 18. 10.  5.]
     [48. 20.  8. 12. 16. 12.  8.  4.]
     [24. 10.  4.  6.  8.  6.  4.  2.]]
<br><br><br>Downsample the image by a factor of 2 and then upsample the image by a factor of 2.<br>
The Laplacian filter can be get by using the original image minus the upsampled image.<br><br>matrix = generate_matrix(8)
matrix = np.array(matrix)

downsampled_matrix = downsample(matrix, G_x, G_y)
upsampled_matrix = upsample(downsampled_matrix, G)

laplacian_matrix = matrix - upsampled_matrix

print("\nLaplacian Matrix:")
print(laplacian_matrix)

<br><br>
    Downsampled Matrix:
    [[2.6953125  3.2421875  3.9609375  2.98828125]
     [3.2265625  6.0859375  5.59375    3.59765625]
     [3.34765625 5.125      5.5625     4.5703125 ]
     [3.171875   2.96875    4.5859375  4.17578125]]

    Upsampled Matrix (Insert Zeros):
    [[2.6953125  0.         3.2421875  0.         3.9609375  0.
      2.98828125 0.        ]
     [0.         0.         0.         0.         0.         0.
      0.         0.        ]
     [3.2265625  0.         6.0859375  0.         5.59375    0.
      3.59765625 0.        ]
     [0.         0.         0.         0.         0.         0.
      0.         0.        ]
     [3.34765625 0.         5.125      0.         5.5625     0.
      4.5703125  0.        ]
     [0.         0.         0.         0.         0.         0.
      0.         0.        ]
     [3.171875   0.         2.96875    0.         4.5859375  0.
      4.17578125 0.        ]
     [0.         0.         0.         0.         0.         0.
      0.         0.        ]]
    
    Upsampled Matrix (After Applying Gaussian Filter):
    [[24.2578125  17.8125     19.453125   21.609375   23.765625   20.84765625
      17.9296875   8.96484375]
     [17.765625   15.25       18.65625    18.8828125  19.109375   16.140625
      13.171875    6.5859375 ]
     [19.359375   18.625      24.34375    23.359375   22.375      18.3828125
      14.390625    7.1953125 ]
     [19.72265625 17.78515625 22.421875   22.3671875  22.3125     19.32421875
      16.3359375   8.16796875]
     [20.0859375  16.9453125  20.5        21.375      22.25       20.265625
      18.28125     9.140625  ]
     [19.55859375 14.61328125 16.1875     18.2421875  20.296875   18.89453125
      17.4921875   8.74609375]
     [19.03125    12.28125    11.875      15.109375   18.34375    17.5234375
      16.703125    8.3515625 ]
     [ 9.515625    6.140625    5.9375      7.5546875   9.171875    8.76171875
       8.3515625   4.17578125]]
    
    Laplacian Matrix:
    [[-18.2578125  -11.8125     -19.453125   -17.609375   -15.765625
      -13.84765625 -11.9296875   -4.96484375]
     [-10.765625   -10.25        -9.65625    -15.8828125  -11.109375
      -14.140625    -9.171875    -4.5859375 ]
     [-18.359375    -9.625      -20.34375    -15.359375   -13.375
      -16.3828125  -10.390625    -6.1953125 ]
     [-18.72265625 -12.78515625 -15.421875   -14.3671875  -21.3125
      -14.32421875 -10.3359375   -3.16796875]
     [-11.0859375  -13.9453125  -12.5        -14.375      -15.25
      -12.265625   -14.28125     -9.140625  ]
     [-11.55859375 -14.61328125 -15.1875     -12.2421875  -20.296875
       -9.89453125 -10.4921875   -3.74609375]
     [-16.03125     -7.28125    -10.875      -12.109375    -9.34375
      -14.5234375  -13.703125    -6.3515625 ]
     [ -1.515625     0.859375    -4.9375      -6.5546875   -4.171875
       -0.76171875  -1.3515625   -3.17578125]]
]]></description><link>https://www.allenygy.vip/computer-vision/homework/cv-hw-3.html</link><guid isPermaLink="false">Computer Vision/Homework/CV-HW-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[CV-HW-2]]></title><description><![CDATA[ 
 <br><br>Given an image, filter the image with cross-correlation and convolution, respectively.<br>Cross-correlation:<br><br>Filter:<br><br>Result:<br><br>Convolution:<br><br>Filter:<br><br>Result:<br>]]></description><link>https://www.allenygy.vip/computer-vision/homework/cv-hw-2.html</link><guid isPermaLink="false">Computer Vision/Homework/CV-HW-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[CV-HW-1]]></title><description><![CDATA[ 
 <br><br>
<br>
How many more colors human can distinguish compared with shrimp? Why?

<br>Humans can distinguish around 10 million colors, while mantis shrimp detect more spectral bands with their 16 photoreceptor types.
<br>Humans may be better at distinguishing colors because their brains have more processing power.


<br>
What light spectrum range human can see?

<br>Humans can see light in the range of 400nm to 700nm


<br>
What is hyperspectral imaging? And its applications？

<br>Hyperspectral imaging captures images of many spectral bands beyond visible light.
<br>It is used in astronomy, precision agriculture and environmental monitoring.


<br>
What’s the history of animal vision? History of computer vision?

<br>Animal vision evolved from simple eye points to complex eyes with rods and cones to detect color and light.
<br>Computer vision began as basic image recognition in the 1960s and evolved with the development of deep learning in the early 2000s, and is now used in areas such as self-driving cars and medical imaging.


]]></description><link>https://www.allenygy.vip/computer-vision/homework/cv-hw-1.html</link><guid isPermaLink="false">Computer Vision/Homework/CV-HW-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[CV-Attention]]></title><description><![CDATA[ 
 <br><br><br><img alt="Self-Attention" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/H7g1OK.png" referrerpolicy="no-referrer"><br><img alt="Attention Score" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/XmJ9Az.png" referrerpolicy="no-referrer"><br>Attention Score:	<br>
<br>
<br>
<br>
<br>
<br>
<br><br>
<br>
	<br>
<br><img alt="Attention Score" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/A2bbOS.png" referrerpolicy="no-referrer"><br><img alt="Attention Score" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/26McqL.png" referrerpolicy="no-referrer"><br><img alt="Attention" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/DHtdyL.png" referrerpolicy="no-referrer"><br><br><br><br><img alt="Attention Score" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Rn5K29.png" referrerpolicy="no-referrer"><br><br><br><img alt="Attention" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/rBx59a.png" referrerpolicy="no-referrer"><br><br>Take away:<br><img alt="Attention Mechanism" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/kdtXFD.png" referrerpolicy="no-referrer"><br><br><br><br><br><br><br><br><img alt="Multi-Head Attention" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/35tgmU.png" referrerpolicy="no-referrer"><br>]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-attention.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Attention.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 15:51:10 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/H7g1OK.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/H7g1OK.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CV-Generate Model]]></title><description><![CDATA[ 
 <br><br><br><br>]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-generate-model.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Generate Model.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 21 Dec 2024 03:31:03 GMT</pubDate></item><item><title><![CDATA[CV-Netural Network]]></title><description><![CDATA[ 
 <br><br><br>Cross-entropy loss is a commonly used loss function for classification tasks, particularly in multi-class problems. The loss function is defined as:<br><br>where:<br>
<br> is the ground truth label (one-hot encoded).
<br> is the predicted probability for class k,
<br> is the total number of classes.
<br><br>Multi-Class Classification: Cross-entropy is widely used in deep learning models for tasks like image classification (e.g., CNNs, transformers). <br>
<br>It is often paired with the softmax activation function in the output neural networks.
<br><br>
<br>Encourages confident and correct predictions.
<br>Can handle imbalanced data by incorporating class weights.
<br><br>Cross validation: measure prediction error on validation data. <br>Underfitting <br>
<br>add more parameters (more features, more layers, etc.)
<br>Overfitting <br>
<br>remove parameters
<br>add regularizers
<br>Regularization<br><br><br><br>Nonlinearity in neural networks is introduced through activation functions. These functions are applied to the output of each neuron to introduce nonlinearity, enabling the network to learn complex patterns.<br><br><br><br><br><br><br>
<br>Sigmoid and Tanh squash large inputs, leading to small gradients for large inputs, which hampers training in deep networks.
<br>ReLU and its variants alleviate this issue by allowing gradients to flow for positive inputs.
<br><br>
<br>ReLU is computationally simple (), making it efficient for large networks.
<br>Swish and GELU are more computationally intensive.
<br><br>
<br>ReLU and its variants deactivate neurons for negative inputs, improving computational efficiency.
<br><br>
<br>Tanh is zero-centered, helping optimization by balancing gradients.
<br>Sigmoid is not zero-centered, potentially slowing convergence.
<br><br>
<br>Leaky ReLU and PReLU handle negative inputs, avoiding dead neurons.
<br>Sigmoid and Tanh output non-negative values, which may not be ideal in some cases.
<br><br>
<br>Softmax is used in classification tasks to produce probabilities for each class, typically in the output layer.
<br><br><br><br>
<br>ReLU is the default choice for simplicity and efficiency.
<br>Leaky ReLU or PReLU for avoiding dead neurons.
<br>Swish or GELU for modern architectures like Transformers.
<br><br>
<br>Sigmoid for binary classification.
<br>Softmax for multi-class classification.
<br><br><br>Adding More Layers<br>How: Simply add more hidden layers between the input and output layers. This increases the depth of the neural network.<br>Why: More layers allow the network to learn more complex, hierarchical representations of data. Each additional layer can capture higher-order features, which makes the model capable of handling more abstract patterns. By increasing depth, the model's capacity to learn complex mappings between inputs and outputs improves, making it suitable for tasks like image recognition, language modeling, and other advanced problems.<br>Residual Connections (Skip Connections)<br>How: In architectures like ResNet, residual connections are used where the input to a layer is added directly to its output, bypassing the transformation at that layer. This is often referred to as "skip connections."<br>Why: Residual connections address the vanishing gradient problem by allowing gradients to flow more easily during backpropagation, even in very deep networks. This makes it easier to train deep networks without worrying about gradients becoming too small to update the weights effectively. These connections also help the network maintain performance by allowing it to learn both the residual (new information) and the identity (previous knowledge) mapping.<br>Stacking Blocks of Layers<br>How: Instead of adding individual layers, a network can be built by stacking blocks of layers. For example, a convolutional block might consist of several convolutional layers followed by pooling layers. These blocks are repeated multiple times to form a deeper network.<br>Why: Stacking blocks of layers allows for more efficient learning. Each block can perform specific types of feature extraction (like edge detection in convolutional layers), and by stacking them, the network can learn progressively more abstract features. For example, early blocks may detect edges in images, while later blocks can recognize more complex shapes or objects. This modular approach also improves the reusability of network components, which makes training deeper networks more manageable.<br><a data-href="CV-Attention" href="https://www.allenygy.vip/CV-Attention" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Attention</a><a data-href="CV-Attention" href="https://www.allenygy.vip/computer-vision/lecture/cv-attention.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Attention</a><br><a data-href="CV-Object Detection" href="https://www.allenygy.vip/CV-Object Detection" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Object Detection</a><a data-href="CV-Object Detection" href="https://www.allenygy.vip/computer-vision/lecture/cv-object-detection.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Object Detection</a> <br><a data-href="CV-Generate Model" href="https://www.allenygy.vip/CV-Generate Model" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Generate Model</a><a data-href="CV-Generate Model" href="https://www.allenygy.vip/computer-vision/lecture/cv-generate-model.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Generate Model</a>]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-neural-network.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Neural Network.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 15:54:51 GMT</pubDate></item><item><title><![CDATA[Object Detection]]></title><description><![CDATA[ 
 <br><br><br><img alt="RCNN" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/2usq7X.png" referrerpolicy="no-referrer"><br><br>Drawbacks:<br>
<br>Very slow due to separate steps for region proposals, feature extraction, and classification.
<br>Needs multiple models (CNN + SVM + Regressor).
<br>Computationally expensive because each region is processed individually.
<br><br>Around 1K to 2K candidate regions are generated from an image using the Selective Search method.<br><br>For each candidate region, features are extracted using a deep convolutional neural network.<br>
<br>Resize to 
<br><br>The extracted features are passed through multiple SVM classifiers (one per class) to determine if the region belongs to a particular object class.<br>
<br>For each selected Region, we can get a 4096 dimensions vector 
<br>
<br>Suppose we have 20 categories<br>
<br>
For each category, we train a binary classifier by using SVM

<br>
Then we can get a weight matrix with size 

<br>
Finally, we can get a  matrix

<br>
Each row represent a specific candidate region, and each column represent a specific category.

<br> <img alt="Classification" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Jcs3Pr.png" referrerpolicy="no-referrer"><br><br>IoU: Intersection over Union<br>
	<br>For each category, we need to do NMS<br>
<br>Find the highest Target,
<br>Calculate the IoU with other region, if the IoU is higher than the threshold, then remove it.
<br>Repeat the process until all the regions are processed.
<br><br>A regressor is used to refine and improve the precision of the bounding box location.<br>After Non-Maximum Suppression (NMS) processes the remaining proposal boxes, further refinement is performed. Specifically, 20 regressors are applied to refine the proposal boxes that belong to the corresponding 20 classes. This refinement operation results in the highest-scoring corrected bounding box for each class.<br><br><img alt="Fast-RCNN" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/z4NxC5.png" referrerpolicy="no-referrer"><br>Improvements over R-CNN:<br>
<br>Processes the entire image once to generate a shared feature map.
<br>Region proposals are projected onto the feature map instead of the original image.
<br>Introduces ROI Pooling to extract fixed-size feature maps for each region.
<br>Uses a single neural network to perform both classification and bounding box regression.
<br>Advantages:<br>
<br>Much faster than R-CNN (reduced redundant feature extraction).
<br>End-to-end training.
<br>Limitations:<br>
<br>Still relies on an external Selective Search algorithm for region proposals, which is slow.
<br><br>Generate 1K to 2K candidate regions for an image (using the Selective Search method).<br><br>Input the image into a network to obtain corresponding feature maps, and project the candidate bounding boxes generated by the Selective Search method onto the feature maps to get corresponding feature matrices.<br><br>ROI Pooling is a key operation used in object detection networks like Fast R-CNN. It allows feature maps of varying sizes (corresponding to different Region of Interest proposals) to be converted into a fixed-size feature map so that the final classification and bounding box regression can work consistently.<br>How ROI Pooling Works<br>Input:<br>
<br>
A feature map from the CNN.

<br>
A set of Region of Interest (ROI) proposals (bounding boxes) that specify areas to focus on.

<br>Divide the ROI into Grids:<br>
<br>
Each ROI is divided into a fixed number of grid cells (e.g., ).

<br>
This grid size is predefined based on the downstream network architecture.

<br>Max-Pooling Within Each Grid Cell:<br>
<br>
For each grid cell, take the portion of the feature map corresponding to that grid.

<br>
Apply max pooling to compress this region into a single value.

<br>
This ensures the output for each ROI is of uniform size, regardless of the original ROI dimensions.

<br>Output:<br>A fixed-size feature map (e.g., ) for each ROI, ready for further processing like classification and bounding box regression.<br><br>Pass each feature matrix through an ROI pooling layer to resize it to a fixed size of 7x7 feature maps. Then, flatten the feature map and pass it through a series of fully connected layers to obtain the prediction results.<br><br>Key Innovation:<br>
<br>Replaces the slow Selective Search with a Region Proposal Network (RPN).
<br>How it works:<br>
<br>RPN shares convolutional layers with the main detection network to generate region proposals directly from the feature map.
<br>The network simultaneously predicts object scores and refines bounding boxes.
<br>Advantages:<br>
<br>Much faster than Fast R-CNN.
<br>End-to-end trainable.
<br>Use Cases:<br>
<br>Widely used in real-world applications such as autonomous vehicles, video surveillance, etc.
<br><br><br>
<br>
Definition: A Region of Interest (ROI) refers to a specific area in an image or video frame that is the focus of analysis. In object detection, the bounding box around an object is considered the ROI.

<br>
Usage:<br>
Cropping parts of images for further processing.<br>
Reducing computation by focusing only on the relevant area.

]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-object-detection.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Object Detection.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 15:45:08 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/2usq7X.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/2usq7X.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Weight Initialization]]></title><description><![CDATA[ 
 <br><br><br>If Linear activation <br>
<br>One layer variance scaled by
<br><br>
<br>Many layers variance scaled by
<br><br>If <br>
If  <br><br><br><br><br>Forward <br><br>Backward	<br><br>Consider Forward and Backward	<br><br>
<br>Gaussian Distribution 
<br><br>
<br>Uniform Distribution
<br><br>Replace n with <br><br>The number of connections feeding into/out of a node:<br><br><br><br>
<br>One Layer 
<br><br>
<br>Many Layers
<br><br>
<br>Forward
<br><br>
<br>Backward
<br><br>Consider Forward and Backward<br>
<br>Gaussian Distribution 
<br><br>
<br>Uniform Distribution
<br><br>Replace n with <br><br><br><br>
<br>信号可能会爆炸或消失：在深度神经网络中，前向传播和反向传播的信号经过多层网络时，如果初始化不当，信号的方差可能会逐渐变大（梯度爆炸）或逐渐减小到接近零（梯度消失）。这种现象会导致网络训练困难：

<br>梯度消失：早期层几乎没有梯度更新，导致模型难以学习到深层特征。
<br>梯度爆炸：梯度过大，导致训练不稳定，甚至网络无法收敛。


<br>因此，适当的权重初始化可以在一定程度上缓解梯度消失或爆炸的问题。<br><br>
<br>缩放因子的乘积：在多层网络中，信号的方差会受到每一层的缩放因子的影响，这些缩放因子包括权重的方差和输入连接的数量。多层网络中每一层的方差会累积（即每一层的缩放因子相乘），最终导致信号变得过大或过小。因此，初始化中的缩放因子（即权重的方差）需要精心设置，以确保信号的稳定传递。
<br><br>
<br>初始化依赖于归一化：初始化的设计通常依赖于信号在不同层之间的方差归一化（Normalization）。例如，Xavier 和 Kaiming 初始化方法都根据层输入或输出的数量来选择合适的方差，从而在前向和反向传播中保持信号的方差平衡。归一化使得信号在层与层之间不会失去平衡，从而避免梯度消失或爆炸。
<br><br>
<br>初始化基于强假设：权重初始化通常假设输入和输出分布具有一定的独立性和零均值。例如，Xavier 和 Kaiming 初始化假设每个输入和输出的分布是独立同分布（iid），并且权重的期望值为零。这些假设有助于推导出初始化方差的公式，但在实际应用中，这些假设可能不完全成立。因此，初始化并不能完全解决深度网络的训练难题。
<br><br>
<br>初始化是必要的，但往往不够：虽然合适的权重初始化对稳定训练非常重要，但在深度网络中，仅仅靠初始化往往是不够的。为了进一步改善训练，通常还需要其他技术的配合，比如：

<br>Batch Normalization：在每一层对信号进行归一化，进一步防止梯度消失或爆炸。
<br>残差连接（Residual Connections）：允许信号绕过若干层，减少梯度消失问题。
<br>更高级的优化算法（例如 Adam、RMSProp）：帮助更快地收敛，并且在初始化不完美的情况下提供一定的鲁棒性。


]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-weight-initialization.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Weight Initialization.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Signal and Image Processing]]></title><description><![CDATA[ 
 <br><br><br>from matplotlib import pyplot as p
import numpy.random as r
I = r.rand(256,256)*0.5;
p.imshow(I ,cmap='gray', vmin=0.0,vmax=1.0);
p.show();
<br>Tip

<br>rand(256,256) 生成一个 256x256 的随机矩阵, 值在 0-1 之间
<br>cmap = 'gray' 表示使用灰度图显示	
<br>vmin 和 vmax 分别表示最小值和最大值 
<br>matplotlib.pyplot.imshow() 函数用于显示图像, 一般可以自动数值normalize到 0-1 之间
<br>vmin 和 vmax 可以指定normalize的范围

<br><br>8 bit image: 256 gray levels	<br>
<br>e.g. 256x256 = 65,536 pixels
<br>256 values ^ 65,536 pixels = 256^65,536	
<br><br>
<br>Signal: function depending on some variable with physical meaning.
<br>Image: sampling of that function.

<br>2 variables: xy coordinates
<br>3 variables: xy + time (video)
<br>‘Brightness’ is the value of the function for visible light


<br>Can be other physical values too: temperature, pressure, depth …

<br>信号不仅限于亮度，还可以表示其他物理量。例如，红外图像可以表示温度，海洋探测图像可以表示深度，气象图像可以表示压力等。


<br><br><br><img alt="Sampling in 1D" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409111455795.png" referrerpolicy="no-referrer"><br>
<br>Sampling in 1D takes a function and returns a vector whose elements are values of that function at the sample points.
<br>等间隔采样<br><br>
<br>Sampling in 2D takes a function and returns a matrix.
<br><img alt="Sampling in 2D" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409111502225.png" referrerpolicy="no-referrer"><br><br>
<br>Digital values – integer values

<br>Quantization is lossy!! After quantization, the original signal cannot be reconstructed anymore
<br>In contrast to sampling, as a sampled but not quantized signal can be reconstructed.


<br>Simple quantization uses equally spaced levels with k intervals<br>
量化是一种将连续信号转换为离散值的过程。在简单量化中，整个信号的范围会被均匀地划分为 k 个区间（或称为级别）。这些区间之间的间隔是相同的，因此称为“等间隔”。每个信号的值都会被映射到其对应的区间，最终得到的是有限的离散值，而不是连续的信号。
<br><br><img alt="Radiometric Resolution" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409111522999.png" referrerpolicy="no-referrer"><br><br>Four views of filtering<br>
<br>Image filters in spatial domain 
<br>Image filters in the frequency domain 
<br>Image filters in the temporal domain 
<br>Image pyramids
<br><br><br>
<br>Filter is a mathematical operation of a grid of numbers
<br>Smoothing, sharpening, measuring texture 

<br>平滑、锐化、测量纹理


<br><br><br>系数 用于保证整体亮度不发生变化<br>
<br>Usages

<br>Enhance images

<br>Denoise, resize, increase contrast, etc.


<br>Extract information from images

<br>Texture, edges, distinctive points, etc.


<br>Detect patterns

<br>Template matching




<br><br>
<br>
用于边缘检测

<br>
Check horizontal edge 横边

<br><br>
<br>Check Vertical edge 竖边
<br><br>相当于计算两侧的差值，差值越大，当前位置是边缘<br><br><img alt="Correlation and Convolution" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409111650837.png" referrerpolicy="no-referrer"><br><br><br>h=scipy.signal.correlated2d(f,I)
<br><br><br>h=scipy.signal.convolve2d(f,I)
<br>
<br>Convolution is the same as correlation with a 180° rotated filter kernel.
<br>Correlation and convolution are identical when the filter kernel is symmetric.
<br><br>
<br>卷积可以看作是相关的一种变体，唯一的区别是卷积中的滤波器会先进行180度的旋转。
<br>当滤波器是对称的时，卷积和相关是相同的。这是因为旋转180度不会改变滤波器的形状。
<br><br><br><br>线性滤波器的线性性意味着，对于输入图像  I  以及两个滤波器  f_1  和  f_2 ，对图像应用滤波器的结果等于先将滤波器相加，再应用一次滤波，或者分别应用每个滤波器，再将结果相加。<br>
换句话说，滤波操作对滤波器的加法是可交换的，可以直接作用于滤波器的线性组合。<br><br><br>平移不变性指的是滤波器的输出与像素位置无关，意思是无论图像中的像素在什么位置，滤波器对强度的操作结果都是相同的。也就是说，滤波器的应用不会因为图像的某个区域平移而改变输出。<br>
在公式中，如果我们先将滤波器  f  平移，再对图像  I  进行滤波，这与先对图像  I  进行滤波，然后再平移滤波结果是等价的。<br>Any linear, shift-invariant operator can be represented as a convolution.<br><br><br><br>
<br>Conceptually no difference between filter and signal
<br>But particular filtering implementations might break this equality
<br><br><br>
<br>Often apply several filters one after another: 
<br>This is equivalent to applying one filter: 
<br><br><br><br><br><br><br><br><img alt="Gaussian filter" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409112112890.png" referrerpolicy="no-referrer"><br><br><br>
<br>Remove high-frequency components from the image (a low-pass filter)

<br>Images become more smooth


<br>Gaussian convolved with Gaussian is another Gaussian
<br>Separable kernel 

<br>Factors into product of two 1D Gaussians


<br><br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409112157422.png" referrerpolicy="no-referrer"><br>f = D[ 57:117, 107:167 ]
f2 = f – np.mean(f)
D2 = D – np.mean(D)
I2 = correlate2d( D2, f2, 'same' )
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409112156877.png" referrerpolicy="no-referrer"><br>Now zero centered.<br>
Score is higher only when dark parts<br>
match and when light parts match.<br>通过将图像和子区域的均值归零，相关得分在模板的暗区和亮区与图像相应区域匹配时才会较高。这避免了只匹配亮度（而不考虑结构）的高得分情况。<br><br><br>
<br>Operates over a window by selecting the median intensity in the window.
<br>Rank filter as based on ordering of gray levels 

<br>E.G., min, max, range filters


<br>选择窗口内的中位数/平均数<br>中值滤波器：<br>
<br>能够保留图像的边缘和细节。
<br>有效去除盐噪声和胡椒噪声。
<br>对异常值有很好的鲁棒性。
<br>均值滤波器：<br>
<br>会模糊图像边缘，平滑噪声和细节。
<br>对极端噪声和异常值处理效果较差。
]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-signal-and-image-processing.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Signal and Image Processing.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409111455795.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CV/202409111455795.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Normalization Methods]]></title><description><![CDATA[ 
 <br><br><br><br><br>]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-normalization-methods.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Normalization Methods.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 21 Dec 2024 03:29:21 GMT</pubDate></item><item><title><![CDATA[Fourier Transformation]]></title><description><![CDATA[ 
 <br><br><br><br>Amplitude<br><br>Phase <br><br><br><br><br>]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-fourier-transformation.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Fourier Transformation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 21 Dec 2024 04:15:36 GMT</pubDate></item><item><title><![CDATA[CNN]]></title><description><![CDATA[ 
 <br><br><br>2D Convolutional Kernel   原点在正中间<br><br>
<br>&nbsp; 是输出图像的像素值；
<br>&nbsp; 是输入图像的像素值，表示在位置&nbsp; &nbsp; 的邻域像素；
<br>&nbsp; 是卷积核的权重；
<br>&nbsp; 是卷积核的半径，卷积核大小为&nbsp;  。
<br><br>
<br>
Height 


<br>
Width

<br><br><br>If the input data is an image of size  , using  filters of size  for convolution, with a stride of  and padding of , what will be the final size of the input?<br>So, the output size is  . Through the convolution operation, the feature map can retain the same length and width as the original input.<br><br>Preserve Spatial Dimensions (Same Padding)<br>
<br>Without padding, the output size of a convolution layer decreases after every operation. Padding helps preserve the original input size by compensating for the loss of border pixels during convolution.
<br>For example:<br>
<br>Input size =&nbsp; &nbsp;
<br>Kernel size =&nbsp; &nbsp;
<br>Without padding: Output size =&nbsp; 
<br>With “same” padding: Output size =&nbsp; &nbsp;
<br>Prevent Information Loss at Borders<br>Without padding, the convolution operation does not consider the edges and corners of an image as much as the center regions. Padding ensures the borders are included in the computation, retaining more information.<br>Enable Deeper Networks<br>By maintaining consistent feature map sizes throughout the layers, padding allows for the design of deeper networks without rapidly shrinking the feature map size.<br>Control Output Size<br>Padding can be adjusted to produce desired output dimensions for specific applications (e.g., “same” padding or “valid” padding).<br>Improve Symmetry for Feature Extraction<br>Padding ensures that the kernel interacts symmetrically with all regions of the input image, which improves the extraction of features near edges.<br><br><br>Assume we have a matrix A with size  :<br> with  size <br>
 with  size <br><br><br>Assume we have a matrix  with size :<br> with size <br>
 with size <br><br><br>Assume we have a 8×8 matrix (image) B:<br><br>The Laplacian filter in 2D (for edge detection) is commonly represented as:<br><br>If we use the matrix to represent the Laplacian, the matrix is:<br><br>And the result is:<br><br><br>Part I: Convolution and image filtering<br>1. Comparing different filters?<br>2. Comparing different scales / size of filter?<br>3.Separability property of a filter / convolution?<br>4. Convolution and correlation? How<br>5. How to work on a kernel approximating a 1st, 2nd derivative?<br>
<br>
What is Fourier Transform? What is the usage? How to calculate in 1D? 2D? Padding if necessary.

<br>
Convolution in image domain is equivalent to multiplication in frequency domain. Why? Verify?

<br>8. How to obtain image pyramid? Gaussian, Laplacian, Steerable? Calculate? What are the usages / applications of them?]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-convolutional-and-image-filtering.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Convolutional and image filtering.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 21 Dec 2024 04:09:09 GMT</pubDate></item><item><title><![CDATA[Back Propagation]]></title><description><![CDATA[ 
 <br><br>Computing Gradients<br><br><img alt="Computing Gradients" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/jNZGBs.png" referrerpolicy="no-referrer"><br><br><br><img alt="nagJmK" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/nagJmK.png" referrerpolicy="no-referrer"><br>要更新神经网络中某一层的梯度，我们需要基于反向传播（Backpropagation）算法的步骤。这是深度学习中训练神经网络的核心步骤，它可以分为几个主要步骤：前向传播、计算损失、反向传播计算梯度、更新权重。假设我们已经完成了前向传播并计算了损失，现在我们要更新某一层的梯度。以下是详细的步骤：<br><br>假设你有一个输入 和对应的输出，前向传播可以通过神经网络计算出模型的预测输出。然后，我们会基于实际的 和预测的 计算损失（通常是均方误差或交叉熵）。<br><br>在反向传播中，我们从输出层开始逐层计算梯度，直到到达目标层。这一步的关键是利用链式法则计算每层参数对损失 的偏导数。<br>假设我们有一个中间层，其输入为，权重为，激活函数为，输出为。我们关心的是如何更新这一层的权重。<br><br>首先，我们需要计算损失对这一层输出 的偏导数。如果 层不是输出层，则可以根据下一层的梯度计算得到：<br><br><br>接下来，我们要计算损失对 层权重 的偏导数。通过链式法则，我们可以得到：<br><br>如果，那么：<br><br>所以，最终我们得到：<br><br>其中 是激活函数 的导数。<br><br>一旦得到了梯度，我们可以使用梯度下降法更新权重。假设学习率为，则更新公式为：<br><br>
<br>解释：这一公式表示我们沿着损失函数的负梯度方向调整权重，使得损失逐渐减小，从而提高模型的预测准确度。
<br>学习率：学习率控制步长。步长过大可能会错过最优解，步长过小则训练速度较慢。
<br><br>反向传播和权重更新的过程会对每一层重复进行，直到所有层的权重都更新完毕。这一轮的梯度计算和更新完成后，模型的权重就得到了调整。然后，我们继续下一轮训练（即下一批数据），重复上述的前向传播、反向传播和更新步骤。<br><br>假设你要更新某个中间层 的梯度：<br>
<br>首先计算损失对该层输出 的梯度。
<br>然后，利用链式法则，计算该层权重 的梯度。
<br>使用梯度下降更新权重：。
<br><br>更新某一层的梯度的关键步骤包括：<br>
<br>计算每层输出的梯度。
<br>根据每层的输出梯度推导权重的梯度。
<br>使用学习率调整权重。
<br>以上就是更新某一层梯度的完整步骤。如果你还有不理解的地方，或者想了解更具体的计算例子，请告诉我！]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-back-propagation.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Back Propagation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 09:06:25 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/jNZGBs.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/jNZGBs.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Image Pyramid]]></title><description><![CDATA[ 
 <br><br><br><img alt="Gaussian Pyramid" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/buu6IA.png" referrerpolicy="no-referrer"><br>For each level<br>
<br>Blur image with an Gaussian filter
<br>Down sample image
<br><br><img alt="1D Case" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/fxPitt.png" referrerpolicy="no-referrer"><br><img alt="1D Gaussian" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/6T5A0S.png" referrerpolicy="no-referrer"><br><br> Downsampled Gaussian Pyramid Level 0<br>
 Upsampled Gaussian Pyramid Level 0	<br>Laplacian Filter = <br>Compute the difference between upsampled Gaussian pyramid level k+1 and Gaussian pyramid level k.<br><img alt="Laplacian Pyramid" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/AM4ylL.png" referrerpolicy="no-referrer"><br>
<img alt="Laplacian Pyramid" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/5K22MP.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/computer-vision/lecture/cv-image-pyramid.html</link><guid isPermaLink="false">Computer Vision/Lecture/CV-Image Pyramid.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 21 Dec 2024 04:00:53 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/buu6IA.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/buu6IA.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Slides]]></title><description><![CDATA[ 
 <br><br><br>Filter <br>
<br>
Filter Properties 

<br>
Gaussian Filter 

<br>
Separability 

<br>Computation Fast 


<br>
Padding 

<br>
Sobel

<br><br>
<br><a data-href="CV-Image Pyramid" href="https://www.allenygy.vip/CV-Image Pyramid" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Image Pyramid</a><a data-href="CV-Image Pyramid" href="https://www.allenygy.vip/computer-vision/lecture/cv-image-pyramid.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Image Pyramid</a>
<br>Shannon Sampling<br>Gaussian Pyramid <br>Gaussian Filter <br>Laplacian FIlter <br>Steerable Pyramid <br>
<br>提取方向
<br>histogram Matching<br><br>Fomula <br>Calculation <br>Application <br>
<br>
Keep Low Frequency   ---&gt;

<br>
Keep High Frequency  ---&gt;

<br>
phase 

<br>
ampiltude

<br><br>Spatio Temporal<br>derivative Gaussian <br><br>Soft max<br>
Cross Entropy <br>Overfitting <br>
<br>Regullarization 
<br>Underfitting<br><br>MLP <br><br><br>LeNet<br>
AlexNet<br>
VGG<br>
ResNet <br>Receptive Field <br><br><br>Transformer <br>CNN<br>
RNN<br>
Attention Calculation <br><br>Trained<br>
Pre-trained<br>
Contrative Learning <br><br><br>VAE<br>
GAN ]]></description><link>https://www.allenygy.vip/computer-vision/cv-slides-review.html</link><guid isPermaLink="false">Computer Vision/CV-Slides-Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 14:12:14 GMT</pubDate></item><item><title><![CDATA[CV-Review]]></title><description><![CDATA[ 
 <br><br><a data-href="CV-Convolutional and image filtering" href="https://www.allenygy.vip/CV-Convolutional and image filtering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Convolutional and image filtering</a><a data-href="CV-Convolutional and image filtering" href="https://www.allenygy.vip/computer-vision/lecture/cv-convolutional-and-image-filtering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Convolutional and image filtering</a> <br><a data-href="CV-Neural Network" href="https://www.allenygy.vip/CV-Neural Network" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Neural Network</a><a data-href="CV-Neural Network" href="https://www.allenygy.vip/computer-vision/lecture/cv-neural-network.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Neural Network</a>]]></description><link>https://www.allenygy.vip/computer-vision/cv-review.html</link><guid isPermaLink="false">Computer Vision/CV-Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 15:49:12 GMT</pubDate></item><item><title><![CDATA[Computer Vision Overview]]></title><description><![CDATA[ 
 <br><br><br><br><br>]]></description><link>https://www.allenygy.vip/computer-vision/computer-vision-overview.html</link><guid isPermaLink="false">Computer Vision/Computer Vision Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 14:35:20 GMT</pubDate></item><item><title><![CDATA[Train-1]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Experience" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Experience</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Hint" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Hint</a> 
 <br><br><a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/592/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/592/learning/" target="_blank">门牌号</a><br>#include &lt;iostream&gt;
using namespace std;
int main(){
 int count=0;
 for (int i = 0; i &lt; 2021;i++){
  int num = i;
  while(num){
   if(num % 10 == 2) count++;
   num /= 10;
  }
 }
 cout&lt;&lt;count;
 return 0;
}
<br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a>:<br>
循环取模:<br>int mode=0;
while(num){
 mode = num % 10;
 num /= 10;
}
<br><a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/1443/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/1443/learning/" target="_blank">卡片</a><br>#include &lt;iostream&gt;
#include &lt;vector&gt;
using namespace std;
int main(){
 vector&lt;int&gt; nums(10, 2021);
 for (int i = 1;; i++){
  int num = i;
  while (num){
   nums[num % 10] -= 1;
   if (nums[num % 10] &lt; 0){ 
    cout &lt;&lt; i-1;
    return 0;
   }
   num /= 10;
  }
 }
 return 0;
}
<br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
注意边界：当碰到是用不了卡片的情况时，只能拼出上一张卡片<br>
看到题解：新发现！把1消掉就结束了，感觉还是有点问题<br>
<a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/610/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/610/learning/" target="_blank">分数</a><br>#include &lt;iostream&gt;
#include &lt;cmath&gt;
using namespace std;
int main(){
 int a = pow(2,19);
 int b = 2*a-1;
 cout&lt;&lt;b&lt;&lt;"/"&lt;&lt;a; 
 return 0;
}
<br><a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
math库 pow(base, power)<br>
以及分数用a/b表示<br>
<a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/611/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/611/learning/" target="_blank">日期问题</a><br>
<a href="https://www.allenygy.vip?query=tag:Experience" class="tag" target="_blank" rel="noopener nofollow">#Experience</a><br>
闰年判断：<br>if((x%4==0&amp;&amp;x%100!=0)||x%400==0) return 1;
else return 0;
<br><a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/2096/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/2096/learning/" target="_blank">顺子日期</a><br>
<a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/2107/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/2107/learning/" target="_blank">修剪灌木</a><br><br>假设点i刚被修剪完为0，然后会向右/向左跑一趟，端点会被遍历1次，i与端点间的点会被遍历两次 而重新修剪i的当天早上（因为是傍晚修剪，所以当天也会被算上）达到最大高度，然后置零 也就是说：<br>
最大长度=中间节点数*2+1（端点）+1（自生）==max(左边/右边节点数)*2<br>
左边端点数：i-1<br>
右边端点数：n-i<br>#include &lt;iostream&gt;
using namespace std;  
int main() {
 int n; cin&gt;&gt;n; 
    for(int i = 1;i&lt;=n;i++) cout&lt;&lt;max(i-1,n-i)*2&lt;&lt;endl; 
    return 0; 
}
<br><a data-tooltip-position="top" aria-label="https://www.lanqiao.cn/problems/1461/learning/" rel="noopener nofollow" class="external-link" href="https://www.lanqiao.cn/problems/1461/learning/" target="_blank">最少砝码</a><br>
<a href="https://www.allenygy.vip?query=tag:Hint" class="tag" target="_blank" rel="noopener nofollow">#Hint</a><br>
一个砝码最多称到1<br>
两个砝码最多称到4<br>
三个砝码最多称到13<br>
推出公式为：新一级的砝码最大称重=上一级砝码上限 × 3 + 1<br>#include &lt;iostream&gt;
using namespace std;
int main(){
 int N=0;
 cin&gt;&gt;N;
 int sum=0;
 for(int i=1;i&gt;0;i++){
  sum=sum*3+1;
  if(N&lt;=sum){
   cout&lt;&lt;i;
   break;
  }
 }
 return 0;
}
]]></description><link>https://www.allenygy.vip/contest/lanqiao/train-1.html</link><guid isPermaLink="false">Contest/Lanqiao/Train-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:49:46 GMT</pubDate></item><item><title><![CDATA[Train-2<a data-tooltip-position="top" aria-label="https://blog.csdn.net/weixin_43914593/article/details/135329367" rel="noopener nofollow" class="external-link" href="https://blog.csdn.net/weixin_43914593/article/details/135329367" target="_blank"></a>]]></title><description><![CDATA[ 
 <br><br>ans;                              //答案，常常用全局变量表示
void dfs(层数，其他参数){
    if (到达目的地、或者出局){    //到达最底层，或者满足条件退出 
        更新答案ans;              //答案一般用全局变量表示，ans是最优解
        return;                   //递归返回，即返回到上一层
    }
    (剪枝)                        //在进一步DFS之前剪枝
    for (用i遍历下一层所有可能的情况)    //对每一个情况继续DFS 
        if (used[i] == 0) {        //如果状态i没有处理过，就可以进入下一层dfs
            used[i] = 1;           //标记状态i为已经使用，在后续dfs时不能再使用
            dfs(层数+1，其他参数);      //下一层，即搜小规模后继续dfs
            used[i] = 0;           //恢复状态i，回溯时，不影响上一层对这个状态的使用
        }
    return;                        //返回到上一层
}

<br><br>#include&lt;bits/stdc++.h&gt;
using namespace std;x
int n;
int vis[10];    // 访问标记
int a[10];      //需要做全排列的数组
int b[10];      //当前DFS得到的全排列
void dfs(int step) {
    if (step == n+1) {     //已经对n个数做了全排列，输出全排列
        for (int i=1; i&lt;=n; i++)
            printf("%5d",b[i]);
        printf("\n");
        return;            //结束，不再继续DFS
    }
    for (int i = 1; i &lt;= n; i++) {    //遍历每个a[i]，放进全排列中
        if (vis[i] == 0) {   // 数字a[i]不在前面得到的排列中
            b[step] = a[i];  // 把a[i]放进排列
            vis[i] = 1;      // 保存现场：a[i]不能在后面继续用
            dfs(step+1);     // 继续把后面的数放进排列
            vis[i] = 0;      // 恢复现场：a[i]重新可以使用
        }
    }
    return;
}
int main() {
    cin &gt;&gt; n;
    for (int i=1; i&lt;=n; i++)  a[i]=i;   //赋值得到n个数
    dfs(1);  //对a[1]~a[n]做全排列
    return 0;
}
<br><br>#include&lt;bits/stdc++.h&gt;
using namespace std;
int dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};  //四个方向
char g[100][100];
int n = 30, m = 60;
int dfs(int x, int y){      //当前位于坐标[x,y]
    if (g[x][y] == '0')   return 0;
    g[x][y] = '0';         //把这个点从1改为0，后面不再搜它
    int ans = 1;           //统计这个连通块的大小
    for (int i = 0; i &lt; 4; i++ ) {           //遍历它的4个邻接
        int nx = x + dx[i], ny = y + dy[i];   //一个邻居的坐标
        if (nx&lt;0 || ny&lt;0 || nx&gt;=n || ny&gt;=m)   continue;    //这个邻居是否在边界内
        ans += dfs(nx, ny);
    }
    return ans;
}
int main(){
    for (int i = 0; i &lt; n; i++ )  cin &gt;&gt; g[i];
    int ans = 0;
    for (int i = 0; i &lt; n; i++ )
        for (int j = 0; j &lt; m; j++ )
            if (g[i][j] == '1')
                ans = max(ans, dfs(i, j));
    cout &lt;&lt; ans;
    return 0;
}

<br><br>#include&lt;bits/stdc++.h&gt;
using namespace std;
const int N = 1010;
char mp[N][N];                //地图
int vis[N][N]={0};            //标记是否搜过
int d[4][2] = {{0,1}, {0,-1}, {1,0}, {-1,0}}; //四个方向
int flag;                     //用于标记这个岛中是否被完全淹没
void dfs(int x, int y){
    vis[x][y] = 1;            //标记这个'#'被搜过。注意为什么放在这里
    if( mp[x][y+1]=='#' &amp;&amp; mp[x][y-1]=='#' &amp;&amp;
        mp[x+1][y]=='#' &amp;&amp; mp[x-1][y]=='#'   )
        flag = 1;             //上下左右都是陆地，这是一个高地，不会淹没
    for(int i = 0; i &lt; 4; i++){     //继续DFS周围的陆地
        int nx = x + d[i][0], ny = y + d[i][1];
        if(vis[nx][ny]==0 &amp;&amp; mp[nx][ny]=='#')    //注意为什么要判断vis[][]                
            dfs(nx,ny);             //继续DFS未搜过的陆地，目的是标记它们
    }
}
int main(){
    int n;   cin &gt;&gt; n;
    for (int i = 0; i &lt; n; i++)   cin &gt;&gt; mp[i];
    int ans = 0 ;
    for(int i = 0; i &lt; n; i++)    //DFS所有像素点
        for(int j = 0; j &lt; n; j++)
            if(mp[i][j]=='#' &amp;&amp; vis[i][j]==0){
                flag = 0;         //假设这个岛被淹
                dfs(i,j);         //找这个岛中有没有高地，如果有,置flag=1
                if(flag == 0) ans++;   //这个岛确实被淹了，统计被淹没岛的数量    
            }
    cout&lt;&lt;ans&lt;&lt;endl;
    return 0;
}

]]></description><link>https://www.allenygy.vip/contest/lanqiao/train-2.html</link><guid isPermaLink="false">Contest/Lanqiao/Train-2.md</guid><dc:creator><![CDATA[AllenYGY,DFS]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:52:17 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://leetcode.cn/contest/biweekly-contest-123/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/contest/biweekly-contest-123/" target="_blank">Biweekly-Contest-123</a>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:T1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T1</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T3</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T4" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T4</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> 
 <br><br><br>
<br>排序
<br>判断三角形是否存在
<br>判断是什么三角形
<br><a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/type-of-triangle-ii/solution/an-ti-yi-mo-ni-pythonjavacgo-by-endlessc-zq6e/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/type-of-triangle-ii/solution/an-ti-yi-mo-ni-pythonjavacgo-by-endlessc-zq6e/" target="_blank">T1</a><br><br>
<br>同T4<br>
<a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-ii/solution/on2-you-ya-mei-ju-by-endlesscheng-z86d/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-ii/solution/on2-you-ya-mei-ju-by-endlesscheng-z86d/" target="_blank">T2</a>
<br><br>前缀和<br>s[0]=0
s[1]=nums[0]
s[2]=nums[0]+nums[1]
...
s[i]=nums[0]+...+nums[i-1]
s[i+1]=nums[0]+...+nums[i]
nums[i]+...+nums[j]
=nums[0]+...+nums[j]-(nums[0]+...+nums[i-1])
=s[j+1]-s[i]
<br><br>
计算的最大值<br>
枚举 ，问题变成计算的最小值<br>
 或者 <br>
哈希表<br>class Solution {
public:
	long long maximumSubarraySum(vector&lt;int&gt;&amp; nums, int k) {
		unordered_map&lt;int,long long &gt; min_s;
		long long ans=LLONG_MIN;
		long long s=0;
		for(int x:nums){
			auto it =min_s.find(x+k);
			if(it != min_s.end()){
				ans=max(ans,s+x-it-&gt;second);
			}
			it =min_s.find(x-k);
			if(it !=min_s.end()){
				ans=max(ans,s+x-it-&gt;second);
			}
			it =min_s.find(x);
			if(it==min_s.end()||s&lt;it-&gt;second){
				min_s[x]=s;
			}
			s+=x;
		}
		return ans==LLONG_MIN?0:ans;
}

};
<br><a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-i/solution/on2-you-ya-mei-ju-pythonjavacgo-by-endle-ii0q/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-i/solution/on2-you-ya-mei-ju-pythonjavacgo-by-endle-ii0q/" target="_blank">T3</a><br>class Solution: 
	def maximumSubarraySum(self, nums: List[int], k: int) -&gt; int: 			ans = -inf 
		min_s = defaultdict(lambda: inf) 
		s = 0 
		for x in nums: 
			min_s[x] = min(min_s[x], s)
			s += x 
			ans = max(ans, s-min(min_s[x - k], min_s[x + k]))
		return ans if ans &gt; -inf else 0 
<br><br>class Solution {
public:
	int numberOfPairs(vector&lt;vector&lt;int&gt;&gt; &amp;points) {
		ranges::sort(points, [](const auto &amp;p, const auto &amp;q) {
			return p[0] != q[0] ? p[0] &lt; q[0] : p[1] &gt; q[1];	
		});
		int ans = 0, n = points.size();
		for (int i = 0; i &lt; n; i++) {
			int y0 = points[i][1];
			int max_y = INT_MIN;
			for (int j = i + 1; j &lt; n; j++) {
				int y = points[j][1];
				if (y &lt;= y0 &amp;&amp; y &gt; max_y) {
					max_y = y;
					ans++;
				}
			}
		}
		return ans;
	}
};
<br><a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-ii/solution/on2-you-ya-mei-ju-by-endlesscheng-z86d/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/find-the-number-of-ways-to-place-people-ii/solution/on2-you-ya-mei-ju-by-endlesscheng-z86d/" target="_blank">T4</a>]]></description><link>https://www.allenygy.vip/contest/leetcode/biweekly-contest-123.html</link><guid isPermaLink="false">Contest/Leetcode/Biweekly-Contest-123.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:38:57 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://leetcode.cn/contest/weekly-contest-402/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/contest/weekly-contest-402/" target="_blank">Weekly-Contest-402</a>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:T1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T1</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T3</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T4" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T4</a> 
 <br><br><br>给你一个整数数组&nbsp;hours，表示以&nbsp;小时&nbsp;为单位的时间，返回一个整数，表示满足&nbsp;i &lt; j&nbsp;且&nbsp;hours[i] + hours[j]&nbsp;构成&nbsp;整天&nbsp;的下标对&nbsp;i,&nbsp;j&nbsp;的数目。<br>
整天&nbsp;定义为时间持续时间是 24 小时的&nbsp;整数倍&nbsp;。<br>
例如，1 天是 24 小时，2 天是 48 小时，3 天是 72 小时，以此类推。<br>暴力没什么好说的<br>class Solution {
public:
    int countCompleteDayPairs(vector&lt;int&gt;&amp; hours) {
        vector&lt;int&gt; remainderCount(24, 0);
        int count = 0;
        for (int hour : hours) {
            int remainder = hour % 24;
            int complement = (24 - remainder) % 24;
            count += remainderCount[complement];
            remainderCount[remainder]++;
        }
        return count;
    }
};
<br><br>给你一个整数数组&nbsp;hours，表示以&nbsp;小时&nbsp;为单位的时间，返回一个整数，表示满足&nbsp;i &lt; j&nbsp;且&nbsp;hours[i] + hours[j]&nbsp;构成&nbsp;整天&nbsp;的下标对&nbsp;i,&nbsp;j&nbsp;的数目。<br>
整天&nbsp;定义为时间持续时间是 24 小时的&nbsp;整数倍&nbsp;。<br>
例如，1 天是 24 小时，2 天是 48 小时，3 天是 72 小时，以此类推。<br>模运算技巧+哈希优化<br>$<br><br><br>class Solution {
public:
    long long countCompleteDayPairs(vector&lt;int&gt;&amp; hours) {
        vector&lt;int&gt; remainderCount(24, 0);
        long long count = 0;
        for (int hour : hours) {
            int remainder = hour % 24;
            int complement = (24 - remainder) % 24;
            count += remainderCount[complement];
            remainderCount[remainder]++;
        }
        return count;
    }
};
<br><br>统计每个元素的出现次数，记到哈希表 cnt 中。将哈希表的 key 整理到数组 a 中，把 a 按照从小到大的顺序排序。<br>定义 dfs(i) 表示从 a[0] 到 a[i] 中选择，可以得到的伤害值之和的最大值。<br>考虑 a[i] 选或不选：<br>
<br>不选：问题变成从 a[0] 到 a[i-1] 中选择，可以得到的伤害值之和的最大值，即 。
<br>选：那么伤害值等于 a[i]-2 和 a[i]-1 的数不能选，问题变成从 a[0] 到 a[j-1] 中选择，可以得到的伤害值之和的最大值，其中 j 是最小的满足  的数。那么 。<br>
两种情况取最大值，得
<br><br>递归边界：dfs(−1)=0。没有数可以选，伤害值之和为0。<br>递归入口：dfs(n−1)，即答案。注意这里 n 是 a 的长度，即 power 中的不同元素个数。<br>代码实现时，j 的计算可以用二分查找，也可以暴力用循环查找。<br>class Solution {
public:
    long long maximumTotalDamage(vector&lt;int&gt;&amp; power) {
        unordered_map&lt;int,int&gt;cnt;
        for(int x:power){
            cnt[x]++;
        }
        vector&lt;pair&lt;int,int&gt;&gt;a(cnt.begin(),cnt.end());
        ranges::sort(a);
        int n = a.size();
        vector&lt;long long&gt;f(n+1);
        for(int i = 0, j=0; i &lt; n; i++){
            auto&amp; [x,c]=a[i];
            while(a[j].first &lt; x - 2){
                j++;
            }
            f[i+1]=max(f[i],f[j]+(long long)x*c);
        }
        return f[n];
        
    }
};
<br><br>树状数组<br>class Fenwick {
    vector&lt;int&gt; f;

public:
    Fenwick(int n) : f(n) {}

    void update(int i, int val) {
        for (; i &lt; f.size(); i += i &amp; -i) {
            f[i] += val;
        }
    }

    int pre(int i) {
        int res = 0;
        for (; i &gt; 0; i &amp;= i - 1) {
            res += f[i];
        }
        return res;
    }

    int query(int l, int r) {
        if (r &lt; l) {
            return 0;
        }
        return pre(r) - pre(l - 1);
    }
};

class Solution {
public:
    vector&lt;int&gt; countOfPeaks(vector&lt;int&gt;&amp; nums, vector&lt;vector&lt;int&gt;&gt;&amp; queries) {
        int n = nums.size();
        Fenwick f(n - 1);
        auto update = [&amp;](int i, int val) {
            if (nums[i - 1] &lt; nums[i] &amp;&amp; nums[i] &gt; nums[i + 1]) {
                f.update(i, val);
            }
        };
        for (int i = 1; i &lt; n - 1; i++) {
            update(i, 1);
        }

        vector&lt;int&gt; ans;
        for (auto&amp; q : queries) {
            if (q[0] == 1) {
                ans.push_back(f.query(q[1] + 1, q[2] - 1));
                continue;
            }
            int i = q[1];
            for (int j = max(i - 1, 1); j &lt;= min(i + 1, n - 2); ++j) {
                update(j, -1);
            }
            nums[i] = q[2];
            for (int j = max(i - 1, 1); j &lt;= min(i + 1, n - 2); ++j) {
                update(j, 1);
            }
        }
        return ans;
    }
};
]]></description><link>https://www.allenygy.vip/contest/leetcode/weekly-contest-402.html</link><guid isPermaLink="false">Contest/Leetcode/Weekly-Contest-402.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:39:40 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://leetcode.cn/contest/weekly-contest-403/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/contest/weekly-contest-403/" target="_blank">Weekly-Contest-403</a>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:T1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T1</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:双指针" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#双指针</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:模拟" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#模拟</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:暴力" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#暴力</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T3</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:DP" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DP</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:状态机DP" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#状态机DP</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T4" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T4</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:枚举" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#枚举</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:暴力" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#暴力</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:模拟" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#模拟</a> 
 <br><br><br><a href="https://www.allenygy.vip?query=tag:双指针" class="tag" target="_blank" rel="noopener nofollow">#双指针</a><br>
维护最小值<br>class Solution {
public:
    double minimumAverage(vector&lt;int&gt;&amp; nums) {
        sort(nums.begin(),nums.end());
        int n =nums.size();
        int ans=(nums[0]+nums[n-1]);
        for(int i =0,j=n-1;i&lt;j;i++,j--){
            ans=min(ans,(nums[i]+nums[j]));
        }
        return ans/2.0;
    }
};
<br><br><a href="https://www.allenygy.vip?query=tag:模拟" class="tag" target="_blank" rel="noopener nofollow">#模拟</a> <a href="https://www.allenygy.vip?query=tag:暴力" class="tag" target="_blank" rel="noopener nofollow">#暴力</a><br>class Solution {
public:
    int minimumArea(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {
        if (grid.empty() || grid[0].empty()) return 0;
    
        int rows = grid.size();
        int cols = grid[0].size();
        
        int min_row = rows, max_row = -1;
        int min_col = cols, max_col = -1;
        
        for (int r = 0; r &lt; rows; ++r) {
            for (int c = 0; c &lt; cols; ++c) {
                if (grid[r][c] == 1) {
                    min_row = min(min_row, r);
                    max_row = max(max_row, r);
                    min_col = min(min_col, c);
                    max_col = max(max_col, c);
                }
            }
        }
        
        if (min_row == rows || max_row == -1) return 0;
        
        int height = max_row - min_row + 1;
        int width = max_col - min_col + 1;
        
        return height * width;
    }
};
<br><br><a href="https://www.allenygy.vip?query=tag:DP" class="tag" target="_blank" rel="noopener nofollow">#DP</a> <a href="https://www.allenygy.vip?query=tag:状态机DP" class="tag" target="_blank" rel="noopener nofollow">#状态机DP</a><br>class Solution {
public:
    long long maximumTotalCost(vector&lt;int&gt;&amp; nums) {
        int n = nums.size();
        vector&lt;array&lt;long long, 2&gt;&gt; f(n+1);
        for(int i=n-1;i&gt;=0;i--){
            f[i][0]=f[i+1][1]+nums[i];
            f[i][1]=max(f[i+1][1]+nums[i],f[i+1][0]-nums[i]);
        }
        return f[0][0];
    }
};
<br><br><a href="https://www.allenygy.vip?query=tag:枚举" class="tag" target="_blank" rel="noopener nofollow">#枚举</a> <a href="https://www.allenygy.vip?query=tag:暴力" class="tag" target="_blank" rel="noopener nofollow">#暴力</a> <a href="https://www.allenygy.vip?query=tag:模拟" class="tag" target="_blank" rel="noopener nofollow">#模拟</a><br>枚举六种排列情况<br>
分别调用 T2 的计算方法求出最小面积<br>class Solution {
    vector&lt;vector&lt;int&gt;&gt; rotate(vector&lt;vector&lt;int&gt;&gt;&amp; a) {
        int m = a.size();
        int n = a[0].size();
        vector&lt;vector&lt;int&gt;&gt; b(n, vector&lt;int&gt;(m));
        for (int i = 0; i &lt; m; i++) {
            for (int j = 0; j &lt; n; j++) {
                b[j][m - 1 - i] = a[i][j];
            }
        }
        return b;
    }

    int minimumArea(vector&lt;vector&lt;int&gt;&gt;&amp; a, int u, int d, int l, int r) {
        int left = a[0].size(), right = 0, top = a.size(), bottom = 0;
        for (int i = u; i &lt; d; i++) {
            for (int j = l; j &lt; r; j++) {
                if (a[i][j] == 1) {
                    left = min(left, j);
                    right = max(right, j);
                    top = min(top, i);
                    bottom = i;
                }
            }
        }
        return (right - left + 1) * (bottom - top + 1);
    }

    int f(vector&lt;vector&lt;int&gt;&gt;&amp; a) {
        int ans = INT_MAX;
        int m = a.size();
        int n = a[0].size();
        if (m &gt;= 3) {
            for (int i = 1; i &lt; m; i++) {
                for (int j = i + 1; j &lt; m; j++) {
                    // 图片上左
                    int area = minimumArea(a, 0, i, 0, n);
                    area += minimumArea(a, i, j, 0, n);
                    area += minimumArea(a, j, m, 0, n);
                    ans = min(ans, area);
                }
            }
        }
        if (m &gt;= 2 &amp;&amp; n &gt;= 2) {
            for (int i = 1; i &lt; m; i++) {
                for (int j = 1; j &lt; n; j++) {
                    // 图片上中
                    int area = minimumArea(a, 0, i, 0, n);
                    area += minimumArea(a, i, m, 0, j);
                    area += minimumArea(a, i, m, j, n);
                    ans = min(ans, area);
                    // 图片上右
                    area = minimumArea(a, 0, i, 0, j);
                    area += minimumArea(a, 0, i, j, n);
                    area += minimumArea(a, i, m, 0, n);
                    ans = min(ans, area);
                }
            }
        }
        return ans;
    }

public:
    int minimumSum(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {
        auto g = rotate(grid);
        return min(f(grid), f(g));
    }
};
]]></description><link>https://www.allenygy.vip/contest/leetcode/weekly-contest-403.html</link><guid isPermaLink="false">Contest/Leetcode/Weekly-Contest-403.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:39:45 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://leetcode.cn/contest/weekly-contest-381/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/contest/weekly-contest-381/" target="_blank">Weekly-Contest-381</a>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:T1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T1</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T3</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T4" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T4</a> 
 <br><br><br>class Solution { 
public: 
	int minimumPushes(string word) {
		unordered_map&lt;char,int&gt;map; 
		for(int i=0;i&lt;word.size();i++){ 
			map[word[i]]++; 
		} 
		if(map.size()&lt;=8){ 
			return word.size(); 
		} 
		vector&lt;int&gt; v(map.size(),0);
		int i=0; 
		for (const auto&amp; pair : map) { 
			v[i++]= pair.second; 
		} 
		sort(v.begin(), v.end(), greater&lt;int&gt;()); 
		for(int i=0;i&lt;v.size();i++){ 
			cout&lt;&lt;" "&lt;&lt;v[i]; 
		} 
		int count=1; int bit=1; int res=0;
		for(int i=0;i&lt;v.size();i++){ 
			if(count&lt;=8){ 
				res+=v[i]*bit; count++; 
			} else{ count=1; i--; bit+=1; 
			} 
		} 
		return res; 
	} 
};
<br><br>class Solution { 
public: 
	vector&lt;int&gt; countOfPairs(int n, int x, int y) { 
		vector&lt;int&gt; result(n, 0); 
		for (int house1 = 1; house1 &lt;= n-1; house1++) { 
			for (int house2 = house1+1; house2 &lt;= n; house2++) { 
				int distance = min(abs(house2 - house1), 
								min(abs(house1-x)+1+abs(house2-y), 
								abs(house1-y)+1+abs(house2-x)));
				 result[distance - 1]++; 
			} 
		} 
		for(int i=0;i&lt;n;i++) result[i]*=2; 
			return result; 
	} 
};
<br><br>class Solution { 
public: 
	int minimumPushes(string word) { 
		unordered_map&lt;char,int&gt;map; 
		for(int i=0;i&lt;word.size();i++){ 
			map[word[i]]++; 
		} 
		if(map.size()&lt;=8){ 
			return word.size(); 
		} 
		vector&lt;int&gt; v(map.size(),0); 
		int i=0; 
		for (const auto&amp; pair : map) { 
			v[i++]= pair.second; 
		} sort(v.begin(), v.end(), greater&lt;int&gt;()); 
		for(int i=0;i&lt;v.size();i++){ 
			cout&lt;&lt;" "&lt;&lt;v[i]; 
		} 
		int count=1; int bit=1; int res=0; 
		for(int i=0;i&lt;v.size();i++){ 
			if(count&lt;=8){ 
				res+=v[i]*bit; count++; 
			} else{ 
				count=1; i--; bit+=1; 
			} 
		} 
		return res; 
	} 
};
<br>]]></description><link>https://www.allenygy.vip/contest/leetcode/weekly-contest-381.html</link><guid isPermaLink="false">Contest/Leetcode/Weekly-Contest-381.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:39:29 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://leetcode.cn/contest/biweekly-contest-122" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/contest/biweekly-contest-122" target="_blank">Biweekly-contest-122</a>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:T1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T1</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:woc，我是傻逼" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#woc，我是傻逼</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:分组循环" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#分组循环</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T3</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:还没开始" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#还没开始</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T4" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T4</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:还没开始" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#还没开始</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:灵神题解" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#灵神题解</a> 
 <br><br><br>
<br>开始的时候总想暴力，取第一个数然后两个for循环就过了
<br>后来看到HMZ，选第一个数然后直接sort取前两位

<br>说实话，我有点懵
<br>后来， <a href="https://www.allenygy.vip?query=tag:woc，我是傻逼" class="tag" target="_blank" rel="noopener nofollow">#woc，我是傻逼</a>


<br><a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-i/solution/cong-onlogn-dao-onpythonjavacgo-by-endle-gmna" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-i/solution/cong-onlogn-dao-onpythonjavacgo-by-endle-gmna" target="_blank">T1</a><br><br>
<br>刚开始想找规律来着，什么二进制数一的个数相同两者有无规律
<br>后来，直接模拟就好了把能排序的从小到大拍一遍，最后看整个数组能不能有序就完了
<br><a href="https://www.allenygy.vip?query=tag:分组循环" class="tag" target="_blank" rel="noopener nofollow">#分组循环</a> 应用场景：找一段符合条件的连续的片段<br>
<br>外层循环

<br>记录每次循环开始时数组下标


<br>内层循环

<br>判断是否符合条件


<br>while i&lt;n:
	start=i
	while i&lt;n and [condition]:
		i+=1
	# 循环结束，从start到i-1是一个子数组
<br><a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/find-if-array-can-be-sorted/solution/jiao-ni-yi-ci-xing-ba-dai-ma-xie-dui-on-j3nik" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/find-if-array-can-be-sorted/solution/jiao-ni-yi-ci-xing-ba-dai-ma-xie-dui-on-j3nik" target="_blank">T2</a><br><br><a href="https://www.allenygy.vip?query=tag:还没开始" class="tag" target="_blank" rel="noopener nofollow">#还没开始</a> 可能还没开始看题<br>
看完题解<br>
也就是说，拿到最小的数之后可以用这个数吧其他不是它的倍数的数消掉<br>
<br>假设最小的数只有一个，那么最后只剩它自己
<br>如果最小的数不止一个

<br>假设x不是m的倍数

<br>


<br>假设x都是m的倍数

<br>可以先消掉不是m的数
<br>剩余的数都相同两两配对




<br><a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/minimize-length-of-array-using-operations/solution/on-nao-jin-ji-zhuan-wan-pythonjavacgo-by-2lea" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/minimize-length-of-array-using-operations/solution/on-nao-jin-ji-zhuan-wan-pythonjavacgo-by-2lea" target="_blank">T3</a><br><br><a href="https://www.allenygy.vip?query=tag:还没开始" class="tag" target="_blank" rel="noopener nofollow">#还没开始</a> 可能还没开始看题<br>
<a href="https://www.allenygy.vip?query=tag:灵神题解" class="tag" target="_blank" rel="noopener nofollow">#灵神题解</a><a data-tooltip-position="top" aria-label="https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-ii/solution/liang-ge-you-xu-ji-he-wei-hu-qian-k-1-xi-zdzx/" rel="noopener nofollow" class="external-link" href="https://leetcode.cn/problems/divide-an-array-into-subarrays-with-minimum-cost-ii/solution/liang-ge-you-xu-ji-he-wei-hu-qian-k-1-xi-zdzx/" target="_blank">T4</a>]]></description><link>https://www.allenygy.vip/contest/leetcode/biweekly-contest-122.html</link><guid isPermaLink="false">Contest/Leetcode/Biweekly-Contest-122.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:38:45 GMT</pubDate></item><item><title><![CDATA[biweekly-contest-133]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:T1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T1</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:贪心" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#贪心</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T3</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:贪心" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#贪心</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:T4" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#T4</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:DP" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DP</a> 
 <br><br><br>统计不能被 0 整除的数的数量<br>class Solution {
public:
    int minimumOperations(vector&lt;int&gt;&amp; nums) {
        int ans=0;

        for(int i=0;i&lt;nums.size();i++){
            if(nums[i]%3!=0)
                ans+=1;
        }
        return ans;
    }
};
<br><br><a href="https://www.allenygy.vip?query=tag:贪心" class="tag" target="_blank" rel="noopener nofollow">#贪心</a><br>
从左至右遍历逐个检查<br>class Solution {
public:
    int minOperations(vector&lt;int&gt;&amp; nums) {
        int n = nums.size();
        int count = 0;
        for (int i = 0; i &lt;= n - 3; ++i) {
            if (nums[i] == 0) {
                nums[i] = 1 - nums[i];
                nums[i + 1] = 1 - nums[i + 1];
                nums[i + 2] = 1 - nums[i + 2];
                count++;
                cout&lt;&lt;i&lt;&lt;" ";
            }
        }

        if (nums[n - 2] == 0 || nums[n - 1] == 0) {
            return -1;
        }

        return count;
    }
};
<br><br><a href="https://www.allenygy.vip?query=tag:贪心" class="tag" target="_blank" rel="noopener nofollow">#贪心</a><br>
从左至右，每发现一个需要翻转的数<br>
翻转次数+1<br>
翻转状态翻转（因为翻转1次，后面所有的都会翻转）<br>class Solution {
public:
    int minOperations(vector&lt;int&gt;&amp; nums) {
        int flips = 0;
        int n = nums.size();
        bool shouldBeOne = false;

        for (int i = 0; i &lt; n; ++i) {
            if (nums[i] == shouldBeOne) {
                flips++;
                shouldBeOne = !shouldBeOne;
            }
        }
        return flips;
    }
};
<br><br><a href="https://www.allenygy.vip?query=tag:DP" class="tag" target="_blank" rel="noopener nofollow">#DP</a><br>
看了题解还是不会]]></description><link>https://www.allenygy.vip/contest/leetcode/biweekly-contest-133.html</link><guid isPermaLink="false">Contest/Leetcode/Biweekly-contest-133.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:39:14 GMT</pubDate></item><item><title><![CDATA[BDA-Lab-3]]></title><description><![CDATA[ 
 <br><br><br><br>The goal of this project is to predict the commercial popularity of characters and plotlines from Harry Potter and the Sorcerer's Stone, with a specific focus on Click-Through Rate (CTR) estimation. By analyzing the relationships between key characters and key events in the plot, we aim to predict which characters and story arcs will resonate most with audiences in a commercial context. This prediction will help tailor marketing and content promotion strategies, particularly for digital media, by identifying elements that are more likely to engage users.<br>The project will involve constructing a social network of characters, detecting important relationships and interactions, and applying predictive models to rank these elements according to their potential commercial appeal. Ultimately, the goal is to estimate CTR by identifying the most engaging characters and events that are likely to attract attention and drive user interaction.<br><br> In media commercialization, especially in industries like books, movies, and television, understanding which characters and plotlines resonate with audiences is crucial for content optimization and targeted marketing. By predicting which aspects of a story will garner the most attention, this project aims to maximize CTR, which directly correlates with audience engagement and, ultimately, the commercial success of content.<br>This work builds on the foundations laid in Lab-1 and Lab-2:<br>In Lab-1, I focused on summarizing the content of The Da Vinci Code, using methods like word frequency analysis, sentiment analysis, and content summarization. These analyses helped extract insights into the book's structure and its thematic elements.<br>In Lab-2, the focus shifted to summarizing Harry Potter and the Sorcerer's Stone, where I condensed the story to highlight the most crucial events and character relationships. This provided the foundation for identifying key interactions that might predict CTR in the commercial context.<br>In Lab-3, we take these earlier steps further by analyzing character relationships and predicting the potential popularity of characters and plot events, ultimately customizing the CTR prediction model.<br><br><br>In Lab-1, I aimed to summarize the content of The Da Vinci Code from three perspectives:<br>
<br>Word Frequency: Using NLTK and MapReduce, I processed the text into smaller chunks for easier analysis. I performed a word count to extract the most frequent terms, helping identify key themes and concepts within the book.
<br>Sentiment Analysis: I used a pretrained sentiment analysis model to analyze the emotional tone of the text, calculating an average sentiment score for the book.
<br>Content Summary: By summarizing sections of the text, I used a Naive Bayes algorithm and a pretrained language model to identify key events and themes in the book.
<br>These methods provided a deeper understanding of the text’s structure and emotional tone, which contributed to the character relationship extraction and popularity prediction in Lab-3. The sentiment analysis, in particular, offered insight into which parts of the story might elicit emotional responses from audiences—a key factor in predicting CTR.<br><br>Divide the book into several parts and use the pretrained model to summary each part. (twice)<br><img alt="Word Cloud" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlhXX6.png" referrerpolicy="no-referrer"><br>Pre-trained models summarize the Da Vinci Code<br>The Da Vinci Code, written by Dan Brown, follows Harvard symbologist Robert Langdon as he becomes entangled in a mysterious murder at the Louvre Museum. Alongside cryptologist Sophie Neveu, Langdon unravels a complex web of codes, symbols, and historical secrets tied to a hidden truth about the Holy Grail and the controversial legacy of Mary Magdalene. The story presents a fictional European secret society, the Priory of Sion, supposedly founded in 1099 and involving famous figures such as Leonardo da Vinci. Another Catholic organization, Opus Dei, emerges in the narrative as a shadowy force, sparking further intrigue. 

The plot unfolds through a series of cryptic messages and objects, including a keystone believed to lead to the Grail’s hidden location. Langdon and Sophie encounter numerous obstacles, including Silas, a devout albino monk, and Leigh Teabing, a Grail historian with his own hidden motives. As they decode symbols like the pentacle and the number PHI, they chase leads through significant historical sites like Westminster Abbey and Rosslyn Chapel. The story weaves themes of faith, power, and historical mystery, ultimately suggesting a hidden lineage of Jesus and Mary Magdalene that could challenge traditional Christian beliefs.
<br><br>Lab-2 focused on summarizing Harry Potter and the Sorcerer's Stone, identifying key events, characters, and their interactions. The summarization process aimed to highlight important narrative elements and character dynamics. The goal was to condense the book while retaining the essence of the storyline.<br> <img alt="Main Character" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/uT1f9K.png" referrerpolicy="no-referrer"><br>In Lab-2, I used BERT, a pretrained language model, to generate summaries and understand the structure of the narrative. However, while the summarization helped identify major events, it didn’t provide in-depth analysis of character relationships. Recognizing the need to go beyond mere summarization, I turned to more specialized methods in Lab-3 to focus specifically on predicting popularity based on character interactions and plot development.<br> <img alt="Character" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Character.png" referrerpolicy="no-referrer"><br><br>Lab-3 builds on the work done in Lab-1 and Lab-2 by using the following approaches:<br>
<br>
Character Relationship Extraction:

<br>Using BERT and dependency parsing, I identified key relationships between the characters in Harry Potter and the Sorcerer's Stone. This was crucial for understanding how characters influence each other and their roles in shaping the plot.
<br>Relationships were mapped using a knowledge graph, where nodes represent characters and edges represent their interactions.


<br>
Popularity Prediction:

<br>I applied association mining and ranking algorithms to predict which characters and events would attract the highest CTR. This involved analyzing the emotional tones and narrative significance of each character’s role in the plot.
<br>Character importance was ranked based on their interactions, screen-time, and emotional significance in the narrative.


<br>
CTR Optimization:

<br>Using machine learning models, I predicted which characters and plotlines would generate the most engagement. By focusing on events with high emotional impact or dramatic twists, I ranked these elements for potential commercial appeal.


<br>
Visualization:

<br>The character relationships were visualized in the form of a social network graph, which provided a clear representation of the interactions and influence of each character within the story.


<br><br><br>Building on Lab-1 and Lab-2, the following preprocessing steps were performed:<br>
<br>Text Chunking: The content was chunked into smaller parts (as seen in the map function from Lab-1) for easier analysis.
<br>Entity Extraction: Using Named Entity Recognition (NER), I extracted the names of characters and key plot points from the book.
<br>Sentiment and Emotional Analysis: Sentiment scores were applied to each character interaction and key plot event, determining their emotional engagement potential.
<br><br>The relationships between characters were mapped based on their interactions throughout the book. Using a graph-based representation, I built a social network where:<br>
<br>Nodes represent characters.
<br>Edges represent interactions or relationships between characters.
<br>This network provides a visualization of the social dynamics within the book, helping identify the most central characters and their roles in the plot.<br><br><br>Based on the results from Lab-1 and Lab-2, I identified the following features to predict CTR:<br>
<br>Character Centrality: Characters with more interactions and central roles in the plot are likely to attract higher CTR.
<br>Plot Importance: Key plot events that involve multiple central characters are likely to generate higher engagement.
<br>Sentiment Analysis: Positive or emotionally charged events are likely to generate higher CTR.
<br><br>Experimenting with Different Models for CTR Prediction<br>As part of this project, I explored various machine learning models for predicting the Click-Through Rate (CTR), each offering distinct strengths. The models tested include:<br>
<br>Random Forest Classifier
<br>XGBoost
<br>Gradient Boosting
<br>Each of these models has been trained and evaluated using the same dataset to compare their performance. Below is an overview of the steps taken, the rationale behind choosing each model, and the results obtained.<br><br>Random Forest is an ensemble learning method that aggregates predictions from multiple decision trees to improve accuracy and reduce overfitting. It is particularly effective when dealing with large datasets and high-dimensional feature spaces, as it helps to capture complex relationships between the features and the target variable.<br>
<br>Performance: The Random Forest model showed the best performance among the models tested, achieving an accuracy of 0.565 and an AUC score of 0.5443. This suggests that the model was effective at capturing the patterns in the data and produced relatively robust results compared to the other models.
<br><br>XGBoost is a gradient boosting algorithm known for its efficiency and performance in structured/tabular data. It builds an ensemble of trees sequentially, where each new tree attempts to correct the errors made by the previous ones. XGBoost is widely used for tasks where predictive performance is critical.<br>
<br>Performance: The XGBoost model achieved an accuracy of 0.475 and an AUC score of 0.4768. While it showed reasonable performance, the lower accuracy and AUC indicate that XGBoost was less effective in capturing the complexities of the dataset compared to other models.
<br><br>Gradient Boosting is another ensemble technique that builds trees sequentially, optimizing for the loss function. Like XGBoost, it focuses on correcting errors made by earlier models, but it can be more sensitive to hyperparameters and the data itself.<br>
<br>Performance: The Gradient Boosting model achieved an accuracy of 0.555 and an AUC score of 0.5573. While it performed better than XGBoost, it still lagged behind Random Forest, suggesting it might require further tuning to optimize its performance on this dataset.
<br>Based on the comparative analysis of the models, Random Forest was chosen as the final model for CTR prediction. The rationale behind this decision includes:<br>Robust Performance: Random Forest demonstrated the best overall performance, with the highest accuracy and AUC score. This indicates that it was able to capture the underlying patterns in the data most effectively.<br>
Reduced Overfitting: As an ensemble method, Random Forest helps mitigate overfitting, which can be a common issue with individual decision trees. This makes it more reliable in producing accurate predictions on unseen data.<br>
Interpretability and Flexibility: While Random Forest may not be as interpretable as simpler models, it provides an effective balance between model complexity and prediction accuracy. It also handles high-dimensional datasets well, which is critical in CTR prediction tasks where the feature space can be large and complex.<br>import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, roc_auc_score
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, roc_auc_score, roc_curve
import matplotlib.pyplot as plt
import xgboost as xgb
from sklearn.ensemble import GradientBoostingClassifier


def ctr_prediction_RandomForest(data):
    """
    Function to predict Click-Through Rate (CTR) using a machine learning model.
    
    Parameters:
    - data: pandas DataFrame, where the last column is 'CTR' (target variable).
    
    Returns:
    - model: trained model.
    - accuracy: model's accuracy score.
    - auc: ROC-AUC score.
    - y_pred: Predicted CTR values.
    """
    # Preprocessing steps (same as before)
    if data.isnull().sum().any():
        data = data.dropna()

    categorical_cols = ['user_location', 'ad_type']  # Example categorical columns
    data = pd.get_dummies(data, columns=categorical_cols, drop_first=True)

    X = data.drop(columns=['CTR'])  # Features
    y = data['CTR']  # Target variable: CTR (0 = No Click, 1 = Click)

    # Train-Test Split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Initialize and train the model (e.g., Random Forest, Logistic Regression, etc.)
    model = RandomForestClassifier(random_state=42)
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Evaluate performance
    accuracy = accuracy_score(y_test, y_pred)
    auc = roc_auc_score(y_test, model.predict_proba(X_test)[:, 1])

    # Step 9: Plotting Model Performance (Optional)
    # Plot ROC curve
    fpr, tpr, thresholds = roc_curve(y_test, model.predict_proba(X_test)[:, 1])
    plt.figure(figsize=(8, 6))
    plt.plot(fpr, tpr, color='blue', label='ROC Curve')
    plt.plot([0, 1], [0, 1], color='gray', linestyle='--')
    plt.xlabel('False Positive Rate')
    plt.ylabel('True Positive Rate')
    plt.title('ROC Curve')
    plt.legend(loc='lower right')
    plt.show()

    return model, accuracy, auc, y_pred


def ctr_prediction_xgboost(data):
    """
    Function to predict Click-Through Rate (CTR) using XGBoost Classifier.
    
    Parameters:
    - data: pandas DataFrame, where the last column is 'CTR' (target variable).
    
    Returns:
    - model: trained XGBoost model.
    - accuracy: model's accuracy score.
    - auc: ROC-AUC score.
    - y_pred: Predicted CTR values.
    """
    # Preprocessing steps (same as before)
    if data.isnull().sum().any():
        data = data.dropna()

    categorical_cols = ['user_location', 'ad_type']
    data = pd.get_dummies(data, columns=categorical_cols, drop_first=True)

    X = data.drop(columns=['CTR'])  # Features
    y = data['CTR']  # Target variable: CTR (0 = No Click, 1 = Click)

    # Train-Test Split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Initialize and train the XGBoost Classifier
    model = xgb.XGBClassifier(use_label_encoder=False, random_state=42)
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Evaluate performance
    accuracy = accuracy_score(y_test, y_pred)
    auc = roc_auc_score(y_test, y_pred)

    return model, accuracy, auc, y_pred


def ctr_prediction_gradient_boosting(data):
    """
    Function to predict Click-Through Rate (CTR) using Gradient Boosting Classifier.
    
    Parameters:
    - data: pandas DataFrame, where the last column is 'CTR' (target variable).
    
    Returns:
    - model: trained Gradient Boosting model.
    - accuracy: model's accuracy score.
    - auc: ROC-AUC score.
    - y_pred: Predicted CTR values.
    """
    # Preprocessing steps (same as before)
    if data.isnull().sum().any():
        data = data.dropna()

    categorical_cols = ['user_location', 'ad_type']
    data = pd.get_dummies(data, columns=categorical_cols, drop_first=True)

    X = data.drop(columns=['CTR'])  # Features
    y = data['CTR']  # Target variable: CTR (0 = No Click, 1 = Click)

    # Train-Test Split
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Initialize and train the Gradient Boosting Classifier
    model = GradientBoostingClassifier(random_state=42)
    model.fit(X_train, y_train)

    # Make predictions
    y_pred = model.predict(X_test)

    # Evaluate performance
    accuracy = accuracy_score(y_test, y_pred)
    auc = roc_auc_score(y_test, y_pred)

    return model, accuracy, auc, y_pred
<br><br><br>The following metrics were used to evaluate the performance of the CTR model:<br>
<br>Accuracy: The proportion of correct CTR predictions (high vs. low).
<br>Precision and Recall: These metrics were used to evaluate the model’s ability to predict high CTR events correctly.
<br>F1 Score: The harmonic mean of precision and recall, providing a balanced evaluation.
<br><br>
<br>Character Centrality: Characters like Harry Potter and Dumbledore, who have more interactions and influence in the plot, are predicted to have higher CTR.
<br>Plot Importance: Major events involving these central characters (e.g., Harry’s confrontation with Voldemort) have higher CTR due to their significance in the narrative.
<br><br>By analyzing Lab-1 and Lab-2, we were able to build a robust CTR estimation model for Harry Potter and the Sorcerer’s Stone. This model helps predict which characters and plot points will engage audiences the most in a commercialized context. The insights gained can be applied to marketing campaigns, content distribution, and audience engagement strategies for book adaptations and media properties.<br><br><br>The character network was successfully visualized, revealing the key figures and their centrality in the story. Characters like Harry Potter, Hermione Granger, and Ron Weasley were found to have high centrality, while others like Draco Malfoy and Voldemort played more peripheral, yet pivotal, roles.<br><img alt="Knowledge Graph" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/3chsG1.png" referrerpolicy="no-referrer"><br><br>The CTR prediction model showed promising results, with key plot events like Harry's victory over Quirrell and the reveal of Voldemort’s return generating the highest predicted CTRs. Characters like Dumbledore and Hermione were also found to have high predicted popularity, with potential for high audience engagement.<br><br><img alt="e8OCzL" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/e8OCzL.png" referrerpolicy="no-referrer"><br>The visualization of predicted CTR scores confirmed that certain characters and events would likely attract significant attention, offering insights into how the book’s commercial appeal could be optimized.<br><br>Lab-3 successfully extended the work from Lab-1 and Lab-2 to predict the popularity of characters and events in Harry Potter and the Sorcerer’s Stone after commercialization. By analyzing character relationships and applying machine learning techniques for CTR prediction, this project provides valuable insights into how to optimize audience engagement based on narrative dynamics.<br>The CTR prediction model not only helps identify key characters but also provides a framework for analyzing the commercial potential of plot events, which could be applied to similar works in the future.]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-3.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 30 Nov 2024 15:53:28 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlhXX6.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlhXX6.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BDA-Lab-2]]></title><description><![CDATA[ 
 <br><br><br>Goal: Automatically construct a social network of main characters from the book Harry Potter and the Sorcerer's Stone.<br>This project seeks to build an automated process for extracting and visualizing the relationships between characters from a novel. By identifying these relationships, I aim to construct a knowledge graph that can reveal social dynamics within the story and highlight the influence of key characters. Additionally, by applying association mining and ranking algorithms, I can identify central figures and their interactions, uncovering character importance based on the narrative context.<br><br>Character networks are a powerful tool for understanding story structure and character interactions within a narrative. By constructing a network from a text, I can better understand the influence and relationships of main characters, as well as visualize social dynamics within a story. In this project, I use machine learning and natural language processing (NLP) methods to achieve this automatically, focusing on entity extraction, relationship detection, and visualization.<br><br>In the previous lab, I used a pretrained BERT model to generate a summary of Harry Potter and the Sorcerer’s Stone, focusing on condensing the storyline to capture essential events and character dynamics. However, I found that understanding relationships within the text requires more than a summary; the text is rich in complex and often implicit relationships between characters. Directly identifying these relationships through rule-based methods or simple keyword matching is challenging due to the intricate, ambiguous, and context-dependent language used in the narrative.<br>To address these complexities, I chose to use the BERT model again in this lab, this time to identify character relationships. BERT’s ability to grasp nuanced meanings allows us to extract a clearer representation of character interactions. With pretrained language models, I can leverage their deep contextual understanding, bypassing some of the limitations of traditional natural language processing (NLP) techniques.<br>The aim in this lab is to expand beyond summarization to focus specifically on identifying relationships between characters and building a structured knowledge graph. This graph provides a visual and analytical tool for representing the social network within the story, enhancing our ability to analyze and understand the relational patterns and central characters of Harry Potter and the Sorcerer’s Stone.<br><br>The social network of characters is represented in two main components:<br>
<br>Nodes: Represent the characters in the book.
<br>Edges: Represent the relationships between these characters.
<br>Our approach is organized into three main steps: Entity Extraction, Relationship Extraction, and Knowledge Graph Construction.<br><br>
<br>We use spaCy to extract named entities, focusing specifically on character names (e.g., Harry Potter, Hermione Granger).
<br>This involves Named Entity Recognition (NER) to filter and retain only entities labeled as persons.
<br> <img alt="Main Character" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/uT1f9K.png" referrerpolicy="no-referrer"><br>def extract_entities(text):
    words = word_tokenize(text)
    pos_tags = pos_tag(words)
    chunked = ne_chunk(pos_tags, binary=False)
    entities = []
    for subtree in chunked:
        if isinstance(subtree, Tree) and subtree.label() == "PERSON":
            entity = " ".join([leaf[0] for leaf in subtree.leaves()])
            entities.append(entity)
    return entities
<br><br>We employ two approaches to extract relationships between entities: spaCy Dependency Parsing and Pretrained BERT Model.<br><br>By parsing sentences with spaCy, I identify syntactic dependencies (e.g., subject-verb-object structures) to detect relationships between entities. This allows us to infer direct relationships based on grammatical structure.<br>def get_entity_relationships(text):
    words = word_tokenize(text)
    pos_tags = pos_tag(words)
    entities = extract_entities(text)
    relationships = []
    for i in range(len(entities) - 1):
        entity1 = entities[i]
        entity2 = entities[i + 1]
        relation = None
        start = words.index(entity1.split()[0]) + len(entity1.split())
        end = words.index(entity2.split()[0])
        for j in range(start, end):
            if pos_tags[j][1].startswith("VB"):  # find Vb
                relation = pos_tags[j][0]
                break
        if relation:
            relationships.append((entity1, relation, entity2))
    #remove duplicate
    relationships = list(set(relationships))
    return relationships
<br><br>Using a BERT-based NER model helps capture nuanced relationships that may not be directly linked through syntax alone, allowing for richer contextual understanding of connections between characters.<br><br>
<br>We utilize Neo4j to build and visualize the knowledge graph. Here, characters are represented as nodes, and relationships between them as edges.

<br>Each edge captures the interaction type (e.g., “friends with,” “enemy of”) based on verbs or action words derived from the text.


<br>def create_relationships(df, graph):
    for _, row in df.iterrows():
        character_a = Node("Character", label="Character", text=row["Character"])
        character_b = Node("Character", label="Character", text=row["Target Character"])
        graph.merge(character_a, "Character", "text")
        graph.merge(character_b, "Character", "text")
        relationship = Relationship(character_a, row["Relationship Type"], character_b, notes=row["Notes"])
        graph.create(relationship)
<br><br><img alt="Knowledge Graph" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/3chsG1.png" referrerpolicy="no-referrer"><br>With the Neo4j database, I visualize and explore the relationships in the character network. This allows us to:<br>
<br>Identify Key Characters: Use centrality measures to find pivotal figures in the network.
<br>Analyze Relationship Dynamics: Track patterns such as alliances or rivalries by filtering specific relationship types.
<br><br>Objective: Identify and rank the main characters based on their significance and centrality in the character network.<br>PageRank is a powerful tool that I use in this context to rank the characters according to their significance in the story. Here’s a breakdown of how PageRank works and how it helps us analyze the network of characters:<br>
<br>
Using PageRank to Find Main Characters:

<br>PageRank Basics: Originally designed to rank web pages by their importance, the PageRank algorithm considers both the quantity and quality of connections to each node (character, in our case) in a graph. A character with many connections, or connections to other well-connected characters, will have a high PageRank score.
<br>Application to Social Network: By applying PageRank to our knowledge graph of characters, I assign scores that represent each character’s relative importance within the story. Characters with high PageRank scores tend to be those who interact most frequently or with other prominent characters, highlighting them as central figures.
<br>Main Character Identification: Characters with the highest PageRank scores are likely central to the story, as they either have many direct interactions or connect with other important characters.

<img alt="PageRank Scores of Characters" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PageRank%20Scores%20of%20Characters.png" referrerpolicy="no-referrer">

<br>
Analysis of Results:

<br>Insight into Social Structure: PageRank doesn’t just count relationships; it evaluates their importance, meaning a character with fewer but stronger or more meaningful relationships may rank higher than a character with many minor connections. This helps in identifying not just the protagonists but other influential characters who play key roles in the story’s dynamics.
<br>Uncovering Hidden Dynamics: Some characters may appear more central than expected. For example, a minor character with strategic connections to main characters can gain a surprisingly high PageRank score, revealing hidden dynamics or potentially under appreciated roles.
<br>Visualizing Social Hierarchy: PageRank results provide a clearer picture of the social hierarchy, shedding light on character prominence beyond simple relationship counts and offering a more nuanced understanding of influence and connectivity.


<br>By leveraging PageRank, I achieve a deeper, data-driven understanding of the story’s social network, which complements traditional analysis methods and highlights characters based on their relational significance within the entire network structure. This method is particularly valuable for complex narratives where influence and centrality may not be immediately obvious.<br><br><img alt="Extract Entity and Relationship" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/1sdy1I.png" referrerpolicy="no-referrer"><br>
<br>
Entity and Relationship Extraction:

<br>To identify characters and their relationships, I used spaCy’s dependency parsing as an initial approach. Dependency parsing provided a way to identify syntactic relations between characters, such as “subject-verb-object” structures, enabling us to detect straightforward relationships.
<br>Challenges with spaCy: Although fast, spaCy's dependency parsing often missed indirect relationships (e.g., relationships implied through context rather than direct grammatical structure) and subtle associations not explicitly stated in the text.
<br>To address this, I incorporated a pretrained BERT model for relationship extraction. BERT’s deep understanding of contextual language nuances allowed us to capture both direct and implied relationships by learning from large datasets. This model enhanced our extraction accuracy, especially for complex interactions like alliances, rivalries, and hierarchical relationships within the narrative.


<br>
Comparison of Methods:

<br>spaCy:

<br>Advantages: Fast and efficient for identifying direct, grammatical relationships, making it suitable for quick scans of straightforward sentence structures.
<br>Limitations: Less effective for nuanced or context-dependent relationships, as it primarily relies on syntactic dependencies rather than context.


<br>BERT Model:

<br>Advantages: Strong at capturing complex and implied relationships due to its pretrained nature on a large corpus. It understands context deeply, which allowed us to detect less explicit relationships between characters.
<br>Limitations: Higher computational requirements, with slower processing times due to the model’s complexity.


<br>Outcome: By combining both methods, I achieved a balance, leveraging spaCy for speed and BERT for nuanced relationship extraction, improving the overall accuracy of our relationship data.


<br>
Graph Construction:

<br>Neo4j Knowledge Graph: Once entities and relationships were extracted, I built the knowledge graph in Neo4j, where nodes represented characters and edges captured the relationships between them.
<br>Iterative Graph Population: We incrementally added nodes and relationships based on extracted data. This allowed us to iteratively refine and enrich the graph as more relationships were identified.
<br>PageRank Computation: To quantify character importance, I used Neo4j’s built-in PageRank algorithm. PageRank is particularly useful in graph-based social networks as it calculates a character’s significance based on the number and quality of their connections. This helped us identify central figures in the story, revealing key characters whose actions influence many others.


<br><br>In our work, I explored three primary approaches for extracting and analyzing character relationships:<br>
<br>
Direct Text Extraction:

<br>We first tried simple rule-based methods and keyword matching to directly extract relationships from the text. This involved identifying explicit relationship indicators such as verbs or phrases that linked character pairs.
<br>Strengths: Quick and effective for simple, unambiguous relationships.
<br>Limitations: Missed implicit relationships (e.g., relationships inferred through tone or context) and often led to incomplete data due to its rigid nature. Relationships that were context-dependent or complex (e.g., alliances or rivalries that unfold over multiple sentences) were not fully captured.


<br>
Dependency Parsing and Language Models:

<br>Dependency Parsing: We used spaCy’s dependency parsing to analyze sentence structure and find relationships based on syntactic dependencies. This approach works well for direct interactions, as it maps grammatical roles within a sentence, such as subject and object, to identify relationship pathways.
<br>Pretrained Language Models: Using a BERT model, I extracted relationships with greater context sensitivity, capturing implied associations and indirect relationships that are often challenging to detect via dependency parsing alone.
<br>Strengths: Dependency parsing provides structural clarity for simple relationships, while BERT’s contextual understanding brings out subtler interactions.
<br>Limitations: Dependency parsing lacks adaptability for context-rich relationships, while BERT, though powerful, requires more computational resources and may need fine-tuning for specific literature-based tasks.


<br>
Graph-Based Analysis:

<br>Knowledge Graph Construction: By representing characters and relationships as nodes and edges, respectively, in Neo4j, I could explore relationships visually and structurally.
<br>Graph Algorithms: Beyond visualizing relationships, I applied algorithms like PageRank to compute the influence or importance of each character within the network. This provided quantitative insights into character significance, identifying central figures who hold key roles in the story's social fabric.
<br>Strengths: Graph-based analysis, particularly using algorithms like PageRank, allows for an exploration of social structure and character influence, helping us understand the dynamics of the character network.
<br>Limitations: This approach requires well-extracted relationships to produce meaningful insights, so its effectiveness is tied to the quality of initial data extraction.


<br><br>The dataset consists of the full text of Harry Potter and the Sorcerer's Stone. Key considerations in preparing the data included:<br>
<br>Preprocessing: Text was cleaned and segmented to allow for more accurate entity and relationship extraction.
<br>Annotation: Entities (characters) were annotated and verified to ensure consistency in the knowledge graph.
<br>Relationship Validation: Relationships extracted by the model were manually reviewed to ensure accuracy in the final network.
<br><br>In this lab, I explored an automated approach to constructing a social network of characters from Harry Potter and the Sorcerer's Stone by combining advanced entity and relationship extraction techniques with graph-based analysis.<br>Our process demonstrated the value of using pretrained language models, such as BERT, to capture nuanced relationships within text that traditional rule-based methods may overlook. While spaCy’s dependency parsing provided an efficient initial method for extracting explicit syntactic relationships, the addition of BERT allowed us to recognize more complex associations, enriching the extracted data.<br>Neo4j served as an ideal platform for storing, visualizing, and analyzing this character network. By constructing a knowledge graph, I could not only visualize the relationships but also apply graph algorithms like PageRank to identify the most influential characters. This quantitative insight complemented the qualitative extraction, revealing central characters who play key roles in the social structure of the story.<br><br>
<br>
Insight: Pretrained models capture deeper relationships, though at a computational cost. This approach highlights the trade-off between computational efficiency and the quality of extracted relationships, making it suitable for stories with complex character dynamics.

<br>
Limitations: While effective, this approach has limitations in handling ambiguous relationships that may require additional context or external knowledge not present in the text.

<br>
Future Directions: Future work could explore fine-tuning the BERT model for literary text, which may improve extraction accuracy for context-specific relationships. Expanding this approach to other literary texts or genres could also validate its versatility and refine the methods further.

<br>This lab reinforced the power of combining natural language processing and graph analysis for uncovering insights within narrative structures. Such an approach has promising applications not only in literary analysis but also in areas like social network analysis, sentiment analysis, and content recommendation systems.<br> <img alt="Character" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Character.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-2.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/uT1f9K.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/uT1f9K.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BDA-Lab-1]]></title><description><![CDATA[ 
 <br><br><br>Summarize the content of a book 《The Davinci Code》.<br>Summarize the book from 3 different perspectives: 	<br>
<br>Word frequency
<br>Content Sentiment Analysis
<br>Content Summary
<br><br>
<br>MapReduce
<br>Pretrained Large language model analysis
<br>Navie Bayes Algorithm
<br><br>def map(text): #map text to chunks
    sentences = sent_tokenize(text)
    chunks = []
    current_chunk = ""
    max_chunk_size = 1000
    for sentence in sentences:
        if len(current_chunk) + len(sentence) &lt;= max_chunk_size:
            current_chunk += sentence + " "
        else:
            chunks.append(current_chunk.strip())
            current_chunk = sentence + " "
    if current_chunk:
        chunks.append(current_chunk.strip())
    return chunks
<br><br>Using NLTK to count the words in the book<br>
<br>Total Different words : 10873
<br>def word_count(text):
    words = [word for word in word_tokenize(text.lower()) if word.isalpha() and word not in stop_words]
    freq_dist = FreqDist(words)
    return freq_dist
<br>In order to facilitate the presentation of the results, the word cloud map was used to display the results<br><img alt="Word Cloud" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlhXX6.png" referrerpolicy="no-referrer"><br><br>Divide the book into several parts and use the pretrained model to analyze the sentiment of each part.<br>
Then get an average sentiment of the book.<br>Average sentiment score: 0.727<br>
<img alt="Sentiment Analysis" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/CfIHEI.png" referrerpolicy="no-referrer"><br>def reduce_for_text_sentiment(summaries, index):
    # Combine summaries into one text
    summary_text = " ".join(summaries)
    # Split the combined text into manageable chunks
    chunks = map(summary_text)
    print(f"Total chunks: {len(chunks)}")
    # Initialize the sentiment analysis pipeline
    sentiment_analyzer = pipeline("sentiment-analysis", device=device)
    # List to hold sentiment results
    sentiments = []
    # Analyze sentiment for each chunk
    for i, chunk in enumerate(chunks):
        result = sentiment_analyzer(chunk)
        sentiment = result[0]  # Extract the first result from the analysis
        print(f"Chunk {i} Sentiment: {sentiment}")
        sentiments.append(sentiment)
    # Save sentiment results to xlsx file
    df = pd.DataFrame(sentiments)
    df.to_excel(f"sentiments_{index}.xlsx", index=False)
    return sentiments
<br><br>Divide the book into several parts and use the pretrained model to summary each part. (twice)<br>Pre-trained models summarize the Da Vinci Code<br>The Da Vinci Code, written by Dan Brown, follows Harvard symbologist Robert Langdon as he becomes entangled in a mysterious murder at the Louvre Museum. Alongside cryptologist Sophie Neveu, Langdon unravels a complex web of codes, symbols, and historical secrets tied to a hidden truth about the Holy Grail and the controversial legacy of Mary Magdalene. The story presents a fictional European secret society, the Priory of Sion, supposedly founded in 1099 and involving famous figures such as Leonardo da Vinci. Another Catholic organization, Opus Dei, emerges in the narrative as a shadowy force, sparking further intrigue. 

The plot unfolds through a series of cryptic messages and objects, including a keystone believed to lead to the Grail’s hidden location. Langdon and Sophie encounter numerous obstacles, including Silas, a devout albino monk, and Leigh Teabing, a Grail historian with his own hidden motives. As they decode symbols like the pentacle and the number PHI, they chase leads through significant historical sites like Westminster Abbey and Rosslyn Chapel. The story weaves themes of faith, power, and historical mystery, ultimately suggesting a hidden lineage of Jesus and Mary Magdalene that could challenge traditional Christian beliefs.
<br>def reduce_for_text_summary(summaries,index):
    summary_text = " ".join(summaries) # combine the summaries into one text
    chunks = map(summary_text)
    print(f"Total chunks: {len(chunks)}")
    summaries = []
    for i,chunk in enumerate(chunks):
        inputs = tokenizer(chunk, return_tensors="pt", truncation=True, padding="longest").to(device)  
        summary_ids = model.generate(inputs["input_ids"], max_length=100, min_length=50, do_sample=False)
        summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)
        print(i)
        print(summary)
        summaries.append(summary)
    save_text(summaries,index)
    return summaries
<br><br>According to the pre-classified sentiment dictionary, classify the text by naive Bayes algorithm<br>However the result is not as good as the pretrained model.<br>Average sentiment score: 0.504<br>This result is almost identical to random score, which means it did not provide a reasonable result.<br><img alt="Sentiment Analysis" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/10cJzi.png" referrerpolicy="no-referrer"><br><br>
<br>
By using MapReduce to analyze the book, we can get the word frequency, sentiment analysis, and content summary.

<br>
Compare to the traditional way, this approach is more efficient and can be applied to large-scale data processing.

<br>
Compare to the navie bayes algorithm, the pretrained model can provide a more accurate and reasonable result. 	

<br><br>For the purpose of this project, the digital version of The Da Vinci Code by Dan Brown is available for access and download through <a data-tooltip-position="top" aria-label="https://archive.org/details/TheDaVinciCode_201308" rel="noopener nofollow" class="external-link" href="https://archive.org/details/TheDaVinciCode_201308" target="_blank">this link on the Internet Archive</a>. This novel, a bestseller known for its intricate plot and extensive use of historical and religious references, spans approximately 170,000 words. Given its substantial length and rich content, The Da Vinci Code serves as an excellent resource for detailed literary analysis, sentiment analysis, or natural language processing tasks. The novel’s considerable word count classifies it as a long-form novel, providing ample data for a variety of text-based analyses and studies.]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-1.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sat, 30 Nov 2024 12:27:30 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlhXX6.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/IlhXX6.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BDA-Stream Data]]></title><description><![CDATA[ 
 <br><br>Infinite Data <br>
<br>Filtering data streams 
<br>Queries on stream 
<br>Web advertising 
<br><br>In many data analytics situations, we do not know the entire data set in advance<br>Stream Management is important when the input rate is controlled externally:<br>
<br>Google queries
<br>Twitter or Facebook status updates
<br>We can think of the data as infinite and non-stationary (the distribution changes over time)<br><br>Input elements enter at a rapid rate, at one or more input ports (i.e., streams)<br>
<br>We call elements of the stream tuples
<br>The system cannot store the entire stream accessibly <br>Q: How do you make critical calculations about the stream using a limited amount of (secondary) memory? <br><br>Types of queries one wants on answer on a data stream: (we’ll do these today)<br>
<br>
Sampling data from a stream

<br>Construct a random sample


<br>
Queries over sliding windows

<br>Number of items of type x in the last k elements of the stream


<br>
Filtering a data stream

<br>Select elements with property x from the stream 


<br>
Counting distinct elements

<br>Number of distinct elements in the last k elements of the stream


<br>
Estimating moments

<br>Estimate avg./std. dev. of last k elements


<br>
Finding frequent elements

<br><br><img alt="Sampling User" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/U0dx67.png" referrerpolicy="no-referrer"><br>Solution: Sample Users<br>
<br>
Pick  th of users and take all their searches in the sample

<br>
Use a hash function that hashes the user name or user id uniformly into 10 buckets
通用采样过程

<br>为了从数据流中采样 a/ba/ba/b 的比例，可以按照以下步骤进行：<br>
<br>哈希（Hashing）：

<br>对每个元组的键应用一个均匀分布的哈希函数。
<br>将键的哈希值映射到  个桶中。


<br>采样条件：

<br>如果哈希值小于或等于 aaa，则选取该元组。


<br><br>在内存受限的情况下，从数据流中维护一个固定大小 sss 的随机采样集合 SSS。<br><br><br><br>
<br>滑动窗口是一种常见的数据流处理模型。
<br>核心思想：在数据流中，查询只关注最近接收到的 NN 个元素，这些元素组成了一个窗口（window）。
<br><br>
<br>窗口长度 NN 很大：

<br>数据量可能大到无法完全存储在内存中，甚至无法存储在磁盘中。
<br>或者有大量的独立数据流，每个流的窗口都无法完全存储。


<br><br>
<br>电商场景（如 Amazon）：

<br>数据流描述：

<br>对于每个商品 ，维护一个二进制流：

<br>如果商品在第 nn 次交易中售出，流中记录为 1。
<br>如果未售出，记录为 0。




<br>查询需求：

<br>回答问题：商品  在最近 kk 次销售中出现了多少次？




<br><br>
<br>数据量限制：

<br>随着  的增加，存储窗口数据需要大量的内存或磁盘空间。


<br>实时性：

<br>需要快速处理数据流并实时更新窗口数据。


<br>多流问题：

<br>如果有多个数据流，每个流的窗口都需要独立维护，增加了计算复杂度。


<br><br>
<br>近似计算：

<br>在窗口数据量过大的情况下，使用近似算法（例如哈希或概率数据结构）来降低存储和计算需求。


<br>分片存储：

<br>只维护窗口的部分关键数据，而不是存储所有数据点。


<br>滑动更新：

<br>随着新数据点的到来，丢弃窗口中最旧的数据点，从而保持窗口的固定大小。


<br><br>
<br>实时监控：

<br>检测系统日志中最近一段时间的异常行为。


<br>点击流分析：

<br>分析最近 kk 次用户点击行为以优化推荐系统。


<br>金融交易：

<br>监控股票或商品价格的最近波动趋势。


<br>网络流量分析：

<br>在滑动窗口内计算特定 IP 地址的流量量级。


<br>]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-stream-data.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:16:58 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/U0dx67.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/U0dx67.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Advertising]]></title><description><![CDATA[ 
 <br><br><br><img alt="Bipartite Matching" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PntiBv.png" referrerpolicy="no-referrer"><br> is a matching<br>
Cardinality of matching = |M| = 3<br> is a perfect matching<br>Find a maximum matching for a given bipartite graph<br>
<br>A perfect one if it exists
<br><br><br>Suppose  is a maximal matching, and  is the matching that the greedy algorithm produces. <br>Let  be the set of left nodes that are matched in  but not in Mg.<br>Let R be the set of right nodes that are connected by edges to any node in L.<br>
<br>
<br> because in , all the nodes in  were matched.
<br>, because every node in  is matched in .
<br><br><br>For input , suppose greedy produce matching , while an optimal matching is .<br><br><br>给定的条件：<br>
<br>
广告竞标信息：广告主对每个搜索查询的出价集合。

<br>
点击率 (Click-Through Rate, CTR)：每个广告主和查询的点击概率。

<br>
预算限制：每个广告主有一个总预算（比如一个月的预算）。

<br>
广告展示数量限制：每个搜索查询最多展示的广告数量。

<br>目标：<br>当每个搜索查询  到达时，搜索引擎必须选择一组广告主（广告）进行展示，满足以下条件：<br>
<br>展示的广告数量不超过限制；
<br>广告主必须对该查询有出价；
<br>广告主剩余预算足够支付点击费用（如果广告被点击）。
<br>问题挑战：<br>
<br>流式数据： 查询是动态到达的，无法提前知道所有查询，必须实时做出决策。
<br>优化目标： 最大化搜索引擎的总收入。
<br>简单解决方案：<br>
<br>用 期望每次点击收入 (Expected Revenue per Click) 代替简单的出价计算展示广告的优先级：
<br><br>预算限制（Complications: Budget）<br>
<br>
问题：

<br>每个广告主都有一个 有限预算（例如每日预算）。
<br>搜索引擎需要保证广告主不会因广告点击而被收费超过预算。


<br>
影响：

<br>搜索引擎需要在分配广告展示机会时，动态考虑广告主的预算剩余情况。


<br>点击率不确定性（Complications: CTR）<br>
<br>
问题：

<br>
每个广告的点击率（CTR，Click-Through Rate）是未知的，并且可能因广告而异。

<br>例如：
<br>广告主 1：出价 $2，点击概率为 0.1；
<br>广告主 2：出价 $1，点击概率为 0.5。


<br>
CTR 如何确定：

<br>点击率通常基于历史数据计算，然而对于新广告或新场景，缺乏历史数据会导致 CTR 不确定。


<br>
探索 vs. 利用 问题（Exploration vs. Exploitation）：

<br>利用（Exploit）：是否应该继续展示点击率估计较高的广告？
<br>探索（Explore）：是否应该尝试展示新广告以更好地了解其点击率？


<br>这是一个典型的“多臂老虎机问题”（Multi-Armed Bandit Problem）的实例，需要在收益和学习之间找到平衡。<br>总结：<br>AdWords 问题的核心是预算管理和点击率不确定性。搜索引擎需要一种智能的动态算法，在以下方面找到平衡：<br>
<br>
最大化广告收入；

<br>
保证广告主预算不超支；

<br>
同时探索新广告的潜力。

<br><br>问题背景<br>在一个简化环境下，我们要解决广告分配问题，假设：<br>
<br>每个查询只能展示 1 个广告。
<br>所有广告主的预算相同（用 B 表示）。
<br>所有广告的点击概率相等，因此不需要区分点击率（CTR）。
<br>广告的价值均为 1，即每次点击都能带来相同的收入。
<br>算法逻辑<br>贪心算法是一种简单的决策方法：<br>
<br>对于每个查询，选择任意一个对该查询出价为 1 的广告主，只要其预算未超支。
<br><img alt="Worst Case" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/MhqEIC.png" referrerpolicy="no-referrer"><br><br>算法背景<br>• 提出者：由 Mehta, Saberi, Vazirani 和 Vazirani 提出。<br>• 目标：解决在线广告分配问题，同时最大化广告收入并平衡广告主的预算使用。<br><br>算法逻辑<br>
<br>核心原则：
<br>对于每个查询，选择剩余预算最多的广告主。
<br>如果有多个广告主的剩余预算相同，则按照确定性规则（例如固定顺序）解决冲突。
<br>主要步骤：<br>
<br>查询到达：当某个查询&nbsp; q&nbsp; 到达时，查看所有对该查询出价的广告主。
<br>选择广告主：从中挑选剩余预算最大的广告主作为展示对象。
<br>更新预算：在展示后减少该广告主的预算。
<br><br>优势<br>
<br>
预算的平衡使用：

<br>
避免像贪心算法那样快速耗尽某些广告主的预算。

<br>
提升整体预算的利用率，接近全局最优解。

<br>
竞争比更高：相比贪心算法，BALANCE 算法的竞争比更接近最优，通常能达到 。

<br><br><img alt="MSVV" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/DWrIw5.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-advertising.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 22 Dec 2024 16:48:33 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PntiBv.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PntiBv.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BFR]]></title><description><![CDATA[ 
 Please describe how the K-Means algorithm can be extended to detect outliers. Use a simple example to support your answer.]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-clustering.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:07:02 GMT</pubDate></item><item><title><![CDATA[BDA-DGIM]]></title><description><![CDATA[ 
 <br><br>Please describe the mechanism of DGIM. How the error bound is estimated? Is there a way to further reduce this error bound. Submit your response online within the allow time frame.<br>Mechanism<br>When a new bit comes in, drop the last (oldest) bucket if its end-time is prior to N time units before the current time.<br>2 cases: Current bit is 0 or 1<br>
If the current bit is 0:<br>
<br>no other changes are needed
<br>If the current bit is 1:<br>
<br>Create a new bucket of size 1, for just this bit.

<br>End timestamp = current time


<br>If there are now three buckets of size 1, combine the oldest two into a bucket of size 2
<br>If there are now three buckets of size 2, combine the oldest two into a bucket of size 4
<br>And so on …
<br>Solution<br>To reduce the error bound in the DGIM algorithm, consider this:<br>Instead of maintaining 1 or 2 of each size bucket, we allow either r-1 or r buckets (r &gt; 2)<br>
<br>Except for the largest size buckets; we can have any number between 1 and r of those
]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-dgim.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:17:07 GMT</pubDate></item><item><title><![CDATA[BDA-Find Similar Items]]></title><description><![CDATA[ 
 <br><br>For High dimensional data<br>
<br>LSH 
<br>Clustering 
<br>Dimensionality Reduction 
<br><br>
<br>Similarity of documents

<br>Plagiarism
<br>Mirror pages
<br>Articles from the same source


<br>Collaborative filtering

<br>Online purchase
<br>Movie ratings


<br><br>Goal: Find near-neighbors in high-dim. space<br>We formally define “near neighbors” as points that are a “small distance” apart<br>For each application, we first need to define what “distance” means<br>&nbsp;Jaccard 相似度 (Jaccard Similarity)<br>The Jaccard Similarity measures the similarity between two sets and is defined as the size of the intersection divided by the size of the union of the sets.<br><br><br>Goal: Given a large number (𝑵 in the millions or billions) of documents, find “near duplicate” pairs<br>Applications:<br>
<br>Mirror websites, or approximate mirrors

<br>Don’t want to show both in search results


<br>Similar news articles at many news sites
<br>Problems:<br>
<br>Many small pieces of one document can appear out of order in another
<br>Too many documents to compare all pairs
<br>Documents are so large or so many that they cannot fit in main memory
<br>3 Essential Steps for Similar Docs<br>
<br>Shingling: Convert documents to sets
<br>Min-Hashing: Convert large sets to short signatures, while preserving similarity
<br>Locality-Sensitive Hashing: Focus on pairs of signatures likely to be from similar documents
<br>Candidate pairs!<br><br>Convert large sets to short signatures, while preserving similarity.<br><br>Many similarity problems can be formalized as finding subsets that have significant intersection<br>
<br>Encode sets using 0/1 (bit, boolean) vectors

<br>One dimension per element in the universal set


<br>Interpret set intersection as bitwise AND, and set union as bitwise OR
<br>Example: ; <br>
<br>Size of intersection = 3; size of union = 4,
<br>Jaccard similarity (not distance) = 3/4
<br>Distance: d(C1 ,C2 ) = 1 – (Jaccard similarity) = 1/4
<br><br>
<br>
Rows = elements (shingles)

<br>
Columns = sets (documents)

<br>1 in row e and column s if and only if e is a member of s
<br>Column similarity is the Jaccard similarity of the corresponding sets (rows with value 1)


<br>
Typical matrix is sparse!

<br>Each document is a column:<br><img alt="BpGOnL" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BpGOnL.png" referrerpolicy="no-referrer"><br>Example:  =0.5 <br>So far:<br>
<br>Documents  Sets of shingles
<br>Represent sets as boolean vectors in a matrix
<br>Next goal: Find similar columns while computing small signatures <br>
<br>Similarity of columns == similarity of signatures
]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-find-similar-items.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 03:56:23 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BpGOnL.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BpGOnL.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Map Reduce]]></title><description><![CDATA[ 
 <br><br>
<br>Input: a set of key-value pairs
<br>Programmer specifies two methods:

<br>Map: (k1, v1) -&gt; (k, v)

<br>Takes a key-value pair and outputs a set of key-value pairs
<br>E.g., key is the filename, value is a single line in the file


<br>Reduce: (k, list(v)) -&gt; list(v)

<br>All values v' with same key k' are reduced together and processed in v' order
<br>There is one Reduce function call per unique key k'




<br><br><img alt="Natural Join" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/LunUqn.png" referrerpolicy="no-referrer"><br>
<img alt="Natural Join" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/QfOosg.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-mapreduce.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:11:33 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/LunUqn.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/LunUqn.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PageRank]]></title><description><![CDATA[ 
 <br><br><br><br>]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-link-analysis.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 22 Dec 2024 16:48:44 GMT</pubDate></item><item><title><![CDATA[BDA-Project-Report]]></title><description><![CDATA[ 
 <br><br><br>Text classification is the bedrock of natural language processing (NLP) activities, like content moderation, spam detection, and sentiment analysis. This report focuses on an innovative, well-designed system for identifying illegal texts and filtering high-quality comments, which combines traditional machine learning (ML) methods and novel deep learning (DL) techniques to attain the best performance. The illegal text detection module incorporates sparse rule-based sensitive word filtering in addition to FastText's rapid filtering and BERT for final classification, ending with a balance between processing power and accuracy. Subjects used as experimental subjects indicate that the deep learning methods, such as BERT and FastText, excel in comparison with traditional ML models, which are Multinomial Naive Bayes, Random Forest, and XGBoost, which give almost perfect accuracy and F1-scores. The operating principles of the high-quality comment filtering part are the utilization of a pretrained BERT model to get token embeddings and the trained Auto-Encoder for the reconstruction-based quality assessment. Evaluation is done at a standard of reconstruction errors to differentiate high-quality comments, and this is through a threshold-based method that gives reliable filtering. The experimental analysis focuses on the model's two-stage hybrid procedure for illegal text detection and concludes that the Auto-Encoder captures the content features for which it was trained properly.<br><br>As digital platforms are expanding rapidly, the supervision of quality and legality of user content on them is one of the problems that needs immediate attention. Text classification, as one of the core features of natural language processing (NLP), is one of the most important solutions to this challenge. The use of text classification in applications like spam detection, sentiment analysis, and content moderation has a considerable reliance on its precision and speed. On the contrary, textual data's heterogenic nature, context variation, and semantic complexity are the major issues faced by conventional machine learning (ML) techniques.<br>Since traditional ML techniques require significant feature engineering to process text, some of the methods used are Multinomial Naive Bayes (MNB), Support Vector Machines (SVMs), and ensemble methods like Random Forest and XGBoost. Unlike these models, which perform their best with smaller datasets and comparatively simple tasks, they cannot cope with the deep semantic and contextual dependency that complex text data has.<br>On the contrary, DL approaches, in particular, such as FastText, Recurrent Neural Networks (RNNs), Long Short-Term Memory (LSTM), the Transformer architecture, and BERT, which have introduced a leap over the original text classification methods. These models avoid the manual feature construction process and leverage word embeddings and attention mechanisms to adaptively learn context-sensitive models of text. Among these, BERT has shown the best performance by incorporating context preservation, alongside RNNs.<br>In this report, we propose a comprehensive system designed for two primary tasks: illegal text detection and high-quality comment filtering. The system employs a hybrid approach that combines rule-based methods, lightweight DL models (FastText), and robust transformer-based models (BERT). Specifically:<br>
<br>
Illegal Text Detection: A two-stage process that uses FastText for fast inference and BERT for precise classification. This approach balances computational efficiency and accuracy while handling large-scale text data.

<br>
High-Quality Comment Filtering: The system uses BERT embeddings and an Auto-Encoder to assess reconstruction errors and distinguish high-quality comments from low-quality ones.

<br>The experimental evaluation compares traditional ML methods with DL techniques. Results show that DL models, particularly FastText and BERT, significantly outperform ML models in accuracy, precision, recall, and F1-score. The proposed Auto-Encoder further ensures effective filtering of high-quality comments based on reconstruction error thresholds.<br>This report is structured as follows:<br>
<br>Section 2 discusses related works and existing text classification techniques.
<br>Section 3 details the methodology for illegal text detection and high-quality comment filtering.
<br>Section 4 presents the experimental results and analysis.
<br>Section 5 outlines future work and concludes the report.
<br>By integrating advanced deep learning methods with a hybrid filtering pipeline, the proposed system demonstrates its potential for scalable, efficient, and accurate text moderation in real-world applications.<br><br>Text classification has been a pivotal task in natural language processing (NLP) and has seen substantial progress over the years. The methodologies for text classification can be categorized into two primary paradigms: traditional Machine Learning (ML) approaches and Deep Learning (DL) techniques. Each of these paradigms has evolved to address various challenges posed by textual data, such as high dimensionality, context dependency, and variability in text length and semantics.<br><br>Traditional ML approaches usually rely on strongly featured engineering and statistical strategies. In this context, Multinomial Naive Bayes (MNB) is probably one of the first and simplest processing techniques. MNB is a theorem of Bayes that processes with conditional independence of the features or attributes given the class label or the class category. Even if this assumption mostly doesn't hold for large data sets of the real-world case, MNB's operational efficiency and great usefulness for tasks like spam filtering and sentiment analysis on small data sets have made it popular among users. These drawbacks, however, stem from the model's inability to take into account the feature interdependence.<br>Support Vector Machines (SVMs) are the other key latest development of conventional ML for text classification. The main feature of SVMs is the ability to identify a hyperplane that separates the data with the greatest margin, which is known as a large margin classifier, based on the dimensionality of the feature space. Through kernel tricks, SVMs get the upper hand in case of non-linear decision boundaries, thus they can be used with text data having drastic multi-patterns. SVMs have the advantage when it comes to the models produced by combining features represented by TF-IDF, for instance, in the domain of document categorization and sentiment analysis. Nevertheless, their large computational cost and too much parameter tuning make it impossible to work with large-scale datasets.<br>Finally, the Random Forest method, as well as XGBoost and boosting methods such as LightGBM, can perform well as well in text classification. The Random Forest algorithm uses a tree ensemble learning algorithm that, through the selection of the best split and the repeated combinations of trees, helps to generalize better than single decision trees; while the algorithms of boosting, named now XGBoost and LightGBM, work by improving weak classifiers in a sequential fashion so to reduce the error. On the other hand, document ranking and biomedical text classification were the areas these methods were primarily applied in the structured text data applications. Despite their advantages, these procedures heavily depend on the feature engineering and can be found tricky if the data is sequential and context-sensitive.<br><br>Despite the traditional ML techniques, deep learning (DL) methods have altered text classification by obtaining feature representations from the text itself instead of hand-crafting them. With the introduction of FastText by Facebook, a simple yet effective machine learning algorithm for text categorization has been developed. It reflects words as dense vectors (word embeddings) and averages them to create document representational vectors. Furthermore, subword modeling helps to tolerate spelling mistakes and morphological variants, which are frequent in the case of low-resource languages. The downside of FastText is its straightforward approach, which may be a drawback when it comes to complex relationships between words.<br>Recurrent Neural Networks (RNNs) and their variations, such as Long Short-Term Memory (LSTM) networks, have incorporated sequential modeling capabilities into text categorization. LSTMs somewhat mitigate the vanishing gradient problem existing in conventional RNNs and maintain long-term dependencies. Consequently, they are viable candidates for applications which call for context comprehension, such as sentiment analysis or question-answering tasks. On the other side, RNNs and LSTMs read texts one after another, which elaborates on performance and the cost of computation and the time of training for big data or long sequences.<br>CNNs, developed primarily for image processing, have also demonstrated their capacity of being employed for text classification. In this way, by treating sentences as one-dimensional sequences where local features are extracted – these features can be n-grams via convolutional filters. Thus, they are probably the best in this class where it's essential to consider the local context, i.e., short text classification or sentiment analysis. CNNs are more efficient computationally, achieving increased parallel processing, yet they may still struggle to encode hints of long-term text dependencies.<br>The development that caused the greatest disruption in the text classification concept was through Transformer-based models, especially BERT, which is the Bidirectional Encoder Representations from Transformers. BERT introduced a new type of language modeling and used the transformer architecture which is self-attentional mechanisms. Differently from the previous models, BERT unifies the initial context with opposite directions, which results in a more profound knowledge of the relations within a sentence. BERT proves to be the most efficient model for various NLP tasks, such as text classification, sentiment analysis, and Named Entity Recognition (NER), by virtue that it has been pretrained on a huge dataset. It has an enormous capacity for consecutive learning and retraining, so it has become one of the most applicable models. Nevertheless, the model's weight and the high requirements of computational loads prevent small organizations and low-lifting environments from having visible results.<br>While ML methods such as MNB and SVM provide computational simplicity and efficiency, they still hugely depend on feature engineering and therefore tend to lose semantics and contextuality. In contrast, the DL approach, in particular that of transformer-based models, like BERT, champions this but it requires enormous computation power and huge amount of data for training. Accordingly, the methodology employed is often tailored to the task characteristics, like size of data, computation resources, and level of the text complexity. The combination of classical ML techniques and the recent innovations in DL methods have greatly extended the research horizons of text analysis, making the text classification area more dynamic and captivating.<br><br><br><img alt="workflow.png" src="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/workflow.png"><br>The entire process is structured as follows:<br>
<br>Input text undergoes sensitive word matching and FastText screening.
<br>Texts flagged by both methods are classified as illegal.
<br>Conflicting cases are resolved by the BERT classification model.
<br>Non-illegal texts proceed to the high-quality comment filtering stage.
<br>Token embeddings are generated using pretrained BERT.
<br>An Auto-Encoder calculates reconstruction error to assess quality.
<br>Texts with acceptable reconstruction errors are deemed high-quality comments.
<br>The proposed system consists of two main components: illegal text detection and high-quality comment filtering, designed to operate sequentially for robust content moderation. Each component is trained and evaluated independently, ensuring flexibility and scalability. Below, we describe the methodology for each stage in detail.<br><br>The first stage is illegal text detection, which acts as a filtering point. The goal is to explore the way of finding and classifying the texts with the sensitive or illegal information. This hybrid stage combines rules-based systems and machine learning for a better precision.<br>
<br>
Sensitive Word Matching:<br>
The text is analyzed, being driven by employed rules, via a sensitive term-matching approach. There exists a given set of illegal or sensitive vocabulary that is employed to flag text that contains this vocabulary. Such an approach is computationally efficient and interpretable. However, it may generate spurious results or fail to find texts that have different wording but similar expressions. 

<br>
FastText Model Screening:<br>
At the same time, the input is fed to the new model, named FastText. Developed as a lightweight deep learning model employed by Facebook, it consists of a combination of word embeddings, representing text, as well as the ability to efficiently predict the probability of a piece of text being illegal. This characteristic will help maintain a stable position in spite of spelling variations and slight modifications of the text.

<br>
Fusion of Results:<br>
To add another reliability supporting factor, the system adopts the output from both the sensitive word match and FastText screening methods. The decision algorithm can be explained this way:

<br>If both methods flag the text as illegal, it is directly classified as illegal.
<br>If both methods agree that the text is not illegal, it is passed to the next stage for high-quality filtering.
<br>If the results conflict (e.g., one flags illegal and the other does not), a BERT-based classification model is invoked to make the final determination.


<br>
BERT Model for Conflict Resolution:<br>
The BERT (Bidirectional Encoder Representations from Transformers) model leverages its deep contextual understanding of the text to resolve conflicts. BERT generates a bidirectional representation of the input text and uses fine-tuning to classify whether the text is illegal or not. This step adds a layer of robustness, particularly for texts with ambiguous or context-dependent content.

<br><br>For texts classified as non-illegal by the previous stage, the system proceeds to evaluate their quality through the high-quality comment filtering process. This stage involves the use of a pretrained BERT model for token embedding generation and an Auto-Encoder for reconstruction-based quality assessment.<br>
<br>Token Embeddings Generation with BERT:<br>
The input text is first tokenized and converted into token embeddings using a pretrained BERT model. The [CLS] token, which serves as an aggregate representation of the entire text, is also included in the matrix. The output is a multi-dimensional matrix where each row corresponds to the embedding of a token in the input sequence. This representation captures both semantic and syntactic information from the text.<br>

<br>Auto-Encoder Reconstruction:<br>
The BERT-generated token embeddings are fed into a trained Auto-Encoder, a type of neural network used for unsupervised learning. The Auto-Encoder architecture consists of:

<br>Encoder: Compresses the high-dimensional input embeddings into a latent-space representation, reducing noise and dimensionality.
<br>Decoder: Reconstructs the input embeddings from the latent representation, aiming to minimize the reconstruction error.


<br>Reconstruction Error Calculation:<br>
After processing the embeddings, the system calculates the reconstruction error between the original input embeddings and the reconstructed output. The reconstruction error serves as a measure of how well the text aligns with the characteristics of high-quality comments. The rationale is that high-quality texts are more likely to be accurately reconstructed due to their alignment with the training data patterns.<br>

<br>Quality Determination:<br>
The system applies a predefined threshold to the reconstruction error:

<br>If the error falls within the acceptable range, the text is classified as a high-quality comment.
<br>If the error exceeds the threshold, the text is discarded, as it does not meet the quality standards.


<br>This comprehensive two-stage pipeline ensures robust filtering of illegal content while simultaneously identifying high-quality comments for further use. By combining rule-based methods, traditional deep learning (FastText), and advanced transformer-based techniques (BERT), the system achieves a balance of efficiency, accuracy, and scalability.<br><br><br>In our project, we conducted extensive experiments to evaluate the performance of Machine Learning (ML) and Deep Learning (DL) models for illegal text detection. The results demonstrate that Deep Learning methods significantly outperform traditional ML approaches, leading to the selection of a two-stage hybrid approach combining FastText and BERT. This strategy achieves a balance between computational efficiency and classification accuracy.<br><br>The evaluation metrics for both ML and DL models, including Accuracy, Precision, Recall, and F1-Score, are presented in the following tables:<br>Machine Learning Models Performance<br><br>Deep Learning Models Performance<br><br>From these results, we observe the following:<br>
<br>Deep Learning models like BERT, LSTM, and FastText achieve near-perfect accuracy and F1-scores (~0.99), far outperforming traditional ML methods.
<br>Among ML methods, Random Forest achieves the highest accuracy (0.5899), but the overall F1-scores remain relatively low (&lt;0.55), indicating limitations in capturing complex textual patterns.
<br>While BERT achieves the highest performance, its computational cost makes it less efficient for large-scale text filtering.
<br><br>Considering the experimental results, we adopted the two-stage hybrid model, which consists of FastText and BERT, suitable for illegal text detection. This is done by benefiting from the strong features of both approaches.<br>
<br>
FastText for Initial Filtering:<br>
Yes. One prominent advantage of using FastText for initial text filtering is that it allows for extremely fast text processing. Thus, it is very bloodthirsty when it comes to time utilization and resources. It categorizes big pieces of input texts into "most likely" illegal or "most likely" non-illegal segments. FastText, on the other hand, runs through a large chunk of the data at once, which makes the computational process lighter on the next model.

<br>
BERT for Final Decision-Making:<br>
Mention of texts that seem ambiguous or seem illegal would be processed by BERT for further analysis. Precision of sentiment classification is guaranteed by BERT, even in the most ambiguous or borderline cases, because BERT utilizes deep contextual understanding.

<br><br>
<br>Non-suspicious content appears to be filtered through FastText rather than being analyzed using other techniques like, for example, k-nearest neighbors.
<br>FastText recognizer shown sections that are either "probably illegal" or have mixed readings are examined in further detail using BERT.
<br>The last statement of BERT determines the final classification and takes into account all logical facts and other aspects.
<br>Computational efficiency helps because most of the texts with trivial information will be filtered out during BERT's initial stages, and thus, the workload for BERT will be significantly reduced.<br>High accuracy: Text detection using BERT is highly accurate, meaning it minimizes the number of false positives and overlapses of illegal contents.<br>Scalability: This hybrid method is applicable in a variety of highly business-critical real-time scenarios, which need concurrent high throughput and low latency.<br>A balanced trade-off: The proposed system employs the dual strategy of combining fastness (FastText) with robustness (BERT) to achieve optimal performance in the case of large-scale text detection problems.<br>We arrive at a solution which is the hybrid of FastText and BERT, which allows us to achieve optimal balance between computational efficiency and classification precision for real-world applications requiring a combination of both speed and accuracy.<br><br>This section details the Auto-Encoder architecture used for filtering high-quality comments and provides an analysis of its experimental results, including training performance and reconstruction error evaluation.<br><br>The Auto-Encoder consists of two main components: an Encoder and a Decoder. The architecture is designed to compress and reconstruct input text embeddings generated by BERT. The detailed configuration is as follows:<br>
<br>Encoder:

<br>Composed of 2 fully connected layers activated by ReLU.
<br>Reduces the dimensionality of input embeddings into a compressed representation vector of size 32 dimensions.


<br>Decoder:

<br>Symmetrically mirrors the encoder with 2 fully connected layers activated by ReLU.
<br>Reconstructs the original input embeddings from the compressed vector.


<br>Input Representation:<br>
Text data is tokenized and embedded into a matrix format using BERT token embeddings, capturing both semantic and syntactic features. The Auto-Encoder then learns to reconstruct the input embeddings.
<br><img alt="Auto-encoder-loss.png" src="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/auto-encoder-loss.png"><br>Training and Validation Loss: The curves of the training and validation loss validate that the Auto-Encoder accomplishes convergence for 200 epochs. The losses drop drastically in the first epochs, with a further drop to about 0.1 at the end, showing that optimal learning of the embeddings takes place, resulting in the small error achieved.<br>
<br>Observations:
<br>Training loss (blue) and validation loss (orange) are indicating a monotonically decreasing curve without significant overfitting, thereby resulting in a noticeable improvement of the overall model performance.
<br>The minuscule discrepancy between training and validation loss substantiates strong generalization.
<br><img alt="Auto-encoder-Distribution.png" src="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/auto-encoder-distribution.png"><br>Reconstruction Error Distribution: The distribution of reconstruction error would provide knowledge of the system inquiring whether it can make proper division between high-quality comments and low-quality comments. The histogram below highlights key observations:<br>
<br>Reconstruction Error Threshold:<br>
A red dashed line at the 95th percentile of the reconstruction error distribution would be used as a cutoff for discriminating between normal and abnormal reconstructions. Comments with mistakes below the threshold are determined as being of higher quality, while those that are over the threshold are considered defective.
<br>Error Distribution:<br>
Many comments fit the 0.50-0.55 range of reconstruction errors, which supports the claim that the model can reconstruct high-quality content. In contrast, a small set of comments with reconstruction errors above 0.56 show low quality, as they deviate from the learned latent representations.
<br><br><br>Since the current system operates with an unsupervised model for high-quality comment filtering, it is challenging to directly verify its effectiveness without labeled data. This limitation creates a gap in understanding how well the Auto-Encoder distinguishes between high- and low-quality comments in practical use cases.<br>
<br>Possible Solution:<br>
To address this, the system can be deployed in a real-world application environment where user interaction and behavior are monitored. User feedback can be collected to evaluate the system's accuracy and reliability. Metrics such as user satisfaction rates, content retention rates, and manual moderation corrections can serve as indicators of the model's effectiveness. Combining this feedback with semi-supervised fine-tuning on partially labeled datasets can further enhance validation.
<br><br>The Auto-Encoder, as it is shaped at present, saturates full-connected layers for both its encoder and decoder placement. While the framework is made of simple anatomy, there is a great chance of not embracing all the complex relationships and patterns existing in the texts, especially in cases like lengthy and very intricate formats. The following improvements are proposed:<br>
<br>
Inclusion of Convolution Layer:<br>
The convolutional layers that can be integrated into the Auto-encoder model have the potential to strengthen its ability to identify spatial and temporal relationships among the token representations. Due to their efficacy in recognizing n-gram features and local dependencies in texts, the convolutional layers can contribute to obtaining more accurate content reconstruction and a better differentiation of a low or high-quality content.

<br>
Utilizing Transformer-Based Architectures:<br>
Build on Transformer-based architectures like BERT and GPT using advanced methods from the latest NLP tools for fine-tuning the Auto-Encoder. Through the application of self-attention methods, Transformers can obtain global context as well as long-range dependencies between objects in the sequences involved. I intend to use this method, which will steer me to a more in-depth feature extraction that is capable of closer semantic reasoning.

<br>
Incorporating Variational Autoencoders (VAEs):<br>
Variational Auto-Encoder (VAE) can be the best solution given it is capable of generalizing and can also reveal latent designs in the data. This feature is an improvement on traditional Auto-Encoders as they introduce a probabilistic distribution in the latent space, which allows the model to plan and model better the actual textual patterns specifically for the variations. This form of refinement will, away, allow the system to have an easy time handling noise or ambiguity of the input while also increasing the quality of reconstruction.

<br>
Hybrid Models with Attention Mechanisms:<br>
Importing attention into Auto-Encoder and putting them in together can lead to lower attention on less important tokens or features than on the more important ones within the reconstruction process. Attention filters of this kind, which are present in the Transformers, make the model focus on the priorities of the text parts against the importance of each part, which brings on the more regards-based exactness and era-based reconstructions.

<br><br>To validate the proposed improvements, the following steps can be undertaken:<br>
<br>
Benchmarking Architectures: Carry out trials where the new Auto-Encoder architectures (such as convolutional Auto-Encoders, Transformer-based Auto-Encoders, and VAEs) are juxtaposed against the existing ones and evaluate their performance. For evaluation, metrics like reconstruction error, precision, recall, and F1 score could be used as indicators.

<br>
Data Augmentation: Employ data augmentation strategies to create a set of different versions, both high- and low-quality, to be used in training and testing. Techniques like back-translation, paraphrasing, and noise injection have proved effective in producing robust models.

<br>
Semi-Supervised Learning: Evaluate semi-supervised methods, which can utilize a small labeled dataset to aid in the generalization of being supervised by what is being learned. A method of using pseudo-labeling and consistency regularization can be applied as a consistency to improve the model's prediction.

<br>
Human-in-the-Loop Validation: Add human moderators to the system and evaluate human comment filtration to assess the quality of the filtered comments. Continuous and repeatable feedback loop could be used for tuning the model and aligning it with real-world expectations.

<br>Consequently, enhancement measures will strengthen the system to enable it to handle illegal text detection and filtering of quality comments effectively. The integrated form of modern architectures and real-time validation will surely eliminate existing boundaries and facilitate system capabilities.<br><br>
<br>Bojanowski, P., Grave, E., Joulin, A., &amp; Mikolov, T. (2017). Enriching word vectors with subword information. Transactions of the Association for Computational Linguistics, 5, 135–146. <a rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/1607.04606" target="_blank">https://arxiv.org/abs/1607.04606</a>
<br>Devlin, J., Chang, M. W., Lee, K., &amp; Toutanova, K. (2019). BERT: Pre-training of deep bidirectional transformers for language understanding. In Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. <a rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/1810.04805" target="_blank">https://arxiv.org/abs/1810.04805</a>
<br>Hinton, G. E., &amp; Salakhutdinov, R. R. (2006). Reducing the dimensionality of data with neural networks. Science, 313(5786), 504–507. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.1126/science.1127647" target="_blank">https://doi.org/10.1126/science.1127647</a>
<br>Hochreiter, S., &amp; Schmidhuber, J. (1997). Long short-term memory. Neural Computation, 9(8), 1735–1780. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.1162/neco.1997.9.8.1735" target="_blank">https://doi.org/10.1162/neco.1997.9.8.1735</a>
<br>Kim, Y. (2014). Convolutional neural networks for sentence classification. In Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP). <a rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/1408.5882" target="_blank">https://arxiv.org/abs/1408.5882</a>
<br>Cortes, C., &amp; Vapnik, V. (1995). Support-vector networks. Machine Learning, 20(3), 273–297. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.1007/BF00994018" target="_blank">https://doi.org/10.1007/BF00994018</a>
<br>Breiman, L. (2001). Random forests. Machine Learning, 45(1), 5–32. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.1023/A:1010933404324" target="_blank">https://doi.org/10.1023/A:1010933404324</a>
<br>Chen, T., &amp; Guestrin, C. (2016). XGBoost: A scalable tree boosting system. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD). <a rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/1603.02754" target="_blank">https://arxiv.org/abs/1603.02754</a>
<br>Kingma, D. P., &amp; Welling, M. (2014). Auto-encoding variational Bayes. In Proceedings of the 2nd International Conference on Learning Representations (ICLR). <a rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/1312.6114" target="_blank">https://arxiv.org/abs/1312.6114</a>
<br>Wei, J., &amp; Zou, K. (2019). EDA: Easy data augmentation techniques for boosting performance on text classification tasks. In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing. <a rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/1901.11196" target="_blank">https://arxiv.org/abs/1901.11196</a>
]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-project-report.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:16:14 GMT</pubDate><enclosure url="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/workflow.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/workflow.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BDA-Survey]]></title><description><![CDATA[ 
 <br><br><br>Our project can mainly be divided into 3 phrases. The first part is Data collection, and the second part is construct the casual graphical model, finally according to the casual graphical model we want to using 2 methods to estimate the final result, first one is base on casual evaluation and the second one is based on the traditional machine learning method.<br><br><img alt="Data Collection" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EWgs0t.png" referrerpolicy="no-referrer"><br>Our dataset would be collected from the movie comment website, such as Douban, Maoyan and IMDB.  And we could divide our data into 2 parts, the first part is the movie information which is structured data, such as the budget, cast, genres, release date, and the second part is the movie comments which is unstructured data.<br>For structured data,  we do not need to do much data preprocessing, but for unstructured data, we would need to do the following steps including: word segmentation, filter stop words including emotion bias words, statistical word frequency. Finally we get the high-frequency words and use them as the input of the casual graphical model.<br>High-frequency words are filtered through the upstream pre-trained word vector semantic space.<br><br><img alt="Construct Casual Graphical Model" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/xiMcZY.png" referrerpolicy="no-referrer"><br>There are several methods to construct the casual graphical model, and we will try different methods to see which one is the best.<br><br>The constraints are based on the following conditions. For different V-structures, such as chain structure, folk structure and collider structure, they have different dependency properties, and the graph is built according to the dependency properties.<br><img alt="Inference" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Inference.png" referrerpolicy="no-referrer"><br><br>The algorithm begins by forming a complete undirected graph and eliminates edges based on unconditional independence. It then performs conditional independence tests, first using a single conditioning variable and then multiple conditioning variables. For each triple of variables , if  and  are connected, and  and  are connected, but  and  are not, the algorithm checks for a v-structure by testing if , indicating a collider structure. Next, orientation propagation is applied to direct edges. For each triple where  and  and  are not adjacent, the edge  is oriented as . This process continues to direct remaining undirected edges, refining the causal structure.<br><br>The Fast Causal Inference (FCI) algorithm extends the PC algorithm by accounting for latent confounders and selection bias. It begins by forming a complete undirected graph and progressively removes edges based on unconditional and conditional independence tests. Like the PC algorithm, FCI identifies v-structures, where unconnected variables exhibit a conditional dependence that suggests a collider relationship. The algorithm then applies orientation propagation to direct additional edges. What sets FCI apart is its ability to handle latent variables by identifying bidirected edges that indicate confounding factors and selection bias arrows. The final output is a Maximal Ancestral Graph (MAG), which captures the causal relationships, latent confounders, and selection bias effects, providing a comprehensive view of the underlying causal structure.<br><br>The Greedy Equivalence Search (GES) algorithm begins with an empty graph and iteratively adds edges to improve the fit based on a score, such as BIC or a Z score from hypothesis testing. After each addition, the graph is mapped to its Markov equivalence class. Once no further edges improve the score, GES removes edges, if doing so increases the fit, until no further improvements can be made. Although more complex than the PC algorithm, GES and PC converge to the same Markov equivalence class with large samples, but may yield different results with finite data. There is no GES equivalent for handling unknown confounders.<br><br><img alt="Training Model &amp; Evaluation" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/TmYWnl.png" referrerpolicy="no-referrer"><br>After constructing the causal graphical model, the next phase involves leveraging it to estimate the box office performance of movies. This will be done using two distinct methods: causal evaluation and traditional machine learning models. By comparing these two approaches, we aim to determine which method provides more accurate predictions and better insights into the causal relationships between variables.<br><br>Using the constructed causal graphical model, we will employ causal inference techniques to evaluate the impact of different factors on box office success. Causal inference goes beyond correlation by identifying true cause-and-effect relationships, which can be highly valuable in decision-making, such as optimizing budgets, marketing strategies, or cast selection.<br>Steps:<br>
<br>Intervention Analysis (Do-Calculus): This involves simulating interventions on key variables (e.g., increasing marketing budget, selecting a high-profile cast) to observe their direct impact on box office performance. By analyzing these interventions, we can make informed recommendations on which variables should be adjusted to improve outcomes.
<br>Counterfactual Analysis: After predicting the box office outcome, we can analyze what-if scenarios. For instance, “What if a different actor was cast?” or “What if the budget was reduced by 20%?” Counterfactuals help in understanding alternative outcomes under different conditions, providing deeper insights for decision-making.
<br>Identification of Confounding Factors: Using the causal graphical model, we can identify and address confounders—variables that might obscure the true relationships between the input features and the target (box office). This allows for more accurate predictions by isolating the true effects of variables.
<br><br>The second method involves building traditional machine learning models, such as linear regression, decision trees, random forests, and gradient boosting models. These models will predict box office performance based on the same data used to construct the causal model, including structured data (e.g., budget, release date) and features extracted from unstructured data (e.g., sentiment analysis from movie comments).<br>Steps:<br>
<br>
Feature Engineering: For structured data, features such as budget, genres, and cast will be used directly. For unstructured data, sentiment analysis and topic modeling on movie reviews and comments will provide insights into audience perception, which can be highly predictive of box office performance.

<br>
Model Selection: Different machine learning algorithms will be tested and compared. These models will be trained on a portion of the data and validated using cross-validation techniques to ensure generalizability.

<br>
Evaluation Metrics: Both the causal inference model and the machine learning models will be evaluated using standard metrics, including: Mean Absolute Error (), Root Mean Squared Error (), R-Squared ()

<br>These metrics will help in comparing the performance of the causal inference and traditional machine learning models.<br><br>The research in the field of movie box office prediction has integrated various data sources such as metadata, online comments, and social media, and employed various machine learning methods. With the development of causal inference and causal graphical models, box office prediction is no longer merely dependent on correlations between variables but can identify the true influencing factors through causal analysis. These studies provide more tools and methods for future movie box office predictions, aiding investors in making better decisions with limited resources.<br><br>]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-survey.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:16:07 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EWgs0t.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EWgs0t.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BDA-Review]]></title><description><![CDATA[ 
 <br><br><br>In the decision-making process of movie investments, predicting box office performance is a critical step. By analyzing key factors, investors can reasonably evaluate a movie’s box office potential before production, which helps guide production and marketing strategies. This not only increases the movie's box office potential but also enables investors to make optimal decisions given limited resources (such as selecting the right actors, determining the marketing budget, etc.).<br><br><br>Causal inference is the process of identifying and understanding the cause-and-effect relationships between variables.<br><br>
<br>Two variables might show a high degree of correlation, but that does not mean there is a causal relationship between them.
<br>For example, there may be a high correlation between increased ice cream sales and drowning incidents during the summer, but ice cream sales are not the cause of drowning. This type of error often occurs in traditional correlation-based analyses.
<br><br>
<br>Simpson's paradox is a phenomenon in probability and statistics in which a trend appears in several groups of data but disappears or reverses when the groups are combined.
<br>For example, in the figure below, the graph illustrates the relationship between Cholesterol levels (y-axis) and Exercise (x-axis).
<br><img style="zoom:33%;" alt="Simpson paradox" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/j3QKin.png" referrerpolicy="no-referrer"><br><br>Intuitively, Exercise and Cholesterol levels are positively correlated.<br><img style="zoom:33%;" alt="Figure" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Figure.png" referrerpolicy="no-referrer"><br><br>Each eclipse is a group of age, for each age group, Exercise and Cholesterol are negatively correlated.<br><br><br>In traditional box office prediction methods, researchers often use correlation analysis to identify relationships between various variables (e.g., actors, directors, movie genres) and box office outcomes. However, correlation does not imply causation; even if two variables show strong correlation, it does not necessarily mean that one variable causes the other to change. For instance, there might be a high correlation between a movie's marketing budget and box office performance, but an increase in the marketing budget might not be the direct cause of increased box office revenue, as other hidden factors (e.g., the quality of the movie itself) may also play a role. Therefore, reliance on correlation in traditional models might lead to misjudgments and fail to accurately capture the true drivers of box office results.<br>To better identify and understand these complex relationships, Pearl (2009) proposed causal inference theory, which provides foundational tools for modeling causal relationships in complex systems[6]. The core idea of causal inference is to distinguish correlation from causation and to describe causal relationships between variables using mathematical models.<br>In Pearl's causal inference theory, Causal Graphical Models (CGM) are important tools for depicting causal relationships. Causal graphs are directed acyclic graphs (DAGs) where nodes represent random variables and edges represent causal influences. Through this graph structure, researchers can identify which variables are drivers of causal relationships and which are confounders or mediators. Causal inference typically involves the following key steps:<br>
<br>Representation of Causal Structure: Using a causal graph model to show the direct and indirect impacts of different movie attributes (e.g., genres, actors, marketing budgets) on box office results.
<br>Estimation of Causal Effects: Quantifying the strength of causal relationships using instrumental variables or counterfactual inference methods.
<br>Handling of Confounding Factors: Using causal inference to control factors that might confound causal relationships during prediction.
<br>A typical application of causal inference is using counterfactual analysis to evaluate whether the box office would have decreased if the marketing budget had not been increased. Such analyses provide decision-makers with stronger explanatory power than correlation analysis.<br>In movie box office prediction, multiple variables may influence each other. For instance, an actor's fame might directly affect box office revenue, while a movie's marketing budget might be related to both the choice of actors and the increase in audience awareness, indirectly affecting the box office. Therefore, it is necessary to use a causal graph model to depict the complex relationships between these variables and identify the main drivers of box office results.<br>Specific steps in applying causal graph models in movie box office prediction might include:<br>
<br>Identification of Key Variables: Such as movie genre, director, cast, marketing budget, and release schedule.
<br>Construction of Causal Structure: Connecting these variables with directed edges to show potential causal relationships. For example, the movie genre might affect the size of the target audience, while the fame of the actors might enhance the movie's market appeal.
<br>Inference of Causal Effects: Quantifying the impact of each variable on the box office through the model, avoiding confusion of causal order.
<br>For example, a causal graph might assume that the marketing budget is a dependent variable influenced by movie genre, cast, and release schedule, while the box office is the joint outcome of the marketing budget, release schedule, and cast. Such a causal structure can help understand how different factors collectively affect movie box office revenue and quantify their causal effects.<br>As deep learning has become widely used in big data, Louizos et al. (2017) further explored the possibility of inferring causal effects in high-dimensional data by combining causal inference with deep learning models[7]. Traditional causal inference methods might face difficulties in handling large-scale and complex data, especially when there are many confounding variables, making the identification of causal relationships unclear. To address this, Louizos et al. proposed using deep latent variable models to identify potential causal structures and infer causal effects in high-dimensional data.<br>Specifically, deep learning models can automatically extract latent features from complex movie metadata or sentiment analysis results and combine them with a causal inference framework, effectively identifying and estimating causal relationships in high-dimensional, complex data environments. The key advantage of this combined approach is:<br>
<br>Representation Learning of High-Dimensional Data: Extracting higher-order features through deep learning from complex movie metadata or sentiment analysis results, such as historical box office performances of actors or audience rating trends of movies.
<br>Estimation of Causal Effects: Identifying the direct and indirect impacts of these higher-order features on movie box office revenue through the causal inference framework.
<br>This method's strength lies in its ability to identify potential causal relationships in massive movie data and sentiment analysis data, avoiding the traditional issues of relying solely on correlation analysis. Especially in movie box office prediction, deep learning models can better capture nonlinear and complex causal effects.<br>Compared to traditional correlation analysis, causal inference in movie box office prediction offers the following advantages:<br>
<br>Avoidance of Confounding Effects: Traditional correlation analysis might mistakenly treat some superficially related variables as driving factors, while causal inference can control confounding variables through causal graph models to accurately identify true causal relationships.
<br>Enhanced Predictive Explanability: Causal inference not only provides predictive outcomes but also explains how each variable influences the box office through causal chains, offering decision-makers more transparent and specific recommendations.
<br>Decision Support: Through counterfactual inference, causal inference can help analyze the potential impacts of different decision scenarios on the box office, providing better decision support for movie production and marketing strategies.
<br>Causal inference and causal graphical models offer new perspectives and tools for movie box office prediction. Compared to traditional correlation analysis methods, causal inference not only uncovers deeper causal relationships between variables but also provides decision support based on causal relationships for movie investors.<br><br>In the field of movie box office prediction, scholars have extensively explored how to use different data sources and methods to improve prediction accuracy. Building on this, this paper focuses on reviewing related work in movie box office prediction using causal analysis methods, covering methods based on metadata, text analysis, sentiment analysis, and causal inference. These studies provide a solid foundation for building a Causal Graphical Model (CGM) in this project.<br><br>Predictions based on movie metadata are one of the most common methods, where researchers use basic information such as directors, actors, film genres, budgets, and schedules to build machine learning models.<br>Predictions based on movie metadata commonly employ various pre-production features (e.g., directors, actors, genres, budgets, release schedules) to construct predictive models. These data provide valuable insights for box office predictions. Common metadata includes:<br>
<br>Directors and Screenwriters: The influence and fame of directors’ past works may significantly impact box office results.
<br>Cast: The star effect is considered one of the main factors in attracting audiences.
<br>Movie Genre: Different genres, such as action, romance, or science fiction, attract varying audience demographics.
<br>Budget: Both production and marketing budgets can directly influence the quality and market exposure of a movie.
<br>Release Schedule: The choice of release timing (e.g., holidays, summer blockbusters) significantly affects a movie’s box office performance.
<br>These features are typically input into machine learning models as independent variables to predict box office outcomes (often the opening weekend or total gross).<br>Zhang et al. (2021) utilized these metadata to predict box office performance using multiple regression, decision trees, and neural networks, demonstrating the contributions of different metadata features to movie success[1]. Duan et al. (2008) revealed the impacts of various movie attributes on box office by analyzing panel data from online reviews and metadata[2].<br>Common machine learning models used include multiple regression, decision trees, random forests, Support Vector Machines (SVM), and neural networks. Here are some commonly used models:<br><br>This model assumes the box office is a linear combination of movie metadata, with the prediction formula:<br><br>where  is the predicted box office,  is the intercept,  are regression coefficients, and  represent features such as directors, actors, and movie genres. The regression model minimizes error using the least squares method:<br><br>where  is the actual box office value, and  is the predicted value.<br><br>Decision trees predict the box office by recursively splitting the dataset into multiple subsets. Each split chooses the feature that maximizes information gain. The information gain formula is:<br><br>where  is the entropy of the dataset ,  is the feature used for splitting,  are the subsets after splitting, and  are the possible values of feature .<br><br>Random forests are ensemble learning models based on decision trees. They enhance prediction accuracy by averaging (for regression tasks) or voting (for classification tasks) outputs from multiple decision trees. This model is particularly effective in handling high-dimensional data.<br><br>SVMs create a hyperplane to separate samples in feature space for classification or regression tasks. In box office prediction, the regression form of SVM (SVR) minimizes prediction errors by maximizing the margin, with the objective function:<br><br>satisfying:<br><br>where  is the weight vector,  are input features,  is the bias,  is the actual box office value, and  is the tolerated error margin.<br><br>Neural networks model complex relationships between features through multiple layers of nonlinear transformations. They typically output a predicted box office value. A simple single-layer neural network formula is:<br><br>where  is an activation function (e.g., ReLU, Sigmoid),  is the weight vector,  are input features, and  is the bias. Neural networks minimize loss functions (e.g., mean squared error) through backpropagation:<br><br><br>Bayesian regression introduces concepts of prior and posterior probabilities in regression analysis. It models regression coefficients with prior knowledge, resulting in a probability distribution of predicted box office values rather than a single prediction. The Bayesian regression formula is:<br><br>where  is the posterior probability given data ,  is the likelihood function, and  is the prior distribution of regression coefficients.<br><br>The flourishing of social media and online movie reviews has made comment data an important resource for movie box office predictions. Audience comments on social platforms, blogs, and review websites not only reflect their attitudes towards movies but also provide a source of sentiment data for box office predictions.<br>Duan et al. (2008) explored the relationship between the sentiment polarity of reviews and box office by combining sentiment analysis with comment data[2].<br>Since then, researchers have explored how to extract valuable information from large amounts of text data through sentiment analysis techniques to predict movie box office performance.<br>Liu (2012) proposed sentiment analysis technology as a crucial tool in this field[3]. The core of sentiment analysis is to break down comment texts into sentiment polarity (positive/negative) and emotion intensity to identify the audience's attitude towards movies. The main steps in sentiment analysis include:<br>
<br>Text Preprocessing: Removing stopwords, punctuation, and noise data, and tokenizing the text.
<br>Sentiment Lexicon Matching: Mapping words in the text to their corresponding sentiment polarities and intensities using a sentiment lexicon (e.g., SentiWordNet).
<br>Sentiment Classification: Classifying text sentiment using machine learning models (e.g., Naive Bayes, SVM, deep learning models) or rule-based methods.
<br>Sentiment Aggregation: Aggregating sentiment information from individual comments to score the overall movie sentiment, such as calculating the proportion of positive reviews or the average sentiment score.
<br>This method not only quantitatively measures the overall sentiment of the audience towards the movie but also provides a new dimension for predicting box office success—whether the audience's emotional feedback correlates with commercial success.<br>Mishne and Glance (2006) demonstrated the potential of sentiment analysis in box office prediction through an early study analyzing sentiment data from blogs and review websites[4]. They extracted sentiment polarities from online reviews and compared them with movie box office data, finding a close relationship between sentiment tendencies and first-week box office performance. Specifically, their model used the following core indicators:<br>
<br>Sentiment Tendency Distribution: Analyzing the proportion of positive and negative comments in reviews.
<br>Trend of Comment Sentiment: Observing changes in sentiment during the movie's release period to identify concentrated bursts of negative reviews (e.g., receiving initial praise but a surge in negative reviews later).
<br>Emotion Intensity and Audience Engagement: Quantifying audience engagement by analyzing the word count and tone intensity of comments.
<br>These sentiment analysis indicators provide valuable auxiliary information for box office predictions, especially in understanding the reasons behind box office fluctuations when market performance is below expectations.<br>Asur and Huberman (2010) further extended the application of sentiment analysis to social media data, particularly platforms like Twitter. They found that the volume of movie-related discussions and sentiment tendencies could significantly predict box office performance[5]. The study used two key social media indicators:<br>
<br>Discussion Volume: Reflecting the movie's exposure and level of attention on social platforms. Higher discussion volumes generally indicate higher audience interest and expectations.
<br>Sentiment Tendency: Classifying the overall sentiment atmosphere towards the movie through sentiment analysis algorithms to determine whether the general sentiment is positive or negative.
<br>Specifically, the study showed that pre-release discussion volume and sentiment tendencies could predict the movie's first-week box office in advance, often more accurately than traditional market research and advertising effectiveness predictions. This model of prediction based on social media sentiment analysis provides strong support for movie marketing.<br>Sentiment analysis is often combined with other metadata (e.g., actors, genres, budgets) to construct hybrid models that enhance the accuracy of box office predictions. By incorporating sentiment<br> analysis data as one of the model inputs, researchers can capture immediate audience feedback and combine it with traditional movie features to make more accurate box office predictions. For example, Sharma and Shrivastava (2019) proposed a hybrid machine learning model that significantly improved box office prediction effectiveness by combining movie metadata with sentiment analysis data.<br><br>The research in the field of movie box office prediction has integrated various data sources such as metadata, online comments, and social media, and employed various machine learning methods. With the development of causal inference and causal graphical models, box office prediction is no longer merely dependent on correlations between variables but can identify the true influencing factors through causal analysis. These studies provide more tools and methods for future movie box office predictions, aiding investors in making better decisions with limited resources.<br><br>
<br>Zhang, X., Qin, X., &amp; Wang, Y. (2021). Predicting box office revenue with movie meta data.
<br>Duan, W., Gu, B., &amp; Whinston, A. B. (2008). Do online reviews matter? An empirical investigation of panel data.
<br>Liu, B. (2012). Sentiment analysis and opinion mining.
<br>Mishne, G., &amp; Glance, N. (2006). Predicting movie sales from blogger sentiment.
<br>Asur, S., &amp; Huberman, B. A. (2010). Predicting the future with social media.
<br>Pearl, J. (2009). Causality: Models, reasoning, and inference. Cambridge University Press.
<br>Louizos, C., Shalit, U., Mooij, J. M., Sontag, D., Zemel, R., &amp; Welling, M. (2017). Causal effect inference with deep latent-variable models.
<br>Peters, J., Janzing, D., &amp; Schölkopf, B. (2017). Elements of causal inference: Foundations and learning algorithms.
<br>Abraham, A. L., Guyonnet-Duperat, V., Le Berre, V., Sarry, J., Bornet, O., &amp; Perrier, J. P. (2019). Structural variants in grapevine (Vitis vinifera L.) genotypes highlight different mechanisms of adaptation to environmental conditions. Frontiers in Genetics, 10, 524. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.3389/fgene.2019.00524" target="_blank">https://doi.org/10.3389/fgene.2019.00524</a>
]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-proposal.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:16:11 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/j3QKin.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/j3QKin.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BDA-Review]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Data is high dimensional 
<br>Data is a graph
<br>Data is infinite/never-ending
<br>Data is labeled
<br><br>
<br>Given lots of data discover patterns and models that are:

<br>Valid: hold on new data with some certainty
<br>Useful: should be possible to act on the item
<br>Unexpected: non-obvious to the system
<br>Understandable: humans should be able to interpret the pattern


<br><br><br><br><br>]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/bda-review.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/BDA-Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:15:01 GMT</pubDate></item><item><title><![CDATA[Big Data Analysis Overview]]></title><description><![CDATA[ 
 <br><br>]]></description><link>https://www.allenygy.vip/data-analysis/big-data-analysis/big-data-analysis-overview.html</link><guid isPermaLink="false">Data Analysis/Big Data Analysis/Big Data Analysis Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 23 Dec 2024 05:11:05 GMT</pubDate></item><item><title><![CDATA[Hands on Data Analytics for Everyone]]></title><description><![CDATA[ 
 <br><br>
<br>本文基本包括了 Hands On Data Analysis For Everyone 这门课的quiz和Final的知识点
<br>Project 需要学习KNIME软件来建模  
<br><br><br><br>
<br>Autonomous Driving Car
<br>Industrial Production
<br>Investment in Financial Markets
<br>Scientific Research
<br>......
<br><br>
<br>Data Engineer: Database, Coding Skills (Computer Programming)
<br>Machine Learning Researcher: Math, Statistics, Machine Learning Knowledge (Math/Stat)
<br>Filed Knowledge: biology, business...
<br><br><br><br>
Data-&gt;Data Preparation-&gt;Model Training-&gt;Model Optimization-&gt;Model Testing
<br><br>
<br>Structured data can be processed by machine directly, while unstructured data cannot.
<br>For example the data on student grades collected by the Academic Registry are structured data while the content of student emails is unstructured.
<br>Structured data are stored in well designed database such as sales data of a company of the customer relationship management system of a company, while unstructured data could be collected and stored but not in specifically designed database such as phone calls and blog posting on weibo.
<br>Structured Data:  Excel
<br>Unstructured Data: E-mail, Wechat(Social-media)
<br><br>
<br>CSV (Comma-separated values)
<br>XML (Extensible Markup Language)
<br>JSON (JavaScript Object Notation)
<br>XLS (Microsoft Excel)
<br><br>
<br>Each line of the file is a data record.
<br>Each record consists of one or more attributes. The attributes are separated by commas.
<br><br>
第一条记录，可以是字段名:     Year,Make,Model,Description,Price<br>
每条记录占一行 以逗号为分隔符 e.g.(1997,Ford,E350,"ac, abs, moon",3000.00)<br>
逗号前后的空格会被忽略<br>
字段中包含有逗号，换行符，空格，该字段必须用双引号括起来<br>
字段中的双引号用两个双引号表示<br>
字段中如果有双引号，该字段必须用双引号括起来 aa,"bb,""cc" ctrl
<br><br>
<br>Categorical: noun
<br>Numeric: number
<br>Ordinal: High-Normal-Low
<br><br>If viewed as a pipeline, data analytics is the bridge that connects statistics and computer science.<br><br>It focuses on using statistical methods to discover insights from data, Statistics is more traditional and theoretical, Computer science focuses on solving all problem in a computable way, including topics in computability, algorithms, system design, networks, artificial intelligence, software engineering,etc.<br><br><br><br><br>Statistical measures can be used to describe a dataset<br>
<br>Range: 
<br>Min/Max value
<br>Mean: 
<br>Variance: 
<br>Standard deviation:  
<br>Median: The middle number<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>
<br>Mode: Most frequently occurring value
<br><br>
<br>q%-quantile (0 &lt; q &lt; 100): The value for which q% of the values are smaller and 100-q% are larger. The median is the 50%-quantile
<br>Quartiles: 25%-quantile (1st quartile), median (2nd quartile), 75%-quantile (3rd quartile)
<br>Interquartile range(IQR): 
<br><br>
<br>Count the number of observations in the dataset(n).
<br>Sort the observations from smallest to largest.
<br>Find the first/second/third quartile<br>
Calculate n(1/4)<br>
If n(1/4) is an integer,then the first quartile is the mean of the numbers at this position n(1/4) and n(1/4)+1<br>
If n*(1/4) is not an integer , then round it up. The number at this position is the first quartile
<br><br><br><br><br>
<br>A bar chart is a simple way to depict the frequencies of the values of a categorical attribute.
<br><br>
<br>A histogram shows the frequency distribution for a numerical attribute.<br>
Difference:
<br>
Bar chart is discrete.<br>
Histogram is continuous.<br>
Bar chart is suitable for categorical data while histogram is for numeric data
<br><br>
<br>Choosing a low number of bins

The two peaks of the original distribution are no longer visible, and one gets the wrong impression that the distribution is unimodal.


<br>Choosing a high number of bins

Usually leads to a very scattered histogram in which it is difficult to distinguish true peaks from random peaks.


<br>Best Choise
<br><br>
<br>
Boxplot <a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>

<br>
Boxplots are a very compact way to visualize and summarize the main characteristics of a numeric attribute, through the median, the IQR, and possible outliers.

<br><br><br>
<br>In scatter plots two attributes are plotted against each other
<br>Can be enriched with additional features (color, shape, size)
<br>Suitable for small number of points; not suitable for large datasets
<br>Points can hide each other
<br><br><br><br>
<br>A matrix of scatter plots m×m where m is the number of attributes (data dimensionality)
<br>For m attributes there are m(m − 1)/2 possible scatter plots
<br><br><br>
<br>Similar idea of the Parallel Coordinates plot
<br>Axes are drawn in a star-like fashion intersecting in one point
<br>Suitable for small datasets
<br><br><br><br>Requires min-max-normalization of numeric columns<br>
<br>Ratio of missing values: If missing value &gt; threshold, then remove the column.
<br>Low variance: If variance &lt; threshold, then remove column. <a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a>
<br>High Correlation: If(corr(var1,var2) &gt; threshold), then remove var1.
<br><br><br><br>
<br>Missing Completely At Random (MCAR): the probability that a value for X is missing does neither depend on the value of X nor on other variables. (Most serious)
<br>Missing At Random (MAR): the probability that Y is missing depends only on the value of X.
<br>Not Missing At Random (NMAR): the probability that Y is missing depends on the unobserved value of Y itself
<br><br>
<br>Ignore or delete the record
<br>Fill in (impute) missing value as “unknown”,mean/median/mode <a data-footref="[inline3" href="https://www.allenygy.vip/about:blank#fn-4-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[4]</a>
<br><br>
<br>An outlier is a value or data object that is far away or very different from all or most of the other data.
<br>Errors in measurements or exceptional conditions that don't describe the common functioning of the underlying system.
<br><br><br>
<br>We know that a 200 year old person must be a mistake
<br>We know that “A” in a number corpus is an outlier
<br><br>
<br>Distance from the median
<br>Position in the distribution tails
<br><br>
<br>Quantile-based: Box plot
<br>Distribution-based: Z-Score
<br><br>
<br>min–max normalization  
<br>z-score standardization
<br>robust z-score standardization
<br>decimal scaling
<br><br><br>
<br>Categorical → Numerical: map categorical and ordinal values to a set of binary values
<br>Numerical → Categorical: Discretization (equal-width, equal-depth, V-optimal)
<br><br><br>Concatenation: (column do not change)<br>
<br>Unify database structures
<br>Remove duplicates
<br><br>Join: (column change)<br>
<br>Overrepresentation of items
<br>Data explosion
<br><br><br><br><br>The learner is provided with a set of data inputs together with the corresponding desired outputs<br>
<br>Data act as a “teacher”
<br>Classification &amp; Regression<br>
Example:
<br>teach kids to recognize different animals
<br>grade examinations with correct answer provided
<br><br>Training examples as input patterns, with no associated output<br>
<br>no “teacher”
<br>Clustering
<br>similarity measure exists to detect groupings/ clusterings<br>
Main differences: unsupervised learning has no “teacher”, supervised learning uses labeled input and<br>
output data, while an unsupervised learning does not
<br><br><br>The target variable that we’re trying to predict is continuous.  eg.(living areas and prices)<br><br>The target variable can take on only a small number of discrete values.  eg.(insurance)<br><br>Given a training set, to learn a function (hypothesis/model) f: X ⟼ Y, so that f(x) is a “good” predictor for the corresponding value of y.<br>
<br>
<br>The model is in linear in terms of parameters  and .
<br>Linear regression with one variable (univariate linear regression).
<br><br>
<br>Mean absolute error (MAE) 
<br>Mean squared error (MSE) 
<br>Root mean squared error (RMSE) 
<br>R-squared <a data-footref="[inline4" href="https://www.allenygy.vip/about:blank#fn-5-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[5]</a><br>

<br><br>
<br>Training error/Empirical error: the error of the learner/model on the training data
<br>Generalization error: the error on the new data
<br><br><br>The percentage of test set tuples that are correctly classified by the classifier<br><br><br><br><br>
<br>Each internal nodedenotes a test on an attribute
<br>Each branch represents an outcome of the test
<br>Each leaf node holds a class label
<br><br>Discover hidden structures in unlabeled data<br>
Clustering identifies a finite set of groups (clusters)  in the dataset such that:<br>
<br>Objects within the same cluster  shall be as similar as possible
<br>Objects of different clusters  () shall be as dissimilar as possible<br>
Example:
<br>Customer segmentation
<br>Molecule search <a data-footref="[inline5" href="https://www.allenygy.vip/about:blank#fn-6-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[6]</a>
<br>Anomaly detection <a data-footref="[inline6" href="https://www.allenygy.vip/about:blank#fn-7-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[7]</a>
<br>Structuring large sets of text documents <a data-footref="[inline7" href="https://www.allenygy.vip/about:blank#fn-8-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[8]</a>
<br>Generating thematic maps from satellite images <a data-footref="[inline8" href="https://www.allenygy.vip/about:blank#fn-9-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[9]</a>
<br><br>
<br>Linkage Based<br>
e.g. Hierarchical Clustering
<br>Clustering by Partitioning<br>
e.g. k-Means
<br><br>
<br>Minkowski-Distance ()
<br>Euclidean Distance ()
<br>Manhattan-Distance ()
<br>
<br>
<br>Found by ordering all data points and picking out the one in the middle - or if there are two middle numbers, taking the mean of those two numbers<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>The middle line of the box, which is the median of the data, represents the average of the sample data. The upper and lower limits of the box are the upper and lower quartiles of the data, respectively. This means that the box contains 50% of the data. The height of the box partly reflects how fluctuating the data is. Above and below the box, there is a line. Represents the maximum and minimum values, sometimes some points "pop out", which can be understood as "outliers"<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Only works for numeric columns<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>A predicted value based on the other attributes (inference-based such as<br>
Bayesian, Decision Tree<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Proportion of the variance for a dependent variable that’s explained by the regression model.Normally ranges from 0 to 1, the closer to 1 the better performance.<a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Find molecules with similar structure to already working ones<a href="https://www.allenygy.vip/about:blank#fnref-6-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Find unusual patterns in data from sensors monitoring mechanical engines<a href="https://www.allenygy.vip/about:blank#fnref-7-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>hierarchical clustering of the text documents<a href="https://www.allenygy.vip/about:blank#fnref-8-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>clustering sets of raster images of the same area (feature vectors)<a href="https://www.allenygy.vip/about:blank#fnref-9-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/data-analysis/hands-on-data-analysis/hans-on-data-analysis-for-everyone.html</link><guid isPermaLink="false">Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 25 Nov 2024 07:47:23 GMT</pubDate></item><item><title><![CDATA[Data-Analysis]]></title><description><![CDATA[ 
 <br><br><br>]]></description><link>https://www.allenygy.vip/data-analysis/data-analysis-overview.html</link><guid isPermaLink="false">Data Analysis/Data Analysis Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:33:34 GMT</pubDate></item><item><title><![CDATA[MySQL+Redis]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:Redis" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Redis</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:MySQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#MySQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Application" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Application</a> 
 <br><a href="https://www.allenygy.vip?query=tag:Redis" class="tag" target="_blank" rel="noopener nofollow">#Redis</a> <a href="https://www.allenygy.vip?query=tag:MySQL" class="tag" target="_blank" rel="noopener nofollow">#MySQL</a> <a href="https://www.allenygy.vip?query=tag:Application" class="tag" target="_blank" rel="noopener nofollow">#Application</a><br><br>Redis是一种高速缓存数据库，可以将常用的数据缓存到内存中，提高访问速度，<br>
MySQL则是一个关系型数据库，能够存储大量数据，并通过SQL查询语句对数据进行查询和操作。<br>Redis和MySQL在互联网应用中都有着广泛的应用。Redis通常被用于缓存用户频繁访问的数据，如热门文章、商品、用户信息等，而MySQL则通常被用于存储大量数据，如用户订单、交易记录、文章内容等。<br>MySQL 和 Redis 是两种常见的数据库系统，它们在许多应用场景中结合使用，以充分利用各自的优势。以下是一些常见的应用场景：<br><br>场景：提高读性能，减少数据库负载。<br>
说明：<br>
<br>MySQL：作为主要的持久化数据存储，处理复杂的查询和事务。
<br>Redis：作为缓存层，存储常用或频繁访问的数据，如用户会话、热门商品信息等。
<br>示例：<br>
<br>用户请求数据时，首先检查 Redis 缓存。如果缓存中存在，则直接返回数据；否则，从 MySQL 中读取数据，并将结果存储在 Redis 中以供下次请求使用。
<br><br>场景：存储用户会话数据，实现快速访问。<br>
说明：<br>
<br>MySQL：存储用户的持久性数据，如用户信息、订单历史等。
<br>Redis：存储会话数据（如登录状态、购物车内容等），利用其快速读写特性实现高效的会话管理。
<br>示例：<br>
<br>用户登录时，将会话数据存储在 Redis 中，设置适当的过期时间。用户请求过程中，频繁访问 Redis 获取会话数据。
<br><br>场景：处理异步任务和消息传递。<br>
说明：<br>
<br>MySQL：存储任务或消息的详细信息和处理结果。
<br>Redis：使用其列表（list）或发布/订阅（pub/sub）功能实现消息队列，处理异步任务。
<br>示例：<br>
<br>电子商务网站中，订单生成后，将订单处理任务放入 Redis 队列，后台服务从队列中取出任务进行处理。
<br>]]></description><link>https://www.allenygy.vip/database-management-system/application/mysql+redis.html</link><guid isPermaLink="false">Database Management System/Application/MySQL+Redis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[RDBMS-Assignment-2]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br>CREATE TABLE person (
    p_id INT PRIMARY KEY,
    name VARCHAR(255),
    gender VARCHAR(10)
);
<br>CREATE TABLE employ (
    p_id INT PRIMARY KEY,
    position VARCHAR(100),
    salary DECIMAL(10, 2),
    FOREIGN KEY (p_id) REFERENCES person(p_id)
);
<br>CREATE TABLE customer (
    p_id INT PRIMARY KEY,
    class VARCHAR(50),
    phone VARCHAR(20),
    FOREIGN KEY (p_id) REFERENCES person(p_id)
);
<br>CREATE TABLE purchase (
    b_id INT PRIMARY KEY,
    date DATE,
    p_id INT,
    FOREIGN KEY (p_id) REFERENCES person(p_id)
);
<br>CREATE TABLE use(
  id INT PRIMARY KEY,
  b_id INT PRIMARY KEY,
)
<br>CREATE TABLE coupon(
  id INT PRIMARY KEY,
  disconut DECIMAL(10,2),
  p_id INT,
  t_id INT,
  FOREIGN KEY (p_id) REFERENCES person(p_id)
  FOREIGN KEY (t_id) REFERENCES product_type(t_id)
)
<br>CREATE TABLE product_type(
  t_id INT PRIMARY KEY,
  manufacturer VARCHAR(50),
  type VARCHAR(20),
  price DECIMAL(10,2),
)
<br>CREATE TABLE contain(
  b_id INT PRIMARY KEY,
  i_id INT,
  FOREIGN KEY (b_id) REFERENCES purchase(b_id),
  FOREIGN KEY (i_id) REFERENCES product(i_id)
)
<br>CREATE TABLE product(
  i_id INT PRIMARY KEY,
  t_id INT PRIMARY KEY,
  exp_date date,
  man_date date,
  FOREIGN KEY (t_id) REFERENCES product_type(t_id)
)
<br><br>The issue with the given ER model is that it lacks a direct relationship between the coupon and the products it can be applied to. This absence of a direct link creates a challenge in enforcing the constraint that a purchase using a coupon must include at least one product instance that corresponds to the type eligible for that coupon.<br>
<br>
Add a table/entity to represent coupon-product type associations:<br>
Create a table like coupon_product_type with columns such as coupon_id and product_type_id to denote which product types a coupon can be applied to.

<br>
Modify the purchase entity to include coupon usage and enforce the constraint:<br>
Within the purchase entity, introduce a column coupon_used to denote whether a coupon was used in a purchase. Then, use a constraint or validation rule to ensure that if coupon_used is true, there must be at least one corresponding product instance in the purchase that matches the product type eligible for the coupon.

<br><br>
<br>Find the number of courses taught by Goliath (instructor’s name) over the years.
<br>SELECT COUNT(DISTINCT cID) AS num_courses_taught
FROM teach
WHERE iID = 'Goliath';
<br>
<br>Find the number of courses taught by each instructor in the semester 23F.
<br>SELECT COUNT(DISTINCT cID) As num_courses_taught_each_instructor
FROM instructor
JOIN teach USING(iID)
GROUP BY (i.name)
WHERE teach.semester='23F'
<br>
<br>Find the semester in which Goliath teaches more courses than other semesters.
<br>SELECT teach.semester, COUNT(teach.cID) AS num_courses
FROM teach JOIN instrtuctor USING(iID)
WHERE instructor.iname='Goliath'
GROUP BY teach.semester
ORDER BY num_courses DESC
LIMIT 1;
<br>
<br>Insert a new student of ID: 123456, name: ‘Tomas’, gender: Male, GPA: unknown, major: ACCT, and phone number: 32165498701.
<br>INSERT INTO student VALUES 
(123456, 3, 'Tomas','Male',NULL,'ACCT', 32165498701);
<br>
<br>Student ‘Dennis’ quit from the college. Please remove his information from the database.
<br>DELETE FROM student
WHERE sname='Dennis'
]]></description><link>https://www.allenygy.vip/database-management-system/assignment/rdbms-as-2.html</link><guid isPermaLink="false">Database Management System/Assignment/RDBMS-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[RDBMS-Assignment-3]]></title><description><![CDATA[ 
 <br><br><br>a) Find the students who have more enrollments than other students. Display your answer by sID and sname.<br>SELECT  sID, sname
FROM student JOIN enroll USING (sID)
GROUP BY cID
ORDER BY COUNT(DISTINCT cID) DESC
LIMIT 1;
<br>b) Find the students who have enrolled all courses. Display your answer by sID and sname.<br>SELECT sID, sname
FROM student
WHERE sID IN ( SELECT sID
FROM enroll
GROUP BY enroll.sID
HAVING COUNT(DISTINCT enroll.cID) 
= (SELECT COUNT(DISTINCT cID) 
FROM course );

<br>c) Find the students who have taken all courses instructed by Goliath (instructor’s name and assuming that there is no other instructor who is called Goliath). Display your answer by sID and sname.<br>SELECT s.sID, s.sname
FROM student s
JOIN course c ON 1=1
LEFT JOIN enroll e ON s.sID = e.sID AND c.cID = e.cID
WHERE NOT EXISTS (
    SELECT *
    FROM teach t
    JOIN instructor i ON t.iID = i.iID
    WHERE i.iname = 'Goliath' AND t.cID = c.cID
        AND NOT EXISTS (
            SELECT *
            FROM enroll e2
            WHERE e2.sID = s.sID AND e2.cID = t.cID
        )
)
GROUP BY s.sID, s.sname
HAVING COUNT(DISTINCT c.cID) = COUNT(DISTINCT e.cID)
<br>d) Implement a constraint to guarantee that the position of an instructor is one of “lecturer”, “assistant professor”, “associated professor”, and “professor”.<br>ALTER TABLE instructor
ADD CONSTRAINT position_domain
CHECK (position IN 
("lecturer", "assistant professor", "associated professor","professor"));

<br>e) Implement a constraint to guarantee that “no student is enrolled to a course which is not taught by any instructor”.<br>ALTER TABLE student
ADD CONSTRAINT teach_course
FOREIGN KEY (cID) REFERENCES course(cID)
ADD CONSTRIANT teach_instructor
FOREIGN KEY (iID) REFERENCES course(iID)
  ON DELETE CASCADE
  ON UPDATE CASCADE;
DELIMITER |
  CREATE TRIGGER guarantee_student
  AFTER INSERT ON student
  FOR EACH ROW
  BEGIN
    IF new.id NOT IN (
      SELECT iID FROM instructor) 
THEN 
    DELETE FROM student WHERE student.sID = new.sID;
  END IF;
END;|
DELIMITER ;

<br><br>Please prove the three rules union, decomposition, pseudotransitivity (Lecture 9 Page 14) using Armstrong’s Axioms (Page 11). (12 pt)<br>
<br>For union:<br>
If  then 
<br>
<br>
<br> According to augmentation
<br>
<br>
<br>
<br> According to transitivity
<br>
<br>
<br>For augmentation:<br>
if , then  and 
<br>
<br>
<br>  according to reflexivity
<br> according to reflexivity
<br> according to transitivity
<br>
<br>For pseudotransitivity<br>
if  and  then 
<br>
<br>
<br> according to augmentation
<br> according to transitivity
<br>
<br><br>a. Find all condidate keys<br>L: A<br>
R: BCH<br>
LR:DEFG<br>
N:<br><br>
<br>
<br>
<br>
<br>There is only one candidate key AF<br>b. Decompose the schema in BCNF<br>Remove redundant functional dependencies and extraneous Attributes<br><br>Iteration 1:  violates BCNF<br>
Decomposition R into<br><br>
<br>
<br>
<br> and  satisfy BCNF<br>c. The decomposition in b) is dependency preserving.<br><br>
<br><br>
 it is dependency-preserving<br>d. What is the canonical cover of the functional dependencies?<br><br>e. There are no redundant dependencies or extraneous attributes in any one of the dependencies.<br><br>
<br>
<br>It has been satisfy BCNF, so it's also 3NF.]]></description><link>https://www.allenygy.vip/database-management-system/assignment/rdbms-as-3.html</link><guid isPermaLink="false">Database Management System/Assignment/RDBMS-As-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[NoSQL-Assignment-2]]></title><description><![CDATA[ 
 <br><br><br>REmote DIctionary Server（Redis）是一个开源的内存 NoSQL 数据库项目，它实现了一个分布式、内存键值存储，并具有可选的耐用性。<br><br>
<br>读写速度极快
<br>持久、可扩展
<br>直接数据访问
<br><br>
<br>String
<br>List
<br>Hash
<br>Set 
<br>Zset
<br><br>
<br>发送者（发布者）不需要向特定的接收者（订阅者）发送消息。 
<br>相反，发布的消息被归类到频道中，而不知道有哪些订阅者。 
<br>订阅者对一个或多个频道表示兴趣，只接收感兴趣的信息，而不知道有哪些发布者。
<br><br>依靠原子性实现•要么处理所有命令，要么不处理任何命令。<br>
EXEC 命令会触发事务中所有命令的执行。<br>
如果客户端在调用 MULTI 命令之前，在事务上下文中失去了与服务器的连接，则不会执行任何操作。相反，如果调用 EXEC 命令，则会执行所有操作。<br><br>
<br>Redis最与众不同的数据结构是：ZSet
<br>特点：

<br>对排序集进行添加、删除或更新等操作的速度非常快
<br>由于元素是按顺序提取的，而不是事后排序，因此还可以通过得分或排名（位置）快速获取范围。


<br><br>Expire 命令可以为键设置过期时间，当键过期时，Redis 会自动删除该键。<br><br>
<br>场景：MySQL+ Redis 的组合使用，Redis 作为 MySQL 的缓存层使用，MySQL作为主要存储
<br>原因：Redis 是一个高性能的缓存数据库，可以快速读写数据，适合存储热点数据，提高系统性能。
<br><br>Cassandra 是：<br>
<br>一种开源、可线性扩展、分布式和容错的 NoSQL 数据库。设计用于处理海量数据。
<br>主要特点：	<br>
<br>大规模可扩展架构
<br>无主架构
<br>线性扩展性能 
<br>无单点故障 
<br>故障节点可轻松恢复
<br>具有灵活、动态的数据模型，可调整的数据一致性，多数据中心复制 
<br>数据压缩效率高
<br><br>
<br>传统关系型数据库面向行设计，内部组织结构围绕行的处理，适合 OLTP场景
<br>Cassandra 列族数据库面向列设计，主要处理列，适合 OLAP 场景
<br><br>复制策略是指 Cassandra 如何在集群中复制数据，放置数据副本<br>
<br>Cassandra 提供两种复制策略，包括SimpleStrategy 和 NetworkTopologyStrategy

<br>SimpleStrategy 用于只有一个数据中心的情况。SimpleStrategy 会在分区器选择的节点上放置第一个副本。之后，其余副本按顺时针方向放置在节点环中。	
<br>NetworkTopologyStrategy 用于有多个数据中心的情况。在网络拓扑策略中，会为每个数据中心分别设置副本。网络拓扑策略在环中按顺时针方向放置副本，直到到达另一个机架中的第一个节点


<br><br>
<br>Cassandra 使用标记删除的方式，而不是立即删除数据。标记删除的数据会在后续的清理过程中删除。<br>
注意的地方：
<br>如果标记删除的数据过多，会影响查询性能，因为查询时需要扫描和过滤这些标记删除的数据。
<br>需要注意Cassandra表的TTL（生存时间）设置，如果TTL设置不当，可能导致大量的tombstone积累。
<br><br>Cassandra Query Language（CQL）是 Cassandra 数据库的查询语言。<br><br>Apache Cassandra 的设计目标主要围绕着可扩展性、高可用性和无单点故障展开。<br><br>Cassandra 的主要成分包括：	<br>
<br>节点
<br>数据中心
<br>集群
<br>分区器
<br><br>社交媒体的评论管理<br>
Cassandra 面向列设计，适合处理大量数据，适合社交媒体评论管理场景，可以快速写入和读取评论数据，支持高并发读写操作。	]]></description><link>https://www.allenygy.vip/database-management-system/assignment/nosql-as-2.html</link><guid isPermaLink="false">Database Management System/Assignment/NoSQL-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[RDBMS-Assignment-1]]></title><description><![CDATA[ 
 <br><br><br>
<br>Atomicity of updates<br>
For example, it can ensure that fund transfers between accounts are either successfully completed or not executed at all. In database systems, this guarantee can prevent situations where funds are deducted for some reason but not added to another account, thereby avoiding data inconsistency and financial losses. File systems lack such guarantees, making inconsistencies more likely in such transactions.
<br>Concurrent access by multiple users<br>
For example, database systems enable multiple students to enroll in courses simultaneously, enhancing system performance. However, without proper management, uncontrolled concurrent access may lead to issues like overbooking courses, causing frustration among students.
<br>Security problems<br>
For example, in a healthcare database, it's vital to control access to patient records. Database systems offer fine-grained access control, allowing restrictions based on roles. For instance, doctors and nurses can access medical records, but administrative staff cannot. Achieving this control is challenging in a file system, posing security risks.
<br><br>
<br>Conceptual Design
<br>Logical Design
<br>Optimization
<br>Physical Design
<br><br>
<br>A schema in the context of databases is a structured blueprint that defines how data is organized, relationships are managed, and constraints are applied within a database system.
<br><br>
<br>The set of special attribute(s) is called key.
<br>Formally, a key of an entity set is a set of attributes that can uniquely identify the entities.
<br><br><br><br><br><img alt="DB-Supermarket" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DB-Supermarket.png" referrerpolicy="no-referrer"><br><br>1.Find the major number of the student Eva:<br>SELECT major
FROM student
WHERE sname='Eva';
<br>2.Find the name of the professors (instructors’ position) who are from the Computer Science department:<br>SELECT iname 
FROM instructor
WHERE department='Computer Science';
<br>3.Find the name of the professors (instructors’ position) who are from the Computer Science department:<br>SELECT cname
FROM course
WHERE credit=1;
<br>4.Find the name of the students who have received an A in a course in semester 2023 Spring:<br>SELECT sname 
FROM student, enroll
WHERE enroll.grade = 'A'
AND enroll.semester = '2023 Spring'
AND student.sID = enroll.sID;
<br>5.Find the name of the courses which are instructed by Dave (instructor’s name):<br>SELECT cname
FROM course,instructor,teach
WHERE instructor.iname = 'Dave'
AND instructor.iID = teach.iID
AND teach.cID = course.cID;
<br>6.Find the name of the instructors who have taught Frank (student’s name) in semester 2022 Fall:<br>SELECT iname
FROM instructor,student,teach,enroll
WHERE student.sname = 'Frank'
AND student.sID = enroll.sID
AND enroll.cID = teach.cID 
AND teach.semester = '2022 Fall'
AND teach.iID = instructor.iID
]]></description><link>https://www.allenygy.vip/database-management-system/assignment/rdbms-as-1.html</link><guid isPermaLink="false">Database Management System/Assignment/RDBMS-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DB-Supermarket.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DB-Supermarket.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[NoSQL-Assignment]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Assignment" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Assignment</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Neo4j" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Neo4j</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Mongodb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mongodb</a> 
 <br><a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <a href="https://www.allenygy.vip?query=tag:Assignment" class="tag" target="_blank" rel="noopener nofollow">#Assignment</a> <a href="https://www.allenygy.vip?query=tag:Neo4j" class="tag" target="_blank" rel="noopener nofollow">#Neo4j</a> <a href="https://www.allenygy.vip?query=tag:Mongodb" class="tag" target="_blank" rel="noopener nofollow">#Mongodb</a><br><br><br>
<br>NoSQL数据库是不遵循RDBMS原则的数据库和数据存储，NoSQL意思是不仅仅是 SQL
<br><br>
<br>图数据库:

<br>用于存储数据网络信息，如社交关系。
<br>如：<a data-href="Neo4j" href="https://www.allenygy.vip/Neo4j" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Neo4j</a><a data-href="Neo4j" href="https://www.allenygy.vip/database-management-system/nosql/neo4j.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Neo4j</a>


<br>文档数据库:

<br>将每个键与称为文档的复杂数据结构配对。
<br>如：<a data-href="MongoDB" href="https://www.allenygy.vip/MongoDB" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MongoDB</a><a data-href="MongoDB" href="https://www.allenygy.vip/database-management-system/nosql/mongodb.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MongoDB</a>


<br>键值数据库:

<br>是最简单的 NoSQL 数据库。数据库中的每个项目都以属性名称（或 "键"）的形式与其值一起存储。
<br>如：<a data-href="Redis" href="https://www.allenygy.vip/Redis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Redis</a><a data-href="Redis" href="https://www.allenygy.vip/database-management-system/nosql/redis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Redis</a>


<br>列族数据库：

<br>针对大型数据集的查询进行了优化，将数据列（而不是行）存储在一起。
<br>如：<a data-href="Cassandra" href="https://www.allenygy.vip/Cassandra" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Cassandra</a><a data-href="Cassandra" href="https://www.allenygy.vip/database-management-system/nosql/cassandra.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Cassandra</a>


<br><br>
<br>关系型数据库

<br>中心化的
<br>处理密集，结构化的数据
<br>满足 ACID 性
<br>遵循 CA 原则


<br>NoSQL

<br>去中心化的
<br>处理稀疏数据，半/非结构化的数据
<br>主要是查询，很少更新
<br>满足 BASE 性
<br>遵循 AP 或 CP 原则


<br><br>
<br>CAP 定理（CAP Theorem）

<br>是由计算机科学家 Eric Brewer 提出的一个关于分布式数据存储系统的基本定理。该定理指出，在任何分布式数据存储系统中，无法同时完全满足以下三个特性：

<br>一致性（Consistency）：每个客户端都有相同的数据视图。
<br>可用性（Availability）：每个客户端始终可以读写。
<br>分区容错性（Partition Tolerance）：系统在分布式物理网络中运行良好




<br>CAP 定理在 NoSQL 数据库中的重要性

<br>NoSQL 数据库的设计通常会在 CAP 定理的背景下进行权衡，以满足特定应用场景的需求：

<br>满足CA原则：系统几乎没有或根本没有分区容错性。一致性和可用性优先
<br>满足AP原则：一致性受到影响，但系统始终可用，并且在部分分区时也能工作

<br>Cassandra, DynamoDB


<br>满足CP原则：可用性受到影响，但一致性和分区容错性优于可用性

<br>MongoDB, HBase, Redis






<br><br>
<br>a.高可用性 (High Availability)

<br>每个客户端始终可以读写，读写实时更新


<br>b. 可扩展性 (Scalability)

<br>存储空间可扩展
<br>数据易于扩展


<br>c. 分布式系统 (Distributed System)

<br>去中心化的系统
<br>可有数千台机器分布在世界各地


<br><br>
<br>a.键值存储(Key-Value Store)

<br>简洁：数据主要采用Key-Value(KV)形式储存
<br>高速：数据驻留内存，重启时可再次加载进行使用
<br>易扩展：根据系统负载量，灵活添加或删除服务器
<br>对键可设置失效时间


<br>b. 列存储 (Column Store)

<br>更好的可扩展性
<br>高可用性
<br>适合离线批量数据处理


<br>c.文档数据库(Document Store)

<br>核心概念是 "文档 "的概念，它与 RDBMS 中的行相对应
<br>以某些标准格式或编码封装和编码数据，如 JSON（BSON）
<br>文档在数据库中通过代表该文档的唯一密钥进行处理
<br>将文档作为一个整体处理，避免将文档拆分为其组成的名称/值对
<br>文档是无模式的，可以是非结构的数据


<br>d.图形数据库(Graph Store)

<br>面向图形
<br>一切都以边、节点或属性的形式存储
<br>每个节点和边可以有任意数量的属性
<br>节点和边都可以贴标签
<br>标签可用于缩小搜索范围


<br><br>
<br>a. 实时分析：

<br>键值数据库Redis,  支持极高的读写速度，适合需要快速响应的实时分析应用。


<br>b. 大数据处理：

<br>列族数据库 Cassandra, 能够轻松地横向扩展，处理大数据量和高吞吐量的需求。


<br>c. 社交网络：

<br>图数据库 Neo4J，社交网络中的数据天然适合图模型，例如用户、朋友关系、点赞、评论等。Neo4j 通过图形算法和索引，能够高效地进行复杂的关系查询和路径查找，


<br>d. 物联网 loT:

<br>文档数据库MongoDB，能够处理结构化、半结构化和非结构化数据。物联网数据通常包括各种类型的传感器数据，这些数据具有高度的灵活性和多样性。MongoDB 提供了高效的存储和查询能力，支持时间序列数据的存储和分析，适合物联网应用中大量多变的数据处理需求。


<br><br>
<br>实际应用场景：社交媒体评论管理

<br>社交媒体评论具有大量非结构化的数据，且用户在高峰期频繁发布和查看评论，系统需要支持高并发读写操作。
<br>NoSQL 数据库具有可扩展性：NoSQL 数据库（如 MongoDB、Cassandra）能够水平扩展，通过增加更多节点来处理大规模数据和高并发请求。
<br>关系型数据库通常难以应对如此大规模的数据增长和高并发需求。


<br><br>MATCH (v:Vehicle)-[:OWNED_BY]-&gt;(p:Person)
WITH p, collect(p.name) as owners
RETURN v, owners
<br><br><br><br>
<br>A.&nbsp;OPTIONAL MATCH 不是 Cypher 语句。
<br>B.&nbsp;OPTIONAL MATCH 为 Cypher 查询提供参数占位符。它保存参数化查询，然后根据客户提供的值与图进行可选匹配。
<br>C. OPTIONAL MATCH 会搜索可能存在也可能不存在的描述模式，并将模式中不存在的标识符赋值为 NULL。
<br>D. 可选匹配子句将获取一组属性值，并将其与数据库中的所有节点进行可选匹配。
<br><br>
<br>A.&nbsp;MATCH (a:Thing {id:3563}) DETACH DELETE a
<br>B.&nbsp;MATCH (a:Thing {id:3563}) OPTIONAL MATCH (a)-[r]-() DELETE a, r
<br>C.&nbsp;MATCH (a:Thing {id:3563}) DELETE a
<br>D.&nbsp;MATCH (a:Thing {id:3563})-[r]-(b) DELETE a, r
<br><br>
<br>A.&nbsp;MATCH (sarah:Person)-[:KNOWS]-&gt;(friend:Person) WHERE sarah.name = "Sarah" RETURN friend
<br>B.&nbsp;MATCH (sarah:Person)-[:KNOWS*1...2]-&gt;(friend:Person) WHERE sarah.name = "Sarah" RETURN friend
<br>C. MATCH (sarah:Person)-[:KNOWS]-&gt;(friend:Person) OPTIONAL MATCH (friend)-[:KNOWS]-&gt;(fof:Person) WHERE sarah.name = "Sarah" RETURN friend, fof
<br>D. 所有这些都是正确的。
<br><br>// 创建 Show 节点
CREATE (got:Show {title: "Game of Thrones"})
	
// 创建 Character 节点
CREATE (jon:Character {name: "Jon Snow"})
CREATE (dany:Character {name: "Daenerys Targaryen"})
CREATE (tyrion:Character {name: "Tyrion Lannister"})
	
// 创建 Actor 节点
CREATE (kit:Actor {name: "Kit Harington"})
CREATE (emilia:Actor {name: "Emilia Clarke"})
CREATE (peter:Actor {name: "Peter Dinklage"})
	
CREATE (kit)-[:ACTED_IN]-&gt;(got)
CREATE (emilia)-[:ACTED_IN]-&gt;(got)
CREATE (peter)-[:ACTED_IN]-&gt;(got)
	
CREATE (jon)-[:HAS_CHARACTER]-&gt;(got)
CREATE (dany)-[:HAS_CHARACTER]-&gt;(got)
CREATE (tyrion)-[:HAS_CHARACTER]-&gt;(got)
	
CREATE (kit)-[:PLAYS]-&gt;(jon)
CREATE (emilia)-[:PLAYS]-&gt;(dany)
CREATE (peter)-[:PLAYS]-&gt;(tyrion)	
<br><br><br><br><br><br><br>
<br>A. admin数据库
<br>B. user数据库
<br>C. config数据库
<br>D. test 数据库
<br><br>
<br>A. MongoDB单个文档大小上限为64MB
<br>B. 文档的值只可以是字符串类型
<br>C. 文档中可以有重复的键
<br>D. 不建议自定义_id键
<br><br>
<br>易用性：灵活的文档模型。JSON格式简单易学
<br>支持高性能访问数据。存储引擎是文档型数据库的核心组件。
<br>可扩展性：支持大数据分布式存储，服务能力水平可横向弹性扩展
]]></description><link>https://www.allenygy.vip/database-management-system/assignment/nosql-as-1.html</link><guid isPermaLink="false">Database Management System/Assignment/NoSQL-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Advanced-SQL]]></title><description><![CDATA[ 
 <br><br>Constraints<br>
<br>Integrity Constraints
<br>Check Clauses
<br>Referential Integrity
<br>Keys and Referential Integrity
<br>Cascading actions in referential integrity
<br>Assertions
<br><br>Integrity constraints guard against accidental damage to the database, by ensuring that authorized changes to the database do not result in a loss of data consistency.<br>
<br>Example:

<br>gpa must be from 0.0 to 4.0


<br>ALTER TABLE STUDENT
ADD CONSTRAINT gpa_domain
CHECK(gpa&gt;=0.00 AND gpa&lt;=4.00)
<br><br>Referential integrity ensures that a value that appears in one relation table for a given set of attributes must also appears in the corresponding set of attributes in the other relation table<br>关联删除<br>
关联更新<br>
<br>Example:
<br>CREATE TABLE student (
  …
  p_code INT(11),
  FOREIGN KEY (p_code) REFERENCES program(p_code),
  …
)

CREATE TABLE program (
  …
  p_code INT(11) NOT NULL,
  PRIMARY KEY (p_code),
  …
)
<br>ALTER TABLE student
  ADD CONSTRAINT student_program 
    FOREIGN KEY (p_code) REFERENCES program(p_code) 
    ON DELETE CASCADE 
    ON UPDATE CASCADE
<br>
<br>Alternative cascade actions can be:

<br>SET NULL and SET DEFAULT.


]]></description><link>https://www.allenygy.vip/database-management-system/mysql/10-advanced-sql.html</link><guid isPermaLink="false">Database Management System/MySQL/10-Advanced-SQL.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:38:05 GMT</pubDate></item><item><title><![CDATA[Division-and-Correlated-Subquery]]></title><description><![CDATA[ 
 <br><br><br>Division operator is used for queries involving “all”.<br><br>Query: “Retrieve (all) course names that is/are taught by all programes.”<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Mysql/Division.png" referrerpolicy="no-referrer"><br>The solution to the query is<br><br>Database is taught by all programmes, i.e. both CST and DS.<br><br><br><br>SELECT 𝐶1.𝑐_𝑛𝑎𝑚𝑒
FROM 𝑐𝑎𝑡𝑎𝑙𝑜𝑔𝑢𝑒 AS 𝐶1
WHERE NOT EXISTS (  // 遍历C1
  (SELECT 𝑝_𝑛𝑎𝑚𝑒  //Divisor
  FROM 𝑝𝑟𝑜𝑔𝑟𝑎𝑚𝑚𝑒)
    EXCEPT
  (SELECT 𝑝_𝑛𝑎𝑚𝑒 //Dividend
  FROM 𝑐𝑎𝑡𝑎𝑙𝑢𝑔𝑢𝑒 AS 𝐶2
  WHERE 𝐶2.𝑐_𝑛𝑎𝑚𝑒=𝐶1.𝑐_𝑛𝑎𝑚𝑒)// 得到C1.c_name对应的p_name集合
)
<br>NOT EXISTS: 检查集合是不是NULL<br>
<br>If true return true; else return false;
<br>第一个SELECT选择的是除数<br>
第二个SELECT选择的是被除数<br>
EXCEPT 去除集合的公共元素<br>SELECT 𝐶1.𝑐_𝑛𝑎𝑚𝑒
FROM 𝑐𝑎𝑡𝑎𝑙𝑜𝑔𝑢𝑒 AS 𝐶1
WHERE NOT EXISTS (
  SELECT *
  FROM 𝑝𝑟𝑜𝑔𝑟𝑎𝑚𝑚𝑒
  WHERE 𝑝_𝑛𝑎𝑚𝑒 NOT IN(
    SELECT 𝐶2.𝑝_𝑛𝑎𝑚𝑒
    FROM 𝑐𝑎𝑡𝑎𝑙𝑜𝑔𝑢𝑒 AS 𝐶2
    WHERE 𝐶2.𝑝_𝑛𝑎𝑚𝑒=𝐶1.𝑝_𝑛𝑎𝑚𝑒
  )
)
<br><br>
<br>
<br>
<br>
<br><br>
// sID is a foreign key to student.sID. cID is a foreign key to course.cID.
<br><br>
// iID is a foreign key to instructor.iID. cID is a foreign key to course.cID.
<br>
<br>Find the students who have enrolled all courses. Display your answer by sID and sname.
<br>SELECT s1.sID,s1.sname
FROM student AS s1
WHERE NOT EXISTS(
  (SELECT cID FROM course)
  EXCEPT
  (SELECT cID 
  FROM enroll AS e1
  WHERE s1.sID=e1.sID
  )
)
<br>SELECT s1.sID,s1.sname
FROM student AS s1
WHERE NOT EXISTS(
  SELECT cID FROM course
  WHERE cID NOT IN(
    SELECT cID 
    FROM enroll AS e1
    WHERE s1.sID=e1.sID
  )
)
<br><a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a><br>
<br>Find the students who have taken all courses instructed by Goliath (instructor’s name and assuming that there is no other instructor who is called Goliath). Display your answer by sID and sname.
<br>Divisor: course that taught by Goliath<br>
Dividend: enroll<br>SELECT s1.sID,s1.sname
FROM student AS s1
WHERE NOT EXISTS(
  (SELECT cID FROM course  WHERE cname='Goliath') 
  EXCEPT
  (SELECT cID FROM enroll AS e1
  WHERE e1.sID=s1.sID)
)
<br>SELECT s1.sID,s1.sname
FROM student AS s1 
WHERE NOT EXISTS(
    (SELECT cID 
    FROM course 
    JOIN teach USING(cID) 
    JOIN instructor USING(iID) 
    WHERE iname='Goliath'
    AND cID NOT IN 
        (SELECT cID FROM enroll AS e1
        WHERE e1.sID=s1.sID)
    )
  );
<br>
<br>
<br>不需要将student，enroll，course合起来<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/09-division-and-correlated-subquery.html</link><guid isPermaLink="false">Database Management System/MySQL/09-Division-and-Correlated-Subquery.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:38:01 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Mysql/Division.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Mysql/Division.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Set-Operation-&amp;-Where-Subquery]]></title><description><![CDATA[ 
 <br><br>
<br>Set Operations

<br>Union
<br>Intersection
<br>Set difference


<br>Subquery

<br>IN subquery
<br>NOT IN subquery


<br><br>Tables are treated as sets in relational databases.<br>Let A and B be two sets.<br>The union of  and  is the set .<br>
The intersection of  and  is the set .<br>
The set difference of  and  is the set =.<br>For example, <br>
<br>
<br>
.<br><br>The two tables of the union must be compatible: corresponding columns must be of the same type.<br>TableA UNION TableB;
<br>
<br>MySQL is very robust. It allows union between different types.
<br>For example,<br>(SELECT actor_id FROM actor) UNION (SELECT first_name FROM actor)
However, this is NOT the reason for a union without type checking.
<br><br>TableA INTERSECT TableB;
<br>(SELECT columns FROM tables1 WHERE P1) 
INTERSECT 
(SELECT columns FROM tables2 WHERE P2)
<br>The corresponding IN subquery is <br>SELECT columns FROM tables1 
WHERE P1 AND columns IN (
    SELECT columns FROM tables2 WHERE P2
    )
<br>
<br>Find the id of the English films which are played by Tim Hackman.
<br>(SELECT film_id
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name='Tim' AND last_name='Hackman')
INTERSECT
(SELECT film_id 
FROM film JOIN language USING(language_id) 
WHERE name='English')
<br>
<br>can implemented by IN
<br>SELECT film_id
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name='Tim' 
  AND last_name='Hackman'
  AND film_id IN(
    SELECT film_id 
    FROM film JOIN language USING(language_id) 
    WHERE name='English')
<br>
<br>It can also be implemented by using SOME.<br>
If an element is in a set, then the element is equal to some element in the set.
<br>    SELECT film_id
    FROM film JOIN language USING(language_id)
    WHERE name = 'English' AND
      film_id = SOME(
        SELECT film_id
        FROM film_actor JOIN actor USING(actor_id)
        WHERE first_name='Tim' AND last_name='Hackman'
      )
<br><br>For set difference use the keyword EXCEPT.<br>TableA except TableB
<br>(SELECT columns FROM tables1 WHERE P1)
EXCEPT 
(SELECT columns FROM tables2 WHERE P2)
<br>Alternatively we can use the NOT IN subquery.<br>SELECT columns FROM tables1 
WHERE P1 AND columns NOT IN (
SELECT columns FROM tables2 WHERE P2
)
<br>
<br>Find the id of the films which are played by Tim Hackman but not in English.
<br>(SELECT film_id 
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name="Tim" AND last_name="Hackman")
EXCEPT
(SELECT film_id
FROM film JOIN language USING(language_id)
WHERE name="English")
<br>
<br>can implemented by NOT IN
<br>SELECT film_id 
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name="Tim" 
AND last_name="Hackman"
AND film_id NOT IN (
  SELECT film_id
  FROM film JOIN language USING(language_id)
  WHERE name="English")
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/08-set-operation-&amp;-where-subquery.html</link><guid isPermaLink="false">Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:55 GMT</pubDate></item><item><title><![CDATA[Data-Modification]]></title><description><![CDATA[ 
 <br><br>
<br>INSERT
<br>INSERT INTO table_name (column1, column2, column3, ...)
VALUES
    (value1_1, value1_2, value1_3, ...),
    (value2_1, value2_2, value2_3, ...),
    ...
<br>INSERT INTO destination_table (column1, column2, ...)
SELECT column1, column2, ...
FROM source_table
WHERE conditions;
<br>
<br>UPDATE
<br>UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
<br>
<br>DELETE
<br>DELETE FROM table_name
WHERE condition;
<br>Usually, database users are only allowed to change data (table rows), which is covered by this lab.<br>
Table columns are related to the logical design and are managed by database managers.<br>
To change the logical design, you need ALTER TABLE (last lab).<br><br>
<br>To insert a record for a program:
<br>Program code: 1001<br>
Program name: Computer Science<br>
Division: Science and Technology<br>
Director: NULL (unknown)<br>INSERT INTO program (p_code, p_name, division, director_id) VALUES (1001, 'Computer Science', 'Science and Technology', NULL);
<br>The schema of the table is to remind users the data types, which can be omitted.<br>
Currently, the instructor table is empty. So, the program director is unknown.<br>
<br>Insert Example
<br>Course:
Name: Introduction to Biology,   Credits: 3, 
Domain: ENVS,      Course Number: 2001

Instructor:
ID: 20002,   Name: S.H. Zee,  Title: Professor, 
Salary: 100000,  Program: Environmental Science

Program:
ID: 1002,      Name: Environmental Science,  
Division: Science and Technology,  Program director: Unknown
<br>the instructor cannot be inserted before the program<br>INSERT INTO course VALUES 
('Introduction to Biology', 3, 'ENVS', 2001);

INSERT INTO program VALUES 
(1002, 'Environmental Science', 'Science and Technology', NULL);

INSERT INTO program VALUES
(20002, 'S.H. Zee', 'Professor', 100000, 1002);
<br>
<br>Sometimes we can insert data constructed from other tables.<br>
Suppose we want to express that the program Environmental Science offers the course Introduction to Biology.
<br>INSERT INTO offer 
        SELECT p_code,c_name 
        FROM program,course 
        WHERE p_name='Environmental Science' 
          AND c_name = 'Introduction to Biology '
<br>
<br>SELECT…FROM…WHERE… constructs the tuples which are inserted to “offer”.
<br><br>
<br>Suppose Prof. S.T. Kwok becomes the new program director for Computer Science. We need to update the table.
<br>UPDATE program 
SET director_id = (SELECT id FROM instructor WHERE i_name='S.T. Kwok') 
WHERE p_name = 'Computer Science'
<br>UPDATE: the keyword to update a table, followed by the table name.<br>
SET: the keyword to update a specific column, followed by an assignment operation.<br>
(…): a subquery to find the person id of S.T. Kwok.<br>
WHERE: only update the rows which satisfy the condition in the WHERE clause.<br><br>
<br>Suppose Prof. S.T. Kwok has retired. All his information should be removed from the system.
<br>DELETE FROM instructor WHERE i_name='S.T. Kwok'
<br>
<br>Every row which satisfies the condition will be removed. Thus, be careful.
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/06-data-modification.html</link><guid isPermaLink="false">Database Management System/MySQL/06-Data-Modification.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:45 GMT</pubDate></item><item><title><![CDATA[Null-Subquery]]></title><description><![CDATA[ 
 <br><br><br>
<br>The domain of each data type contains a special value – NULL.

<br>NULL means the value is unknown or does not exist.
<br>NULL values can participate calculations in the arithmetic expressions
<br>aggregation functions, comparisons, and predicates (logical test) in the WHERE clause.


<br><br>
<br>To check whether a value of an attribute is NULL (atomic predicate)
<br>WHERE attribute IS NULL
<br>
<br>Any arithmetic expression which has NULL values is evaluated as NULL.<br>
For example, this query is same as the above.<br>
SELECT * FROM staff WHERE (picture+1) IS NULL
<br><br>Different aggregation functions treat NULL values differently.<br>
<br>
If NULL values and non-NULL values are mixed,

<br>all aggregation functions ignore NULL values.


<br>
If the group only consists of NULL values,

<br>count returns 0;
<br>other aggregation functions return NULL.


<br>
如果NULL与非NULL的属性混合 那么所有aggregation function会忽略 NULL

<br>
如果只有NULL，那么count() return 0,其他aggragation function return NULL

<br><br>
<br>The logic with NULL values has three constants:

<br>TRUE, FALSE, and UNKNOWN 三值判断体系


<br>A comparison with NULL values is evaluated as UNKNOWN.<br>
To check whether a logical constant is UNKNOWN, use IS UNKNOWN.<br>
For example, try the query and check the outcome.
<br>SELECT staff_id FROM staff WHERE (staff_rating&gt;5) IS UNKNOWN<br>
<br>
如果某个 attribute = NULL 那么他的逻辑判断结果 为 UNKNOWN

<br>
OR:

<br>(unknown OR true) = true
<br>(unknown OR false) = unknown
<br>(unknown OR unknown) = unknown


<br>
AND:

<br>(true AND unknown) = unknown
<br>(false AND unknown) = false
<br>(unknown AND unknown) = unknown


<br>
NOT:

<br>(NOT unknown) = unknown


<br><br>
<br>A subquery is a query (SELECT…FROM…WHERE) inside another query.
<br>Subqueries can be in all of SELECT, FROM, and WHERE clauses.<br>In the FROM clause, users need to indicate some tables.<br>
A “SELECT…FROM…WHERE…” query returns a temporary table. (The type is matched.)]]></description><link>https://www.allenygy.vip/database-management-system/mysql/07-null-subquery.html</link><guid isPermaLink="false">Database Management System/MySQL/07-Null-Subquery.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:51 GMT</pubDate></item><item><title><![CDATA[Aggregation]]></title><description><![CDATA[ 
 <br><br>SELECT column_name(s), COUNT(*)
FROM table_name
GROUP BY column_name(s)
HAVING condition;
<br>
<br>“Aggregation” means performing some operations on a group of objects.
<br>COUNT: count the value<br>
MAX: find the maximum value<br>
MIN: find the minimum value<br>
AVG: calculate the average value<br>
SUM: sum up the values<br><br>
<br>Suppose that we want to count the number of different languages.
<br>SELECT COUNT(*) FROM language
<br>
<br>In this example, all tuples in the table “language” is considered as a group. The query counts the number of distinct objects in the group.<br>
After applying an aggregation function, the result of COUNT(*) is treated as an attribute.
<br><br>
<br>For example, find the number of films for each language. The resulting table has two columns, one for languages, one for the number of films.
<br>Only those films of the same language are in the same group (different language different group).<br>
Then, count the number within each group.<br>
<br>To achieve the grouping, we use GROUP BY.
<br>SELECT language_id, count(film_id) 
FROM film JOIN language USING(language_id) 
GROUP BY (language_id) 
<br>
<br>To indicate the result of aggregation of each group, group by attributes are usually selected.
<br><br>
<br>
Sometimes we need condition checking before and after aggregation functions

<br>
For example, show the actors’ names and the number of Sci-Fi movies played by him/her if the number of Sci-Fi movies is more than 3

<br>SELECT actor_id,first_name,last_name,COUNT(film_id)
FROM actor JOIN film_actor USING (actor_id) 
    JOIN film USING(film_id) 
    JOIN film_category USING(film_id)
    JOIN category USING(category_id)
WHERE category.name='sci-fi'
GROUP BY actor_id
HAVING COUNT(film_id)&gt;3;
<br>
<br>The query is executed in this sequence.
<br>
<br>Combine the tables in FROM clause
<br>Check the condition in WHERE clause
<br>Group tuples
<br>Aggregation function
<br>Check the condition in HAVING clause
<br>Output the selected attributes
<br><br>Assuming that every country has a city. Why the following query cannot find the number of countries?<br>SELECT COUNT(country_id)
FROM city
<br>We only assume that every country has a city. But, a country may have multiple cites.<br>
Those countries will be over counted.<br>
We can use DISTINCT to remove duplications.<br>SELECT COUNT(DISTINCT country_id)
FROM city
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/04-aggregation.html</link><guid isPermaLink="false">Database Management System/MySQL/04-Aggregation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:37 GMT</pubDate></item><item><title><![CDATA[Data-Definition]]></title><description><![CDATA[ 
 <br><br>
<br>Data definition language defines
<br>Databases
<br>Tables
<br>Attributes and their types
<br>Constraints
<br>CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    department VARCHAR(100),
    salary DECIMAL(10, 2) NOT NULL
);
<br>CREATE TABLE table_name (
    column1 datatype constraints,
    column2 datatype constraints,
    ...
    PRIMARY KEY (column_name(s)),
    FOREIGN KEY (column_name) REFERENCES other_table_name(column_name)
);
<br>ALTER TABLE borrow ADD FOREIGN KEY (ISBN) REFERENCES books(ISBN)
<br><br>
<br>create database
<br>CREATE DATABASE uic_example
<br>
<br>create table
<br>CREATE TABLE table_name (
  attribute1 type1,
  attribute2 type2,
  …
  constraint1, 
  constraint2,
  …
)
<br>“table_name” is the name of the table.<br>
“attribute” is the name of the attribute.<br>
“type” is the data type for the attribute.<br>
“constraint” is a condition on the table. If users try to insert some data violating the condition, the system will give a warning.<br><br><br>VARCHAR 不定长<br>
CHAR 定长<br><br>
<br>PRIMARY KEY (attribute)<br>
One or multiple attribute(s)<br>
Uniquely identify the tuples<br>
Unique for each table<br>
Cannot be a NULL value by default
<br>NOT NULL<br>
The value of the attribute cannot be unknown.<br>
The condition is checked when rows are inserted into the table.
<br><br>FOREIGN KEY (attribute(s)1) REFERENCES table2(attribute(s)2)
<br>
<br>
“attribute(s)1” in the current table and “attribute(s)2” in “table2” represent the same piece of information.

<br>
“attribute(s)2” is the primary key for “table2”.

<br>
A value of “attribute(s)1” in the current table cannot exist alone.

<br>
To add foreign keys to an existing table, we need to change the schema.

<br>ALTER TABLE borrow ADD FOREIGN KEY (ISBN) REFERENCES books(ISBN)
<br>ALTER TABLE: the keyword to change the schema of a table.<br>
borrow: the table name.<br>
ADD: to add new attributes or constraints (“DROP” to remove attributes or constraints).<br>
FOREIGN KEY: the constraint.<br>
(ISBN): the foreign key.<br>
REFERENCES: the keyword to indicate which attribute is the target.<br>
books(ISBN): the attribute “ISBN” in the table “books” is referenced.]]></description><link>https://www.allenygy.vip/database-management-system/mysql/05-data-definition.html</link><guid isPermaLink="false">Database Management System/MySQL/05-Data-Definition.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:41 GMT</pubDate></item><item><title><![CDATA[Join]]></title><description><![CDATA[ 
 <br><br>
<br>NATURAL JOIN
<br>SELECT *
FROM table1
NATURAL JOIN table2;
<br>默认JOIN所有共同的attribute<br>
<br>JOIN ON
<br>SELECT *
FROM table1
JOIN table2 ON table1.column_name = table2.column_name
JOIN table3 ON table2.column_name = table3.column_name;
<br>
<br>JOIN USING
<br>SELECT *
FROM table1
JOIN table2 USING (column_name)
JOIN table3 USING (column_name);
<br>
<br>LEFT/RIGHT/FULL JOIN
<br>SELECT *
FROM left_table
LEFT JOIN right_table ON left_table.column_name = right_table.column_name;

SELECT *
FROM table1
RIGHT JOIN table2 ON table1.column_name = table2.column_name;

SELECT *
FROM table1
FULL JOIN table2 ON table1.column_name = table2.column_name;
<br>
<br>Are you tired of condition checking in cross table queries?
<br>The NATURAL JOIN operator associates two tables by the common attributes.<br>
After NATURAL JOIN, the duplicated attributes are omitted.<br>SELECT * FROM city NATURAL JOIN country
<br>is implemented as<br>SELECT city.country_id, city.last_update, city_id, city, country
FROM city, country
WHERE city.country_id = country.country_id AND
    city.last_update = country.last_update
<br><br>
<br>Join conditions define in which condition the tuples are associated.
<br>Two tuples are associated if

<br>NATURAL: all common attributes have the same value.
<br>ON &lt;predicate&gt;: the predicate is evaluated to be true.
<br>USING : the common attributes in list have the same value.


<br>For example, these queries are equivalent.<br>SELECT first_name, last_name, address, district, postal_code 
FROM customer NATURAL JOIN address

SELECT first_name, last_name, address, district, postal_code
FROM customer JOIN address ON customer.address_id = address.address_id AND customer.last_update = address.last_update

SELECT first_name, last_name, address, district, postal_code
FROM customer JOIN address USING (address_id, last_update)
<br><br>
<br>A JOIN without any condition is same as a cartesian product.<br>
Sometimes more than two tables are joined together.
<br><br>
<br>The NATURAL JOIN operator associates two tables by all the common attributes.<br>
基于两个表之间的相同列名来进行连接。当使用自然连接时，数据库系统会自动查找两个表中列名相同的字段，并将它们用作连接条件，返回一个新表，其中包含了这些字段的所有数据。
<br>SELECT * FROM city NATURAL JOIN country
is equivalent to
SELECT city.country_id, city.last_update, city_id, city,country
FROM city, country
WHERE city.country_id = country.country_id AND
city.last_update = country.last_update
<br>  SELECT *FROM table1 NATURAL JOIN table2 NATURAL JOIN table3  
<br>The query is understood as<br>  SELECT* FROM (table1 NATURAL JOIN table2) NATURAL JOIN table3
<br>只保留相同的部分<br>Notes:<br>
<br>The predicate in the ON clause is user-defined, which is very flexible.
<br>NATURAL and USING combine the common attributes. But ON duplicates common attributes.
<br><br>当需要无法匹配的部分时<br>
<br>Sometimes users want to keep the unmatched tuples after joining two tables.
<br>OUTER JOIN can handle it.<br>
<br>
table1 NATURAL LEFT OUTER JOIN table2<br>
All tuples in table1 are in the result. For the unmatched tuples, the values of the attributes from table2 are NULL, meaning “unknown”. (NULL values will be introduced in following labs.)

<br>
table1 NATURAL RIGHT OUTER JOIN table2<br>
The unmatched tuples from table2 are kept.

<br>
table1 NATURAL FULL OUTER JOIN table2<br>
All tuples (from both table1 and table2) are kept.

<br>
NATURAL is the join condition.

<br>On the opposite of OUTER, INNER JOIN does not keep the unmatched tuples.<br>
Same as JOIN. “INNER” is usually omitted.<br>Suppose we try to join this 2 tables<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/OUTERJOIN-1.png" referrerpolicy="no-referrer"><br>
<br>LEFT OUTER JOIN
<br>SELECT *  FROM person NATURAL LEFT OUTER JOIN address
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/LEFTJOIN.png" referrerpolicy="no-referrer"><br>
<br>RIGHT OUTER JOIN
<br>SELECT *  FROM person NATURAL RIGHT OUTER JOIN address
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/RIGHTJOIN.png" referrerpolicy="no-referrer"><br>
<br>FULL OUTER JOIN
<br>SELECT * FROM person NATURAL FULL OUTER JOIN address
<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/FULLOUTERJOIN.png" referrerpolicy="no-referrer"><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/JOIN.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/database-management-system/mysql/03-join.html</link><guid isPermaLink="false">Database Management System/MySQL/03-Join.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:34 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/OUTERJOIN-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/OUTERJOIN-1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Cross-table-Query]]></title><description><![CDATA[ 
 <br><br>
<br>Sometimes a single table does not contain all desired attributes.
<br><br>The crossing of tables is the cartesian product of them.<br>
Equivalent to querying from a (temporary) table A×B, the cartesian product of A and B.<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/Crosstable.png" referrerpolicy="no-referrer"><br>
temp=city x country
SELECT city FROM temp WHERE city.country_id=country.country_id AND country='China'
<br><br>
<br>对于一部分相同但是仍有部份不同需要找出时
<br>SELECT a1.city_id
FROM address AS a1, address AS a2
WHERE a1.city_id = a2.city_id AND
 a1.address_id &lt;&gt; a2.address_id
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/02-cross-table-query.html</link><guid isPermaLink="false">Database Management System/MySQL/02-Cross-table-Query.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:30 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/Crosstable.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MySQL/Crosstable.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Basic-MySQL]]></title><description><![CDATA[ 
 <br><br>The basic query has three clauses: SELECT, FROM, and WHERE.<br>
<br>
SELECT: contains one or multiple attributes.<br>
These attributes are displayed in the result.<br>
The symbol “*” means all attributes.

<br>
The FROM clause contains one or more tables.

<br>
The WHERE clause contains a single predicate.<br>
It is a logical test on every row of the table which returns true or false.<br>
If multiple queries are executed at the same time, a semicolon “;” is used as a delimiter to split two queries.

<br>
A query is executed as follows.<br>
The system test the predicate on every tuple from the table in the FROM clause.<br>
If a tuple satisfies the predicate, show the values of the attributes in the SELECT clause in the result.

<br><br>
<br>The predicate in the WEHERE clause is regarded as a logic test.<br>
The return value of a predicate is a Boolean, either 1 (True) or 0 (False).
<br>Formally, suppose op is a relation operator, which can be =, &gt;, &gt;=, &lt;, &lt;=, and &lt;&gt; (not equal);<br>
a predicate can be a single term
<br>  pred = term
  term = exp op exp
<br>“exp” is an arithmetic expression which contains attributes and constants.<br>For example<br>rental_rate &lt; 1
<br>
<br>A predicate can also be a composition of terms.
<br>  pred = NOT pred
  pred = pred AND pred
  pred = pred OR pred
<br>NOT, AND, OR are logical operators.<br>
For example,<br>NOT rental_rate &lt; 1
(NOT rental_rate &lt; 1) AND release_year = 2006
<br>SELECT * FROM film WHERE rating="PG-13"
<br>SQL is case insensitive.<br>
However, to make query readable, we write<br>
key words (like SELECT, FROM, etc.) in capital;<br>
attributes and tables in lower cases; and string constant in the original form.<br>In general, a basic query is in the form<br>SELECT a1,⋯,an FROM r WHERE P
<br>where  are attributes; r is a table; and P is a predicate.]]></description><link>https://www.allenygy.vip/database-management-system/mysql/01-basic-mysql.html</link><guid isPermaLink="false">Database Management System/MySQL/01-Basic-MySQL.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:37:25 GMT</pubDate></item><item><title><![CDATA[<a data-href="Set-Operation-&amp;-Where-Subquery" href="Set-Operation-&amp;-Where-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Set-Operation-&amp;-Where-Subquery</a><a data-href="Set-Operation-&amp;-Where-Subquery" href="database-management-system/mysql/set-operation-&amp;-where-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Set-Operation-&amp;-Where-Subquery</a>]]></title><description><![CDATA[ 
 <br><br>
<br>Set Operations

<br>Union
<br>Intersection
<br>Set difference


<br>Subquery

<br>IN subquery
<br>NOT IN subquery


<br><br>Tables are treated as sets in relational databases.<br>Let A and B be two sets.<br>The union of  and  is the set .<br>
The intersection of  and  is the set .<br>
The set difference of  and  is the set =.<br>For example, <br>
<br>
<br>
.<br><br>The two tables of the union must be compatible: corresponding columns must be of the same type.<br>TableA UNION TableB;
<br>
<br>MySQL is very robust. It allows union between different types.
<br>For example,<br>(SELECT actor_id FROM actor) UNION (SELECT first_name FROM actor)
However, this is NOT the reason for a union without type checking.
<br><br>TableA INTERSECT TableB;
<br>(SELECT columns FROM tables1 WHERE P1) 
INTERSECT 
(SELECT columns FROM tables2 WHERE P2)
<br>The corresponding IN subquery is <br>SELECT columns FROM tables1 
WHERE P1 AND columns IN (
    SELECT columns FROM tables2 WHERE P2
    )
<br>
<br>Find the id of the English films which are played by Tim Hackman.
<br>(SELECT film_id
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name='Tim' AND last_name='Hackman')
INTERSECT
(SELECT film_id 
FROM film JOIN language USING(language_id) 
WHERE name='English')
<br>
<br>can implemented by IN
<br>SELECT film_id
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name='Tim' 
  AND last_name='Hackman'
  AND film_id IN(
    SELECT film_id 
    FROM film JOIN language USING(language_id) 
    WHERE name='English')
<br>
<br>It can also be implemented by using SOME.<br>
If an element is in a set, then the element is equal to some element in the set.
<br>    SELECT film_id
    FROM film JOIN language USING(language_id)
    WHERE name = 'English' AND
      film_id = SOME(
        SELECT film_id
        FROM film_actor JOIN actor USING(actor_id)
        WHERE first_name='Tim' AND last_name='Hackman'
      )
<br><br>For set difference use the keyword EXCEPT.<br>TableA except TableB
<br>(SELECT columns FROM tables1 WHERE P1)
EXCEPT 
(SELECT columns FROM tables2 WHERE P2)
<br>Alternatively we can use the NOT IN subquery.<br>SELECT columns FROM tables1 
WHERE P1 AND columns NOT IN (
SELECT columns FROM tables2 WHERE P2
)
<br>
<br>Find the id of the films which are played by Tim Hackman but not in English.
<br>(SELECT film_id 
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name="Tim" AND last_name="Hackman")
EXCEPT
(SELECT film_id
FROM film JOIN language USING(language_id)
WHERE name="English")
<br>
<br>can implemented by NOT IN
<br>SELECT film_id 
FROM film_actor JOIN actor USING(actor_id) 
WHERE first_name="Tim" 
AND last_name="Hackman"
AND film_id NOT IN (
  SELECT film_id
  FROM film JOIN language USING(language_id)
  WHERE name="English")
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/set-operation-&amp;-where-subquery.html</link><guid isPermaLink="false">Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:37:05 GMT</pubDate></item><item><title><![CDATA[<a data-href="Division-and-Correlated-Subquery" href="Division-and-Correlated-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Division-and-Correlated-Subquery</a><a data-href="Division-and-Correlated-Subquery" href="database-management-system/mysql/division-and-correlated-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Division-and-Correlated-Subquery</a>]]></title><description><![CDATA[ 
 <br><br><br>Division operator is used for queries involving “all”.<br><br>Query: “Retrieve (all) course names that is/are taught by all programes.”<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Mysql/Division.png" referrerpolicy="no-referrer"><br>The solution to the query is<br><br>Database is taught by all programmes, i.e. both CST and DS.<br><br><br><br>SELECT 𝐶1.𝑐_𝑛𝑎𝑚𝑒
FROM 𝑐𝑎𝑡𝑎𝑙𝑜𝑔𝑢𝑒 AS 𝐶1
WHERE NOT EXISTS (  // 遍历C1
  (SELECT 𝑝_𝑛𝑎𝑚𝑒  //Divisor
  FROM 𝑝𝑟𝑜𝑔𝑟𝑎𝑚𝑚𝑒)
    EXCEPT
  (SELECT 𝑝_𝑛𝑎𝑚𝑒 //Dividend
  FROM 𝑐𝑎𝑡𝑎𝑙𝑢𝑔𝑢𝑒 AS 𝐶2
  WHERE 𝐶2.𝑐_𝑛𝑎𝑚𝑒=𝐶1.𝑐_𝑛𝑎𝑚𝑒)// 得到C1.c_name对应的p_name集合
)
<br>NOT EXISTS: 检查集合是不是NULL<br>
<br>If true return true; else return false;
<br>第一个SELECT选择的是除数<br>
第二个SELECT选择的是被除数<br>
EXCEPT 去除集合的公共元素<br>SELECT 𝐶1.𝑐_𝑛𝑎𝑚𝑒
FROM 𝑐𝑎𝑡𝑎𝑙𝑜𝑔𝑢𝑒 AS 𝐶1
WHERE NOT EXISTS (
  SELECT *
  FROM 𝑝𝑟𝑜𝑔𝑟𝑎𝑚𝑚𝑒
  WHERE 𝑝_𝑛𝑎𝑚𝑒 NOT IN(
    SELECT 𝐶2.𝑝_𝑛𝑎𝑚𝑒
    FROM 𝑐𝑎𝑡𝑎𝑙𝑜𝑔𝑢𝑒 AS 𝐶2
    WHERE 𝐶2.𝑝_𝑛𝑎𝑚𝑒=𝐶1.𝑝_𝑛𝑎𝑚𝑒
  )
)
<br><br>
<br>
<br>
<br>
<br><br>
// sID is a foreign key to student.sID. cID is a foreign key to course.cID.
<br><br>
// iID is a foreign key to instructor.iID. cID is a foreign key to course.cID.
<br>
<br>Find the students who have enrolled all courses. Display your answer by sID and sname.
<br>SELECT s1.sID,s1.sname
FROM student AS s1
WHERE NOT EXISTS(
  (SELECT cID FROM course)
  EXCEPT
  (SELECT cID 
  FROM enroll AS e1
  WHERE s1.sID=e1.sID
  )
)
<br>SELECT s1.sID,s1.sname
FROM student AS s1
WHERE NOT EXISTS(
  SELECT cID FROM course
  WHERE cID NOT IN(
    SELECT cID 
    FROM enroll AS e1
    WHERE s1.sID=e1.sID
  )
)
<br><a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a><br>
<br>Find the students who have taken all courses instructed by Goliath (instructor’s name and assuming that there is no other instructor who is called Goliath). Display your answer by sID and sname.
<br>Divisor: course that taught by Goliath<br>
Dividend: enroll<br>SELECT s1.sID,s1.sname
FROM student AS s1
WHERE NOT EXISTS(
  (SELECT cID FROM course  WHERE cname='Goliath') 
  EXCEPT
  (SELECT cID FROM enroll AS e1
  WHERE e1.sID=s1.sID)
)
<br>SELECT s1.sID,s1.sname
FROM student AS s1 
WHERE NOT EXISTS(
    (SELECT cID 
    FROM course 
    JOIN teach USING(cID) 
    JOIN instructor USING(iID) 
    WHERE iname='Goliath'
    AND cID NOT IN 
        (SELECT cID FROM enroll AS e1
        WHERE e1.sID=s1.sID)
    )
  );
<br>
<br>
<br>不需要将student，enroll，course合起来<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/database-management-system/mysql/division-and-correlated-subquery.html</link><guid isPermaLink="false">Database Management System/MySQL/Division-and-Correlated-Subquery.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:37:01 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Mysql/Division.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Mysql/Division.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Cassandra]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DataBase" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DataBase</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DataBase" class="tag" target="_blank" rel="noopener nofollow">#DataBase</a> <a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <br><br><br><br>
<br>安装 Cassandra (此处采用 homebrew 包管理器进行安装)
<br>brew install cassandra
<br><br>
<br>MacOS 后台启动 Cassandra
<br>brew services start cassandra
<br>
<br>命令行启动 Cassandra
<br>cqlsh
<br><br>
<br>命令行关闭 Cassandra
<br>exit	
<br>
<br>MacOS 后台关闭 Cassandra
<br>brew services stop cassandra
<br><br>Cassandra 是：<br>
<br>一种开源、可线性扩展、分布式和容错的 NoSQL 数据库。设计用于处理海量数据。
<br><br>主要特点：	<br>
<br>大规模可扩展架构
<br>无主架构
<br>线性扩展性能 
<br>无单点故障 
<br>故障节点可轻松恢复
<br>具有灵活、动态的数据模型，可调整的数据一致性，多数据中心复制 
<br>数据压缩效率高
<br><br>
<br>传统关系型数据库面向行设计，内部组织结构围绕行的处理，适合 OLTP场景
<br>Cassandra 列族数据库面向列设计，主要处理列，适合 OLAP 场景
<br><br>复制策略是指 Cassandra 如何在集群中复制数据，放置数据副本<br><br>Cassandra 提供两种复制策略，包括SimpleStrategy 和 NetworkTopologyStrategy<br>
<br>SimpleStrategy 用于只有一个数据中心的情况。SimpleStrategy 会在分区器选择的节点上放置第一个副本。之后，其余副本按顺时针方向放置在节点环中
<br>NetworkTopologyStrategy 用于有多个数据中心的情况。在网络拓扑策略中，会为每个数据中心分别设置副本。网络拓扑策略在环中按顺时针方向放置副本，直到到达另一个机架中的第一个节点
<br><br>
<br>Cassandra 使用标记删除的方式，而不是立即删除数据。标记删除的数据会在后续的清理过程中删除。<br>
注意的地方：
<br>如果标记删除的数据过多，会影响查询性能，因为查询时需要扫描和过滤这些标记删除的数据。
<br>需要注意Cassandra表的TTL（生存时间）设置，如果TTL设置不当，可能导致大量的tombstone积累。
<br><br>Cassandra Query Language（CQL）是 Cassandra 数据库的查询语言。<br><br>Apache Cassandra 的设计目标主要围绕着可扩展性、高可用性和无单点故障展开。<br><br>Cassandra 的主要成分包括：	<br>
<br>节点
<br>数据中心
<br>集群
<br>分区器
<br><br>社交媒体的评论管理<br>
Cassandra 面向列设计，适合处理大量数据，适合社交媒体评论管理场景，可以快速写入和读取评论数据，支持高并发读写操作。	]]></description><link>https://www.allenygy.vip/database-management-system/nosql/cassandra.html</link><guid isPermaLink="false">Database Management System/NoSQL/Cassandra.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Redis]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:Redis" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Redis</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NOTE" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NOTE</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:DBMS" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DBMS</a> 
 <br><a href="https://www.allenygy.vip?query=tag:Redis" class="tag" target="_blank" rel="noopener nofollow">#Redis</a> <a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <a href="https://www.allenygy.vip?query=tag:NOTE" class="tag" target="_blank" rel="noopener nofollow">#NOTE</a> <a href="https://www.allenygy.vip?query=tag:DBMS" class="tag" target="_blank" rel="noopener nofollow">#DBMS</a><br><br><br>哈希 的实质是一个算法。 <br>
<br>任意长度的信息（可以是字符串、数据或者任何文件）经过哈希运算后，输出一个固定长度的值，这个值就是哈希值。
<br>哈希运算是一种压缩映射，在哈希计算器中无论输入什么样的数据，最后得到的结果都是一个固定长度的数字/字母混合的随机数列
<br><br>
<br>MD5
<br>SHA-1
<br>SHA-256
<br><br>Hash application

<br>Digest（摘要），Checksum（校验值），Fingerprint（指纹）
<br>文件校验 
<br>文件传输校验：MD5 
<br>保存二进制文件系统数字指纹：MD5 
<br>数字签名
<br>鉴权协议
<br>网站注册
<br>区块链和加密货币：SHA-256和RIPEMD160

<br><br>What is Key - Value store?
键值存储是一个简单的哈希表<br>
所有对数据库的访问都是通过主键<br>
通过键值存储可以

<br>获取键值
<br>输入键值
<br>从数据存储中删除一个键值	

<br><br>Key-Value store feature

<br>哈希函使键值数据访问可实现高性能和高可用性
<br>键和值都可以是复杂的复合对象，有时也可以是列表、地图或其他数据结构。
<br>一致性只适用于对单个键的操作（最终一致性）
<br>将所有数据存储在单个数据桶中

<br><br>优点<br>
<br>高效查询（性能非常可预测）。
<br>易于在集群中分配。
<br>面向服务不允许使用外键约束，无论如何都要在代码中完成连接。
<br>使用关系数据库 + 高速缓存，无论如何都要使用键值存储
<br>无对象-关系错配缺点
<br>缺点<br>
<br>没有复杂的查询过滤器
<br>所有连接必须在代码中完成
<br>无外键约束
<br>无触发器
<br><br>REmote DIctionary Server（Redis）是一个开源的内存 NoSQL 数据库项目，它实现了一个分布式、内存键值存储，并具有可选的耐用性<br>该项目主要由 Salvatore Sanfilippo 开发，目前由 Redis Labs 赞助<br><br>
<br>读写速度极快
<br>持久、可扩展
<br>直接数据访问
<br><br>
<br>存储会话信息
<br>用户配置文件、首选项
<br>购物车数据
<br><br>
<br>数据之间的关系
<br>多操作事务
<br>按数据查询
<br>按集合操作
<br><br><br>
<br>安装 Redis (此处采用 homebrew 包管理器进行安装)
<br>brew install redis	
<br><br>
<br>MacOS 后台启动 Redis
<br>brew services start redis	
<br>
<br>命令行启动 Redis
<br>redis-cli	
<br><br>exit		
<br>brew services stop redis
<br><br><br>
<br>选择数据库
<br>Select &lt;index&gt;
<br>Example
<img alt="选择数据库" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407131512967.png" referrerpolicy="no-referrer">
<br>
<br>查看数据库
<br>Config get databases	
<br>Example
<img alt="查看数据库" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407131514006.png" referrerpolicy="no-referrer">
<br>
<br>删除数据库
<br> 删除单个数据库
FLUSHDB

<br> 删除所有数据库	
FLUSHALL

<br><br>
<br>Set 将值存储到key对应的内存空间中
<br>Set &lt;key&gt; &lt;value&gt;
<br>
<br>Get 读取key对应的数据
<br>Get &lt;key&gt;	
<br>
<br>Del  如果Key存在,  则删除该Key
<br>Del &lt;key&gt;
<br>
<br>Exists 判断key是否存在
<br>Exists &lt;key&gt;
<br>
<br>Expire 在指定时间（以秒为单位）后使密钥失效。
<br>Expire &lt;key&gt; &lt;seconds&gt;
<br>
<br>Move 将当前数据库的key移动到指定的数据库
<br>Move &lt;key&gt; &lt;db&gt;
<br>
<br>Rename 重命名key
<br>Rename &lt;key&gt; &lt;newkey&gt;	
<br>
<br>Type 返回key的数据类型
<br>Type &lt;key&gt;
<br><br>
<br>String 
<br>List
<br>Hash
<br>Set 
<br>ZSet
<br>Stream
<br><br>
<br>得到从 start 到 end 的字符串
<br>getrange &lt;key&gt; &lt;start&gt; &lt;end&gt;
<br>
<br>设置key的值，并返回旧值	
<br>getset  &lt;key&gt; &lt;value&gt;
<br>
<br>得到多个key的值
<br>mget &lt;key1&gt; &lt;key2&gt; &lt;key3&gt;
<br>
<br>设置多个key的值
<br>setrange &lt;key&gt; &lt;offset&gt; &lt;value&gt;
<br>
<br>得到字符串的长度	
<br>strlen &lt;key&gt;
<br>
<br>覆盖从指定位置开始的键字符串部分
<br>setrange &lt;key&gt; &lt;offset&gt; &lt;value&gt;
<br>
<br>Key +1/-1
<br>incr/decr &lt;key&gt;
<br>
<br>Key (+value/-value)
<br>incrby/decrby &lt;key&gt; &lt;value&gt;
<br>
<br>Append value to key
<br>append &lt;key&gt; &lt;value&gt;
<br>
<br>SetBit：用于设置键值字符串中指定位置的值。
<br>setbit &lt;key&gt; &lt;place&gt; &lt;val&gt;
<br>
<br>GetBit：用于获取键值字符串中指定位置的值。
<br>getbit &lt;key&gt; &lt;place&gt; &lt;val&gt;
<br>
<br>BitCount：用于统计键值字符串中二进制位为 1 的数量。
<br>bitcount &lt;key&gt;	
<br><br>
<br>HSET：用于设置哈希字段的值。
<br>hset &lt;key&gt; &lt;field&gt; &lt;value&gt;
<br>
<br>HMSET: 用于设置多个哈希字段的值。
<br>hmset &lt;key&gt; &lt;field1&gt; &lt;value1&gt; &lt;field2&gt; &lt;value2&gt;
<br>
<br>HGET：用于获取哈希字段的值。
<br>hget &lt;key&gt; &lt;field&gt;
<br>
<br>HMGET： 获取所有给定哈希字段的值。
<br>hmget &lt;key&gt; &lt;field1&gt; &lt;field2&gt;
<br>
<br>HGETALL：获取哈希中指定键的所有字段和值。
<br>hgetall &lt;key&gt;
<br>
<br>HDEL：删除哈希中的一个或多个字段。
<br>HDEL  &lt;key&gt; &lt;field1&gt; &lt;field2&gt;
<br>
<br>HEXISTS：查看哈希中是否存在指定字段。
<br>HEXISTS &lt;key&gt; &lt;field&gt;	
<br>
<br>HLEN:  获取哈希中字段的数量。
<br>HLEN &lt;key&gt;	
<br>
<br>HKEYS：获取哈希中的所有字段。
<br>HKEYS &lt;key&gt;		
<br>
<br>HVALS：获取哈希中的所有值。
<br>HVALS &lt;key&gt;	
<br>
<br>HINCRBY：用于增加哈希中指定字段的值。
<br>HINCRBY &lt;key&gt; &lt;field&gt; &lt;value&gt;
<br>
<br>HINCRBYFLOAT：用于按给定值递增哈希字段的浮点值。
<br>HINCRBYFLOAT &lt;key&gt; &lt;field&gt; &lt;value&gt;
<br><br>
<br>LPUSH：将一个或多个值插入到列表的头部。
<br>LPUSH &lt;key&gt; &lt;value1&gt; &lt;value2&gt;
<br>
<br>RPUSH: 将一个或多个值插入到列表的尾部。
<br>RPUSH &lt;key&gt; &lt;value1&gt; &lt;value2&gt;
<br>
<br>LPOP：移除并返回列表的第一个元素。
<br>LPOP &lt;key&gt;
<br>
<br>RPOP：移除并返回列表的最后一个元素。
<br>RPOP &lt;key&gt;
<br>
<br>LRANGE：获取列表指定范围内的元素。
<br>LRANGE &lt;key&gt; &lt;start&gt; &lt;end&gt;
<br>
<br>LINDEX：通过索引获取列表中的元素。
<br>LINDEX &lt;key&gt; &lt;index&gt;
<br>
<br>LLEN：获取列表的长度。
<br>LLEN &lt;key&gt;
<br>
<br>LTRIM：将列表修剪到指定范围(start end )。
<br>LTRIM &lt;key&gt; &lt;start&gt; &lt;end&gt;
<br>
<br>LREM: 从键值存储的列表中删除第一个出现的元素值。该操作受 count 影响：

<br>如果 count &gt;0，则移除与从头部移至尾部的值相同的元素的第一个出现次数。
<br>如果 count &lt;0，则删除从尾部移动到头部的值相等的元素的第一个出现次数。
<br>如果 count = 0，则删除所有等于值的元素。


<br>LREM &lt;key&gt; &lt;count&gt; &lt;value&gt;
<br>
<br>LINSERT：在列表的元素前或后插入元素。
<br>LINSERT &lt;key&gt; &lt;before/after&gt; &lt;pivot&gt; &lt;value&gt;
<br>
<br>LSET：通过索引设置列表元素的值。
<br>LSET &lt;key&gt; &lt;index&gt; &lt;value&gt;
<br>
<br>RPOPLPUSH:：移除列表的最后一个元素，并将该元素添加到另一个列表并返回。
<br>RPOPLPUSH &lt;source&gt; &lt;destination&gt;
<br><br>Redis 集合是无序集合<br>
添加、删除和测试成员是否存在的时间为 O(1)<br>
Redis 集合具有不允许重复成员的理想特性。多次添加相同元素将导致集合中只有该元素的一个副本。<br>
<br>SADD

<br>Set Add 为集合添加一个或多个成员。


<br>SADD &lt;key&gt; &lt;Member1&gt; &lt;Member2&gt;
<br>
<br>SMEMBERS: 显示集合的所有成员。
<br>SMEMBERS &lt;key&gt; 
<br>
<br>SCARD: 返回集合中成员的数量。
<br>SCARD &lt;key&gt;
<br>
<br>SREM: 删除集合中的一个或多个成员

<br>Set Remove


<br>SREM &lt;key&gt; &lt;Member1&gt; &lt;Member2&gt;
<br>
<br>SISMEMBER: 检查给定值是否是集合的成员。如果值是成员，则返回 1，否则返回 0。

<br>Set IsMember


<br>SISMEMBER &lt;key&gt; &lt;Member&gt;
<br>
<br>SPOP: 根据计数从集合中删除并返回一个或多个随机成员。

<br>Set Pop


<br>SPOP &lt;key&gt; &lt;num&gt;
<br>
<br>SRANDMEMBER: 根据计数从集合中获取一个或多个随机成员

<br>Set Random Member


<br>SRANDMEMBER &lt;key&gt; &lt;num&gt;
<br>
<br>SMOVE: 将成员从一个集合移动到另一个集合。

<br>Set Move Move from one set to another set


<br>SMOVE &lt;source&gt; &lt;destination&gt; &lt;member&gt;
<br>
<br>SUNION: 返回多个集合的并集。

<br>Set Union


<br>SUNION &lt;set1&gt; &lt;set2&gt;
<br>
<br>SINTER: 返回多个集合的交集。

<br>Set Intersection 


<br>SINTER &lt;set1&gt; &lt;set2&gt;
<br>
<br>SDIFF: 返回多个集合的差值

<br>Set Difference 


<br>SDIFF &lt;set1&gt; &lt;set2&gt;
<br>
<br>SUNIONSTORE: 将多个集合的交集存储在一个键中

<br>Set Union Store


<br>SUNIONSTORE &lt;newkey&gt; &lt;set1&gt; &lt;set2&gt;
<br>
<br>SINTESTORE: 将多个集合的交集存储在一个键中

<br>Set Intersection Store 


<br>SINTESTORE &lt;newkey&gt; &lt;set1&gt; &lt;set2&gt;
<br>
<br>SDIFFSTORE: 

<br>Set Difference Store


<br>SDIFFSTORE &lt;newkey&gt; &lt;set1&gt; &lt;set2&gt;
<br><br>Redis 排序集是字符串的非重复集合，与 Redis 集类似。<br>
其中，排序集的每个成员都与一个分数相关联，该分数用于将排序集从小到大排序。<br>
虽然分数可以重复，但成员和集合一样是唯一的。<br>对排序集进行添加、删除或更新等操作的速度非常快（执行时间与元素数量的对数成正比）。<br>
由于元素是按顺序提取的，而不是事后排序，因此还可以通过得分或排名（位置）快速获取范围。<br>
总之，使用排序集，可以以极佳的性能完成许多任务，而这些任务在其他类型的数据库中很难实现。<br>
<br>ZADD: 向排序集添加一个或多个成员，或更新其分数（如果存在）。

<br>ZSet Add


<br>ZADD &lt;key&gt; &lt;score1&gt; &lt;member1&gt; &lt;score2&gt; &lt;member2&gt;
<br>
<br>ZRANGE: 按索引返回排序集合中成员的范围。升序

<br>ZSet Range 


<br>ZRANGE key start stop [WITHSCORES]
<br>
<br>ZREVRANGE: 按索引返回排序集合中成员的范围。降序

<br>ZSet Reverse Range 


<br>ZREVRANGE key start stop [WITHSCORES]
<br>
<br>ZSCORE: 获取排序集合中给定成员的相关分数

<br>ZSet Score 


<br>ZSCORE &lt;key&gt; &lt;member&gt;
<br>
<br>ZRANGEBYSCORE: 返回排序集中成员的范围，其分数介于最小值和最大值之间，升序

<br>ZSet  Range by Score


<br>ZRANGEBYSCORE &lt;key&gt; &lt;min&gt; &lt;max&gt; [WITHSCORES] [LIMIT count］
<br>
<br>ZREVRANGEBYSCORE: 返回排序集中成员的范围，其分数介于最小值和最大值之间，降序
<br>ZREVRANGEBYSCORE &lt;key&gt; &lt;max&gt; &lt;min&gt; [WITHSCORES] [LIMIT count］
<br>
<br>ZCARD: 获取排序集合中的成员数。

<br>ZSet Cardinality 


<br>ZCARD &lt;key&gt;
<br>
<br>ZCOUNT: 获取排序集合中分数介于最小值和最大值之间的成员个数。

<br>ZSet Count


<br>ZCOUNT &lt;key&gt; min max
<br>
<br>ZRANK: 返回排序集合中某个成员的索引

<br>ZSet Rank


<br>ZRANK &lt;key&gt; &lt;Member&gt;
<br>
<br>ZREVRANK:返回排序集合中某个成员的索引, 降序

<br>ZSet Reverse Rank


<br>ZREVRANK &lt;key&gt; &lt;Member&gt;
<br>
<br>ZREM: 删除集合中的一个或多个成员

<br>ZSet Remove 


<br>ZREM &lt;key&gt; &lt;Member1&gt; &lt;Member2&gt;
<br>
<br>ZREMRANGEBYSCORE: 删除排序集合中分数介于最小值和最大值之间的成员。

<br>ZSet Remove Range by Score


<br>ZREMRANGEBYSCORE &lt;key&gt; &lt;min&gt; &lt;max&gt;
<br>
<br>ZREMRANGEBYRANK: 删除排序集合中给定索引范围内的所有成员。

<br>ZSet Remove Range by Rank


<br>ZREMRANGEBYRANK &lt;key&gt; &lt;start&gt; &lt;stop&gt;
<br>
<br>ZINCRBY: 增加排序集合中成员的得分。

<br>ZSet Increment by Score


<br>ZINCRBY &lt;key&gt; &lt;score&gt;
<br>
<br>ZINTESTORE: 计算两个或多个排序集的交集，并将其存储到目的地。

<br>ZSet Intersection Store 


<br>ZINTERSTORE &lt;newkey&gt; &lt;set count&gt; &lt;set1&gt; &lt;set2&gt; WEIGHTS [weight1][weight2] [aggregate sum|min|max］
<br>
<br>ZUNIONSTORE: 计算两个或多个排序集的并集，并将其存储到目的地。

<br>ZSet Union Store


<br>ZUNIONSTORE &lt;newkey&gt; &lt;set count&gt; &lt;set1&gt; &lt;set2&gt; WEIGHTS [weight1][weight2] [aggregate sum|min|max］
<br><br>Redis 实现了发布/订阅（Publish/Subscribe）消息传递范式，在这种范式中，发送者（发布者）不需要向特定的接收者（订阅者）发送消息。<br>
<br>
相反，发布的消息被归类到频道中，而不知道有哪些订阅者。

<br>
订阅者对一个或多个频道表示兴趣，只接收感兴趣的信息，而不知道有哪些发布者。

<br>这样可以实现更高的可扩展性和更动态的网络拓扑结构。<br>一旦进入订阅模式，Redis-cli 将不接受任何命令，除非使用 Ctrl+C 退出该模式。<br><br>
<br>SUBSCRIBE: 监听发布到指定频道的信息。
<br>SUBSCRIBE [Chanel1] [Chanel2] [Chanel3]
<br>
<br>PSUBSCRIBE : 订阅与给定模式匹配的频道。
<br>PSUBSCRIBE pattern1 [pattern2]
<br>
<br>例如：订阅所有 带News 的频道。
<br>PSUBSCRIBE *News
<br>
<br>UNSUBSCRIBE： 从指定频道取消订阅客户端，如果没有指定频道，则从所有频道取消订阅。
<br>UNSUBSCRIBE [Chanel1] [Chanel2] [Chanel3］

<br>
<br>PUNSUBSCRIBE：从符合给定模式的频道中取消订阅客户端。
<br>PUNSUBSCRIBE pattern1 [pattern2] (取消订阅模式)
<br>
<br>在 Redis 中，当客户端在命令行下工作时，处于订阅状态的客户端不接受任何命令，因此按下 Ctrl-C 时会自动取消订阅所有通道。
<br><br>向频道发布消息。<br>PUBLISH &lt;channel&gt; &lt;message&gt;
<br><br>Redis 事务允许在一个步骤中执行一组命令。<br>
事务中的所有命令都被序列化并按顺序执行。<br>
在执行 Redis 事务的过程中，绝不会出现其他客户端发出的请求被送达的情况。<br>
这就保证了命令是作为一个单独的操作执行的。<br>要么处理所有命令，要么不处理任何命令，因此 Redis 事务也是原子性的。<br>
EXEC 命令会触发事务中所有命令的执行。<br>
如果客户端在调用 MULTI 命令之前，在事务上下文中失去了与服务器的连接，则不会执行任何操作。相反，如果调用 EXEC 命令，则会执行所有操作。<br>MULTI:  标记一个事务块的开始。<br>MULTI 
SET Name Mark
SET Age 25	
INCRBY Age 5
GET *
<br>EXEC: 执行所有事务块内的命令。<br>EXEC
<br><br>
<br>
Redis.conf 是 Redis 配置文件，可用于配置 Redis 的各个方面。

<br>
Redis 的每个版本都有一个文档详尽的 redis.conf 文件。

<br>
示例文件包含默认配置选项，有助于了解这些设置的作用和默认值。

<br>
config set 命令可用于设置配置文件中的各个值。

<br>config set CONFIG_SETTING_NAME
<br>
<br>config get 命令用于显示某个设置的值。
<br>config get CONFIG_SETTING_NAME
<br>
<br>可以使用以下命令查看 Redis.conf 中的所有可用设置：
<br>config get *
]]></description><link>https://www.allenygy.vip/database-management-system/nosql/redis.html</link><guid isPermaLink="false">Database Management System/NoSQL/Redis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407131512967.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407131512967.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[MongoDB]]></title><description><![CDATA[ 
 <br><br>
<br>文档是主要概念
<br>面向文档的数据库存储和检索文档 XML、JSON、BSON
]]></description><link>https://www.allenygy.vip/database-management-system/nosql/mongodb.html</link><guid isPermaLink="false">Database Management System/NoSQL/MongoDB.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Neo4j]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DataBase" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DataBase</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Neo4j" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Neo4j</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DataBase" class="tag" target="_blank" rel="noopener nofollow">#DataBase</a> <a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <a href="https://www.allenygy.vip?query=tag:Neo4j" class="tag" target="_blank" rel="noopener nofollow">#Neo4j</a> <br><br><br>
<br>节点（事物）和边（关系）的集合，其中边为节点对的连接

<br>适用于任何相关数据


<br>可在节点和关系上附加属性（键值对）与关系
<br>关系连接两个节点，节点和关系都可以保存为任意数量的键值对
<br><br>
<br>Neo4j 是一个高度可扩展的原生图数据库，不仅可以利用数据，还可以利用数据之间的关系。
<br>图形（即网络）是处理数据的最高效、最直观的方式，它模仿了人类头脑中思想的相互联系。Neo4j 从底层开始构建，旨在利用图形的力量来实时洞察底线。
<br>它采用直观的适应性数据建模技术。
<br>使用图形查询语言 Cypher
<br>Neo4j是一个数据库 

<br>用它来可靠地存储信息并在以后查找它
<br>Neo4j的数据模型是图，尤其是属性图


<br><br><br>
<br>安装 Neo4J (此处采用 homebrew 包管理器进行安装)
<br>brew install neo4j
<br><br>
<br>MacOS 后台启动 Neo4j
<br>brew services start neo4j
<br>
<br>命令行启动 Neo4j
<br>cypher-shell
<br>
<br>输入用户名密码
<br><br><br>
<br>退出命令行
<br>:exit
<br>
<br>关闭 MacOS后台服务
<br>brew services stop neo4j
<br><br>Cypher 是一种声明式图形查询语言，可以对图形存储进行高效的查询和更新。<br>
<br>Cypher 借鉴了 SQL 的结构，使用各种子句建立查询。
<br>Cypher是Neo4j的图形查询语言（图的SQL！）
<br>Cypher 是一种声明式查询语言：它描述的是你感兴趣的内容，而不是如何获取这些内容。
<br>Cypher 具有很强的可读性和表现力
<br><br>
<br>Node 节点
<br>Relationship 关系
<br>Property 属性
<br>Label 标签
<br><br>
<br>Cypher 使用一对括号（通常包含一个文本字符串），如 (), (foo) 来表示一个节点
<br>最简单的形式是（），表示一个匿名的、未表征的节点。
<br>引用其他地方的节点，添加一个变量：（matrix）
<br>Movie 标签（前缀为冒号）说明了节点的类型或作用。
<br>属性可用于存储信息和/或限制模式。例如，我们可以 MATCH 和 RETURN 标题为 "The Matrix "的节点。
<br><br>
<br>标签允许我们对节点进行分组
<br>Cypher 使用标签来更好地决定如何优化查询
<br>MATCH (node:Label) RETURN node
<br>MATCH(node1:Label) -[:REL_TYPE]-&gt; (node2:Label) RETURN node1, node2
<br><br>
<br>关系是一个节点指向另一个节点的箭头，就像 -&gt; 或 &lt;- 。但我们可以根据需要在一对方括号中添加有关它们的细节。
<br>MATCH(node1:Label) -[:REL_TYPE]-&gt; (node2:Label) RETURN node1, node2
<br>MATCH(node1:Label) -[REL:TYPE]-&gt; (node2:Label) RETURN rel.property
<br><br><br>CREATE(node: Label {key:value, ...})
<br>CREATE (n:Person {name: 'Allen', age: 20})
<br><br>MATCH (n:Label {key:value})	
SET n.key = value
<br><br>MATCH (n1:Label {key:value}), (n2:Label {key:value})	
CREATE (n1)-[r:RELATIONSHIP]-&gt;(n2)
<br><br>MATCH (n:Label {key:value})	
REMOVE n.key
<br><br>
<br>DELETE  Node
<br>MATCH (n:Label {key:value})	
DELETE n
<br>
<br>DELETE Node and Relationship
<br>MATCH (node {Property:Value})  
DETACH DELETE node
<br>MATCH (a:Label {Property: value}) 
OPTIONAL MATCH (a)-[r]-()				 
DELETE a, r
<br>MATCH会返回空<br>
OPTIONAL MATCH 即使没有匹配到也会返回 NULL<br><br><br>
<br>在 Cypher 中，使用 ORDER BY 命令很容易对结果进行排序。
<br>比方说，我们想显示数据库中年龄最大的人。我们可以使用下面的查询：
<br>MATCH (person:Person)
RETURN person.name, person.born
ORDER BY person.born
<br>
<br>也可以使用 DESC 关键字来指定降序排序：
<br>MATCH (person:Person)	
RETURN person.name, person.born	
ORDER BY person.born DESC
<br>
<br>升序
<br>MATCH (person:Person)
RETURN person.name, person.born	
ORDER BY person.born ASC
<br><br>
<br>Cypher 支持对记录集进行简便的分页。
<br>它使用 LIMIT 和 SKIP 语句来减少返回记录的数量，并允许对结果进行分页。
<br>LIMIT: 限制返回的记录数
<br>SKIP: 跳过指定数量的记录	
<br>MATCH (person:Person)	
RETURN person.name, person.born		
ORDER BY person.born DESC
SKIP 10 LIMIT 5	
<br>SKIP 10 LIMIT 5	<br>
<br>从第 10 条记录开始，返回 5 条记录
<br><br>
<br>通常，我们要求查询只返回不同的结果
<br>MATCH (person:Person)	
RETURN DISTINCT person.born
<br><br>
<br>
选中的节点与边组成的字符串

<br>
起点和终点都是节点

<br>
查找图中与Gene Hackman合作过的演员

<br>MATCH (gene:Person)-[:ACTED_IN]-&gt;()&lt;-[:ACTED_IN]-(other:Person)
WHERE gene.name="Gene Hackman"
RETURN distinct other
<br>
<br>查找所有电影相关演职人员的三种写法
<br>MATCH (actor:Person)-[:ACTED_IN]-&gt;(movie:Movie)&lt;-[:DIRECTED]-(director:Person)
RETURN actor.name, movie.title, director.name;
<br>MATCH (actor:Person)-[:ACTED_IN]-&gt;(movie:Movie),
      (movie)&lt;-[:DIRECTED]-(director:Person)
RETURN actor.name, movie.title, director.name;
<br>MATCH (actor:Person)-[:ACTED_IN]-&gt;(movie:Movie),(director:Person)-[:DIRECTED]-&gt;(movie)

RETURN actor.name, movie.title, director.name;
<br><br>
<br>
跨越任何深度的关系是： (a)-[*]-&gt;(b)

<br>
特定深度关系的表示方法是：(a)-[*深度]-&gt;(b)，以查找所有深度步长的路径。

<br>
1到4层深度的关系是这样表示的： (a)-[*1..4]-&gt;(b)

<br>
距离 3 层的 KNOWS 类型关系：(a)-[:KNOWS*3]-&gt;(b)

<br>
2 层 KNOWS 或 LIKES 类型的关系：(a)-[:KNOWS|:LIKES*2...]-&gt;(b)

<br>MATCH p =(actor { name: 'Tom Hanks' })-[:ACTED_IN*2]-(co_actor)
RETURN relationships(p)
<br><br>
<br>最短路径是两个节点之间的最短路径。
<br>MATCH
	(tom:Person { name: 'Tom Hanks' }),
	(kevin:Person { name: 'Kevin Bacon' }), 
	p = shortestPath((tom)-[*..15]-(kevin))
RETURN p
<br><br>
<br>
Neo4j 不使用索引来加速 JOIN 操作

<br>
有助于通过值、前缀或范围查找起点

<br>
创建特定于标签的索引，因为索引绑定到具体的标签-属性组合上

<br>
示例：根据电影标题有效搜索

<br>CREATE INDEX ON :Movie(title)
<br>
<br>要删除索引，请使用以下 Cypher 命令
<br>DROP INDEX ON :Movie(title)
<br><br>
<br>在标有 "人 "的节点上创建索引，按属性名称建立索引：
<br>CREATE INDEX ON :Person(name)
<br><br>
<br>COUNT(x) 
<br>MIN(x)
<br>MAX(x)
<br>AVG(x)
<br>SUM(x)
<br>COLLECT(x) 
<br>MATCH (person:Person)-[:ACTED_IN]-&gt;(movie:Movie)
RETURN person.name, collect(movie.title)
<br><br>
<br>LOAD CSV 语句可将本地或远程文件解析为表示映射（带标题）或列表的一系列行。
<br>使用任何 Cypher 操作来创建节点或关系，或与现有图结构合并
<br>由于 CSV 文件通常表示节点或关系列表，因此需要执行多次操作，分别创建节点和关系。
<br>示例，查询使用 movies.csv 中的数据作为属性创建电影节点
<br>LOAD CSV WITH HEADERS 
FROM "" AS line 
CREATE (:Movie {id: line.id, title: line.title, released: toINT(line.year)})
]]></description><link>https://www.allenygy.vip/database-management-system/nosql/neo4j.html</link><guid isPermaLink="false">Database Management System/NoSQL/Neo4j.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[NoSQL]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DataBase" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DataBase</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DataBase" class="tag" target="_blank" rel="noopener nofollow">#DataBase</a>  <a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <br><br>What is NoSQL

<br>Not Only SQL 
<br>NoSQL 是一个总称 不遵循 RDBMS 原则的数据库和数据存储 

<br>一类产品
<br>有关数据存储和操作的多个（相关）概念的集合 
<br>通常与大型数据集有关



<br>为什么不用RDBMS
在互联网背景下 

<br>RDBMS 假定数据是

<br>密集
<br>基本一致（结构化数据）


<br>来自互联网的数据是

<br>大量且稀疏
<br>半结构化或非结构化


<br>面对海量稀疏数据集，典型的存储机制和访问方法变得捉襟见肘 

<br>稀疏的非/半结构化数据 
<br>高水平可扩展性



<br><br><img alt="NoSQL" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/NoSQLType.png" referrerpolicy="no-referrer"><br>
<br>图数据库: <a data-href="Neo4j" href="https://www.allenygy.vip/Neo4j" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Neo4j</a><a data-href="Neo4j" href="https://www.allenygy.vip/database-management-system/nosql/neo4j.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Neo4j</a>

<br>用于存储数据网络信息，如社交关系。


<br>文档数据库: <a data-href="MongoDB" href="https://www.allenygy.vip/MongoDB" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MongoDB</a><a data-href="MongoDB" href="https://www.allenygy.vip/database-management-system/nosql/mongodb.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MongoDB</a>

<br>将每个键与称为文档的复杂数据结构配对。


<br>键值数据库: <a data-href="Redis" href="https://www.allenygy.vip/Redis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Redis</a><a data-href="Redis" href="https://www.allenygy.vip/database-management-system/nosql/redis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Redis</a>

<br>是最简单的 NoSQL 数据库。数据库中的每个项目都以属性名称（或 "键"）的形式与其值一起存储。


<br>列族数据库：<a data-href="Cassandra" href="https://www.allenygy.vip/Cassandra" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Cassandra</a><a data-href="Cassandra" href="https://www.allenygy.vip/database-management-system/nosql/cassandra.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Cassandra</a>

<br>针对大型数据集的查询进行了优化，将数据列（而不是行）存储在一起


<br><br>
<br>面向图形
<br>一切都以边、节点或属性的形式存储
<br>每个节点和边可以有任意数量的属性
<br>节点和边都可以贴标签 
<br>标签可用于缩小搜索范围
<br>适用场景: 网络型

<br>社交网络
<br>金融领域
<br>交通网络
<br>计算机通信网络
<br>智能电网
<br>...


<br><br>
<br>核心概念是 "文档 "的概念，它与 RDBMS 中的行相对应 
<br>以某些标准格式或编码封装和编码数据，如 JSON（BSON） 
<br>文档在数据库中通过代表该文档的唯一密钥进行处理
<br>将文档作为一个整体处理，避免将文档拆分为其组成的名称/值对
<br>数据库提供 API 或查询语言，可根据文档内容检索文档 
<br>文档是无模式的，也就是说，不同的文档可以有不同的结构和模式(RDBMS 要求每一行都包含相同的列）
<br>适用场景：评论型

<br>内容管理系统
<br>电子商务平台
<br>社交网络
<br>日志管理系统
<br>...


<br><br>
<br>以无模式方式存储数据
<br>以映射方式存储数据 

<br>哈希映射或关联数组 
<br>为访问数据提供非常高效的平均运行时间算法


<br>特点

<br>简洁：数据主要采用Key-Value(KV)形式储存
<br>高速：数据驻留内存，重启时可再次加载进行使用
<br>易扩展：根据系统负载量，灵活添加或删除服务器
<br>对键可设置失效时间


<br>适用场景

<br>缓存
<br>用户会话管理
<br>分布式锁
<br>分布式配置管理
<br>分布式存储系统


<br><br>
<br>
以列为导向的方式存储数据

<br>有效存储数据 
<br>避免消耗空间来存储空值
<br>以列族对列进行分组
<br>数据不存储为单一表格，而是按列族存储
<br>数据单位是一组键/值对

<br>用 "行键 "标识
<br>根据行键排序与筛选




<br>
特点

<br>更好的可扩展性
<br>高可用性
<br>适合离线批量数据处理
<br>支持跨平台部署


<br>
适用场景

<br>数据仓库
<br>数据挖掘和商业智能
<br>实时数据分析
<br>大规模数据集成


<br><br>NoSQL 解决方案设计用于在集群或多节点数据库解决方案上运行<br>
<br>如果数据量/操作量较大，则需要在集群中添加更多机器，即 "向外扩展 "或 "水平扩展"。
<br>不同的方法包括

<br>主从（Master-slave）
<br>分片（Sharding）


<br><br>分布式存储系统必然存在如下三方面问题 <br>
<br>一致性（Consistency）

<br>每个客户端都有相同的数据视图


<br>可用性（Availability）

<br>每个客户端始终可以读写


<br>分区容错性（Partition Tolerance）或稳定性

<br>系统在分布式物理网络中运行良好


<br><br>
<br>满足CA原则：系统几乎没有或根本没有分区容错性。一致性和可用性优先

<br>RDBS


<br>满足AP原则：一致性受到影响，但系统始终可用，并且在部分分区时也能工作

<br>CouchBD, Cassandra, DynamoDB, Riak


<br>满足CP原则：可用性受到影响，但一致性和分区容错性优于可用性

<br>MongoDB, HBase, Redis


<br>没有完美的 NoSQL 数据库<br>
<br>每个数据库都有其优缺点
<br>取决于要完成的任务类型（和偏好） 

<br>NoSQL 是一套处理以下问题的概念、想法、技术和软件


<br>大数据
<br>稀疏的非/半结构化数据

<br>高水平可扩展性
<br>大规模并行处理


<br>不同的应用、目标、对象和方法需要不同的 NoSQL 解决方案
<br><br>
<br>原子性 Atomicity
<br>一致性Consistency
<br>隔离性Isolation
<br>持久性Durability
<br>
<br>NoSQL 

<br>不重视 ACID 特性，在某些情况下完全忽略


<br>在分布式并行系统，很难/不可能确保 ACID 属性
<br><br>
<br>基本可用性 Basically Available
<br>软状态 Soft State
<br>最终一致 Eventually Consistent
<br>
<br>特点

<br>弱一致性可用性优先
<br>尽最大努力
<br>近似答案
<br>进取（乐观）
<br>更简单、更快速


<br><br>
<br>
NoSQL分布式集群系统由多个节点构成

<br>
由于网络异常、服务器故障等原因，节点并不总能保证正常工作

<br>
分布式系统采用多数据副本来保证可用性

<br>
严格一致性 

<br>
“读己之所写”一致性

<br>
会话一致性

<br>
单调读一致性

<br>
最终一致性

<br><img alt="Consistency" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DataBase/NoSQL/Consistency.png" referrerpolicy="no-referrer"><br><br>
<br>N: 副本数
<br>R: 写入副本数
<br>W: 写入副本数
<br><br><br>
<br>提议者 Proposer
<br>决策者 Acceptor
<br>学习者 Learner
<br>
<br>Request
<br>Prepare
<br>Accept
<br>Response
<br><br>
<br>领导者Leader: 1 个，接受服务端的请求
<br>候选者Candidate: 多个，选举领导者
<br>追随者Follower: 多个，负责响应来自领导者或者候选者的请求
<br>
<br>每个任期至多存在一个领导者
<br>默写任期又要选举失败，不存在 Leader
<br>每个服务器本地维护当前任期
<br><br>
<br>领导者选举 Leader Election
<br>日志复制 Log Replication
<br>安全性 Safety
<br>]]></description><link>https://www.allenygy.vip/database-management-system/nosql/nosql.html</link><guid isPermaLink="false">Database Management System/NoSQL/NoSQL.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/NoSQLType.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/NoSQLType.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[NoSQL-Assignment]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Assignment" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Assignment</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Neo4j" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Neo4j</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Mongodb" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Mongodb</a> 
 <br><a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <a href="https://www.allenygy.vip?query=tag:Assignment" class="tag" target="_blank" rel="noopener nofollow">#Assignment</a> <a href="https://www.allenygy.vip?query=tag:Neo4j" class="tag" target="_blank" rel="noopener nofollow">#Neo4j</a> <a href="https://www.allenygy.vip?query=tag:Mongodb" class="tag" target="_blank" rel="noopener nofollow">#Mongodb</a><br><br><br>
<br>NoSQL数据库是一种非关系型数据库，它不遵循传统的关系数据库管理系统（RDBMS）的结构。
<br>NoSQL数据库的设计初衷是为了解决大规模数据集的存储和检索问题，特别是在分布式环境中。
<br>NoSQL数据库适用于需要处理大量数据、高吞吐量和灵活数据模型的应用程序，例如大数据应用、实时分析、内容管理系统等。
<br><br>
<br>
键值存储（Key-Value Stores）:

<br>这种类型的数据库通过键值对来存储数据，键是唯一的，用于检索值。
<br>例子：Redis, Riak


<br>
文档存储（Document Stores）：

<br>文档存储数据库存储类似于JSON或XML的文档，这些文档可以包含多种数据类型和结构。 

<br>例子：MongoDB, CouchDB




<br>
列存储（Column Stores）：

<br>列存储数据库将数据存储在列中，而不是行，这使得它们非常适合处理大量的写入操作和列查询。
<br>例子：Cassandra, HBase


<br>
图形数据库（Graph Databases）：

<br>图形数据库用于存储实体之间的关系，非常适合社交网络、推荐系统等需要处理复杂关系的应用。
<br>例子：Neo4j, OrientDB


<br><br><br>
<br>关系型数据库

<br>中心化的
<br>处理密集，结构化的数据
<br>满足 ACID 性
<br>遵循 CA 原则


<br>NoSQL

<br>去中心化的
<br>处理稀疏数据，半/非结构化的数据
<br>主要是查询，很少更新
<br>满足 BASE 性
<br>遵循 AP 或 CP 原则


<br><br>CAP定理，也称为布鲁尔定理（Brewer's theorem）
是由计算机科学家埃里克·布鲁尔在2000年提出的一个概念，用来描述分布式系统在设计时需要做出的权衡。
<br> 一致性（Consistency）
在分布式系统中，当一个数据项更新后，所有节点应保证对该数据项的读取都将得到更新后的值。也就是说，如果一个节点更新了数据，其他节点在读取时也应该得到这个最新的数据。
<br>可用性（Availability） 
系统在任何时候都能够响应客户端的请求。即使在部分节点失败的情况下，系统仍然能够提供服务。
<br>分区容错性（Partition Tolerance） 
系统在网络分区（即网络中的一部分节点无法与其他节点通信）的情况下仍然能够继续运行。
<br>CAP 定理 - 最多可以处理三个属性中的两个属性
CAP定理的核心观点是，在任何给定时间，一个分布式系统最多只能同时满足上述三个特性中的两个。这意味着设计者必须在这三个特性中做出选择：

<br>CA: 如果选择一致性和可用性，系统将无法容忍网络分区，一旦发生分区，系统将无法继续服务。SQL
<br>CP: 如果选择一致性和分区容错性，系统在网络分区的情况下将无法保证所有请求都能得到响应。 MongoDB, HBase, Redis
<br>AP: 如果选择可用性和分区容错性，系统将无法保证在所有节点上数据的一致性，可能会采用最终一致性模型。 CouchBD, Cassandra, DynamoDB, Riak

<br>在NoSQL数据库中，CAP定理的重要性体现在：

<br>设计决策：

<br>NoSQL数据库的设计者和开发者需要根据CAP定理来决定数据库的架构，特别是当面对大规模分布式系统时。


<br>性能优化：

<br>在分布式系统中，为了提高性能和可扩展性，很多NoSQL数据库选择了可用性和分区容错性，牺牲了强一致性，采用最终一致性模型。


<br>应用场景：

<br>不同的NoSQL数据库根据其应用场景和需求，可能在CAP定理的三个特性中做出不同的权衡。例如，一些数据库可能更注重一致性，而另一些则可能更注重可用性和分区容错性



<br><br>高可用性（High Availability）
高可用性是指系统在面对硬件故障、软件故障、网络问题或其他问题时，仍能继续运行并提供服务的能力。在NoSQL数据库中，高可用性通常通过以下方式实现：
副本：数据在多个节点上进行复制，以便在主节点故障时，其他副本可以接管服务。<br>
故障转移：系统能够自动检测到节点故障，并迅速将请求重定向到健康的节点。<br>
冗余：通过在不同的物理位置或服务器上存储数据副本，减少单点故障的风险。
<br>可扩展性（Scalability）
可扩展性是指系统能够通过增加资源(如服务器、存储或处理能力)<br>
来应对增长的工作负载。NoSQL数据库的可扩展性通常分为两种：

<br>垂直扩展（Vertical Scaling）：通过增加单个服务器的资源（如CPU、内存） 来提升性能。
<br>水平扩展（Horizontal Scaling）：通过增加更多的服务器或节点来分散负载，这是NoSQL数据库的常见扩展方式，允许系统几乎无限地扩展以处理更大的数据量和更高的并发请求。

<br>分布式系统（Distributed System）
分布式系统是由多个物理或逻辑上分离的计算机组件组成的系统，这些组件通过网络相互连接和通信，协同工作以完成复杂的任务。在NoSQL数据库的上下文中，分布式系统的特点包括：
数据分布：数据被分割并存储在多个节点上，以实现负载均衡和冗余。<br>
网络通信：节点之间通过网络进行数据交换和协调。<br>
容错性：系统设计能够处理节点或网络的故障，确保整体服务的连续性。<br>
一致性：尽管数据分布在多个节点上，系统仍需保证数据的一致性，可能是强一致性或最终一致性。<br>
并发控制：系统需要管理多个用户或进程同时对数据进行读写操作，避免冲突和数据损坏。
<br><br>
<br>键值存储(Key-Value Store)

<br>简洁：数据主要采用Key-Value(KV)形式储存
<br>高速：数据驻留内存，重启时可再次加载进行使用
<br>易扩展：根据系统负载量，灵活添加或删除服务器
<br>对键可设置失效时间


<br>列存储 (Column Store)

<br>更好的可扩展性
<br>高可用性
<br>适合离线批量数据处理


<br>文档数据库(Document Store)

<br>核心概念是 "文档 "的概念，它与 RDBMS 中的行相对应
<br>以某些标准格式或编码封装和编码数据，如 JSON（BSON）
<br>文档在数据库中通过代表该文档的唯一密钥进行处理
<br>将文档作为一个整体处理，避免将文档拆分为其组成的名称/值对
<br>文档是无模式的，可以是非结构的数据


<br>图形数据库(Graph Store)

<br>面向图形
<br>一切都以边、节点或属性的形式存储
<br>每个节点和边可以有任意数量的属性
<br>节点和边都可以贴标签
<br>标签可用于缩小搜索范围


<br><br><br>a. 实时分析：<br>
适用数据库：列族数据库（如Canssandra）<br>
原因：优化了时间戳索引和快速的数据插入与查询，适合实时数据的收集和分析。全文搜索引擎则提供了强大的文本处理和搜索能力，适合实时日志分析和监控。<br>
b. 大数据处理：<br>
适用数据库：列存储数据库（如Cassandra, HBase） 或 文档数据库（如MongoDB）。<br>
原因：列存储数据库优化了列的读写操作，适合处理大规模数据集，特别是在需要快速列查询的场景。文档数据库则因其灵活性和丰富的查询功能，适合处理结构化或半结构化的大数据。<br>
c. 社交网络：<br>
适用数据库：图形数据库（如Neo4j, OrientDB）。<br>
原因：社交网络中存在大量的用户关系和交互数据，图形数据库能够高效地存储和查询这些复杂的关系，支持社交网络中的好友关系、社交图谱分析等。<br>
d. 物联网 (IoT)：<br>
适用数据库：键值数据库（如Redis） 或 文档数据库（如MongoDB）。<br>
原因：物联网设备产生大量的非结构化，时序数据库可以高效地存储和查询这些数据。同时，物联网数据通常是半结构化的，文档数据库的灵活性使其成为处理这类数据的理想选择。<br><br>实际应用场景：社交媒体平台<br>
应用描述：<br>
一个社交媒体平台允许用户创建个人资料、发布状态更新、分享图片和视频、关注其他用户以及参与评论和点赞等社交互动。<br>
<br>数据模型的灵活性：<br>
社交媒体平台的数据结构经常变化，例如用户资料、帖子、评论等，它们可能是半结构化的，包含多种数据类型。NoSQL数据库如MongoDB允许灵活的数据模型，无需预先定义严格的模式。
<br>水平扩展性：<br>
社交媒体平台可能迅速增长，需要处理大量用户和数据。NoSQL数据库如Cassandra设计用于水平扩展，通过增加更多节点来处理更大的数据量和用户请求。<br>
高性能的读写操作：<br>
用户生成内容和实时交互需要快速响应。NoSQL数据库通常提供高性能的读写操作，特别是在分布式环境中。
<br>高可用性：<br>
社交媒体平台需要24/7的高可用性。NoSQL数据库通过数据复制和故障转移机制，确保服务的持续可用性。
<br>处理非关系型数据：<br>
社交媒体数据如用户关系图、内容推荐等，是高度互联的非关系型数据。图形数据库如Neo4j可以有效地存储和查询这些复杂的网络关系。
<br>大规模数据处理：<br>
社交媒体平台产生的数据量巨大，包括用户生成的内容、日志数据等。使用Hadoop或Spark等大数据处理框架与NoSQL数据库结合，可以高效地处理和分析这些数据。
<br>多样化的查询需求：<br>
社交媒体平台需要支持复杂的查询，如搜索、推荐、趋势分析等。NoSQL数据库提供了丰富的查询语言和API，可以满足这些需求。
<br>成本效益：<br>
与关系型数据库相比，NoSQL数据库通常提供更灵活的部署选项，包括云服务，这有助于降低成本和提高资源利用率。
<br>开发速度：<br>
社交媒体平台需要快速迭代和部署新功能。NoSQL数据库的灵活性有助于加速开发过程，减少模式变更的复杂性。<br>
通过上述原因，社交媒体平台选择使用NoSQL数据库而不是关系型数据库，可以更好地满足其业务需求，提供更好的用户体验，并支持快速增长和变化
<br>OPTIONAL MATCH 会搜索可能存在也可能不存在的描述模式，并将模式中不存在的标识符赋值为 NULL。<br><br>// 创建 Show 节点
CREATE (got:Show {title: "Game of Thrones"})
	
// 创建 Character 节点
CREATE (jon:Character {name: "Jon Snow"})
CREATE (dany:Character {name: "Daenerys Targaryen"})
CREATE (tyrion:Character {name: "Tyrion Lannister"})
	
// 创建 Actor 节点
CREATE (kit:Actor {name: "Kit Harington"})
CREATE (emilia:Actor {name: "Emilia Clarke"})
CREATE (peter:Actor {name: "Peter Dinklage"})
	
CREATE (kit)-[:ACTED_IN]-&gt;(got)
CREATE (emilia)-[:ACTED_IN]-&gt;(got)
CREATE (peter)-[:ACTED_IN]-&gt;(got)
	
CREATE (jon)-[:HAS_CHARACTER]-&gt;(got)
CREATE (dany)-[:HAS_CHARACTER]-&gt;(got)
CREATE (tyrion)-[:HAS_CHARACTER]-&gt;(got)
	
CREATE (kit)-[:PLAYS]-&gt;(jon)
CREATE (emilia)-[:PLAYS]-&gt;(dany)
CREATE (peter)-[:PLAYS]-&gt;(tyrion)	
<br><br>
<br>易用性：灵活的文档模型。JSON格式简单易学
<br>支持高性能访问数据。存储引擎是文档型数据库的核心组件。
<br>可扩展性：支持大数据分布式存储，服务能力水平可横向弹性扩展
<br><br>OLTP
英文全称是 Online Transaction Processing System，在线事务处理系统<br>
可以理解为日常的业务系统，比如像 ERP、OA、CRM 等等，这些业务系统主要是管理企业的基本业务流程，对数据的处理方式主要是以增、删、改为主
<br>OLAP
英文全称是 Online Analytical Processing System，在线分析处理系统<br>
可以理解为分析型系统，比如在商业智能BI应用中，支撑到前端可视化分析的数据仓库
<br>主要差异

<br>
<br>
什么是 Redis？

<br>
Redis的特点是什么？

<br>
Redis的数据结构有哪些？

<br>
Redis的发布与订阅功能是什么？

<br>
Redis事务如何实现？

<br>
Redis最与众不同的数据结构式什么？有什么特点？

<br>
Redis如何快速实现过期？

<br>
请描述一个实际应用场景，说明为什么选择使用 Redis数据库。

<br>
请简要介绍一下Cassandra是什么，以及它的主要特点是什么？

<br>
Cassandra与传统关系型数据库的主要区别是什么？

<br>
什么是Cassandra的复制策略？如何配置数据的复制和分布？

<br>
Cassandra的数据删除是如何工作的？有没有什么需要注意的地方？

<br>
Cassandra数据库中使用哪种查询语言？

<br>
Cassandra的设计目标是什么？

<br>
Cassandra的主要成分是什么？

<br>
请描述一个实际应用场景，说明为什么选择使用 Cassandra数据库？

]]></description><link>https://www.allenygy.vip/database-management-system/nosql/nosql-review.html</link><guid isPermaLink="false">Database Management System/NoSQL/NoSQL-Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[DBMS-review]]></title><description><![CDATA[ 
 <br><br><br>
<br>分出

<br>L
<br>R
<br>LR


<br>依次遍历

<br>L
<br>L+LR


<br><br><br><br><br>
<br>函数右部依赖分解为单属性
<br>消除冗余属性
<br>消除冗余的函数依赖
<br><br>
<br>Fm
<br>合并左部相同
<br>每个FD构成新的R
<br>在构成的R中如果每个R都不存在 R 的候选键，那么把 R 的候选键作为一个模式放入模式集
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/dbms-review.html</link><guid isPermaLink="false">Database Management System/RDBMS/DBMS-Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:35:09 GMT</pubDate></item><item><title><![CDATA[Relational-Database-Design-3rd-Normal-Form]]></title><description><![CDATA[ 
 <br><br>
<br>There are some situations that

<br>BCNF decomposition is not dependency preserving, but
<br>efficiently checking the dependency violation on updates is important.


<br>Thus, we define a weaker normal form called Third Normal Form (3NF).

<br>3NF allows some redundancy
<br>But functional dependencies can be checked on individual relations without computing a join.<br>
There is always a lossless-join, dependency-preserving decomposition into 3NF.


<br>]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/10-relational-database-design-3rd-normal-form.html</link><guid isPermaLink="false">Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:49 GMT</pubDate></item><item><title><![CDATA[Relational-Database-Design-BCNF]]></title><description><![CDATA[ 
 <br><br><br>
<br>For the case of  a decomposition of  into  and  is lossless join if and only if at least one of the following dependencies is in :
<br><br>
<br><br>
<br>Let the schema  is decomposed into .
<br>Let  be the subset of dependencies  that only includes attributes in  for ,
<br>The decomposition is dependency preserving,  if<br>

<br>If the decomposition is not dependency preserving, then checking updates for violation of functional dependencies may require computing joins, which is expensive.
<br>Example:<br>
<br>
<br>
can be decomposed in two different ways<br>
<br>


<br>Lossless-join decomposition

<br>
<br>Dependency preserving




<br>


<br>Lossless-join decomposition

<br>
<br>Not dependency preserving (cannot check  without computing )




<br>]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/09-relational-database-design-bcnf.html</link><guid isPermaLink="false">Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:43 GMT</pubDate></item><item><title><![CDATA[Relational-Database-Design-Functional-Dependency]]></title><description><![CDATA[ 
 <br><br>Functional dependencies are some constraints on the set of legal relations.<br>
The constraint is that the value for a certain set of attributes uniquely determines the value for another set of attributes. 约束条件是一组属性的值唯一确定另一组属性的值<br>
A functional dependency is a generalization of the notion of a key. 功能依赖关系是键概念的泛化<br><br>
<br>
 is a super key for relation schema iff 

<br>
 is a condidate key for  iff  and for no   

<br>
Functional dependencies can express constraints that cannot be expressed using superkeys.<br>
For example:

<br><br>We can use functional dependency to hold<br><br>But would not expect the following to hold:<br><br>
<br>
we can use  functional dependency to specify constraints on the set of legal relations

<br>
Trivial<br>
A functional dependency is trivial if it is satisfied by all instances of a relation.<br>
Equivalently,<br>
If  is trivial.<br>
Example:<br>
<br>


<br><br>The set of all functional dependencies logically implied by  is the closure of , denoted by .<br> is a superset of .<br><br>
<br>Applying Armstrong's Axioms

<br>reflexivity

<br>if  then 


<br>augumentation

<br>if  then  for any .  


<br>transitivity

<br>if  and , then 




<br>These rules are sound and complete.
<br>This method is also apply in Attribute Closure.<br><br>For Union:<br>
If  then <br>
<br>
<br> According to augmentation
<br>
<br>
<br>
<br> According to transitivity
<br>
<br>For Decomposition:<br>
if , then  and <br>
<br>
<br>  according to reflexivity
<br> according to reflexivity
<br> according to transitivity
<br>For pseudotransitivity<br>
if  and  then <br>
<br>
<br> according to augmentation
<br> according to transitivity
<br>
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/08-relational-database-design-functional-dependency.html</link><guid isPermaLink="false">Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:39 GMT</pubDate></item><item><title><![CDATA[Relational-Database-Design-Purpose-&amp;-First-Normal-Form]]></title><description><![CDATA[ 
 <br><br>
<br>Good Relational Design

<br>Retrieve information easily, obtain all constraints, minimize redundancies, and have no ambiguous


<br>Normally, The logical design is good enough because the ER diagram is carefully designed.<br>
<br>Large Schema
<br>Suppose that instead of the schemas<br>
<br>
<br>
we have a larger schema<br>
<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DBM/problem_large_schema.png" referrerpolicy="no-referrer"><br>
From the example, we see redundancy occurs.<br>
<br>Small Schema
<br>Sometimes decompositions are useless.<br>
Sometimes naive decompositions create inconsistency.<br><br>For one attribute A of the schema, the other attributes it can be  identified.<br>
A-&gt;B,C,D<br><br>A domain is atomic if its elements are considered to be indivisible units.<br>
A relational schema R is in first normal form if the domains of all attributes of R are atomic.<br>
Non-atomic values complicate storage and encourage redundant (repeated) storage of data.<br>
Atomicity is actually a property of how the elements of the domain are used.]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/07-relational-database-design-purpose-&amp;-first-normal-form.html</link><guid isPermaLink="false">Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:35 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DBM/problem_large_schema.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DBM/problem_large_schema.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Key-Concept]]></title><description><![CDATA[ 
 <br><br><br>
<br>super key (超键)
<br>candidate key (候选键)
<br>primary key (主键)
<br>foreign key (外键)
<br>超键(super key): 在关系中能唯一标识元组的属性集称为关系模式的超键<br>候选键(candidate key): 不含有多余属性的超键称为候选键。也就是在候选键中，若再删除属性，就不是键了！<br>主键(primary key): 用户选作元组标识的一个候选键程序主键<br>外键(foreign key)：如果关系模式R中属性K是其它模式的主键，那么k在模式R中称为外键。<br><br><br>原子性<br>
<br>第一范式主要是保证数据表中的每一个字段的值必须具有原子性，也就是数据表中的每个字段的值是不可再拆分的最小数据单元
<br><br>完全依赖于整个候选键<br>
不存在部分依赖<br>
<br>第二范式在第一范式的基础上，要求非主键列完全依赖于主键，而不是依赖于主键的一部分。
<br>简单来说，就是要保证非主键列与主键之间的关系是一对一的，而不是一对多的。
<br><br>完全依赖于候选键且相互之间不存在依赖<br>
不存在传递依赖<br>
<br>第三范式在第二范式的基础上，要求非主键列之间不存在传递依赖。<br>
也就是说，非主键列之间不能相互依赖，而是通过主键来进行关联。
<br><br>
<br>满足3NF的前提下
<br>主键不存在传递
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/06-key-concept.html</link><guid isPermaLink="false">Database Management System/RDBMS/06-Key-Concept.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:32 GMT</pubDate></item><item><title><![CDATA[Logical-Design]]></title><description><![CDATA[ 
 <br><br><br><br>对于多对多的情况 无论是否total participation,建表存放两实体主键<br>
<br>Many to Many
<br>Many to Many with total participation on one side
<br>many-to-many with total participation on both sides
<br>For the above 3 cases, we create an individual schema for each relationship set. The column names consist of the key attributes for both entity sets and the attributes for the relationship set (if any).<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/ManyCase.png" referrerpolicy="no-referrer"><br><br>
<br>one to one without total participation 一对一
<br>one to many without total participation 一对多
<br>one to many with total participation on "one" side. 一对多，且一完全参与
<br>For the above 3 cases, we create an individual schema for each relationship set. The column names consist of the key attributes for both entity sets and the attributes for the relationship set (if any).<br>
对于以上三种情况，建立一个单独的表来存放关系集，集合内包括两个实体的主键，以及关系本身的属性,<br>
但是对于主键却有另外的要求<br>
对于其中的第一种情况 主键为两实体中的一个<br>
对于剩余两种情况 主键在多的的一侧<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/OneCase.png" referrerpolicy="no-referrer"><br><br>
<br>one-to-one with one total participation and one partial participation
<br>one-to-one with total participation on both sides
<br>one-to-many with total participation on the “many” side
<br>one-to-many with total participation on both sides
<br>For these four cases, there is no need to create a schema.<br>
对于以上四种情况没必要建表<br>We only need to add a foreign key as a reference to the schema of<br>
the entity set with total participation on the “one” side (case 7 and 8)<br>
the entity set with total participation on the “many” side (case 9 and 10)<br>
对于情况7，8把外键放在一的一侧<br>
对于情况9，10把外键放在多的一侧<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Remancase.png" referrerpolicy="no-referrer"><br>有many放many<br>
没many两边都放<br><br>If an entity set has composite attributes, composite attributes are directly substituted by the component attributes.<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Composite.png" referrerpolicy="no-referrer"><br><br>如果身份重叠则建 高一级 父表<br>
<br>If the ISA relationship set is overlapping or partial
<br>the schema for the higher-level entity set is like other strong entity sets;<br>
the schema for the lower-level entity set only consists of the attributes of this lower-level entity set and the key of the higher-level entity set;<br>
the key of the higher-level entity set is also the key of the lower-level entity set.<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/ISA.png" referrerpolicy="no-referrer"><br>
<br>
<br>
<br>否则不建表<br>
If the ISA relationship set is disjoint and total<br>
<br>no need to create a schema for the entity set on the higher level;
<br>one schema is constructed for each entity set on the lower level, inheriting all attribute from the higher-level entity set.<br>
<br>

<br><br>Aggregations are treated same as other relationship sets.<br>
For example, the schema for “enroll” has the key of “instructor”, “student”, and “section”.<br>
Then, “doing” is a binary many-to-many relationship set. And the method for case 1 can be applied.<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/RE/Aggregation.png" referrerpolicy="no-referrer"><br>
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/05-logical-design.html</link><guid isPermaLink="false">Database Management System/RDBMS/05-Logical-Design.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:29 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/ManyCase.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/ManyCase.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Design-Issues]]></title><description><![CDATA[ 
 <br><br>
<br>Design Techniques
<br>Attributes vs Entity
<br>Entity set vs Relationship set
<br>Weak entity sets
<br>Redundancies
<br><br>
<br>Express all constraints (you can express!).
<br>Use and do not change terminology and class structure of the application domain.
<br>Keep it simple.<br>
Avoid defining entity types that do not serve any purpose.<br>
Don’t use an entity set when an attribute will do. Choose an entity set if it helps expressing constraints; otherwise, use an attribute.
<br>Avoid redundancy (but derived attributes are okay)!
<br>Limit the use of weak entity sets.
<br><br>
<br>Attribute vs Entity
<br>Entity set vs Relationship set
<br>Strong entity sets vs Weak entity sets
<br>Binary relationship vs multi-ary relationship
<br>Try to eliminate redundancy<br>
In most cases, the answer is very subjective. It depends on the real-world problem.<br>
Sometimes, the answers can be very different even on the same problem but with different assumptions.<br><br>It depends on the real case.<br>
Both ER models have advantages and disadvantages.<br>]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/04-design-issues.html</link><guid isPermaLink="false">Database Management System/RDBMS/04-Design-Issues.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:26 GMT</pubDate></item><item><title><![CDATA[Entity-Relationship-Model-Constraints]]></title><description><![CDATA[ 
 <br><br>
<br>Cardinality Constraints  基数约束 (one-one/one-many/many-many)
<br>Participation Constraints 参与约束 (for all/some)
<br>Constraints for Ternary Relationship Sets 三元关系集的约束
<br><br>
<br>
“how many entities can be associated with one entity at most (or at least)?”

<br>
Can one student have multiple majors?

<br>
Can one program have multiple students?

<br>
Does every student have a major?

<br>
Is every program the major for some students?

<br>
To express the answers, ER diagrams have constraints on relationship sets.
<br>Two types of constraints<br>
<br>Cardinality constraints
<br>Participation constraints
<br>
“Cardinality” is a term from set theory. It is the number of items in a set.
<br><br>To express the cardinality constraints.<br>
ER diagrams use an arrow  pointing to the one side.<br>
For the many side, the links simply have no arrow ().<br><br>
<br>An example for Cardinality Constraints One to many relationships:
<br><img alt="Many-to-one" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Many-to-one.png" referrerpolicy="no-referrer"><br>
Many student can only have one program
<br>Here are some conditions for the example:<br>
<br>one student can only associate with at most one program as his/her major
<br>one major program can have many students.
<br>A one-to-many relationship is the reverse of many-to-one.<br><br>One entity from one entity set is associated with at most one entity from the other entity set and vice versa.<br>
<br>For example, one instructor can be the program director of at most one program, and one program has at most one program director.
<br><img alt="One-to-one" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/One-to-one.png" referrerpolicy="no-referrer"><br><br>One entity from one entity set can be associated with multiple entities from the other entity set and vice versa.<br>
<br>For example, one student can borrow multiple books, and one book can be borrowed by multiple students.
<br><img alt="Many-to-many" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Many-to-many.png" referrerpolicy="no-referrer"><br><br>
<br>Total Participation

<br>Every entity participates a relationship.
<br>The link is a double line (=).


<br>Partial Participation

<br>There are some entities do not participate any relationship.
<br>The link is a single line (−).


<br><br>
<br>Example:<br>
Every student has a major.<br>
Every program is the major for some students. (Programs also totally participate.)
<br><img alt="Total-participation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Total-participation.png" referrerpolicy="no-referrer"><br><br>
<br>Example:<br>
It’s possible that an instructors is not a program director for any program.<br>
But every program has a program director.
<br><img alt="Particial-participation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Partical-participation.png" referrerpolicy="no-referrer"><br><img alt="Alternative-Notations" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Alternative-Notations.png" referrerpolicy="no-referrer"><br><br>we usually avoid using constraints on ternary relationship sets.<br>
If expressing constraints is important, ternary relationship sets can always be converted into several binary ones.<br>Non-binary relationships with constrains is complex.<br>
<br>Not suggested to use constraints on non-binary relationships (ambiguous)
<br>See lecture: convert non-binary to binary
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/02-entity-relationship-model-constraints.html</link><guid isPermaLink="false">Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:20 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Many-to-one.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Many-to-one.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Entity-Relationship-Model-Extended-Features]]></title><description><![CDATA[ 
 <br><br>
<br>Aggregation 聚合
<br>Weak Entity Sets
<br>Generalization and Specialization
<br><br>let “student”, “instructor”, “course”, and “enroll” form an abstract entity as an aggregation. Then “project” only need to associate with the courses which has a course project.<br>
<img alt="MnKmwI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png" referrerpolicy="no-referrer"><br><br>A weak entity is an entity cannot exist alone. The existence depends on another entity of a different type.<br>
弱实体不单独存在，必须依附于实体<br>
A set of weak entities is a weak entity set. Since a weak entity cannot exist alone, it does not have a key.<br>
The existence of a weak entity set depends on the existence of an identifying entity set.<br>
<br>
A weak must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set.

<br>
An identifying relationship depicted using a double diamond. 用双线菱形表示identifying relationship

<br>
The discriminator(鉴别器) (or partial key) of a weak entity set is the set of attributes that distinguishes among all the entities of a weak entity set.<br>
To distinguish weak entities, one must combine the key of the identifying entity set and the discriminator

<br>
Example

<br>Our original modeling for courses was not accurate.<br>
Instead of saying “a student is enrolled to a course”, it’s better to say, “a student is enrolled to a section of a course”.<br>
Same for instructors, one instructor may teach multiple sections of one course.<br>
An entity set “section” is needed.<br>
But a section needs to be with a course.<br>
Thus, “section” is a weak entity set which depends on “course”.<br>
<img alt="PWsNRI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/PWsNRI.png" referrerpolicy="no-referrer"><br>Double rectangles denote weak entity sets. 双矩形边框 表示weak entity<br>
Dashed underlines denote discriminators of weak entity sets. 虚线下划线 表示 weak entity的键<br>
Double diamonds denote identifying relationship sets.<br>
Assume we model the original “enroll” relationship set without constraints. <a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a><br><br>
<br>
Generalization (泛化) is the process of extracting common properties from a set of entities and create a generalized entity from it. It is a bottom-up approach in which two or more entities can be generalized to a higher level entity if they have some attributes in common.

<br>
specialization (具象化), an entity is divided into sub-entities based on their characteristics. It is a top-down approach where higher level entity is specialized into two or more lower level entities.

<br>
泛化 抽象实体集的共同特征 bottom-up

<br>
具象化 Top-down

<br>
Does one higher-level entity belong to at least one lower-level entity set?<br>
If yes, this ISA is a total generalization.<br>
If no, this ISA is a partial generalization

<br>
Does one higher-level entity belong to multiple lower-level entity set?<br>
If No, it is a disjoint generalization.<br>
If no, it’s a overlapping generalization

<br>
Similar to the Inheritance<br>
<img alt="ER-Generalization.png" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Generalization.png" referrerpolicy="no-referrer">

<br>Cardinality constraints and participation constraints can be applied on ISA relationship sets.<br>
But some constraints are omitted because<br>
each entity on the lower-level is one entity on the higher-level (the entity sets on the lower-level always fully participate ISA);<br>
one entity cannot be associated with multiple entities in the same entity set on the lower-level.<br>
Thus, the constraints on ISA only discuss<br>
Does one higher-level entity belong to at least one lower-level entity set?<br>
If yes, this ISA is a total generalization.<br>
Does one higher-level entity belong to multiple lower-level entity set?<br>
If No, it is a disjoint generalization.<br>The above design process is bottom-up, combining several entity sets with same attributes into higher-level entity set.<br>
But sometimes the process is reversed.<br>
Some entity sets can be split into some lower-level entity sets with specific attributes.<br>
This top-down process is called specialization.<br>Consider the “student” and “instructor” example.<br>
If we want to express every person is either a student or an instructor, then this is a total generalization.<br>
And if we assume nobody can be a student and an instructor at the same time, this is a disjoint generalization.<br>
<img alt="S0PX3U" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/S0PX3U.png" referrerpolicy="no-referrer"><br>
<br>
<br>我的评价是真sharuan<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/03-entity-relationship-model-extended-features.html</link><guid isPermaLink="false">Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:23 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Entity-Relationship-Model-Modeling]]></title><description><![CDATA[ 
 <br><br>
<br>Design Process
<br>Entity Sets
<br>Attributes
<br>Relationship Sets
<br><br>
<br>
The goal of the relational database design is to create a database in a specific database management system that allows us to

<br>Store information
<br>Minimize unnecessary redundancies
<br>Search information easily


<br>
Design database can be split into multiple phases.<br>
<img alt="Design-database" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Design-database.png" referrerpolicy="no-referrer">

<br><br>
<br>Focus on describing data and their relationships.
<br>The outcome of this phase is an ER diagram.
<br>It provides a graphic representation of the database design.<br>
<img alt="ER-diagram-example" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-diagram-example.png" referrerpolicy="no-referrer">
<br>
However, designing an ER diagram can be very subjective. Then, the next phase is optimizing the ER diagram using functional dependencies and normal forms.
<br><br>
<br>Optimizing the ER diagram using functional dependencies and normal forms.
<br><br>This phase is to convert an ER diagram to the implementation data model of the database system that will be used.<br><br>
<br>Relational schemas will be produced.<br>
The relational schemas of a database are called logical view.
<br><br>
<br>Designers will implement the relational schemas in the database management system using a particular data definition language.
<br><br>
<br>The entity-relationship model contains three basic concepts:

<br>entity sets
<br>relationship sets
<br>attributes


<br>An entity is a “thing” or “object” in the real world, which is distinguishable from all other objects.<br>
An entity set is the class or type of objects in our model.<br><br>
<br>An entity can be described by a set of properties.
<br>Each property is an attribute of the entity.
<br>A set of attributes describes and distinguishes the entities in the same entity set.
<br>One entity can have different attributes in different models for different applications.
<br>Each entity has a value for each of its attributes.
<br>The Domain of an attribute is the set of all possible values of the attribute.
<br><br>
<br>rectangles represent entity sets
<br>ellipses represent attributes
<br>keys are underlined
<br>lines link attributes to entity sets<br>
<img alt="Basic-ER-Features" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Basic-ER-Features.png" referrerpolicy="no-referrer">
<br>a relationship set is denoted by a diamond<br>
<img alt="ER-Relationship-set-diamond" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Relationship-set-diamond.png" referrerpolicy="no-referrer">
<br><br>
<br>The set of special attribute(s) is called key.
<br>Formally, a key of an entity set is a set of attributes that can uniquely identify the entities.
<br>Two entities are identical if and only if they have the same value for the key.
<br><br>
<br>An entity may have multiple values in an attribute which is multi-valued attribute, denoted by double ellipses.
<br><img alt="Multiple-valued-Attribute" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Multiple-valued-Attribute.png" referrerpolicy="no-referrer"><br>
It is possible that one student may have multiple phone numbers.<br><br>
<br>One may ask “why the course code is not selected as a key?”
<br>The reason is that a course code is not atomic.

<br>An attribute is atomic if each value of the attribute has only one unit of information.
<br>If an attribute is not atomic, it is a composite attribute.


<br><img alt="Composite-attribute" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Composite-attribute.png" referrerpolicy="no-referrer"><br>
<img alt="Composite-attribute" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Compositive-attribute-Example.png" referrerpolicy="no-referrer"><br><br>
<br>A relationship set is a set of relationships of the same type.<br>
<img alt="ER-Relationship-set" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Relationship-set.png" referrerpolicy="no-referrer">
<br>Sets do not allow duplications.
<br>This is also applied to entity sets.
<br><br>
<br>If a relationship associates 𝑛 entities, this relationship is 𝒏-ary.
<br>𝑛 is the degree of the relationship
<br>If 𝑛 = 2, the relationship is binary.
<br>If 𝑛 = 3, the relationship is ternary.
<br>Theoretically, 𝑛 can be any positive integer.
<br><br>
<br>The relationship set can also have some attributes.
<br>Example:

<br>Sometimes people are also interested in some information about relationships.
<br>In the “students borrow books” example, we also want to know when the book is borrowed, when the book is returned, and how long the book is kept by the student.
<br>This information does not belong to students or books. It is about the association.<br>
<img alt="Attribute-for-relationship-sets" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Attribute-for-relationship-sets.png" referrerpolicy="no-referrer">


<br><br>
<br>In the previous example, the attribute duration is in a dashed ellipse because it is a derived attribute.

<br>If one knows the date of borrow and the date of return, then the duration can be calculated from the two values.


<br><br><img alt="ER-Summary" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Summary.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/01-entity-relationship-model-modeling.html</link><guid isPermaLink="false">Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:34:18 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Design-database.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Design-database.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-href="Entity-Relationship-Model-Modeling" href="Entity-Relationship-Model-Modeling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Modeling</a><a data-href="Entity-Relationship-Model-Modeling" href="database-management-system/rdbms/entity-relationship-model-modeling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Modeling</a>]]></title><description><![CDATA[ 
 <br><br>
<br>Design Process
<br>Entity Sets
<br>Attributes
<br>Relationship Sets
<br><br>
<br>
The goal of the relational database design is to create a database in a specific database management system that allows us to

<br>Store information
<br>Minimize unnecessary redundancies
<br>Search information easily


<br>
Design database can be split into multiple phases.<br>
<img alt="Design-database" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Design-database.png" referrerpolicy="no-referrer">

<br><br>
<br>Focus on describing data and their relationships.
<br>The outcome of this phase is an ER diagram.
<br>It provides a graphic representation of the database design.<br>
<img alt="ER-diagram-example" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-diagram-example.png" referrerpolicy="no-referrer">
<br>
However, designing an ER diagram can be very subjective. Then, the next phase is optimizing the ER diagram using functional dependencies and normal forms.
<br><br>
<br>Optimizing the ER diagram using functional dependencies and normal forms.
<br><br>This phase is to convert an ER diagram to the implementation data model of the database system that will be used.<br><br>
<br>Relational schemas will be produced.<br>
The relational schemas of a database are called logical view.
<br><br>
<br>Designers will implement the relational schemas in the database management system using a particular data definition language.
<br><br>
<br>The entity-relationship model contains three basic concepts:

<br>entity sets
<br>relationship sets
<br>attributes


<br>An entity is a “thing” or “object” in the real world, which is distinguishable from all other objects.<br>
An entity set is the class or type of objects in our model.<br><br>
<br>An entity can be described by a set of properties.
<br>Each property is an attribute of the entity.
<br>A set of attributes describes and distinguishes the entities in the same entity set.
<br>One entity can have different attributes in different models for different applications.
<br>Each entity has a value for each of its attributes.
<br>The Domain of an attribute is the set of all possible values of the attribute.
<br><br>
<br>rectangles represent entity sets
<br>ellipses represent attributes
<br>keys are underlined
<br>lines link attributes to entity sets<br>
<img alt="Basic-ER-Features" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Basic-ER-Features.png" referrerpolicy="no-referrer">
<br>a relationship set is denoted by a diamond<br>
<img alt="ER-Relationship-set-diamond" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Relationship-set-diamond.png" referrerpolicy="no-referrer">
<br><br>
<br>The set of special attribute(s) is called key.
<br>Formally, a key of an entity set is a set of attributes that can uniquely identify the entities.
<br>Two entities are identical if and only if they have the same value for the key.
<br><br>
<br>An entity may have multiple values in an attribute which is multi-valued attribute, denoted by double ellipses.
<br><img alt="Multiple-valued-Attribute" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Multiple-valued-Attribute.png" referrerpolicy="no-referrer"><br>
It is possible that one student may have multiple phone numbers.<br><br>
<br>One may ask “why the course code is not selected as a key?”
<br>The reason is that a course code is not atomic.

<br>An attribute is atomic if each value of the attribute has only one unit of information.
<br>If an attribute is not atomic, it is a composite attribute.


<br><img alt="Composite-attribute" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Composite-attribute.png" referrerpolicy="no-referrer"><br>
<img alt="Composite-attribute" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Compositive-attribute-Example.png" referrerpolicy="no-referrer"><br><br>
<br>A relationship set is a set of relationships of the same type.<br>
<img alt="ER-Relationship-set" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Relationship-set.png" referrerpolicy="no-referrer">
<br>Sets do not allow duplications.
<br>This is also applied to entity sets.
<br><br>
<br>If a relationship associates 𝑛 entities, this relationship is 𝒏-ary.
<br>𝑛 is the degree of the relationship
<br>If 𝑛 = 2, the relationship is binary.
<br>If 𝑛 = 3, the relationship is ternary.
<br>Theoretically, 𝑛 can be any positive integer.
<br><br>
<br>The relationship set can also have some attributes.
<br>Example:

<br>Sometimes people are also interested in some information about relationships.
<br>In the “students borrow books” example, we also want to know when the book is borrowed, when the book is returned, and how long the book is kept by the student.
<br>This information does not belong to students or books. It is about the association.<br>
<img alt="Attribute-for-relationship-sets" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Attribute-for-relationship-sets.png" referrerpolicy="no-referrer">


<br><br>
<br>In the previous example, the attribute duration is in a dashed ellipse because it is a derived attribute.

<br>If one knows the date of borrow and the date of return, then the duration can be calculated from the two values.


<br><br><img alt="ER-Summary" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Summary.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-modeling.html</link><guid isPermaLink="false">Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:37:01 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Design-database.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Design-database.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-href="Relational-Database-Design-Purpose-&amp;-First-Normal-Form" href="Relational-Database-Design-Purpose-&amp;-First-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a><a data-href="Relational-Database-Design-Purpose-&amp;-First-Normal-Form" href="database-management-system/rdbms/relational-database-design-purpose-&amp;-first-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a>]]></title><description><![CDATA[ 
 <br><br>
<br>Good Relational Design

<br>Retrieve information easily, obtain all constraints, minimize redundancies, and have no ambiguous


<br>Normally, The logical design is good enough because the ER diagram is carefully designed.<br>
<br>Large Schema
<br>Suppose that instead of the schemas<br>
<br>
<br>
we have a larger schema<br>
<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DBM/problem_large_schema.png" referrerpolicy="no-referrer"><br>
From the example, we see redundancy occurs.<br>
<br>Small Schema
<br>Sometimes decompositions are useless.<br>
Sometimes naive decompositions create inconsistency.<br><br>For one attribute A of the schema, the other attributes it can be  identified.<br>
A-&gt;B,C,D<br><br>A domain is atomic if its elements are considered to be indivisible units.<br>
A relational schema R is in first normal form if the domains of all attributes of R are atomic.<br>
Non-atomic values complicate storage and encourage redundant (repeated) storage of data.<br>
Atomicity is actually a property of how the elements of the domain are used.]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-purpose-&amp;-first-normal-form.html</link><guid isPermaLink="false">Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:36:52 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DBM/problem_large_schema.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DBM/problem_large_schema.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-href="Relational-Database-Design-Functional-Dependency" href="Relational-Database-Design-Functional-Dependency" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-Functional-Dependency</a><a data-href="Relational-Database-Design-Functional-Dependency" href="database-management-system/rdbms/relational-database-design-functional-dependency.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-Functional-Dependency</a>]]></title><description><![CDATA[ 
 <br><br>Functional dependencies are some constraints on the set of legal relations.<br>
The constraint is that the value for a certain set of attributes uniquely determines the value for another set of attributes. 约束条件是一组属性的值唯一确定另一组属性的值<br>
A functional dependency is a generalization of the notion of a key. 功能依赖关系是键概念的泛化<br><br>
<br>
 is a super key for relation schema iff 

<br>
 is a condidate key for  iff  and for no   

<br>
Functional dependencies can express constraints that cannot be expressed using superkeys.<br>
For example:

<br><br>We can use functional dependency to hold<br><br>But would not expect the following to hold:<br><br>
<br>
we can use  functional dependency to specify constraints on the set of legal relations

<br>
Trivial<br>
A functional dependency is trivial if it is satisfied by all instances of a relation.<br>
Equivalently,<br>
If  is trivial.<br>
Example:<br>
<br>


<br><br>The set of all functional dependencies logically implied by  is the closure of , denoted by .<br> is a superset of .<br><br>
<br>Applying Armstrong's Axioms

<br>reflexivity

<br>if  then 


<br>augumentation

<br>if  then  for any .  


<br>transitivity

<br>if  and , then 




<br>These rules are sound and complete.
<br>This method is also apply in Attribute Closure.<br><br>For Union:<br>
If  then <br>
<br>
<br> According to augmentation
<br>
<br>
<br>
<br> According to transitivity
<br>
<br>For Decomposition:<br>
if , then  and <br>
<br>
<br>  according to reflexivity
<br> according to reflexivity
<br> according to transitivity
<br>For pseudotransitivity<br>
if  and  then <br>
<br>
<br> according to augmentation
<br> according to transitivity
<br>
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-functional-dependency.html</link><guid isPermaLink="false">Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:36:52 GMT</pubDate></item><item><title><![CDATA[<a data-href="Relational-Database-Design-BCNF" href="Relational-Database-Design-BCNF" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-BCNF</a><a data-href="Relational-Database-Design-BCNF" href="database-management-system/rdbms/relational-database-design-bcnf.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-BCNF</a>]]></title><description><![CDATA[ 
 <br><br><br>
<br>For the case of  a decomposition of  into  and  is lossless join if and only if at least one of the following dependencies is in :
<br><br>
<br><br>
<br>Let the schema  is decomposed into .
<br>Let  be the subset of dependencies  that only includes attributes in  for ,
<br>The decomposition is dependency preserving,  if<br>

<br>If the decomposition is not dependency preserving, then checking updates for violation of functional dependencies may require computing joins, which is expensive.
<br>Example:<br>
<br>
<br>
can be decomposed in two different ways<br>
<br>


<br>Lossless-join decomposition

<br>
<br>Dependency preserving




<br>


<br>Lossless-join decomposition

<br>
<br>Not dependency preserving (cannot check  without computing )




<br>]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-bcnf.html</link><guid isPermaLink="false">Database Management System/RDBMS/Relational-Database-Design-BCNF.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:37:04 GMT</pubDate></item><item><title><![CDATA[<a data-href="Relational-Database-Design-3rd-Normal-Form" href="Relational-Database-Design-3rd-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-3rd-Normal-Form</a><a data-href="Relational-Database-Design-3rd-Normal-Form" href="database-management-system/rdbms/relational-database-design-3rd-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-3rd-Normal-Form</a>]]></title><description><![CDATA[ 
 <br><br>
<br>There are some situations that

<br>BCNF decomposition is not dependency preserving, but
<br>efficiently checking the dependency violation on updates is important.


<br>Thus, we define a weaker normal form called Third Normal Form (3NF).

<br>3NF allows some redundancy
<br>But functional dependencies can be checked on individual relations without computing a join.<br>
There is always a lossless-join, dependency-preserving decomposition into 3NF.


<br>]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-3rd-normal-form.html</link><guid isPermaLink="false">Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:36:56 GMT</pubDate></item><item><title><![CDATA[<a data-href="Entity-Relationship-Model-Extended-Features" href="Entity-Relationship-Model-Extended-Features" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Extended-Features</a><a data-href="Entity-Relationship-Model-Extended-Features" href="database-management-system/rdbms/entity-relationship-model-extended-features.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Extended-Features</a>]]></title><description><![CDATA[ 
 <br><br>
<br>Aggregation 聚合
<br>Weak Entity Sets
<br>Generalization and Specialization
<br><br>let “student”, “instructor”, “course”, and “enroll” form an abstract entity as an aggregation. Then “project” only need to associate with the courses which has a course project.<br>
<img alt="MnKmwI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png" referrerpolicy="no-referrer"><br><br>A weak entity is an entity cannot exist alone. The existence depends on another entity of a different type.<br>
弱实体不单独存在，必须依附于实体<br>
A set of weak entities is a weak entity set. Since a weak entity cannot exist alone, it does not have a key.<br>
The existence of a weak entity set depends on the existence of an identifying entity set.<br>
<br>
A weak must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set.

<br>
An identifying relationship depicted using a double diamond. 用双线菱形表示identifying relationship

<br>
The discriminator(鉴别器) (or partial key) of a weak entity set is the set of attributes that distinguishes among all the entities of a weak entity set.<br>
To distinguish weak entities, one must combine the key of the identifying entity set and the discriminator

<br>
Example

<br>Our original modeling for courses was not accurate.<br>
Instead of saying “a student is enrolled to a course”, it’s better to say, “a student is enrolled to a section of a course”.<br>
Same for instructors, one instructor may teach multiple sections of one course.<br>
An entity set “section” is needed.<br>
But a section needs to be with a course.<br>
Thus, “section” is a weak entity set which depends on “course”.<br>
<img alt="PWsNRI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/PWsNRI.png" referrerpolicy="no-referrer"><br>Double rectangles denote weak entity sets. 双矩形边框 表示weak entity<br>
Dashed underlines denote discriminators of weak entity sets. 虚线下划线 表示 weak entity的键<br>
Double diamonds denote identifying relationship sets.<br>
Assume we model the original “enroll” relationship set without constraints. <a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a><br><br>
<br>
Generalization (泛化) is the process of extracting common properties from a set of entities and create a generalized entity from it. It is a bottom-up approach in which two or more entities can be generalized to a higher level entity if they have some attributes in common.

<br>
specialization (具象化), an entity is divided into sub-entities based on their characteristics. It is a top-down approach where higher level entity is specialized into two or more lower level entities.

<br>
泛化 抽象实体集的共同特征 bottom-up

<br>
具象化 Top-down

<br>
Does one higher-level entity belong to at least one lower-level entity set?<br>
If yes, this ISA is a total generalization.<br>
If no, this ISA is a partial generalization

<br>
Does one higher-level entity belong to multiple lower-level entity set?<br>
If No, it is a disjoint generalization.<br>
If no, it’s a overlapping generalization

<br>
Similar to the Inheritance<br>
<img alt="ER-Generalization.png" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Generalization.png" referrerpolicy="no-referrer">

<br>Cardinality constraints and participation constraints can be applied on ISA relationship sets.<br>
But some constraints are omitted because<br>
each entity on the lower-level is one entity on the higher-level (the entity sets on the lower-level always fully participate ISA);<br>
one entity cannot be associated with multiple entities in the same entity set on the lower-level.<br>
Thus, the constraints on ISA only discuss<br>
Does one higher-level entity belong to at least one lower-level entity set?<br>
If yes, this ISA is a total generalization.<br>
Does one higher-level entity belong to multiple lower-level entity set?<br>
If No, it is a disjoint generalization.<br>The above design process is bottom-up, combining several entity sets with same attributes into higher-level entity set.<br>
But sometimes the process is reversed.<br>
Some entity sets can be split into some lower-level entity sets with specific attributes.<br>
This top-down process is called specialization.<br>Consider the “student” and “instructor” example.<br>
If we want to express every person is either a student or an instructor, then this is a total generalization.<br>
And if we assume nobody can be a student and an instructor at the same time, this is a disjoint generalization.<br>
<img alt="S0PX3U" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/S0PX3U.png" referrerpolicy="no-referrer"><br>
<br>
<br>我的评价是真sharuan<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-extended-features.html</link><guid isPermaLink="false">Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:36:52 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/MnKmwI.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-href="Entity-Relationship-Model-Constraints" href="Entity-Relationship-Model-Constraints" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Constraints</a><a data-href="Entity-Relationship-Model-Constraints" href="database-management-system/rdbms/entity-relationship-model-constraints.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Constraints</a>]]></title><description><![CDATA[ 
 <br><br>
<br>Cardinality Constraints  基数约束 (one-one/one-many/many-many)
<br>Participation Constraints 参与约束 (for all/some)
<br>Constraints for Ternary Relationship Sets 三元关系集的约束
<br><br>
<br>
“how many entities can be associated with one entity at most (or at least)?”

<br>
Can one student have multiple majors?

<br>
Can one program have multiple students?

<br>
Does every student have a major?

<br>
Is every program the major for some students?

<br>
To express the answers, ER diagrams have constraints on relationship sets.
<br>Two types of constraints<br>
<br>Cardinality constraints
<br>Participation constraints
<br>
“Cardinality” is a term from set theory. It is the number of items in a set.
<br><br>To express the cardinality constraints.<br>
ER diagrams use an arrow  pointing to the one side.<br>
For the many side, the links simply have no arrow ().<br><br>
<br>An example for Cardinality Constraints One to many relationships:
<br><img alt="Many-to-one" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Many-to-one.png" referrerpolicy="no-referrer"><br>
Many student can only have one program
<br>Here are some conditions for the example:<br>
<br>one student can only associate with at most one program as his/her major
<br>one major program can have many students.
<br>A one-to-many relationship is the reverse of many-to-one.<br><br>One entity from one entity set is associated with at most one entity from the other entity set and vice versa.<br>
<br>For example, one instructor can be the program director of at most one program, and one program has at most one program director.
<br><img alt="One-to-one" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/One-to-one.png" referrerpolicy="no-referrer"><br><br>One entity from one entity set can be associated with multiple entities from the other entity set and vice versa.<br>
<br>For example, one student can borrow multiple books, and one book can be borrowed by multiple students.
<br><img alt="Many-to-many" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Many-to-many.png" referrerpolicy="no-referrer"><br><br>
<br>Total Participation

<br>Every entity participates a relationship.
<br>The link is a double line (=).


<br>Partial Participation

<br>There are some entities do not participate any relationship.
<br>The link is a single line (−).


<br><br>
<br>Example:<br>
Every student has a major.<br>
Every program is the major for some students. (Programs also totally participate.)
<br><img alt="Total-participation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Total-participation.png" referrerpolicy="no-referrer"><br><br>
<br>Example:<br>
It’s possible that an instructors is not a program director for any program.<br>
But every program has a program director.
<br><img alt="Particial-participation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Partical-participation.png" referrerpolicy="no-referrer"><br><img alt="Alternative-Notations" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER-Alternative-Notations.png" referrerpolicy="no-referrer"><br><br>we usually avoid using constraints on ternary relationship sets.<br>
If expressing constraints is important, ternary relationship sets can always be converted into several binary ones.<br>Non-binary relationships with constrains is complex.<br>
<br>Not suggested to use constraints on non-binary relationships (ambiguous)
<br>See lecture: convert non-binary to binary
]]></description><link>https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-constraints.html</link><guid isPermaLink="false">Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 12:36:56 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Many-to-one.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ER/Many-to-one.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DataBase Management System]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br>RDBMS<br>
<br>数据存储在列和表中
<br>通过数据表示关系
<br>数据操纵语言
<br>数据定义语言
<br>从物理层抽象 
<br>应用指定需求而非实现方式 
<br>物理层可以更改

<br>创建索引以支持查询
<br>内存数据库


<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/database-management-system/database-management-system-overview.html</link><guid isPermaLink="false">Database Management System/Database Management System Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:35:16 GMT</pubDate></item><item><title><![CDATA[Softmax and Argmax]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Softmax" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Softmax</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Argmax" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Argmax</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a> <a href="https://www.allenygy.vip?query=tag:Softmax" class="tag" target="_blank" rel="noopener nofollow">#Softmax</a> <a href="https://www.allenygy.vip?query=tag:Argmax" class="tag" target="_blank" rel="noopener nofollow">#Argmax</a><br><br>
<br>argmax
<br>softmax
<br><br>The argmax function returns the index of the maximum value in a given array or function. Mathematically, it can be represented as:<br><br>
<br>简单的说, 有一个数组, argmax 会找到最大数字的下标
<br>Example
给定数组如下

<br>
<br>argmax 将会返回3，因为最大值 在数组的下标是3

<br>
<br>优点在于可以简单直接的解释输出
<br>缺点在与argmax不可导，不可用于训练模型
<br>所以一般可以用argmax输出，softmax训练<br><br>The softmax function converts a vector of values into probabilities, such that the sum of all probabilities equals 1. The formula for softmax is:<br><br>Where:<br>
<br>
 is the  element of the input vector.

<br>
 represents the exponential of the  element.

<br>
The denominator is the sum of the exponentials of all elements in the input vector.

<br>
这种转换在多类分类问题中特别有用，其中softmax函数的输出表示不同类的预测概率。

<br>Example
给定数组如下

<br>
<br>softmax函数将返回一个概率向量:<br>


]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/softmax-and-argmax.html</link><guid isPermaLink="false">Deep Learning/00-Basic/Softmax and Argmax.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Overfitting and Underfitting]]></title><description><![CDATA[ 
 <br><br>数据<br>模型容量<br>
<br>拟合各种函数的能力
<br>低容量的模型难以拟合训练数据
<br>高容量的模型可以记住所有的训练数据 
<br>]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/overfitting-and-underfitting.html</link><guid isPermaLink="false">Deep Learning/00-Basic/Overfitting and Underfitting.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Loss Function]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:LossFunction" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#LossFunction</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a>  <a href="https://www.allenygy.vip?query=tag:LossFunction" class="tag" target="_blank" rel="noopener nofollow">#LossFunction</a><br><br>
<br>Mean Squared Error (MSE)
<br>Cross Entropy Loss
<br><br><br>
<br>Used for regression tasks. Measures the average squared difference between actual values  and predicted values .
<br><br><br>
<br>Also used for regression tasks. It measures the average absolute difference between actual and predicted values.
<br><br><br>
<br>
通常用于处理分类问题

<br> 即为分类总数
<br> 即为真实类别概率
<br> 即为对该类别的预测概率


<br>
通常, , 因为真实值是确定的，可化简得到

<br><br>Flex


Cross Entropy012345678910−3-2.5−2-1.5−1-0.500.51
<br>
The derivative of cross entropy012345678910-1.8-1.6-1.4-1.2−1-0.8-0.6-0.4-0.20



<br><br><br>
<br>Typically used for "maximum-margin" classifiers like Support Vector Machines (SVM).
<br><br><br>
<br>A loss function used in regression that is less sensitive to outliers than MSE.
<br><br><br>
<br>Measures how one probability distribution  diverges from a second probability distribution . Often used in variational inference or generative models.
<br><br><br>
<br>Used for classification problems, particularly in models like neural networks with a softmax output.
]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/loss-function.html</link><guid isPermaLink="false">Deep Learning/00-Basic/Loss Function.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[K Cross Verified]]></title><description><![CDATA[ 
 <br><br>常用于数据不足时<br>
<br>将训练数据分成 k 块
<br>For i=1,...,k

<br>使用第i块作为验证数据集，其余作为训练数据集


<br>报告 k个验证集的平均
<br>常用：K=5，10<br>
数据较大时，也可以 K = 3]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/k-cross-verified.html</link><guid isPermaLink="false">Deep Learning/00-Basic/K Cross Verified.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Gradient Descent]]></title><description><![CDATA[ 
 <br><br>
<br>Gradient Descent 梯度下降算法 GD
<br>Stochastic Gradient Descent 随机梯度下降 SGD
<br>Momentum 动量
<br>Adaptive learning 自适应学习 

<br>AdaGrad 
<br>RMSProp


<br>Momentum &amp; Adaptive learning

<br>Adam


]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/gradient-descent.html</link><guid isPermaLink="false">Deep Learning/00-Basic/Gradient Descent.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Dropout]]></title><description><![CDATA[ 
 <br><br><br>一个好的模型需要对输入数据的扰动鲁棒<br>
<br>使用噪音的数据等价于 Tikhonov 正则
<br>丢弃法：在层之间加入噪音
<br><br>
<br>对加入噪音得到， 希望期望不变
<br><br>
<br>丢弃法对每个元素进行如下扰动
<br><br><br>
<br>通常将丢弃法作用在隐藏全连接层的输出上
<br><br>Flex


<img alt="MLP" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202408242153171.png" referrerpolicy="no-referrer">



<img alt="Dropout" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202408242158498.png" referrerpolicy="no-referrer">

<br><br>
<br>dropout 将一些输出项随机置0来空值模型复杂度
<br>常作用在多层感知机的隐藏层输出上
<br>丢弃概率是空值模型复杂度的超参数
<br><br>import torch 
def dropout_layer(X,dropout):
	assert 0&lt;= dropout &lt;=1 #概率值在0-1之间
	if dropout == 1:
		return torch.zeros_like(X)
	if dropout == 0:
		return X
	mask = (torch.randn(X.shape) &gt; dropout).float
	return mask * X / (1.0-dropout)
	
]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/dropout.html</link><guid isPermaLink="false">Deep Learning/00-Basic/Dropout.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202408242153171.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202408242153171.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Activation Function]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:激活函数" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#激活函数</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:深度学习" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#深度学习</a> 
 <br><a href="https://www.allenygy.vip?query=tag:激活函数" class="tag" target="_blank" rel="noopener nofollow">#激活函数</a> <a href="https://www.allenygy.vip?query=tag:深度学习" class="tag" target="_blank" rel="noopener nofollow">#深度学习</a><br><br><br>
<br>增加非线性表达  使得神经网络可以拟合任意函数 
<br>连续可导的函数  可以使用梯度下降法进行参数更新
<br>定义域是   可以映射所有实数
<br>单调递增的函数  不改变输入的响应状态
<br><br>饱和函数<br>Def

<br>
<br>导致梯度消失 

<br>参数不会被更新


<br>Sigmoid 
<br>Tanh
<br><br>非饱和函数<br>
<br>Rectified Linear Unit 修正线性单元  RELU 

<br>解决梯度消失问题 


<br>RELU  Leaky ReLU, Parametric ReLU, ...
<br><br><br>Sigmoid−5−4−3−2−101234500.10.20.30.40.50.60.70.80.91<br>Cons

<br>
非零均值函数

<br>导致参数同时（正向/反向）更新，不利于收敛	


<br>
导数最大值 

<br>导致每层梯度被动缩小 4 倍	

<br>导致开始的几层梯度几乎不变

<br>就是梯度消失现象 gradient vanishing problem







<br>Warning
<img alt="Sigmoid" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051516842.png" referrerpolicy="no-referrer">
<br><br>Abstract
Derivatives of tanh and tanh−10−8−6−4−20246810−1-0.8-0.6-0.4-0.200.20.40.60.81

<br>Pros	

<br>零均值函数	

<br>比 Sigmoid 更快收敛



<br>Cons	

<br>饱和函数

<br>梯度消失 



<br>Warning
<img alt="tanh" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051530904.png" referrerpolicy="no-referrer">
<br><br>Abstract

ReLU−2-1.5−1-0.500.511.5200.20.40.60.811.21.41.61.82
<br>Pros

<br>非零均值函数 

<br>收敛速度快


<br>非饱和函数 

<br>避免梯度消失问题



]]></description><link>https://www.allenygy.vip/deep-learning/00-basic/activation-function.html</link><guid isPermaLink="false">Deep Learning/00-Basic/Activation Function.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 26 Nov 2024 16:52:23 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051516842.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051516842.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Basic tourch]]></title><description><![CDATA[ 
 <br><br>import numpy as np	
import torch

]]></description><link>https://www.allenygy.vip/deep-learning/01-linear-regression/basic-torch.html</link><guid isPermaLink="false">Deep Learning/01-Linear Regression/Basic torch.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Softmax Regression]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Softmax" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Softmax</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Regression" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Regression</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a>  <a href="https://www.allenygy.vip?query=tag:Softmax" class="tag" target="_blank" rel="noopener nofollow">#Softmax</a> <a href="https://www.allenygy.vip?query=tag:Regression" class="tag" target="_blank" rel="noopener nofollow">#Regression</a> <br>]]></description><link>https://www.allenygy.vip/deep-learning/02-softmax-regression/softmax-regression.html</link><guid isPermaLink="false">Deep Learning/02-SoftMax Regression/Softmax Regression.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[MLP]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:MLP" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#MLP</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a> <a href="https://www.allenygy.vip?query=tag:MLP" class="tag" target="_blank" rel="noopener nofollow">#MLP</a> <br>]]></description><link>https://www.allenygy.vip/deep-learning/03-multiple-layer-perceptron/mlp.html</link><guid isPermaLink="false">Deep Learning/03-Multiple Layer Perceptron/MLP.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Bert]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:深度学习" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#深度学习</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Bert" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Bert</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NLP" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NLP</a> 
 <br><a href="https://www.allenygy.vip?query=tag:深度学习" class="tag" target="_blank" rel="noopener nofollow">#深度学习</a> <a href="https://www.allenygy.vip?query=tag:Bert" class="tag" target="_blank" rel="noopener nofollow">#Bert</a> <a href="https://www.allenygy.vip?query=tag:NLP" class="tag" target="_blank" rel="noopener nofollow">#NLP</a><br><br>Bidirectional Encoder Representations from Transformers]]></description><link>https://www.allenygy.vip/deep-learning/nlp/bert.html</link><guid isPermaLink="false">Deep Learning/NLP/Bert.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Prompting Engineering Guide]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/deep-learning/prompting-engineering-techniques.html</link><guid isPermaLink="false">Deep Learning/Prompting Engineering Techniques.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 25 Nov 2024 08:18:47 GMT</pubDate></item><item><title><![CDATA[Prompting and In-Context Learning]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Prompting" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Prompting</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:In-ContextLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#In-ContextLearning</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a>  <a href="https://www.allenygy.vip?query=tag:Prompting" class="tag" target="_blank" rel="noopener nofollow">#Prompting</a> <a href="https://www.allenygy.vip?query=tag:In-ContextLearning" class="tag" target="_blank" rel="noopener nofollow">#In-ContextLearning</a><br><br><br>
<br>Need large task-specific datasets for fine-tuning  需要大量专业的数据集
<br>Train endlessly   不通用

<br>Collect data for task  , fine-tune model to solve task 
<br>Collect data for task  , fine-tune model to solve task 
<br>...


<br>Prone to overfitting  容易过拟合	

<br>Large models adapt to very narrow task distribution, which may exploit spurious correlations


<br>Finetuning large models is expensive to time, memory, and cost
<br>How to adapt a pre-trained model without fine-tuning<br><br>What is Prompting?

<br>Prompt-based learning (inference)
<br>A new paradigm in Deep Learning / Machine Learning (NLP, CV)
<br>Encouraging a pre-trained model to make particular predictions by providing a “prompt” that instructs the model to perform the task effectively

<br>The General workflow of Prompting:	<br>
<br>Prompt Addition 
<br>Answer Prediction (Search)
<br>Post-process the answer
<br><br>
<br>
Given input , this component modifies the input into a prompt 

<br>Append a textual string to the input


<br>
Contains two step 

<br>Define a template with two slots 

<br>An input slot  for input  
<br>An answer slot  for an intermediate generated answer  that will later be mapped into label 


<br>Fill slot  with the input 


<br><br><br><br>
<br>Pre-trained model choice 
<br>Prompt engineering 
<br>Answer engineering 
<br>Multi-Prompt learning
<br><br><br><br><br><br>A prompt contains any of the following elements<br>
<br>Instruction − The description of a specific task that you want the model to perform 
<br>Context − External information or additional context that can steer the model to better responses 
<br>Input data − The input or question that we are interested to find a response for 
<br>Output Indicator − The type or format of the output
<br><br>
<br>Text classification 
<br>Text summarization 
<br>Information extraction 
<br>Question Answering 
<br>Conversation 
<br>Code generation
<br>Reasoning
<br><br>
<br>Zero-shot Prompting      无样本
<br>Few-shot Prompting      少样本
<br>Chain-of-Thought Prompting 
<br>Self-Consistency 
<br>Tree of Thoughts 
<br>Multimodal CoT Prompting
<br>Active-Prompt 
<br>Generate Knowledge Prompting 
<br>Retrieval Augmented Generation 
<br>Automatic Reasoning and Tool-use
]]></description><link>https://www.allenygy.vip/deep-learning/prompting-and-in-context-learning.html</link><guid isPermaLink="false">Deep Learning/Prompting and In Context Learning.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 25 Nov 2024 08:10:21 GMT</pubDate></item><item><title><![CDATA[Parameter-Efficient Fine-Tuning]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Fine-Tuning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Fine-Tuning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:PEFT" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#PEFT</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a> <a href="https://www.allenygy.vip?query=tag:Fine-Tuning" class="tag" target="_blank" rel="noopener nofollow">#Fine-Tuning</a> <a href="https://www.allenygy.vip?query=tag:PEFT" class="tag" target="_blank" rel="noopener nofollow">#PEFT</a><br><br><br>
<br>Modified small part of parameters of pretrained models
<br>Add extra parameters
<br>Add increment of parameters of pretrained models 

<br>LoRA, FACT


<br><br><br>Only modify (retraining) part of parameters of pretrained models <br>
<br>Bias and the final linear layer
<br>Pros 

<br>Simple, but efficient, comparable to full model fine-tuning 
<br>Can learn downstream tasks sequentially, which helps to deploy efficiently 
<br>For each downstream task, only very small number of parameters should be stored 


<br>For BERT backbone, 0.1% parameters are modified (retrained)

<br><br><br>Idea 
Add Adapter module to each layer of pretrain models
<br><br>Idea
Use prefixs, which can be learned and specific to given tasks, to mimic prompts
<br><br>Idea 

<br>Construct a prompt for each task, concatenate the prompt with data to input to Large Model 
<br>Only add prompt (tokens) at input layer, no MLP A Simplified version of Prefix Tuning

<br><br><br>Cons of previous tuning methods 

<br>Adapter Tuning adds Adapter layer in Transformer, which makes the model more deeper and increases the inference time 
<br>Prompt-based methods, such as Prefix Tuning and Prompt Tuning, are hard to train. In addition, the prompt token occupy the input space so as to decrease the number of available tokens

<br>]]></description><link>https://www.allenygy.vip/deep-learning/fine-tuning.html</link><guid isPermaLink="false">Deep Learning/Fine-Tuning.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 26 Nov 2024 16:46:40 GMT</pubDate></item><item><title><![CDATA[DeepLearning]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> 
 <br><a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a> <br><br>
<br><a data-tooltip-position="top" aria-label="AlexNet" data-href="AlexNet" href="https://www.allenygy.vip/AlexNet" class="internal-link" target="_self" rel="noopener nofollow">AlexNet</a>
<br><a data-tooltip-position="top" aria-label="Bert" data-href="Bert" href="https://www.allenygy.vip/Bert" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bert</a><a data-tooltip-position="top" aria-label="Bert" data-href="Bert" href="https://www.allenygy.vip/deep-learning/nlp/bert.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bert</a>
<br><a data-tooltip-position="top" aria-label="Prompting and In Context Learning" data-href="Prompting and In Context Learning" href="https://www.allenygy.vip/Prompting and In Context Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prompting and In Context Learning</a><a data-tooltip-position="top" aria-label="Prompting and In Context Learning" data-href="Prompting and In Context Learning" href="https://www.allenygy.vip/deep-learning/prompting-and-in-context-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prompting and In Context Learning</a>
<br><a data-tooltip-position="top" aria-label="Read Paper Process" data-href="Read Paper Process" href="https://www.allenygy.vip/Read Paper Process" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Read Paper Process</a><a data-tooltip-position="top" aria-label="Read Paper Process" data-href="Read Paper Process" href="https://www.allenygy.vip/research/read-paper-process.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Read Paper Process</a>
<br><a data-tooltip-position="top" aria-label="Fine-Tuning" data-href="Fine-Tuning" href="https://www.allenygy.vip/Fine-Tuning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Fine-Tuning</a><a data-tooltip-position="top" aria-label="Fine-Tuning" data-href="Fine-Tuning" href="https://www.allenygy.vip/deep-learning/fine-tuning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Fine-Tuning</a>
<br><a data-tooltip-position="top" aria-label="Attention" data-href="Attention" href="https://www.allenygy.vip/Attention" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Attention</a><a data-tooltip-position="top" aria-label="Attention" data-href="Attention" href="https://www.allenygy.vip/deep-learning/attention.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Attention</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning" data-href="Deep Learning" href="https://www.allenygy.vip/Deep Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Deep Learning</a><a data-tooltip-position="top" aria-label="Deep Learning" data-href="Deep Learning" href="https://www.allenygy.vip/deep-learning/deep-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Deep Learning</a>
<br><a data-tooltip-position="top" aria-label="Activation Function" data-href="Activation Function" href="https://www.allenygy.vip/Activation Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Activation Function</a><a data-tooltip-position="top" aria-label="Activation Function" data-href="Activation Function" href="https://www.allenygy.vip/deep-learning/activation-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Activation Function</a>
<br><a data-tooltip-position="top" aria-label="CV-Back Propagation" data-href="CV-Back Propagation" href="https://www.allenygy.vip/CV-Back Propagation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Back Propagation</a><a data-tooltip-position="top" aria-label="CV-Back Propagation" data-href="CV-Back Propagation" href="https://www.allenygy.vip/computer-vision/lecture/cv-back-propagation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Back Propagation</a>
<br><a data-tooltip-position="top" aria-label="Gradient Descent" data-href="Gradient Descent" href="https://www.allenygy.vip/Gradient Descent" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Gradient Descent</a><a data-tooltip-position="top" aria-label="Gradient Descent" data-href="Gradient Descent" href="https://www.allenygy.vip/deep-learning/00-basic/gradient-descent.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Gradient Descent</a>
]]></description><link>https://www.allenygy.vip/deep-learning/deep-learning.html</link><guid isPermaLink="false">Deep Learning/Deep Learning.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 20 Dec 2024 09:06:17 GMT</pubDate></item><item><title><![CDATA[Attention]]></title><description><![CDATA[ 
 <br><br>What is attention?
Attention Mechanism is an attempt to implement the same action of selectively concentrating on a few relevant things while ignoring others in deep neural networks
<br>Why is Attention needed in deep learning ?<br><br>
<br>intra-attention
]]></description><link>https://www.allenygy.vip/deep-learning/attention.html</link><guid isPermaLink="false">Deep Learning/Attention.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 26 Nov 2024 16:49:03 GMT</pubDate></item><item><title><![CDATA[Activation Function]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:激活函数" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#激活函数</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:深度学习" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#深度学习</a> 
 <br><a href="https://www.allenygy.vip?query=tag:激活函数" class="tag" target="_blank" rel="noopener nofollow">#激活函数</a> <a href="https://www.allenygy.vip?query=tag:深度学习" class="tag" target="_blank" rel="noopener nofollow">#深度学习</a><br><br><br>
<br>增加非线性表达  使得神经网络可以拟合任意函数 
<br>连续可导的函数  可以使用梯度下降法进行参数更新
<br>定义域是   可以映射所有实数
<br>单调递增的函数  不改变输入的响应状态
<br><br>Def

<br>
<br>导致梯度消失 

<br>参数不会被更新


<br>Sigmoid 
<br>Tanh
<br><br>
<br>Rectified Linear Unit 修正线性单元  RELU 

<br>解决梯度消失问题 


<br>RELU  Leaky ReLU, Parametric ReLU, ...
<br><br><br>Sigmoid−5−4−3−2−101234500.10.20.30.40.50.60.70.80.91<br>Cons

<br>
非零均值函数

<br>导致参数同时（正向/反向）更新，不利于收敛	


<br>
导数最大值 

<br>导致每层梯度被动缩小 4 倍	

<br>导致开始的几层梯度几乎不变

<br>就是梯度消失现象 gradient vanishing problem







<br>Warning
<img alt="Sigmoid" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051516842.png" referrerpolicy="no-referrer">
<br><br>Abstract
Derivatives of tanh and tanh−10−8−6−4−20246810−1-0.8-0.6-0.4-0.200.20.40.60.81

<br>Pros	

<br>零均值函数	

<br>比 Sigmoid 更快收敛



<br>Cons	

<br>饱和函数

<br>梯度消失 



<br>Warning
<img alt="tanh" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051530904.png" referrerpolicy="no-referrer">
<br><br>Abstract

ReLU−2-1.5−1-0.500.511.5200.20.40.60.811.21.41.61.82
<br>Pros

<br>非零均值函数 

<br>收敛速度快


<br>非饱和函数 

<br>避免梯度消失问题



]]></description><link>https://www.allenygy.vip/deep-learning/activation-function.html</link><guid isPermaLink="false">Deep Learning/Activation Function.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051516842.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407051516842.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[L!]]></title><description><![CDATA[ 
 <br><br><br>January<br>
February<br>
March<br>
April<br>
May<br>
June<br>
July<br>
August<br>
September<br>
October<br>
November<br>
December<br><br>Sunday<br>
Monday<br>
Tuesday<br>
Wednesday<br>
Thursday<br>
Friday<br>
Saturday]]></description><link>https://www.allenygy.vip/english/ielts/listen/listen-1.html</link><guid isPermaLink="false">English/IELTS/Listen/Listen-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Map]]></title><description><![CDATA[ 
 <br><br><br>east<br>
west<br>
north<br>
south<br>
northeast<br>
northwest 	<br>
southeast 	<br>
southwest<br><br>junction<br>
crossroad<br>
crossing<br>
traffic lights<br><br>top<br>
bottom	<br>
middle	<br>
center	<br>
left	/ right	side of<br>
top right / left<br>
bottom right / left corner<br><br>beside<br>
next to	<br>
behind<br>
in front of	<br>
opposite on the other end<br>
between ... and ...<br>
close to<br>
near<br>
nearby<br>
not far away<br>
a short distance away<br>
far away from <br><br>entrance/gate<br>
main entrance<br>
side entrance<br>
ticket / buy office / kiosk / box<br>
toilet / bathroom / washroom 	<br>
lift<br>
car park<br>
gift / souvenir shop 	<br>
information center<br>
garden<br>
garage<br><br>Go / turn / move / run<br>
Go east/west/north/south	<br>
Go along<br>
Turn left/right	<br>
Go straight/ahead/forward/onwards/forth<br>
Behind / afterwards<br>
Go up/down<br>
Go past 经过<br>
Go through 穿过	<br><br>Entry / access / entrance / way in<br>
Exit / way out / emergency exit <br><br>Top / peak / summit / climax / crest<br>
reach the summit<br>
bottom / base / foot / lowest point]]></description><link>https://www.allenygy.vip/english/ielts/listen/ielts-map.html</link><guid isPermaLink="false">English/IELTS/Listen/IELTS-Map.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS-Part-2]]></title><description><![CDATA[ 
 <br><br><br>You should say:<br>What it is<br>When and why you started to follow this routine<br>Whether it is easy to follow this routine<br>And explain why you enjoy having this routine in your daily life<br><a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a><br><br>Off the top of my head, the daily routine that I enjoy is playing badminton.<br>And for when I started to do it is about a year ago.<br>Because a friend invited me to join their badminton group, and I quickly realized how much I enjoyed it.<br>As for whether it’s easy to keep/ stick to 坚持做/ continue, I would say yes. <br>Because although my schedule can get busy with classes, projects, and studying, setting aside specific times for badminton helps me manage my time better. Plus, having friends who play with me keeps me motivated to stick to it.<br>On top of that, the reason why I am a big fan of/ I am addicted to/ I can’t live without this routine is because it provides a perfect escape from the academic pressures of being a computer science student. <br>When I play badminton, I feel excited and happy, and it helps me relax. It’s a great way to stay physically fit and also serves as a social activity where I can catch up with friends. Overall, this routine not only keeps me active but also improves my mental well-being, making it an essential part of my life.<br><br><br>You should say:<br>
<br>Who this person is
<br>How you knew him/her
<br>What music he/she likes
<br>Why he/she thinks music is important
<br>And explain how you feel about him/her
<br><a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a><br>
<a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a><br><br>Off the top of my head, the person I am thinking about is Jack.<br>
So… we are best buddies (relationship), and So… we are classmates, and we are both from the same hometown.<br>
We first met during our freshman year at university when we were assigned to the same dorm room.|<br>And for how I knew him, well, ___<br><br>____<br><br>__...<br><br>Overall, ___(name) is …|<br>
|Speaking of the music he likes, ____<br><br>___...<br><br>And personally, I think (how you feel about the music he likes:)___.<br>
As for the reason why music is important to him is bc…<br>
So, basically, I think ____(name)…<br><br><br>1.&nbsp;Describe someone (a famous person) that is a role model for young people<br>
2.&nbsp;Describe a person who encourage you to achieve your goal<br>
3. Describe a film character played by an actor or actress whom you admire<br>(改写版:)<br>Off the top of my head, the person I am thinking about is _(name),  who starred in the movie _(movie title) as _(character name).<br>
(注意考到第三题的话需要改写开头!)<br>And the first time I noticed her was _(when), I have to say she’s _(adj. e.g. hardworking/ talented etc.).<br>Speaking of which, in the movie: There’s _(character) played by _(actor). And _(character) is _(identity/ occupation etc.)&nbsp;Then, _(the character’s goal), But/and _ (what difficulty the character goes thru) As a result, _<br><br><br>
<br>Describe a person you really enjoy studying/working with 
<br>Describe someone you know who made a good decision recently
<br><br>Off the top of my head, the person I’m thinking about is Yunus.<br>So… we are best friends. We first met during our freshman year at university when we were assigned to the same dorm room. <br>Overall, I would say Yunus is  compatible with everyone<br>
(adj./从句: 照应 “enjoy studying/working with”).<br><a data-footref="[inline3" href="https://www.allenygy.vip/about:blank#fn-4-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[4]</a><br><br>Speaking of which, we were having this group work for a Database Management System Project ,  in the second semester of my sophomore year . And he’s the group leader.<br>Therefore, he assigned me to do the code work.<br>
And I gotta say this was a very wise decision because I have a strong background in coding and have consistently performed well in our computer science courses. <br>As a result, our group completed the project ahead of schedule and received the highest grade in the class. This success clearly reflected Yunus’s excellent decision-making skills and his ability to leverage the strengths of his team members effectively.<br><a data-footref="[inline4" href="https://www.allenygy.vip/about:blank#fn-5-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[5]</a><br><br>On top of that, during the teamwork, he ____, which showed that he’s got great leadership. And everyone_(feeling/reaction) working with him.<br>On top of that, during the teamwork, he consistently communicated clearly and ensured everyone was on the same page, which showed that he’s got great leadership. And everyone felt motivated and appreciated working with him.<br><a data-footref="[inline5" href="https://www.allenygy.vip/about:blank#fn-6-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[6]</a><br><br>Therefore, I think Yunus is really a good leader and a great friend to have, and I look forward to working with him on future projects.<br><br><br>
<br>Describe an interesting old person you have met
<br>Describe a person you met at the party who you enjoyed talking with
<br>Describe a person who you are happy to know
<br><br>Off the top of my head, the person I’m thinking about is Mr. Wang.<br>
So, Mr. Wang is a family friend, and we met at my grandfather's<br>
birthday party.<br>
Overall, I think Mr. Wang is well-read and fascinating to talk to.<br><a data-footref="[inline6" href="https://www.allenygy.vip/about:blank#fn-7-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[7]</a>	<br><br>Speaking of which, at the party, we somehow ended up sitting next to each other during dinner, so we just started talking.<br><br>I gotta say, I was so amazed by the talk with him:  <br>We first talked about his incredible knowledge of various board games. He shared fascinating stories about playing chess, Go, Five in a Row, and Chinese chess, detailing some of the most challenging matches he had played and the different strategies he employed.<br>Then, he shared his experiences about working as a historian. Mr. Wang had spent several years researching and documenting historical events, and his insights into various historical periods were incredibly enlightening.<br>Also, he mentioned that he often participated in board game tournaments and had won several local championships, which was a testament to his skill and dedication.<br><a data-footref="[inline7" href="https://www.allenygy.vip/about:blank#fn-8-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[8]</a><br><br>In a word, Mr. Wang is an incredible storyteller and a treasure trove of knowledge.<br>
Mr. Wang stands out for his vibrant curiosity and his ability to engage others with his experiences. While many elderly people I know tend to focus on routine and familiar topics, Mr. Wang continually seeks out new adventures and shares them in a way that captivates and inspires.<br><br><br>1.&nbsp;Describe a time when you missed or were late for an important meeting/event<br>You should say:<br>
<br>When it happened
<br>What happened
<br>Why you missed/were late for it
<br>And explain how you felt about this experience
<br><br>Off the top of my head, I would like to talk about a time I was late for an interview for a peer mentor program in my university.<br>So… this happened when I was applying to be part of the peer mentor program at my university. <br>Basically, this interview was important to me because being a peer mentor would allow me to help incoming students transition to university life, provide academic guidance, and foster a supportive community. It was a chance to develop my leadership and communication skills while making a positive impact on others.  I would say it was pretty much a big deal.<br><br>Speaking of which, just a few days before the interview, I unfortunately contracted COVID-19. I started experiencing symptoms like fever and fatigue, which made it difficult for me to prepare for the interview and focus on the tasks at hand.<br>So, one thing led to another, and I had to quarantine myself at home to recover and prevent spreading the virus to others. As a result, I was unable to attend the interview in person and ended up being late for the scheduled time.<br>As a result, I missed the chance to participate in the peer mentor program that year.<br>Overall, the experience taught me the importance of resilience and adaptability in the face of unexpected challenges. I learned to prioritize my health and find alternative ways to pursue my goals, such as applying for the program again in the future once I had fully recovered.<br><br><br>Speaking of which, what happened was that… (固定开头)<br>时间顺序: <br>
<br>At first… then… after that/ right after that…&nbsp;&nbsp;
<br>I mean…
<br>One thing led to another 自然而然, 接踵而至地
<br>表出乎意料:<br>Surprisingly/ unexpectedly/ shockingly<br>
<br>…, which I didn’t expect
<br>…, I mean, I didn’t see it coming.
<br>…, which got me stunned 惊呆
<br>…, which got me thunderstruck 目瞪口呆
<br>… just for no reason 不知为何
<br>And for some reason… 不知怎么地
<br>表递进/意料之中:<br>
<br>…, which’s totally reasonable
<br>…, which’s fair 有道理的, 说得通的
<br>表突然发生:<br>
<br>All of a sudden
<br>(all) out of the blue
<br>Out of nowhere…
<br>On the spur of the moment 一时冲动, 心血来潮*
<br>其他:<br>
<br>Turned out… 结果/原来… (表转折, 注意使用)
<br>Sadly/ regrettably = unfortunately…
<br>Thank goodness/ as luck would have it = luckily…
<br>The (only) thing was that (唯一)不好的是/问题是…
<br>The tricky part was that 棘手的是
<br><br><br>e.g. making handcraft (e.g. origami/ pottery art)/ drawing/ playing board game (e.g. chess/ go/ Five in A Row etc.) etc./ basic programing/<br>
<br>Describe a time when you taught a friend/relative亲戚 something<br>
2.&nbsp;Describe a time you taught/showed something new to a younger person<br>
3.&nbsp;Describe a piece of good news that you heard about someone you know well
<br><br>Off the top of my head, I would like to talk about a time I helped my little cousin (a young child relative) with her skills in playing chess (doing what).<br><br>So, it happened  when 2 years ago.<br>He participated in(参加) a school chess competition(what competition) represented for his class. And he’s got 2 week left.(how many days left for it).<br>And he knew I was skilled in chess(擅长xxx技能), so he turned to me for help.<br><br>Basically, he told me he got the third place in the competition(得到了什么好成绩),&nbsp;<br>
so I was really excited and happy for him (how you felt about the good news).<br><br>Speaking of which, he practiced _(skill) with me, for the __(how long).<br>At first, I showed him my tricks like how to ___ (具体的一个skill).<br>Then, he ___(学的过程)<br>As a result, he ___...<br><br><br>Welcome-home dinner party/ New Yr’s party/ birthday party (coming-of-age成人礼)/ anniversary party/ graduation party etc.<br>1.&nbsp;Describe a party that you enjoyed<br>
2.&nbsp;Describe a special meal that someone made for you<br>
3.&nbsp;Describe an unusual meal you had<br>
4.&nbsp;Describe an occasion you wore the best clothes<br><br>
<br>
<br>binge watching 刷  short videos<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Genre 流派： rock/classic/jazz/hip-pop/heavy metal/k-pop/j-pop/canto-pop<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Singers:  Taylor Swift, Ed Sheeran, Jay Chou, JJ Lin, etc.<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>交代who this person is: Name, Relationship Where from, How you met, Impression of this person<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>交代事件:<br>
-&nbsp;&nbsp;What you did with this person<br>
-&nbsp; What you needed to do in the group<br>
-&nbsp;&nbsp;What’s the good decision/ why it’s a good decision<br>
-&nbsp;&nbsp;What’s the good result<a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>附加: he’s a good leader = you enjoy working with 的其他原因<a href="https://www.allenygy.vip/about:blank#fnref-6-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>交代: who this old person is: Relationship with this person, Met at what kind of party, Impression of this person<a href="https://www.allenygy.vip/about:blank#fnref-7-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>交代聊天内容：1.什么方面 (参考hobbies 人设) 2.具体分享什么信息: - Experience abt… Got awards in… -Worked as…  Knew some celebrity in…<a href="https://www.allenygy.vip/about:blank#fnref-8-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/english/ielts/speak/part-2/ielts-oral-test-part-2.html</link><guid isPermaLink="false">English/IELTS/Speak/Part-2/IELTS ORAL TEST Part-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Note for the Video]]></title><description><![CDATA[ 
 <br><br>
<br>
People in changle would sell daughters the family could not afford, and people in putian would buy the sold daughters in the 1970s and 1980s

<br>
<br>
A 16 years old girl was asked to marry his brother, the girl did not agree and was locked up for a week

<br>
The preference for boys over girls and one-child policy

<br>
In terms of policy, the management of the birth population should be strengthened<br>
In terms of technology, build a nationwide DNA bank<br>
Ideologically, changing people's preference for boys over girls

]]></description><link>https://www.allenygy.vip/english/ielts/speak/part-2/ielts-oral-test-part-2-video.html</link><guid isPermaLink="false">English/IELTS/Speak/Part-2/IELTS ORAL TEST Part-2 Video.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS-Part-1]]></title><description><![CDATA[ 
 <br><br><br>Do you like eating chocolate? Why or why not?
Yes, I do enjoy eating chocolate.<br>
I find it to be a delightful treat, especially when I want something sweet. Chocolate has a rich and smooth texture that’s very satisfying.<br>
Plus, it’s a nice little indulgence that can brighten up my day, especially after a long study session. However, I try to enjoy it in moderation since it can be quite sugary.
<br><br>Is there anything that has made you feel happy lately?
Yes, recently I completed a project that I’d been working on for quite some time.
It was a challenging task, but seeing it come together and getting positive feedback made me feel really accomplished and happy. 
]]></description><link>https://www.allenygy.vip/english/ielts/speak/record/part-1/ielts-oral-test-part-1.html</link><guid isPermaLink="false">English/IELTS/Speak/Record/Part 1/IELTS ORAL TEST Part-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Speak]]></title><description><![CDATA[ 
 <br><br>
<br>三个部分
<br>14-15 min 
<br><br>3-5 个话题<br>
<br>Daily Life topic
<br>stay-up ？
<br>Relax 
<br>Challenge
<br><br>
<br>法律
<br>运动
<br>重要的植物
<br>未来想学的科目
<br>容易学习的地方<br>
.... 
<br><br>
<br>流利与连贯
<br>词汇多样性
<br>语法多样性以及准确性
<br>发音
<br>
<br>Part 1: 每个问题至少 3-4 句话
<br>Part 2: 尽量将 满 2 分钟 或者 1:45 左右
<br>Part 2: 分段段首都要出现 语篇标记

<br>比如： when it comes to this topic,  I would like to talk about ...


<br>表达有连贯性 意味着尽可能恰当的出现 连接词 和 语篇标记
<br>口音：不要混杂
<br><br>
<br>基础/日常词汇使用准确
<br>尽量使用地道表达
<br>不强调高级词汇使用
<br>改述能力
<br><br>
<br>复杂结构的使用 非书面长难句
<br>基本语法使用规范<br>
esp. 口语常用时态/ 名词单复数/ 三单
<br><br>
<br>Dreams &amp; Goals
<br>Study life / Work Life
<br>Hobbies &amp; Interests
<br>Personality 
<br>Health &amp; Budget
<br><br>
<br>名词

<br>举例


<br>形容词

<br>正面描写 / “内容”
<br>侧面描写/行为体现


<br>动态

<br>When/Where /Who /What /how
<br>How often /long /why /how you feel


<br><br><br>
<br>A place with good environment with hospital
<br>A place with a lot of old people
<br>A place near a shopping mall
<br>A place with elevator
]]></description><link>https://www.allenygy.vip/english/ielts/speak/ielts-speak-overview.html</link><guid isPermaLink="false">English/IELTS/Speak/IELTS-SPEAK-OVERVIEW.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Static Chart]]></title><description><![CDATA[ 
 <br><br><br>account for<br>
take up<br>
make up<br>
constitute<br>
represent  <br>males accounted for 5%<br><br>was five times <br>A was five times B<br>
The price of gold was five times that of sliver.<br><br>Compared to 30% females,<br>in contrast to <br>as opposed to<br><br>outnumbered<br>
exceeded<br>
was significantly / slightly higher than ...<br><br>overtake <br>the consumption of beef overtook  that of pork<br><br>predominated in <br>male-dominated<br>the dominant ...<br>
the most popular means of transport<br><br>the proportions ranged from ... to ... <br>accounted for roughly equal proportions<br>Males and females accounted for roughly equal proportions at &lt;&gt; and &lt;&gt; respectively.<br>The percentages of A was closely matched by that of ....<br><br>the gap narrowed /  widened           动态<br>the gap was narrowed /  large in...<br>there was a small gap between ... and ... <br>the biggest gap/ difference was observed / found / took place / in...<br><br>there was a similar (opposite) trend / situation<br>there were corresponding falls / increases in <br>increased / decreased correspondingly ]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/static-charts.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/Static Charts.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Map Charts]]></title><description><![CDATA[ 
 <br><br><br>this map illustrates<br>
changes that took place in &lt;&gt; between &lt;&gt; and &lt;&gt; <br>The most significant was observed in &lt; the southeast part of the city&gt; <br>&lt;&gt; experienced noticeable changes <br>the village <br><br>The woodland were demolished in order to make way for a &lt;&gt;<br>The villages &lt; on the right of mountain&gt;was knocked down  / cleared and replaced by  a new airport <br>The playground was converted / turned / developed/ into a seven screens cinema / a city complex/ department store<br><br>&lt;&gt; was newly constructed / built <br>&lt;&gt; were added &lt;&gt;<br>&lt;&gt; were divided into &lt;&gt;<br> The playground was divided into 2 parts , a swimming pool and a tennis court. <br><br>The road was | extended / expanded / enlarged  | further westward / downward <br>be enlarged<br>
be enforced  被执行<br>
be encouraged 鼓励<br>The car park increased / decreased in size <br><br>the hospital and &lt;&gt; remained unchanged <br>There was no changed in the location of A, B and C. <br>
<br>The school

<br>be moved to the east of the river 
<br>be relocated
<br>be removed 
<br>be eradicated 


]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/map-charts.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/Map Charts.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS-Write-Task1]]></title><description><![CDATA[ 
 <br><br>
<br><a data-href="Dynamic Charts" href="https://www.allenygy.vip/Dynamic Charts" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Dynamic Charts</a><a data-href="Dynamic Charts" href="https://www.allenygy.vip/english/ielts/write/task1/dynamic-charts.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Dynamic Charts</a>
<br><a data-href="Static Charts" href="https://www.allenygy.vip/Static Charts" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Static Charts</a><a data-href="Static Charts" href="https://www.allenygy.vip/english/ielts/write/task1/static-charts.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Static Charts</a>
<br><a data-href="Flow Charts" href="https://www.allenygy.vip/Flow Charts" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Flow Charts</a><a data-href="Flow Charts" href="https://www.allenygy.vip/english/ielts/write/task1/flow-charts.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Flow Charts</a> 
<br><a data-href="Map Charts" href="https://www.allenygy.vip/Map Charts" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Map Charts</a><a data-href="Map Charts" href="https://www.allenygy.vip/english/ielts/write/task1/map-charts.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Map Charts</a>
<br><br>Dynamic 有着不只一个的时间，更强调随时间的变化 Trends<br>
Static 仅有一个时间，强调数据之间的关系   Quantities<br>There was a dramatically increase in the price of gold from  &lt;&gt; in &lt;&gt; to &lt;&gt; in &lt;&gt;.<br>It increased dramatically,  peaking at &lt;&gt;. <br>It increased dramatically,  reaching the highest point at ....<br>The price of gold increased more than five times<br>There was no significantly change in ... <br>be unchanged]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/ielts-write-task1.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/IELTS-Write-Task1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS-Write-Task-1-Material]]></title><description><![CDATA[ 
 <br><br><br><br>“Sales increased from $1 million to $2 million over the year.”<br>Rise/ Rose from A to B between C and D<br>
increase/ increased<br>
grow/grew<br>
climb/climbed<br>
escalate/escalated<br>Sth surged to &lt;&gt; in ...<br>
“Sales surged to $2 million in the first quarter.”<br>Fall/Fell from A to B by the end of the decade<br>
Decline/Declined<br>
Drop / Dropped<br>
Dip / Dipped<br>sth plummeted to &lt;&gt; in ...<br>
“The stock price plummeted to its lowest point in March 2021.”<br><br>
<br>For Big Changes: significantly, dramatically, considerably, substantially

<br>Example: "The number of users increased significantly over the period."


<br>For Small Changes: slightly, gradually, moderately, marginally

<br>Example: "The sales rose slightly in the first quarter."


<br><br>
<br>
Remain Stable/Constant

<br>[Something] remained stable/constant at [number/level] over [time period].
<br>Example: “The temperature remained constant at 20°C over the winter months.”


<br>
Stay the Same

<br>[Something] stayed the same at [number/level] throughout [time period].
<br>Example: “Production stayed the same at 1,000 units per month over the two-year period.”


<br>
Maintain the Same Level

<br>[Something] maintained the same level of [number/amount] for [time period].
<br>Example: “The population maintained the same level of 5 million for over a decade.”


<br>
Stabilize At

<br>[Something] stabilized at [number/level] by [specific time].
<br>Example: “Visitor numbers stabilized at 50,000 per month by the end of the summer.”


<br><br>
<br>Upward Trends: upward trend, steady rise, growth, upward movement 

<br>Example: "There was a steady rise in sales from 2015 to 2020."


<br>Downward Trends: downward trend, gradual decline, decreasing trend, downward movement 

<br>Example: "The data shows a gradual decline in population."


<br><br>
<br>
Peak / Peaked At

<br>[Something] peaked at [highest number/level] in [time period].
<br>Example: “The number of online shoppers peaked at 2 million in December.”
<br>[Something] peaked at [number] before declining.
<br>Example: “Tourist arrivals peaked at 100,000 before declining in the following months.”


<br>
Reach a Peak of

<br>[Something] reached a peak of [highest number] in [time period].
<br>Example: “The company’s profits reached a peak of $5 million in 2019.”
<br>[Something] reached a peak of [number] and then [verb]
<br>Example: “The temperature reached a peak of 40°C and then fell gradually.”


<br>
Hit a Low of / Lowest Point

<br>[Something] hit a low of [lowest number] in [time period].
<br>Example: “Unemployment hit a low of 3% in April.”
<br>[Something] reached its lowest point at [number].
<br>Example: “The stock price reached its lowest point at $30 per share.”


<br>
Bottom Out

<br>[Something] bottomed out at [lowest number] in [time period].
<br>Example: “Sales bottomed out at 20,000 units in March before starting to recover.”
<br>After a sharp decline, [something] bottomed out at [number].
<br>Example: “The market bottomed out at 50 points after a sharp decline.”


<br><br>
<br>
Fluctuate / Fluctuation

<br>[Something] fluctuated between [number A] and [number B] over [time period].
<br>Example: “The number of visitors fluctuated between 10,000 and 20,000 throughout the year.”
<br>There was a fluctuation in [something] from [number A] to [number B] over [time period].
<br>Example: “There was a fluctuation in stock prices from $100 to $150 over the course of the month.”
<br>Fluctuations were observed in both A and B, with A ranging between X and Y, and B between M and N.


<br>
Vary / Variation

<br>[Something] varied significantly, ranging from [number A] to [number B].
<br>Example: “The temperature varied significantly, ranging from 5°C to 25°C in spring.”
<br>There was a noticeable variation in [something] from [number A] to [number B] over [time period].
<br>Example: “There was a noticeable variation in electricity consumption from 500 kWh to 1,200 kWh each month.”


<br>
Oscillate 

<br>[Something] oscillated between [number A] and [number B] over [time period].
<br>Example: “The water level oscillated between 50 meters and 75 meters during the rainy season.”
<br>[Something] oscillated around [number], reaching highs of [number A] and lows of [number B].
<br>Example: “The temperature oscillated around 20°C, reaching highs of 30°C and lows of 10°C.”


<br>
Undulate (more formal)

<br>[Something] undulated, moving up and down between [number A] and [number B] over [time period].
<br>Example: “The coastline undulated, moving up and down between 100 and 200 meters in width along different sections.”
<br>[Something] showed an undulating pattern, with peaks at [number A] and troughs at [number B].
<br>Example: “The river flow showed an undulating pattern, with peaks at 500 cubic meters per second and troughs at 100 cubic meters per second.”


<br><br>
<br>Comparative Adjectives: higher than, lower than, more significant, less than, greater, fewer

<br>Example: "The sales in 2019 were higher than those in 2018."


<br>Superlative Adjectives: the highest, the lowest, the most significant, the least

<br>Example: "June experienced the highest levels of rainfall."


<br><br>
<br>For specific times: in 2010, between 2005 and 2010, during the period, over the years

<br>Example: "Sales rose between 2005 and 2010."


<br>For trends over time: over the next decade, in the following years, over the period of time

<br>Example: "Over the next decade, there was a steady increase in demand."


<br><br>
<br>Adding Information: furthermore, additionally, moreover

<br>Example: "Additionally, the number of students enrolling continued to rise."


<br>Contrasting Information: however, in contrast, on the other hand

<br>Example: "In contrast, the number of unemployed people decreased slightly."


<br>Cause and Effect: as a result, therefore, consequently

<br>Example: "As a result, the overall figures rose sharply."


<br><br>The bar chart shows the divorce rates in two European countries from 2011 to 2015.<br><img alt="Bar Chart" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/prSllw.png" referrerpolicy="no-referrer"><br>Summarize the information by selecting and reporting the main features and make comparisons where relevant.<br><br>The bar chart provides information about the percentages of divorces in Finland and Sweden between 2011 and 2015.<br>shows = provides information about = represents = illustrates <br><br>Major Trends / General information <br>Overall, Sweden experienced a downward trend, while Finland showed an upward trend throughout the period. Both countries' divorce rates had some fluctuations. Although Finland initially had a lower rate, it outraced Sweden at the end of the period.<br><br>  Sweden's divorce rate was about 45% in 2011, being higher than Finland's rate by approximately 8%. Then, it rose to almost fifty percent in 2012. However, the figure showed a gradual decrease to about 47% 2013, and continued to decline steadily to the end of the period, reaching around 45% in 2014 and hitting a low-point of about 37% in 2015.<br>hitting a low-point of x%<br><br>Percentages of divorces in Finland  was less than 40% in 2011, and it decreased in 2012, when about one third of marriages in Finland ended with a divorce (as opposed to almost a half in Sweden). However, the figure experienced a steady growth during the next 2 years.<br>
It rose to approximately 39% in 2013, then increased by around 3% in 2014, and remained steady for the next year, outracing the rate of Sweden.]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/ielts-write-task-1-material.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/IELTS-Write-Task-1-Material.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/prSllw.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/prSllw.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[IELTS-Write-Task-1-Exercise]]></title><description><![CDATA[ 
 <br><br><br><br>The pie chart shows average monthly student expenditure in the UK in 2016. The bar chart shows sources of student income in the same year.<br>Summarise the information by selecting and reporting the main features and make comparisons where relevant.<br><img alt="Pie Chart and Bar Chart" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PGB3s1.png" referrerpolicy="no-referrer"><br>The 2 figures provided information about average monthly student expenditure and the sources of student income in the UK in 2o16.<br>
The pie chart was consists of 6 parts, rent expenditure, food expenditure, socialising expenditure, travel expenditure, bills expenditure and other expenditure. And the rent expenditure predominated in the monthly student expenditure accounted for about 48 percentage. The second largest outcomes is food expenditure made up about 16 percentage. And the rest of parts of the expenditure almostly take the same proportions in the average monthly student expenditure. According to the bar chart, the sources of student income was made up with student loan, family, part-time job, savings, bank overdraft and grants and funding. The sources of student income could be divide into 3 parts. The first part is student loan which took up more than 80 percentages. And the second part accounted for more than 60 percentages which was consist of family and part-time job. And the last part was mainly made up by savings, bank overdraft and grants and funding accounted for about 40 percentage.<br><br>The two figures provide information about average monthly student expenditure and the sources of student income in the UK in 2016. The pie chart shows the breakdown of student spending, while the bar chart illustrates different income sources for students.<br>The pie chart is divided into six categories: rent, food, socializing, travel, bills, and other expenses. Rent dominates student expenditure, accounting for approximately 48%. The second-largest expense is food, which makes up about 16%. The remaining categories — socializing, travel, bills, and other expenses — each take up a smaller and fairly similar proportion of the total, ranging between 6% and 12%.<br>The bar chart shows that student income is sourced from six main categories: student loans, family, part-time jobs, savings, bank overdrafts, and grants or funding. Student loans represent the largest source of income, used by over 80% of students. Family contributions and part-time jobs are the next most significant sources, each accounting for over 60%. The remaining sources, including savings, bank overdrafts, and grants or funding, contribute to around 40% or less.<br>In summary, rent is the most significant student expenditure, while student loans are the primary source of income, with family support and part-time jobs also playing a considerable role.<br>]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/ielts-write-task-1-exercise.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/IELTS-Write-Task-1-Exercise.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PGB3s1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/PGB3s1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Dynamic Charts]]></title><description><![CDATA[ 
 <br><br><br>上升 increased, rose, climbed, soared, went up<br>n  increase, rise, climbed, soar<br>下降 declined, decreased, dropped, fell, went down<br>a decreasing / rising / upward / downward trend <br>There was an increase / a reduction in ...<br>Two consecutive drops <br>consecutive <br>The price of gold experienced a rising trend<br><br>fluctuate <br>increased/ decreased with small fluctuations<br>
fluctuated wildly<br>
despite an initial fluctuation<br>
despite a fluctuation afterwards<br>The price of gold fluctuated wildly between &lt;&gt; and &lt;&gt;  and peak at &lt;&gt; <br>Despite + n<br>
Although + sentence <br><br>dramatically, significantly, remarkably,  markedly, massively<br>moderately, gradually, continually, consistently, slightly<br>remarkably<br>
markedly <br>continually<br>
moderately<br>
slightly<br>
consistently<br>
gradually <br>The rise / fall slowed/ accelerated<br><br>increased more than five times / fivefold from 5 dollar in &lt;&gt; to 6 dollar in&lt;&gt;<br>&lt;n.&gt; doubled / trebled / quadrupled to ...<br>there was a fivefold increase in ...<br><br>peaked at<br>
topped out at<br>
reached the peak at <br>bottomed out at<br>
reached the lowest/highest point at<br><br>remained  stable <br>be unchanged <br>There was no significantly change in <br>stabilized <br>leveled off <br><br>return back to the initial/beginning number <br>be equal to the 1995 figure <br><br>the most popular / common <br>the most frequently mentioned <br>the most widely used <br><br>be projected to increase dramatically / decrease <br>it is expected that there will be <br>it is reported / suggested that <br>the predicted/anticipated number is going to <br><br>throughout the period <br>over the 25-year period <br>during the following / next 2 decades <br>in the second half of the period <br>for 5 consecutive years <br><br>According to<br>
It is evident that<br>
as is clearly shown in the chart,<br>
not surprisingly<br>
likewise, similarly]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/dynamic-charts.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/Dynamic Charts.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Flow chart]]></title><description><![CDATA[ 
 <br><br><br>The whole process is classified into / consists of .... consecutive steps.<br>The process starts with &lt;n.&gt; and ends with ... <br>the  process of ... how <br><br>Initially, firstly, to begin with, first of all, <br>The first stage involves doing ... <br>The first step is to ...<br><br>In the next stage, following that,  followed by V ing,<br>After that,  then, afterwards,  before, after, <br>After the water is boiled ...<br>
After a dramatically increase ... <br><br>In the last stage, eventually,  finally, lastly + sentences <br>The process ends with ... ,  followed by .....<br>The final step was to ..., <br>The final step was to deliver food to factories.<br><br>It takes &lt;3 days&gt; to do / for eggs grow into ...<br>... lasts for ... <br>&lt; human &gt; spend 5 days doing<br>
&lt; human &gt; cost 50% of their salary on food. ]]></description><link>https://www.allenygy.vip/english/ielts/write/task1/flow-charts.html</link><guid isPermaLink="false">English/IELTS/Write/Task1/Flow Charts.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Robots]]></title><description><![CDATA[ 
 <br><br>Today, there are many tasks at home or work that are done by robots. Is this a positive or negative development?<br><br>With the development of the technology, the robots can now able to do more and more tasks that they never can do before. This topic has sparked a debate about whether it is a positive or negative development. Personally, I agree that this is a positive development.<br>
Firstly, the robots could greatly improve the efficiency that when people face some repetitive and monotonous tasks. For example, the automatic robot vacuum cleaner can now free people from daily house works. People can now have more spare time to do something that make them happy. In addition, there are many creative applications have been introduced by the technology campanies. For example, the ChatGPT a AI product developed by the OpenAI campany. It greatly improve office worker's efficiency.<br>
Moreover, the robots can replace some dangerous work that only human can do in the past. For example, repairing high voltage cable is undoubtedly a dangerous job for people. Using robots to finish this kind of work may greatly save people's life.<br>
Lastly, some people argued that the robots may completely replace all of the human jobs. Admittedly, It is true that robots are now can handle a great number of difficult tasks. However, the advent of the camera did not eliminate the painter's profession. The people that robots can replaced might be the people that can not master robots. And the creativity that human have it's hard for robot to developed.<br>
In conclusion, I firmly believe that the trend that robots burden more tasks for human would positively affect the human society. Because it can free people from monotonous and repetitive or dangerous works.<br><br>With the development of technology, robots are now able to do more and more tasks that they never could do before. This topic has sparked a debate about whether it is a positive or negative development. Personally, I agree that this is a positive development.<br>Firstly, robots could greatly improve the efficiency when people face some repetitive and monotonous tasks. For example, the automatic robot vacuum cleaner can now free people from daily housework. People can now have more spare time to do something that makes them happy. In addition, many creative applications have been introduced by technology companies. For example, ChatGPT, an AI product developed by the OpenAI company, greatly improves office workers' efficiency.<br>Moreover, robots can replace some dangerous work that only humans could do in the past. For example, repairing high-voltage cables is undoubtedly a dangerous job for people. Using robots to finish this kind of work may greatly save people's lives.<br>Lastly, some people argue that robots may completely replace all of the human jobs. Admittedly, it is true that robots are now able to handle a great number of difficult tasks. However, the advent of the camera did not eliminate the painter's profession. The people that robots can replace might be the people who cannot master robots. And the creativity that humans have is hard for robots to develop.<br>In conclusion, I firmly believe that the trend of robots taking on more tasks for humans would positively affect human society. Because it can free people from monotonous and repetitive or dangerous work.<br>]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/exercise/robots.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/Exercise/Robots.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Retirement Community]]></title><description><![CDATA[ 
 <br><br>Nowadays some older people choose to live in the retirement communities with other people rather than living with their adult children. Is it a positive or negative development?<br><br><br>In recent years, there has been a growing trend of older people choosing to live in retirement communities with other individuals rather than living with their adult children. This trend has sparked a debate about whether it is a positive or negative development. In my opinion, I believe that it is a positive development for several reasons.<br><br>Firstly, living in a retirement community provides older individuals with the opportunity to maintain their independence and freedom. By living with other people who are in a similar stage of life, they are able to engage in social activities and form new friendships, which can enhance their overall well-being. Additionally, retirement communities typically offer a range of amenities and services that cater to the specific needs of older people, such as recreational activities, healthcare facilities, and assistance with daily tasks. This can help to improve their quality of life and provide them with the support they need as they age.<br>Furthermore, living in a retirement community can alleviate the burden on adult children who may have their own families and responsibilities to tend to. By living independently, older individuals can relieve their children of the financial and emotional strain that often comes with providing care for aging parents. This can lead to better family dynamics and reduce potential conflicts that may arise from living under the same roof.<br>Lastly, retirement communities can also foster a sense of community and belonging among older individuals. By living with others who share similar experiences and challenges, they can find comfort and companionship in their peers. This can help to combat feelings of isolation and loneliness that are common among older individuals, ultimately leading to a greater sense of happiness and fulfillment.<br><br>In conclusion, the choice of older individuals to live in retirement communities rather than with their adult children is a positive development. It provides them with the opportunity to maintain their independence, relieves their children of potential burden, and offers a sense of community and support. As the population continues to age, retirement communities can play a crucial role in promoting the well-being and happiness of older individuals.<br><br>in a similar stage of life<br>sb relieve sb of sth<br>
sb relieve sb of the financial and emotional strain <br>It &lt;&gt;,&lt;&gt; and &lt;&gt;.<br>
It provides them with the opportunity to maintain their independence, relieves their children of potential burden, and offers a sense of community and support.<br>As the population continues to age, <br>combat feelings of isolation and loneliness<br>
This can help to combat feelings of isolation and loneliness that are common among older individuals, ultimately leading to a greater sense of happiness and fulfillment.<br><br>In the modern age, the topic of whether  &lt;&gt; has sparked considerable debate.<br>
Personally, I agree that &lt;&gt;<br>Firstly,  &lt;point&gt; &lt;reason&gt; { Explanation / Derivation}<br>
Therefore/ For example / On the contrary<br>Secondly,<br>Moreover,<br>In conclusion, I firmly believe &lt;立场&gt;, because &lt;概括观点&gt;<br>Admittedly, it is true that + &lt;反方观点&gt;.<br>
There is mainly because &lt;解释原因&gt;.<br>
In addition, &lt;原因2&gt;.<br><br>Describe the event<br>This trend has sparked a debate about whether it is a positive or negative development.<br>In the modern age, <br>This topic has sparked considerably debate about whether it is a positive or a negative development.<br>
Personally, <br>Admittedly, it is true that<br>
There is mainly because &lt;&gt;<br>
In addition, <br>Firstly, <br>Moreover, <br>Lastly,<br>In conclusion, I firmly believe &lt;立场&gt;, because it &lt;&gt;,&lt;&gt; and &lt;&gt;.]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/exercise/retirement-community.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/Exercise/Retirement Community.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Non-academic Subjects]]></title><description><![CDATA[ 
 <br><br><br>There is a lot of pressure on young people today to succeed academically. As a result, some people believe that non-academic subjects, such as physical education and cookery, should be removed from the school syllabus so that children can concentrate on academic work.<br>To what extent do you agree or disagree?<br><br>In the modern age, the topic of whether non-academic subjects should be removed from the class has sparked considerable debate. Personally, I strongly disagree that removing physical education or cookery from school syllabus.  <br>Admittedly, it seems true that students can concentrate on academic work without non-subjects disturb. This mainly because students may spend more time on studying or improve their exam performance. However, this notion is biased, as children may lose their concentration on study tasks after a long time study. The study efficiency would become lower and lower. In addition, boring study life may easily made student become annoy. It is harmful for their future development.  <br>Secondly, non-academic subject education can borden their horizons and improve their ability in other aspects. For example, cookery may largely improve their life skills. Physical courses can play an important role for teenagers to keep their health. Besides, doing exercise regularly may help students get rid from heavy study tasks and truly release their pressure from academic training.  <br>Moreover, non-academic subject education may help some students become more confident, especially students that can not have good performance on academic subjects. Each person may have different advantages on some fields.  Some students are good at physical courses. It may encourage them easily find their interests.  <br>In conclusion, I firmly believe non-academic subjects should be removed from daily courses in the school, because students have rights to find some interesting thing other than studying. And non-academic subjects may improve their all-round ability and help them adapt their future life.<br><br>
<br>focus on sth without sth
<br>improve/develop their well-rounded abilities
<br>sb excel in sth &lt;==&gt; Be good at
<br>monotonous 单调的
<br>relieve the pressure
<br>workloads &lt;==&gt; tasks
<br>Borden their horizons
<br>Enhance their academic performance
]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/exercise/non-academic-subjects.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/Exercise/Non-academic Subjects.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Generation Gap]]></title><description><![CDATA[ 
 <br><br>When older and younger individuals do not understand each other because of their different experiences, opinions, habits and behaviors, the generation gap arises naturally. In particular, the bigger the age difference, the deeper the gap. The detrimental effect of big age gap may be particularly apparent when children become teenagers<br>A large age gap means that the two generations have distinct life experiences and backgrounds, and they have greater differences in their views and solutions to things, i.e. a larger generation gap. Take concept of consumption, having experienced a more backward economic era, older parents will be more frugal, while children growing up in affluent society are prone to be wastrels, courting blame and provoking conflicts. In addition, a wider generation gap will lead to a lack of common topics, and thus less communication brings&nbsp; tension in parent-child relationship<br>优点：<br>
父母更为年长，社会经验丰富<br>
经济条件<br>
缺点：	<br>
减少陪伴时间<br>
加剧子女养老负担<br>
加剧人口老龄化<br>
加剧育儿负担<br><br>population aging 人口老龄化<br>
support / care for the elderly 养老	]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/exercise/generation-gap.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/Exercise/Generation Gap.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Fuel Cost]]></title><description><![CDATA[ 
 <br><br>Some people think the best way to solve the environmental problems is to increase the cost of fuel for cars and other vehicles. To what extent do you agree or disagree with this opinion? <br><br>对方：提高油价是解决环境问题的最好方法<br>
理由：提高油价-人们为了节省开支少开车-尾气排放造成的空气污染缓解<br>
反驳：油价上涨一般在可接受范围，大部分有驾车需求（出行/通勤/运输）的人仍然会开车，空气污染依然严重，还会增加人们出行不便/经济负担<br><br>
<br>晚上公共交通  Route/Frequency/Diversity/comfort
<br>开发新能源 electric car
]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/exercise/fuel-cost.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/Exercise/Fuel Cost.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Lesson]]></title><description><![CDATA[ 
 <br><br><br>
<br>议论类
<br>报告类
<br>混合类
<br><br><br>
<br>To what extent do you agree or disagree
<br>Discuss both views and give your own opinion
<br><br>
<br>Advantage outweigh disadvantage
<br>Positive or Negative
<br><br>原因/影响/解决措施<br><br>一个议论类，一个报告类<br><br><br>In recent years, there has been a growing concern for workplace issues among the general population.<br>Recently, ... have/has already been a hot topic/issue among society.<br>In the modern age, the topic of whether题目中的事情<br>
... has sparked considerable debate<br><br>It is argued that<br><br>Personally, I agree/disagree with the assertion.<br>
completely/largely/partly<br><br>In the modern age, there has been a growing concern for environmental issues among the air pollution from cars or other vehicles.<br>
It is argued that increasing the oil price to reduce use of private cars is the most effective way to solve the air pollution.<br>
Personally, I agree with the assertion partly.<br><br>
<br>两个观点
<br>Some people think schools should only teach students academic subjects. Others think schools should also teach students how to discriminate between right and wrong. Discuss both views and give your opinion.<br>
<br>Method - 1

<br>People have different views about whether A or B.
<br>Personally, I think/ stand for/ agree with the former/latter


<br>Method - 2
<br>In the modern age, there has been a growing concern for education issues among what should learn in school.<br>
It is argued that schools should only teach students academic curriculum/ knowledge.<br>
<br>
academic subjects<br>
teach student something for test

<br>
Distinguish between right and wrong<br>
tell right from wrong<br>
judicious<br>
moral judgement<br>
What is right and wrong

<br><br>In many countries, prison is the most common solution to the problem of crime. However, another effective way is to provide people with better education so that they cannot become criminals. To what extent do you agree or disagree?<br><br>Governments around the world, more often than not, give priority to imprisonment/confinement when curbing crimes, due to the deterrence and severity, whereas I believe better education, i.e. moral/legal education/job skill training can tackle the root of this issue.<br><br>
<br>put sb behind the bar   使某人入狱	
<br>better education = greater schooling<br>
=moral/legal education/job skill training
<br><br><br>Some people think that schools should select their pupils according to their academic ability. Others believe that young people with different abilities should be educated together. Discuss both sides and give your opinion.<br><br><br>分班<br>
<br>divide student into different class
<br>stream
<br>grades/score<br>
academic performance/ aptitude<br>individual teaching/ equal education<br><br><br>In some countries, the difference in age between parents and children is generally greater than it was in the past. Do you think advantages out weigh disadvantages?<br><br><br>生孩子晚<br>
<br>parents have their children late in life 
<br>adults are apt to delay their childbearing plan，lead to larger age gap between two generations
<br>generation gap 代沟<br><br><br>Many people believe that media coverage of celebrities is having a negative effect on children. To what extent do you agree or disagree with this opinion?<br><br><br>
<br>
<br>
\<br><br>illegal and immoral<br>
tax evasion/sex scandal<br><br><br>Some people think governments should ban dangerous sports. Others, however, say people have the freedom to make&nbsp;their&nbsp;own decisions. Discuss both views and give your own opinion<br><br>In the modern age, there has been a growing concern for sports issues among whether dangerous sports should be banned.	<br>
It is argued that governments should ban dangerous sports for the sake of safety.	<br>
While others believe that people have the freedom to make their own decisions.	<br>
Personally, I think government should ban dangerous sports for the people that untrained.<br><br>Nowadays some older people choose to live in the retirement communities with other people rather than living with their adult children. Is it a positive or negative development?<br><br>主题词：<br>
<br>老人：old people/the old / the elderly /the aged /senior citizens/elders/the old generation
<br>子女：Adult children/offspring/the younger generation
<br>养老社区：retirement community/old people’s home/nursing home/retirement home/assisted living facility/old folks’ home
<br>话题词：<br>
caregiver/ nursing staff<br>
regular physical examination/check-up<br><br>立论两个，驳论一个观点<br><br>论证方法<br>因果推导/举例/比较/假设/引用/定义/总结<br>A-B-C-D<br>拆解<br>
e.g. D 身体健康<br>
<br>饮食/医疗/运动/环境
<br><br>模板：<br>
1个观点句+3-5句解释（50+）<br>For one thing, +                我方观点①<br>On the ground that+第一个逻辑链（句子），第二个逻辑链，so that+第三个逻辑链，which is conducive to/which will result in+第四个逻辑链（名词)<br>For another，+   我方观点②：<br>On account of+第一个逻辑链（名词），第二个逻辑链，leading to the situation that+第三个逻辑链. And consequently,/ And as a result, +第四个逻辑链（句子）<br><br> There are specific medical equipment and nursing staff in the retirement communities,<br>
which can provide the elderly with healthy diet, regular physical examination and timely medical treatment. Besides, when the elderly get sick or hurt, they can get timely help from the nursing staff. <br><br>身体健康<br>Equipped with<br>Not only will these caregivers provide ... in daily life,<br>
but ... are also available in emergency.<br>as the adult children lead a busy life, they have no time to ...<br>
a busy life as the adult children lead, they have no time to ...<br>心情愉悦<br>
peers/contemporary<br>
environment<br>
activities<br>
private room/independence<br>
household duties<br><br>并列/平行<br>
<br>Not only will these caregivers provide...in daily life, but...are also available in emergency 
<br>倒装<br>
<br>as the adult children lead a busy life, they have no time to...
<br>a busy life as the adult children lead, they have no time to...
<br>强调<br>
<br>it is+被强调部分+that+剩余部分<br>
living in the nursing house is beneficial to their health<br>
it is living in the nursing house that is beneficial to their health
<br><br><br>Detailed reporting of crimes by media should be restricted. To what extent do you agree or disagree?<br>媒体播放犯罪细节应该被限制<br>视频/画面/图片/音频 text description<br>主题词<br>
媒体播放犯罪细节应该被限制：(不播)<br>社会恐慌 social panic<br>
audience 看到 一些比较严重/恶劣情节<br>
例如血腥/暴力/食品安全， 会感到害怕，担心成为受害者<br>媒体为了吸引关注， audience rate<br>
会大肆宣传/夸大 案件，群众也会相互评论/散播<br>犯罪率上升<br>对受害者和家人造成心理创伤<br>
侵犯罪犯及其家人的合法权益<br>媒体播放犯罪细节应该不该被限制：(该播) 反方<br>
<br>承认/让步
<br>不承认/驳论
<br>有利于个人安全<br>
<br>群众知晓其中犯罪手段，对类似的情节，场合，场所，群体有所防范，罪犯难以得手

<br>例如看完网络诈骗的案件，人们会注重隐私/个人信息（账号/密码/电话/身份/住址），不容易上当受骗
<br>反驳，潜在罪犯也会看到这些信息并改进/更新犯罪手段，并且群众只是将这些新闻当做日常消遣，不会放在心上


<br>公众知情权<br>
媒体获利<br>
影响案件的解决/审理<br>
mass opinion -  舆论	 ---&gt; judicial justice	<br><br>切分对象：<br>
群众（普通人（青少年），潜在罪犯），受害者，<br>群体特点分析：<br>
性格：冲动<br>
能力：心智不成熟，判断对错，法律/道德，模仿能力<br>
背景：家庭（疏于管教/家暴），学校（霸凌/注重学习忽视道德）<br><br>驳论段：<br>
格式：对方理由+我方反驳<br>
要求：<br>
1.确定好立场，要知道该写什么（立论段立场的对立面）<br>
2.先写对方观点的中心句 + 论证过程（对方好的理由）<br>
3.再写我方反驳（对方观点的漏洞/否定对方重要性）<br>
驳斥方法：<br>
一 看逻辑链条中哪一条不一定推得到下一条，那就是有问题的；二 如果是客观事实或者通俗的道理，说明上下逻辑之间没有明显的问题，那就否定对方观点的重要性或者措施的有效性。<br><br>
<br>
Admittedly, it seems true that+ 对方观点的中心句. It is mainly because+ 论证过程（对方好的理由）

<br>
However, this notion is incorrect/fallacious（用第一种方法驳斥时）, ignoring the fact that + 驳斥理由。

<br>
Superficially，it is plausible to argue that + 对方观点的中心句. 

<br>
The reason is that + 论证过程。

<br>
However, this notion is impractical/unrealistic (用第二种方法驳斥时), ignoring the fact that + 驳斥理由。

<br>Admittedly, it seems true that the elderly living in the retirement community, the chance that they can see their adult children is less, leading to less communication and estrangement.<br>
However, this notion is incorrect,  although the elderly live in the retirement community, they still live in the same city as their adult children, and children can visit them frequently, or keep in touch through phone/social media. Moreover, living separately can reduce conflicts, and have their own freedom/space, which is beneficial to family relationship.]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/write-lesson.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/WRITE Lesson.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Tmp]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br>原因+积极/消极<br><br>
<br>The reason for this

<br>are as follows
<br>is obvious
<br>is not for to seek 
<br>is that


<br>There are three reasons for this 
<br>We have good reason to believe that 
]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/tmp.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/Tmp.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Logical chain]]></title><description><![CDATA[ 
 <br><br><br>经济的发展/生产力的提升，有着更好生活水平/更高消费 能力的人们，能够享受/使用各种各样的/便宜的...，考虑到...，人们 会...
With the advancement of the economy, individuals with __ are able to indulge in a wide array of affordable __<br>
Considering _ , people may _ , thereby leading to____ 
<br>为什么人们浪费食物？
With the advancement of the  economy, individuals with greater purchasing powers are able to indulge in a wide array of affordable food options. Considering their low cost and ability to satisfy cravings, people may purchase food without hesitation, thereby leading to avoidable waste.
<br>更高的消费能力<br>
<br>higher purchasing power
<br>满足欲望<br>
<br>satisfy cravings
<br>为什么人们在家时间少？
As the economy develops, individuals with higher purchasing power can now indulge in a diverse range of entertainment options and experience. In pursuit of better relaxation, they are increasingly inclined to spend quality time with friends or family in shopping malls, theaters, restaurants, and even during international travel, leading to few hours spent at home.
<br>更好的休息<br>
<br>better relaxation
<br>娱乐选择和体验<br>
<br>entertainment options and experiences 
<br>各种各样的<br>
<br>various 
<br>a diverse range of ...
<br>spend quality time with fiends or family in &lt;place&gt;<br>公共场合<br>
shopping malls, theaters, restaurants<br>国际旅行<br>
international travels<br>话费更少的时间在 ...<br>
few hours spent &lt;&gt; /at home<br>
<br>
With the advancement of the &lt;&gt; / As the &lt;&gt; develops , individuals with &lt;&gt;  are able to / can now  indulge in a diverse range of &lt;&gt;.

<br>
Considering &lt;n.&gt;,  people may &lt;v&gt;, thereby leading to &lt;n.&gt;.

<br>
In pursuit of &lt;n.&gt;, they are increasingly inclined to &lt;v.&gt;,  leading to &lt;n.&gt;.

<br><br>&lt;&gt; 对 &lt;&gt; 的需求增长/ 在 ... 的消费，会给&lt;&gt;带来收入<br>
这增加了政府税收，提供了就业岗位，促进经济发展<br>
<br>&lt;&gt; spending on &lt;&gt; will bring a significant amount of income to &lt;&gt;.
<br>This not only increases government tax revenue but also provides employment opportunities and promotes economic development.
<br>旅游的影响？
Tourists' spending on local accommodation, food, transportation, and entertainment will bring a significant amount of income to the local service industry.<br>
This not only increases government tax revenue but also provides employment opportunities and promotes economic development. 
<br><br>&lt;&gt; 对 &lt;&gt; 的需求减少, 会减少 &lt;&gt; 的收入和政府税收， 造成大规模失业，不利于经济发展/甚至经济危机<br>The reduction or even disappearance of consumer demand for &lt;&gt; will greatly reduce the income of the &lt;&gt; industry and government tax revenue,  and even cause mass unemployment, which will lead to economic downturn and social instability<br>禁止不健康食物？
The reduction or even disappearance of consumer demand for fast food and other unhealthy food items will greatly reduce the income of the catering industry and government tax revenue, and even cause mass unemployment, which will lead to economic downturn and social instability.
<br><br>科技<br>
<br>技术发展- 便利/安全/选择/成本/体验/效果
<br>由于&lt;&gt;技术的进步和&lt;&gt;的普及，相当于&lt;&gt;, 人们更能便利/安全/更多选择/低成本/更&lt;&gt;体验&lt;&gt;, 例如: 当人们像&lt;&gt; , 可以通过&lt;&gt; 非常&lt;&gt; 地&lt;&gt;<br>Due to the advancement in  &lt;&gt; technology and the widespread use of &lt;&gt;, people are able to &lt;&gt; compared to &lt;&gt;, saving time and energy.<br>
For instance, when &lt;&gt; , which requires &lt;&gt;, &lt;&gt; may not meet their needs <br>人们不再骑自行车?
Due to the advancement in transportation technology and the wide spread use of private cars, people are able to reach their destination more quickly and comfortably compared to bicycles, saving time and energy. For instance, when people need to go shopping or travel, which requires carrying goods or traveling long distances, cycling may not meet their needs.
<br>反推<br>相对于&lt;&gt;， 传统的&lt;&gt; 更能保障&lt;&gt;，（效果/体验/氛围），因为人们在&lt;&gt;时，更能&lt;&gt;<br>还可以用于新旧之争: 便利/安全/选择/成本/体验/效果<br>Compared to &lt;&gt;, traditional &lt;&gt; provide a superior &lt;&gt; .<br>
When &lt;&gt;, they can &lt;&gt;. This allows for &lt;&gt;, proving that &lt;&gt; are irreplaceable by &lt;&gt;.<br>电脑技术会取代公共图书馆？
Compared to online reading, traditional libraries provide a superior reading experience and atmosphere. When readers are surrounded by other book lovers at a quiet desk, they can fully immerse themselves in the content of the books without distraction from constant pop-up ads or information. This allows for a more enjoyable deep reading experience, proving that public libraries are irreplaceable by computers.
<br><br>人口数量/质量(受教育水平)提升<br>
竞争加剧<br>
为了更好生活人们投入更多时间/精力在&lt;&gt;<br>
例如&lt;&gt;, 导致题目的现象<br>涉及工作/学习/生活/健康/全球化/等负面问题<br>In the fast-paced modern society, competition among people in various industries has intensified.<br>
In order to &lt;&gt;, they &lt;&gt;, such as &lt;&gt;, which &lt;&gt;.<br>人们在家时间少？
In the fast-paced modern society, competition among people in various industries has intensified.<br>
In order to achieve a better life, they have to invest more time and effort into work and study, such as working overtime, going on business trips, or participating in extracurricular training even on weekends or during leisure time, which greatly reduce their time at home.
<br> In today's fast-paced society, competition in various industries has intensified, promoting individuals to sharpen their competitive edge by investing additional time and effort in their work and self-improvement to gain a foothold. This requires them to sacrifice their time at home to work overtime, embark on business trips, or participate in extracurricular training, all of which significant reduce their time spent at home in pursuit of a better life.]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/ielts-write-task2-logical-chain.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/IELTS Write Task2 Logical chain.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS Write Task2 Environment]]></title><description><![CDATA[ 
 <br><br>Environment degradation 环境退化<br>Ecosystem imbalance 环境不平衡<br>Deflection of natural resources 过度使用自然资源<br>Loss of biodiversity 生物多样性缺失<br>Climate Change <br>Global warming <br>Air pollution <br>Water contamination<br>contaminate 污染<br><br>Deforestation <br>Soil erosion <br>Ocean acidification <br>Water disposal problems <br>Overpopulation <br>Human activities  <br>be responsible for <br>Habitat destruction <br>inhabitants 居民<br>Fossil fuel consumption <br>coal | petrol | natural | gas | oil<br>Greenhouse gases<br>Exhaust gases 废弃<br>Depletion of n  n 的用尽<br><br><br><br>One of the most pressing environmental issues today is  ... <br>One of the most pressing environmental issues today is climate change, which has led to rising sea levels and extreme weather patterns.<br>habitat destruction and the loss of biodiversity <br><br>It is widely acknowledged that ... <br>It is widely acknowledged that human activities, such as deforestation and pollution, are contributors to environmental degradation.<br>因素<br>
<br>factors
<br>causes 
<br>contributing factors 
<br><br>Human activities have contributed significantly to .... , with ....<br>remarkably<br>
extremely<br>Human activities have contributed significantly to the depletion of natural resources, with overfishing and mining causing  irreversible damage to ecosystems.<br>cause irreversible damage to children.<br><br>The government should implement stricter regulations on ...<br>The government should implement stricter regulations on industrial waste disposal to reduce the contamination of water bodies.<br>plastic disposal   <br>contamination of water pollution<br><br>A sustainable approach to  ... would be ... <br>A sustainable approach to reducing carbon emissions would be increasing investment in renewable energy sources, such as solar and wind power.  <br>hydropower<br>nuclear power<br><br>The consequence of climate change are already being seen in ... , where ... <br>结果在 ... 已经被看到,  在.... <br>The consequences of climate change are clearly being seen in many coastal areas, where rising sea levels are threatening communities and ecosystems.<br><br>There is a growing concern about the depletion of ... , which ....  <br>There is a growing concern about the depletion of the Amazon rainforest, which plays a crucial role in regulating the Earth's climate. <br><br>Investing in renewable energy sources such as solar and wind power ... <br>Investing in renewable energy sources such as solar and wind power is essential for reducing the harmful effects of fossil fuel consumption on the environment.<br><br>International cooperation is essential for tackling global environmental issues such as ...<br>International cooperation is essential for tackling global environmental issues such as climate change, as these problems transcend national borders and require joint efforts.<br><br>Individuals can contribute to environmental protection by ... <br>Individuals can contribute to environmental protection by adopting eco-friendly habits, such as reducing plastic usage and conserving water.<br><br>]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/ielts-write-task2-environment.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/IELTS Write Task2 Environment.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS Writing Substitute word]]></title><description><![CDATA[ 
 <br><br><br><br>very / extraordinarily / highly / extremely / quite / awfully / considerably / greatly  /    <br>Tip
extraordinarily<br>
extraordinarily<br>
extraordinarily
<br><br>clearly / obviously / distinctly /  evidently / markedly / visibly<br>Tip
distinctly<br>
distinctly<br>
distinctly
evidently<br>
evidently<br>
evidently
visibly<br>
visibly<br>
visibly
<br><br><br>struggle for<br>
aspire after<br>
strive for<br>
spare no efforts for <br><br>embark on<br>
take up<br>
set about<br>
go in for<br><br>in contemporary society<br>
in present-day society<br>
in this day and age <br><br>a host of<br>
a vast amount of<br>
a vast number of<br>
a multitude of<br><br>be filled / awash / inundate / saturated /with<br><br>社会进步的体现 a symbol of society progress]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/ielts-write-substitute-word.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/IELTS Write Substitute word.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[IELTS-Task2-Template]]></title><description><![CDATA[ 
 <br><br><br>In the modern age, the topic of whether &lt;&gt; has sparked considerable debate.<br>
Personally, I agree that &lt;&gt;<br>Firstly,  &lt;point&gt; &lt;reason&gt; { Explanation / Derivation}<br>
Therefore/ For example / On the contrary<br>Secondly,<br>Moreover,<br>In conclusion, I firmly believe &lt;立场&gt;, because &lt;概括观点&gt;<br><br>Admittedly, it is true that + &lt;反方观点&gt;.<br>
There is mainly because &lt;解释原因&gt;.<br>
In addition, &lt;原因2&gt;.<br>From my perspective, however, there are 2 main reasons why &lt;我方立场&gt;.<br>
To begin with, &lt;我方观点1&gt;<br>
That is to say, &lt;理由&gt;(Explanation/Derivation/For example/On the contrary)<br>Moreover,....<br>In conclusion, while &lt;对方观点&gt;，It seems to me that  &lt;我方立场&gt;<br><br>In the modern age, the topic of whether &lt;&gt; has sparked considerable debate.<br>
Personally, I agree that &lt;&gt;<br>Admittedly, it seems true that &lt;&gt;<br>
This mainly because &lt;解释原因&gt;.<br>
However, this notion is biased, as &lt;反驳理由&gt;.<br>
In addition, &lt;反驳理由&gt;<br>From my perspective, there are mainly 2 reasons why &lt;&gt;.<br>
To begin with, &lt;我方观点&gt;.<br>
That is to say, &lt;理由&gt;(Explanation/Derivation/For example/On the contrary) <br>Moreover, &lt;我方观点2&gt;.<br>
By &lt;题目行为&gt;, 主体可以(Explanation).<br>In conclusion, while &lt;对方观点&gt;, I believe that &lt;我方观点&gt;.<br>
This can &lt;我方观点&gt;<br><br>In the modern age, compared with (相反情况), 题目现象.<br>
Personally, I believe it is a positive development / I think the advantages outweigh the disadvantages.<br>Admittedly, it seems true that &lt;&gt;.<br>
This is mainly because &lt;&gt;.<br>
However, this notion is biased, as &lt;&gt;<br>
In addition, &lt;&gt;<br>From my perspective, there are 2 main reasons why &lt;&gt;.<br>
To begin with, &lt;&gt;.<br>
That is to say, &lt;Reason&gt; (Explanation/Derivation/For example/On the contrary)<br>Moreover, &lt;&gt;.<br>
By &lt;&gt;, main body can &lt;&gt;<br>In conclusion, the choice of sb doing  &lt;&gt; is sensible/unadvisable (can bring more benefits/disadvantages), which may &lt;&gt;<br><br>In the modern age, the topic of whether &lt;&gt; has sparked considerable debate.<br>
Personally, I believe that both are indispensable necessary.<br>On the one hand, &lt;正方观点1&gt;<br>
That is to say, &lt;理由&gt; (Explanation/Derivation/For example/On the contrary)<br>
Furthermore, &lt;正方观点2&gt;<br>On the another hand, &lt;反方观点1&gt;<br>
In another hand, &lt;理由&gt;(Explanation/Derivation/For example/On the contrary)<br>
In addition, &lt;反方观点2&gt;<br>In conclusion, I deem both perspectives have their merits, as A plays a vital role in &lt;&gt;,<br>
while B cater to &lt;&gt;<br>
The combination of both is essential to ]]></description><link>https://www.allenygy.vip/english/ielts/write/task2/ielts-task2-template.html</link><guid isPermaLink="false">English/IELTS/Write/Task2/IELTS Task2 Template.md</guid><dc:creator><![CDATA[AllenYGY,Vans]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[ML-As-1]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>When ,  is a symmetric matrix.<br><br>Assume the probability of a certain disease is . The probability of test positive given that a person is infected with the disease is  and the probability of test positive given the person is not infected with the disease is .<br><br>
<br>: The probability that a person has the disease.
<br>: The probability of testing positive given that the person has the disease.
<br>: The probability of testing positive given that the person does not have the disease.
<br>: The probability that a person does not have the disease.
<br><br><br><br><br><br>Gradient descent is the primary algorithm to search optimal parameters for our models. Typically, we want to solve optimization problems stated as<br><br>where  are differentiable functions. In this example, we look at a simple supervised learning problem where given a dataset , we want to find the optimal parameters  that minimizes some loss. We consider different models for learning the mapping from input to output, and examine the behavior of gradient descent for each model.<br><br>The simplest parametric model entails learning a single-parameter constant function, = 𝜃. where we set . We wish to find<br><br><br><br><br><br><br>when<br><br><br><br><br><br><br><br>Where    is the learning rate.<br><br><br>Thus, the gradient descent update for a single data point is:<br><br>In SGD, this single sample gradient update is used to update  \theta  after each data point.<br><br>Instead of constant functions, we now consider a single-parameter linear model  where we search for  such that<br><br><br><br><br><br><br>when<br><br><br><br><br><br><br>Where    is the learning rate.<br><br>No, not all points get the same vote in the gradient update.<br><br>Each data point is weighted by   .<br>
If    is large, that data point will have a larger influence on the gradient (and thus on the update),<br>
Whereas if    is small, the influence will be smaller.<br><br>Consider the Ridge Regression estimator<br><br>We know this is solved by<br><br>One interpretation of Ridge Regression is to find the Maximum A Posteriori (MAP) estimate on , the parameters, assuming that the prior of  is  and that the random  is generated using<br><br>Note that each entry of vector  is zero-mean, unit-variance normal. Show that  is indeed the MAP estimate for  given an observation on  .<br><br>The MAP estimate maximizes the posterior distribution:<br><br>From Bayes' rule:<br><br><br><br>Substituting the likelihood and prior:<br><br><br>Maximizing this expression with respect to  is equivalent to minimizing the following expression:<br><br><br><br><br># You should return your result. 

import numpy as np 

def insertSecond(a, b):
    return np.insert(a, 1, b)

assert np.array_equal(insertSecond(np.array([-5,-10,-12,-6]),5), np.array([-5, 5, -10, -12, -6]))
assert np.array_equal(insertSecond(np.array([1,2,3]),7), np.array([1, 7, 2, 3]))
assert np.array_equal(insertSecond(np.array([-5,-10,-12,-6]),8), np.array([ -5, 8, -10,-12, -6]))
assert np.array_equal(insertSecond(np.array([1,2,3]),12), np.array([1, 12, 2, 3]))
<br><br>import numpy as np 

def mergeArrays(a,b):
    return np.sort(np.unique(np.concatenate((a,b))))

# Test cases 
assert np.array_equal(mergeArrays(np.array([1,1,4,8,1]), np.array([2, 3])), np.array([1, 2, 3, 4, 8])) 
assert np.array_equal(mergeArrays(np.array([-5,-10,-10,-6]), np.array([-5, 8, -10, -12,-6])),np.array([-12, -10, -6, -5, 8]) )
assert np.array_equal(mergeArrays(np.array([1,1,6,8,1]), np.array([2, 3])), np.array([1, 2, 3, 6, 8]))
<br><br>import numpy as np
import matplotlib.pyplot as plt

# data to plot
n_groups = 5
men_means = (22, 30, 33, 30, 26)
women_means = (25, 32, 30, 35, 29)
alpha = 0.5

fig, ax = plt.subplots()
index = np.arange(n_groups)
bar_width = 0.4
opacity = 0.8

rects1 = plt.bar(index, men_means, bar_width,
alpha=0.5,
color='g',
label='Men')

rects2 = plt.bar(index + bar_width, women_means, bar_width,
alpha=0.5,
color='r',
label='Women')

plt.xlabel('Person')
plt.ylabel('Scores')
plt.title('Scores by person')
plt.xticks(index + bar_width / 2, ('G1', 'G2', 'G3', 'G4', 'G5'))
plt.legend()

plt.tight_layout()
plt.show()

<br><img alt="output_5_0" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/output_5_0.png" referrerpolicy="no-referrer"><br><br>import pandas as pd


def setDataFrameZeros(df):
    rows = df.isin([0]).any(axis=1)
    cols = df.isin([0]).any(axis=0)
    df.loc[rows, :] = 0
    df.loc[:, cols] = 0
    return df

df1 = pd.DataFrame({'c1': [1, 4, 7], 'c2': [2, 0, 8], 'c3': [3, 6, 9]})
df2 = pd.DataFrame({'c1': [1, 0, 7], 'c2': [0, 0, 0], 'c3': [3, 0, 9]})
(df2.equals(setDataFrameZeros(df1)))

df1 = pd.DataFrame({'c1': [0, 3, 1], 'c2': [1, 4, 3], 'c3': [2, 5, 1], 'c4': [0, 2, 5]})
df2 = pd.DataFrame({'c1': [0, 0, 0], 'c2': [0, 4, 3], 'c3': [0, 5, 1], 'c4': [0, 0, 0]})
assert (df2.equals(setDataFrameZeros(df1)))

df1 = pd.DataFrame({'c1': [1, 4, 7], 'c2': [2, 0, 8], 'c3': [3, 6, 9]})
df2 = pd.DataFrame({'c1': [1, 0, 7], 'c2': [0, 0, 0], 'c3': [3, 0, 9]})
assert (df2.equals(setDataFrameZeros(df1)))

df1 = pd.DataFrame({'c1': [0, 3, 1], 'c2': [1, 4, 3], 'c3': [2, 5, 1], 'c4': [0, 2, 5]})
df2 = pd.DataFrame({
    'c1': [0, 0, 0],
    'c2': [0, 4, 3],
    'c3': [0, 5, 1],
    'c4': [0, 0, 0]
})
assert (df2.equals(setDataFrameZeros(df1)))
]]></description><link>https://www.allenygy.vip/machine-learning/assignment/ml-as-1.html</link><guid isPermaLink="false">Machine Learning/Assignment/ML-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/output_5_0.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/output_5_0.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[ML-As-2]]></title><description><![CDATA[ 
 <br><br><br>The Poisson distribution is a useful discrete distribution which can be used to model the number of occurrences of something per unit time. For example, in networking, packet arrival density is often modeled with the Poisson distribution. If  is Poisson distributed, i.e., , its probability mass function takes the following form:<br><br>It can be shown that . Assume now we have  i.i.d. data points from  . (For the purpose of this problem, you can only use the knowledge about the Poisson and Gamma distributions provided in this problem.)<br><br>Show that the sample mean  is the maximum likelihood estimate (MLE) of  and it is unbiased ().<br>Finding the MLE<br><br><br><br><br><br>Unbiasedness<br><br>Since&nbsp; &nbsp; are i.i.d., we can take the expectation inside the sum:<br><br>Therefore,&nbsp; , confirming that&nbsp;&nbsp; is an unbiased estimator of&nbsp;  . of&nbsp;<br><br>Now let's be Bayesian and put a prior distribution over . Assuming that  follows a Gamma distribution with the parameters  , its probability density function:<br><br>Where  (here we assume  is a positive integer). Compute the posterior distribution .<br><br><br><br><br>Let  , <br>
Then the distribution is still a Gamma distribution<br><br>Derive an analytic expression for the maximum a posterior (MAP) of  under   prior.<br><br><br><br><br>Prior Distribution <br><br><br>Likelihood function <br><br><br><br><br><br><br><br><br><br><br>The bias of an estimator is defined as <br>The bias is <br>The variance of an estimator is defined as <br><br>This is not a good estimator, since the bias is large when the true value of  is not 1. Usually we don’t have any information about the true value of , so it is unreasonable to assume it is equal to 1.<br><br> the bias is 0.<br>
This is an unbiased estimator.<br>
The variance of this estimator is <br> This is not a good estimator since its variability does not decrease with the sample size.<br><br><br><br><br>Bias of the estimator :<br><br>Variance of the estimator :<br><br><br><br><br>The error is equal to 0.<br>Because  and  do not overlap.<br>Just check whether it is in the interval [-4,-1] or in the interval [1,4]<br><br><br><br><br><br>
<br> and  (using the variance formula for the uniform distribution),
<br> and .
<br>Since we are approximating  using a normal distribution, we have:<br>
<br>,
<br>.
<br>Using these, for , we find , and for , . Therefore, the classifier will make no error in classifying new points.<br><br>Given a finite amount of data, we will not learn the mean and variance of  perfectly. Therefore, the classifier's error will increase due to the limited data. In this scenario, we would have both bias and error in our model.<br><br>No, the new   is no longer the form used by logistic regression.<br><br><br><br><br><br>The log ratio of class-conditional probabilities:<br><br>Simplifies to:<br><br><br>Probability of :<br><br>Simplifies to:<br><br><br><br>]]></description><link>https://www.allenygy.vip/machine-learning/assignment/ml-as-2.html</link><guid isPermaLink="false">Machine Learning/Assignment/ML-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[ML-As-3]]></title><description><![CDATA[ 
 <br><br><br>You are given the following two sets of data points, each belonging to one of the two classes<br>
(class 1 and class -1):<br>
<br>Class 1 (labeled as +1):
<br><br>
<br>Class -1 (labeled as -1):
<br><br>Please find the optimal separating hyperplane using a linear SVM and derive the equation of the hyperplane. Assume the hard-margin SVM.<br><br>The hyperplane is defined through  and  as a set of points such that<br><br>
<br>: weight vector
<br>: scalar
<br>Subject to the constraint<br><br>
<br> is the class label of 
<br>Final optimization problem:<br><br><br>The Lagrangian form:<br><br>where  are the Lagrange multipliers associated with each constraint.<br>The dual form of the optimization problem <br><br>subject to <br><br><br><br>If <br><br><br>Since the support vector is , we have: <br><br>The explicit form of the hyperplane.<br><br><br><br>Suppose we have the data points  with corresponding labels . We want to use a soft-margin SVM to classify these data points with a regularization parameter .<br><br>For a soft-margin SVM,  the optimization problem can be formulated as follows:<br><br>subject to:<br><br>where:<br>
<br> is the weight vector,
<br> is the bias,
<br> is the vector of slack variables, and
<br> is the regularization parameter that controls the trade-off between maximizing the margin and minimizing the classification error.
<br>Dimensions:<br>
<br> has dimension ,
<br> has dimension ,
<br> has dimension ,
<br> is a scalar,
<br> has dimension .
<br><br>The primal objective function is:<br><br>where  and  are Lagrange multipliers for the constraints  and , respectively.<br>To derive the dual problem, we take the partial derivatives of  with respect to , , and  and set them to zero:<br>Partial derivative with respect to :<br><br>Partial derivative with respect to :<br><br>Partial derivative with respect to :<br><br>By substituting  back into the objective function, we obtain the dual problem:<br><br>subject to:<br><br><br>The decision boundary is given by:<br><br>where  from the dual problem. To classify a new point , we use the decision function:<br><br><br>In the dual formulation,  disappears because it only appears in the primal objective function as part of the constraints and is not involved in the dual variables.<br>
By taking the partial derivatives with respect to  and setting them to zero, we express  in terms of  and .<br>
Consequently,  is not explicitly present in the dual formulation, as it is fully captured by the constraints on  (specifically, ).<br><br>Consider the following  dataset with four training points:<br><br><br><br><br>We want to use the polynomial kernel  to classify these data points with a soft-margin SVM. The regularization parameters .<br>To solve Problem 3 on Kernel SVM, let’s go through each part step-by-step.<br><br><br>The kernel matrix  is a  matrix where each element . Let’s compute each entry using the given kernel function.<br><br>
<br>
<br>
	<br>
<br>
<br>
<br>
<br>
<br>
<br>Since  is symmetric, we can fill in the remaining entries by symmetry:<br><br><br>Using the results from Problem 2, the dual problem for a soft-margin SVM with a kernel function becomes:<br><br>subject to:<br><br>where  in this problem.<br><br>, , , and . <br>and  is a support vector.  (2 pts)<br>The bias  is calculated as:<br><br>where we can use  (with ) as the support vector.<br>Substitute :<br><br>Calculating each term in the summation:<br><br>
<br>
<br>
 (since )<br>Summing these values:<br><br><br><br>To classify the point , we use the decision function:<br><br>Let’s compute each :<br>
<br>
<br>
<br>
<br>
<br>Now, calculate :<br><br>Substitute the values:<br><br>Calculate each term:<br><br>
<br>
<br>Adding them up with :<br><br>Since , we classify ​ as belonging to class .]]></description><link>https://www.allenygy.vip/machine-learning/assignment/ml-as-3.html</link><guid isPermaLink="false">Machine Learning/Assignment/ML-As-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 03:33:54 GMT</pubDate></item><item><title><![CDATA[Discrete Mathematics Tutorial]]></title><description><![CDATA[ 
 <br><br><br>Assume is an integer. Prove that if  is odd, then n is odd.<br><br><br><br><br>
&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;<br><br>Prove that  is a tautology.<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br><br>]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-tutorial.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Discrete Mathematics Assignment-8]]></title><description><![CDATA[ 
 <br><br><br>This graph is directed. Because the adjacency matrix is not symmetric<br><img alt="Q1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Question1.png" referrerpolicy="no-referrer"><br><br><br><br> <br>
 The two graphs are isomorphic.<br><br>
<br>Base Case (n = 1):<br>
For a cube of dimension n = 1, we have 2 vertices connected by an edge. We can easily divide these two vertices into two separate sets, forming a bipartite graph.<br>
For a cube of dimension n = 2, we have 4 vertices connected by an edge. We can easily divide these two vertices into two separate sets like  forming a bipartite graph. 
<br>Inductive Hypothesis:<br>
Assume that a cube  of dimension k is bipartite, where k ≥ 1.
<br>Inductive Step:<br>
Now we need to show that a cube  is also bipartite. Consider a cube , which is obtained by adding one layer of vertices to the cube . Let's call this additional layer "L". Each vertex in layer L is connected to exactly one vertex in the cube . Now, we can divide the vertices of  into two sets, S₁ and S₂.<br>
Next, we assign each vertex in layer L to the opposite set of its connected vertex in . In other words, if a vertex in L is connected to a vertex in S₁, we assign it to S₂, and vice versa. This assignment ensures that no two vertices within the same set (S₁ or S₂) are adjacent, including the newly added layer L.<br>
Therefore, we have successfully divided the vertices of  into two sets, S₁ and S₂, such that no two vertices within the same set are adjacent. Hence, by induction, we can conclude that a cube  of dimension n is bipartite for n ≥ 1.
<br>This completes the proof.
<br><br>a)<br><img alt="Q4" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Question4.png" referrerpolicy="no-referrer"><br>It's clear that the graph is planar. it can be drawn in the plane without any edges crossing<br>
b) It has Euler Circuit cause the thorem A connected multi-graph has an Euler circuit if and<br>
only if each vertex has even degree. The vertex in the graph all has 4 edges. Therefore, it must have Euler Circuit.<br>
c) It has Hamilton Circuits such that 1-&gt;2-&gt;3 -&gt;4 -&gt;5 -&gt;6-&gt;1<br><br>Consider the following graph G = (V, E), where V = {1, 2, 3, 4} and E = {(1, 2), (2, 3), (3, 4), (4, 1), (1, 3)}.<br>
This graph satisfies the condition that for any two non-adjacent vertices u and v in G, <br>
For example, if we take u = 1 and v = 4, then <br>
However, this graph does not have a Hamilton circuit.<br>
Therefore, we have shown that the converse of Ore's theorem is false by providing a counterexample.]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-8.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Question1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Question1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Discrete Mathematics Assignment-7]]></title><description><![CDATA[ 
 <br><br><br>
<br>
Determine whether the following relation R is reflexive, symmetric, antisymmetric, or transitive if (remember to prove your answer)

<br>
a);
 The following relation R is reflexive, symmetric, anti-symmetric, and transitive<br>
R is reflexive: False, since there are no ordered pairs in R.<br>
R is symmetric: True, vacuously. There are no ordered pairs in R to violate symmetry.<br>
R is antisymmetric: True, vacuously. There are no ordered pairs in R to violate antisymmetry.<br>
R is transitive: True, vacuously. There are no ordered pairs in R to violate transitivity.<br>
  is reflexive, symmetric, antisymmetric, and transitive.

<br>
b) is on $ \mathbb{Z}$;
The following relation R is symmetric.
  x may not larger than -x<br>
  is not reflexive.<br>
  if  larger than     then y must larger than -x<br>
  is symmetric.<br>
  is not antisymmetric.<br>
      <br>
  may not larger than <br>
  may not in R<br>
  is not transitive.

<br>
c) is on ;
The following relation R is reflexive, symmetric and transitive
 <br>
then  and  <br>
  then there must have <br>
 R is reflexive.<br>
  then there must have <br>
 R is Symmetric.  R can't be  antisymmetric.<br>
  then there must have <br>
 R is transitive.

<br>
d) is on 
 The following relation R is reflexive, symmetric and transitive
  x=w and y=z then <br>
 R is reflexive<br>
And  <br>
 R is symmetric and transitive but not antisymmetric.

<br>
e)
The following relation R is reflexive and symmetric
   A is reflexive<br>
  A is symmetric  but not antisymmetric.<br>
   $ A\cap B \ne \emptyset$ <br>
 $ A\cap C$ may  equal to      A is not transitive.



<br><br>
<br>
Let  be two arbitrary relations on an arbitrary set A. Prove or disprove
a) if  and  are reflexive, then  is reflexive.<br>
  are reflexive.<br>
A relation 𝑅 on a set 𝐴 is called reflexive if (𝑎, 𝑎) ∈ 𝑅 for every element 𝑎 ∈ 𝐴.<br>
    contains  for every element <br>
  contains  for every element <br>
  at least contains  for every element <br>
 is reflexive.
 b) if  and  are symmetric, then  is symmetric.<br>
  are symmetric.<br>
A relation 𝑅 on a set 𝐴 is called symmetric if (𝑏, 𝑎) ∈ 𝑅 whenever (𝑎, 𝑏) ∈ 𝑅.<br>
 Suppose  =     then there must also has  .<br>
Otherwise,  or  only has  it can't be symmetric respectively.<br>
 is symmetric.
c) if  and  are antisymmetric, then  is antisymmetric.<br>
  are antisymmetric.<br>
A relation 𝑅 on a set 𝐴 is called anti-symmetric if whenever (𝑎, 𝑏) ∈ 𝑅 and (𝑏, 𝑎) ∈ 𝑅, then 𝑎 = 𝑏<br>
 Suppose  =     then there can not has  .<br>
Otherwise,  and    both  have  and it can't be antisymmetric respectively.<br>
 is antisymmetric.

<br> d) if  and  are transitive, then  is transitive<br>
  are transitive.<br>
A relation 𝑅 on a set 𝐴 is called transitive if whenever  (𝑎, 𝑏) ∈ 𝑅 and (𝑏, 𝑐) ∈ 𝑅, then (𝑎, 𝑐) ∈ 𝑅.<br>
 : <br>
  <br>
  =  Obviously, it can't be transitive.<br>
 is not transitive.<br><br>
<br>
Determine whether the following relations are equivalence relation. You need to prove your answer. If yes, list all distinct equivalent classes (each subset of the partition defined by the equivalence relation).

<br>a) on ;

if   (x mod 5=x）  R is reflexive<br>
if   (x mod 5=y)  y mod 5 may not be x<br>
 is not symmetric  is not equivalence relation

<br>b){(x,y)| x and y are two UIC students and from the same faculty/school.} on the set of all UIC students;

 For reflexive, the same student must be in the same faculty/school as himself/herself, so R satisfies reflexivity
 For symmetric, if student a and student b are from the same faculty/school, then student b and student a are from the same faculty/school, then (a, b) ∈ R, (b, a) ∈ R, so R satisfies symmetric.
 For transitive, if (a, b) ∈ R, (b, c) ∈ R, then will have (a, c) ∈ R, so R satisfies transitive.  
 ∴ this relation is equivalence relation.

<br>c){| there is a bijection } on  is the powerset of . So, A and B are subsets of .

 For reflexive, let A = B, that will have a bijection : A → B, so R satisfies reflexivity<br>
For symmetric, if : A → B is a bijection, then : B → A is a bijection, it means that if<br>
(A, B) ∈ R, that will also have (B, A) ∈ R, so R satisfies symmetric<br>
For transitive, if : A → B is a bijection, : B → C is a bijection, then it will always have<br>
ℎ: A → C is a bijection, so R satisfies transitive.<br>
∴ this relation is equivalence relation. equivalent classes are all  that can have bijection relation to every 

]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-7.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Discrete Mathematics Assignment-6]]></title><description><![CDATA[ 
 <br><br><br>a) <br>
b)  <br>
c) <br>
<br>
There are only 3 situations  z=2,1,0<br>
when  then <br>
<br>
when  then <br>
<br>
when  then <br>
<br>
 There are totally 21 ways to pick 10 coins such that the total amount is at most ￥20<br><br>a)  neither an injection nor a surjection<br>
 There are  kinds of function <br>
b)  is an injection<br>
 kinds of function <br>
c)  is a surjection<br>
 kinds of function <br>
d)  is an bijection<br>
 =m!/ (m-n)!    <br>
                           <br>
c:  <br>
d:  if n = m The number of bijections from a set A with n elements to a set B with m elements is <br>
if n m The number of bijections from a set A with n elements to a set B with m elements is . <br><br> is injection \because |A|&gt;|B| $ If A are placed into B, then there is at least one box containing at least 2 objects.<br>
$\therefore $ It can't be an injection function<br><br>Suppose the length of the string is n<br>
 is the number of binary strings<br>
  <br>
 and <br>
   <br>
  <br>
 <br><br>Suppose that <br>
    $ r_2=5\therefore a_n=\alpha_12^n+\alpha_25^na_0=2=\alpha_1+\alpha_2a_1=1=2\alpha_1+5\alpha_2\therefore \alpha_1=3$     <br>
]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-6.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Discrete Mathematics Assignment-5]]></title><description><![CDATA[ 
 <br><br><br>a)  False e.g.    <br>b)  True <br>​		 <br>​			<br>c)  False<br>​		e.g.  <br>​			     when   <br><br>a)  is a bijection      <br>​							  <br>​								 $\therefore x $ is a function<br>​								 is an injection<br>​							     is a surjection<br>​							 is a bijection<br>b)  is a function      <br>​							  <br>​								 $\therefore x $ is a function<br>​								 is not an injection<br>​							     is not a surjection<br>​							 is not a bijection<br>c)  is a bijection       is a function      <br>​							   <br>​								  $\therefore x $ is a function<br>​								 is an injection<br>​							     is a surjection<br>​							 is a bijection<br>d)f is a injection      <br>​							  <br>​								$(((x_1,y_1) \in f \wedge (x_1,y_2)\in f) $ $\therefore x $ is a function<br>​								 is a injection<br>​							     is not a surjection<br>​							 is not a bijection<br><br>a)      <br>b)      <br>c)      <br>d)      <br><br>a)      <br>b)      <br>c)      <br><br> is a injection <br>          <br>$\because g: C\rightarrow A,h: C\rightarrow A $<br>         <br>:        <br>          <br>  ]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-5.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Discrete Mathematics Assignment-3]]></title><description><![CDATA[ 
 <br><br><br>a) <br>
    Modus tollen<br>
   De Morgan’s laws<br>
  Distributive laws<br>
  Identity Laws<br>
 <br>
  De Morgan’s laws<br>
  Domination Laws<br>
b) <br>
   Modus ponens<br>
   Modus tollen<br>
c) <br>
 <br>
 De Morgan’s laws<br>
 <br>
 <br>
<br>
<br>
<br><br>Step2 is wrong: Step 2 should be Existential instantiation using(1)<br>
Step6 is wrong: Step 6 can't be Universal generalization<br><br><br><br>    P: a is a multiple of 4<br>
   Q: 3a+1 is odd<br>
a)Direct proof:<br>
 : <br>
     a is a mutiple of 4<br>
     Suppose: a=4n<br>
      <br>
      is an odd<br>
b)Contradiction:<br>
 : <br>
      is even ()<br>
    <br>
         <br>
      <br>
       is odd ()<br>
    <br>
c)Contraposition:<br>
 : <br>
      ()<br>
     <br>
     It's clear that  can't be divided by 4 ()<br>
   <br><br>   If  is even then  is even then the proof is done.<br>
  If  is odd then   is an odd then  is an even number<br><br>    <br>
   <br>
    for n <br>
<br>
Basis step: P(1):     <br>
Induction Hypothesis: Assume P(k-1) is true<br>   <br>
Inductive Step: <br>
      <br>
      <br>
      <br><br>     <br>
 <br>
Basis step: P(0):  <br>
Induction Hypothesis:  Assume P(k) is true <br>
Inductive Step:  ]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-3.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Discrete Mathematics Assignment-2]]></title><description><![CDATA[ 
 <br><br><br>a)<br><br><br>
<br>
<br>
<br>
<br>
it's clear that  is a contingency.<br>b)<br><br><br>
<br>
<br>
<br>
<br>c)<br><br><br>
<br>
<br>
<br><br>a) <br>
b) <br>
c)     <br>
<br><br>a) False<br>
Reason:    any x less than any y<br>
if  then the predicates must be wrong<br>
b) False<br>
Reason:  exits x less than any y<br>
however if <br>
y must be less than x, so the predicates must be wrong<br>
c) True<br>
Reason: for any x ,there exits y larger than x.<br>
d) True<br>
Reason: exits x, y for x &lt; y<br>
if y=x+1 y must larger than x<br>
e) True  False<br>
Reason: exits x for any y less than x<br>
if x=y+1 x must larger than x<br>
f) True  False<br>
Reason:  for any x  exits y so that y less than x<br>
if y=x-1 y must be less than x<br><br><br><br><br>Prove: <br>
<br>
<br>
<br>
]]></description><link>https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-2.html</link><guid isPermaLink="false">Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[tree]]></title><description><![CDATA[ 
 <br><br>
<br>A tree is a connected undirected simple graph that contains no simple circuits.
<br><br>
<br>A rooted tree is a tree in which one node has been designated the root.
<br>Every edge is directed away from the root.
<br>Given a vertex 𝑣 in a rooted tree 𝑇:

<br>Parent: unique vertex 𝑢 such that (𝑢, 𝑣) is an edge (in the direction from root to 𝑣)
<br>Child: any vertex for which 𝑣 is a parent
<br>Siblings : vertices with the same parent
<br>Ancestors : all vertices from root to 𝑣 (except itself)
<br>Descendants : vertices with 𝑣 as an ancestors


<br>A vertex of a tree is called a leaf if it has no children.
<br>Vertices that have children are called internal vertices.
<br>
Rooted Trees（有根树）是一种基础的数据结构，它由若干个节点和连接这些节点的边组成。它们通常用于表示层次结构，例如文件系统、网站导航、家谱等。根据定义，每个树都有一个根节点，它是唯一的，并且没有父节点。每个节点可以有零个或多个子节点，每个子节点都连接到其父节点。树的节点可以表示任何对象，可以是简单的值（例如数字或字符串），也可以是更复杂的对象或数据结构。节点可以具有任意数量的子节点，但每个节点最多只能有一个父节点。
<br><br>
<br>A Game (State) Tree models the different possible outcomes in a game.

<br>Vertices: positions (states) in a game.
<br>Edges: legal moves from one position (state) to another.
<br>Leaves: Final positions (states) of a game.


<br>eg: Tic-Tac-Toe
<br><br>
<br>A rooted tree is called 𝑚-ary if every internal vertex has no more than 𝑚 children (maximum is 𝑚).
<br>It is called full if every internal (non-leaf) vertex has exactly 𝑚 children.
<br>A 2-ary tree is called a binary tree. If 𝑣 is an internal vertex of a binary tree, it has at most two children. The first we call the left child and the second the right child.
<br>If vertex 𝑣 is in a tree 𝑇, the sub-tree with root 𝑣 is the tree consisting of 𝑣 and all its descendants.
<br>
m-ary Tree是一种树形数据结构，它的每个节点最多有m个子节点。m通常被称为树的度。当m=2时，m-ary Tree就是二叉树；当m=3时，m-ary Tree就是三叉树。m-ary Tree常用于计算机科学中的搜索和排序算法，例如B树和B+树，它们被广泛应用于数据库和文件系统的实现中。在m-ary Tree中，节点的度数可以任意，而不像二叉树那样只能是2，因此m-ary Tree可以更灵活地表达数据结构和算法的特点。
<br><br>The level of a node is the length of the path from the root to the node (The level of the root is defined to be zero).<br>
<br>The height of a tree is maximum level of node.
<br>A rooted m-ary tree with height ℎ is called balanced if all leaves are at levels ℎ or ℎ − 1.
<br><br>
<br>Rooted trees are used to store information.

<br>We often need to do some operation on the vertices in such a tree.
<br>A tree traversal (遍历) is an algorithm designed to “visit” each node in the tree.


<br>Traversal Algorithms

<br>Pre-order traversal
<br>In-order traversal
<br>Post-order traversal


<br><br>
<br>先序遍历可以想象为，一个小人从一棵二叉树根节点为起点，沿着二叉树外沿，逆时针走一圈回到根节点，路上遇到的元素顺序，就是先序遍历的结果
<br><img alt="Pre-order" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Pre-orderTraversal.png" referrerpolicy="no-referrer"><br><br>
<br>中序遍历可以看成，二叉树每个节点，垂直方向投影下来（可以理解为每个节点从最左边开始垂直掉到地上），然后从左往右数，得出的结果便是中序遍历的结果
<br><img alt="In-order" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/In-orderTraversal.png" referrerpolicy="no-referrer"><br><br>
<br>后序遍历就像是剪葡萄，我们要把一串葡萄剪成一颗一颗的。
<br>还记得我上面提到先序遍历绕圈的路线么？（不记得翻上面理解）<br>就是围着树的外围绕一圈，如果发现一剪刀就能剪下的葡萄（必须是一颗葡萄）（也就是葡萄要一个一个掉下来，不能一口气掉超过1个这样），就把它剪下来，组成的就是后序遍历了。<br><img alt="Post-order" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Post-orderTraversal.png" referrerpolicy="no-referrer"><br><br>
<br>A spanning tree of a connected undirected graph 𝐺 is a subgraph of 𝐺 that contains all of 𝐺’s vertices and enough of its edges to form a tree.
<br>To obtain a spanning tree from a connected undirected graph with cycles.
<br>Remove edges until there are no cycles.
<br>There are two algorithms for constructing spanning trees.

<br>Depth-First Search (Back-tracking)
<br>Breadth-First Search


<br><br>
<br>
Depth-First Search (DFS) proceeds along a path from a vertex 𝑣 as deeply into the graph as possible before backing up (back tracking).

<br>
To create a depth-first search (DFS) spanning tree

<br>
Traverse the graph using a depth-first search and mark the edges that you follow.

<br>
After the traversal is complete, the graph’s vertices and marked edges form the spanning tree.



<br><img alt="DFS" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DFS.png" referrerpolicy="no-referrer"><br><br>
<br>Breadth-First Search (BFS) visits every vertex adjacent to a vertex v that it can before visiting any other vertex.
<br>To create a breath-first search (BFS) spanning tree

<br>Traverse the graph using a bread-first search and mark the edges that you follow.
<br>When the traversal is complete, the graph’s vertices and marked edges form the spanning tree.

<img alt="BFS" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/BFS.png" referrerpolicy="no-referrer">
<br><br>
<br>A minimum spanning tree in a connected weighted graph is a spanning tree that has the smallest possible sum of weights of edges.

<br>There may be several different minimum spanning trees for a particular graph. But the minimum weight is unique.


<br><br>
<br>
Initially, starts from an empty (no vertices, no edges) sub minimum spanning tree 𝑇.

<br>
Randomly put a vertex 𝑣 into 𝑇.

<br>
Among all the edges (𝑢, 𝑠) such that 𝑢 is in 𝑇 and 𝑠 is not in 𝑇, find the one of the minimum weight. And add the edge and the endpoint to 𝑇.

<br>
Repeat Step 3 for 𝑛 − 1 iterations (because a tree has 𝑛 − 1 edges).

<br>  <img alt="Prim's Algorithm" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Prim's%20Algorithm.png" referrerpolicy="no-referrer"><br><br>
<br>
Initially, starts from a subgraph of all vertices but no edges.

<br>
Find the edge with the smallest weight.

<br>
If adding the smallest edge to the subgraph does not create any cycle, add it. (To maintain the tree property.)

<br>
Otherwise, this edge is not in the MST. So, discard the edge.

<br>
Repeat steps 2-4 until for 𝑛 − 1 iterations (because a tree has 𝑛 − 1 edges).

<br><img alt="Kruskal’s Algorithm" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Kruskal's%20Algorithm.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/tree.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/tree.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Pre-orderTraversal.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Pre-orderTraversal.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[sets-and-n-tuple]]></title><description><![CDATA[ 
 <br><br><br>
<br>A set is a collection of objects
<br>Sets are used to group objects together
<br><br>
<br>
{}

<br>
Expressions:

<br>List all the members

<br>


<br>Use predicates

<br>


<br>Use suspension points

<br>




<br>
Properties：

<br>No order
<br>No duplicated elements


<br><br>
<br>A universal set<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a> is a set that contains all the objects under consideration
<br>Some Common universial sets

<br>ℕ : the set of all natural numbers
<br>ℤ : the set of  integers
<br>: the set of all the positive integers
<br>ℚ: the set of all rational numbers
<br>ℝ: the set of all the real numbers
<br>ℂ: the set of all complex numbers


<br><br>
<br>A Venn diagram includes two basic shapes

<br>A rectangle: indicates the universal set (all the objects under consideration)
<br>Circles or other shapes: indicate normal sets.


<br><br>
<br>: x is in or is an element of S.
<br>: x is not in or is not an element of S.
<br><br>
<br>Subsets

<br>The set  is a subsets of the set  (denoted ) iff 
<br>


<br> iff

<br>
<br>
<br>


<br>Proper Subsets

<br>The set  is a proper subsets of the set  (denoted ) iff 


<br>Empty sets denoted 
<br><br>
<br>Cardinality is the number of distinct elements in a set.

<br>The cardinality of a set  is denoted as .
<br>The Cardinality an be finite or infinite.

<br>eg. , 




<br><br>
<br>The power sets of  is  which is the set of all the subsets of .

<br>


<br>The Cardinality of  = <a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>
<br><br>
<br>The form  or 

<br>Called ordered n-tuple
<br>The elements in the tuple are ordered
<br>E.g.,

<br> is a 2-tuple  is a 2-tuple they are different




<br><br>
<br>
Cartesian product of two sets  and  denoted()

<br>


<br>
if  and , then 

<br>


<br>


<br>
<br>
<br>通用集,泛集<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>use induction to proof<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/sets-and-n-tuple.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/sets-and-n-tuple.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[representing-graph-and-connectivity]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Mostly used for the graph with many edges (dense graph);
<br><br>
<br>Mostly used for the graph with few edges (sparse graph).
<br><img alt="Representing-Graph" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Representing-Graph.png" referrerpolicy="no-referrer"><br><br>The simple graphs  and  are isomorphic if<br>
<br>There is a bijection (1-1, onto)  such that:
<br>.
<br>Graphic invariants are the things that isomorphic graphs must have in common

<br>the same number of vertices,
<br>the same number of edges,
<br>the degrees of corresponding vertices are the same,
<br>same graph type,
<br>same number, and types, of sub-graphs.


<br><br><br>A path of length n from vertex u to vertex v is a sequence of n edges  such that , starts at u and  ends at v.<br><br>A circuit is a path that begins and ends at the same vertex in graph.<br><img alt="Circuit" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Circuit.png" referrerpolicy="no-referrer"><br><br>
<br>A simple path or circuit does not pass through the same edge twice or more.(不经过同样的边两次以上).
<br><img alt="Simple Circuit" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/SimpleCircuit.png" referrerpolicy="no-referrer"><br><br>
<br>Undirected Graph

<br>An undirected graph is connected if there is a path between every pair of distinct vertices.


<br>Directed Graph

<br>A directed graph is strongly connected if there is a path from a to b and from b to a whenever a and b are vertices in the graph.
<br>A directed graph is weakly connected if, after all the arrows are removed, the undirected graph is connected.


<br><br>
<br>
An Euler path in G is a simple path containing every edge of G.（不需回到起点）

<br>
An Euler circuit in a graph G is a simple circuit containing every edge of G.(回到起点)

<br>
Theorem: （欧拉路径）

<br>A connected multi-graph has an Euler path (not an Euler circuit) iff it has exactly 2 vertices of odd degree. （两个奇度点）


<br>
Theorem: （欧拉回路）

<br>A connected multi-graph has an Euler circuit if and only if each vertex has even degree. （无奇度点）


<br><br>
<br>A Hamilton path is a path that traverses each vertex in G exactly once.
<br>A Hamilton circuit is a circuit that traverses each vertexin G exactly once.
<br><br>
<br>Ore's theorem<br>
If for every pair of nonadjacent vertices u and v in the simple graph G with n vertices, , then G has a Hamilton circuit.
<br>Dirac's theorem<br>
If the degree of each vertex is great than or equals n/2 in the connected simple graph G with n vertices where n &gt; 3 then G has a Hamilton circuit.
<br><br>
<br>A graph is planar if it can be drawn in the plane without any edges crossing
<br>The drawing is called a planar representation of the graph.
<br><br>
<br>In a planar representation of G

<br>e: number of edges
<br>v: number of vertices
<br>r: number of regions
<br>r=e-v+2


<br><img alt="Euler’s Formula" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Euler-formula.png" referrerpolicy="no-referrer"><br>
<br>There are three ways to determine if a graph is not a planar-graph.

<br>If G is a connected planar simple graph with e edges and v vertices with v &gt; 3, then e ≤ 3v - 6

<br>That is, if e &gt; 3v- 6, G is not a planar graph


<br>lf G is a connected planar simple graph, then G has a vertex of degree not exceeding 5
<br>If G has no vertex of degree below 5, G is not a planar-graph.
<br>If G is a connected simple graph where v &gt; 3 and no circuits of length 3, then e &lt; 2v - 4. if v &gt; 3 and no circuits of length 3 and e &gt; 2v - 4then G is not a planar graph.


<br>
对于一个连通的简单平面图G，如果它有e条边和v个顶点，其中v &gt; 3，则e ≤ 3v - 6。也就是说，如果e &gt; 3v - 6，则G不是平面图。<br>
如果一个连通的简单平面图G没有度数小于5的顶点，则G不是平面图。<br>
对于一个简单图G，如果它是连通的，v &gt; 3，并且没有长度为3的回路，则e &lt; 2v - 4。<br>
如果v &gt; 3，没有长度为3的回路，并且e &gt; 2v - 4，则G不是平面图。
]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/representing-graph-and-connectivity.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Representing-Graph.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Representing-Graph.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[relation]]></title><description><![CDATA[ 
 <br><br><br>
<br>Relationships exist in our daily life
<br>A relation is a structure that is used to represent the relationships between elements.
<br>Category of relations

<br>Binary relations
<br>N-ary relations


<br><br>
<br>A binary relation R from the set 𝐴 to the set 𝐵 is a subset of 𝐴 × 𝐵.

<br> is a set of ordered pairs in the form (𝑎, 𝑏) where 𝑎 is from 𝐴 and 𝑏 is from 𝐵.
<br>𝑎 𝑅 𝑏 denotes (𝑎, 𝑏) ∈ 𝑅, called 𝑎 is related to 𝑏 by 𝑅.


<br><br>
<br>There are several other ways to represent relations

<br>Tables
<br>Matrices
<br>Graphs


<br><br>
<br>All the functions are relations.
<br>It is not the case that all the relations are functions.
<br>Functions are the specialization of relations.
<br>Relations are the generalization of functions.
<br><br>
<br>A relation on a set 𝐴 is a relation from 𝐴 to 𝐴.
<br><br><br>
<br>A relation 𝑅 on a set 𝐴 is called reflexive if (𝑎, 𝑎) ∈ 𝑅 for every element 𝑎 ∈ 𝐴.
<br><br>
<br>A relation 𝑅 on a set 𝐴 is called symmetric if (𝑏, 𝑎) ∈ 𝑅 whenever (𝑎, 𝑏) ∈ 𝑅.
<br><br>
<br>A relation 𝑅 on a set 𝐴 is called anti-symmetric if whenever (𝑎, 𝑏) ∈ 𝑅 and (𝑏, 𝑎) ∈ 𝑅, then 𝑎 = 𝑏<br>
(i.e, if 𝑎 ≠ 𝑏 and (𝑎, 𝑏) ∈ 𝑅 then (b, 𝑎) $\notin $𝑅)
<br><br>
<br>A relation 𝑅 on a set 𝐴 is called transitive if whenever (𝑎, 𝑏) ∈ 𝑅 and (𝑏, 𝑐) ∈ 𝑅, then (𝑎, 𝑐) ∈ 𝑅.
<br><br>
<br>𝑅: a relation from 𝐴 to 𝐵.
<br>𝑆: a relation from 𝐵 to 𝐶.
<br>The composite of 𝑅 and 𝑆 (𝑆 ◦ 𝑅): consisting of all ordered pairs (𝑎, 𝑐) where 𝑎 ∈ 𝐴, and 𝑐 ∈ 𝐶 if there exists 𝑏 such that (𝑎, 𝑏) ∈ 𝑅 and (𝑏, 𝑐) ∈ 𝑆.
<br><br>
<br>Let 𝑅 be a relation on the set 𝐴. The powers 𝑅𝑛for integer 𝑛 with 𝑛 &gt; 0 are defined recursively by

<br>
<br>


<br>For example

<br>𝑅 = {(1, 2), (2, 3), (3, 1)}
<br> = {(1, 2), (2, 3), (3, 1)}
<br>𝑅 ◦ 𝑅 = {(1, 3), (2, 1), (3, 2)}


<br>Theorem:

<br>The relation 𝑅 on a set 𝐴 is transitive if and only if  for 𝑛 = 1, 2, 3, ⋯


<br><br>
<br>Let 𝐴1, 𝐴2, … , 𝐴𝑛 be sets.

<br>An 𝑛-ary relation on these sets is a subset of 
<br>Domain: 
<br>Degree: 


]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/relation.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/relation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[propositional-logic]]></title><description><![CDATA[ 
 <br><br><br>
<br>A declarative sentence (陈述句) is a sentence that aims to declare a fact.

eg: Today is Saturday.


<br>疑问句/祈使句...(不是)
<br><br>
<br>A proposition is a declarative sentence that is either true or false.
<br><br>
<br>Use variables (English letters) to represent propositions.
<br><br>
<br>Assigned to propositional variables.

True: represented by T<br>
False: represented by F


<br><br>
<br>Logical negation (indicated by ¬ , ! , or ⁻)  非
<br>Logical conjunction (indicated by ∧, &amp;&amp;, or ·) 与  合取
<br>Logical disjunction (indicated by ∨, ||, or +) 或  析取
<br>Logical exclusive disjunction (indicated by ⊕) 异或
<br><br><br>
<br>p when q<br>
<img alt="img_1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/img_1.png" referrerpolicy="no-referrer">
<br><br>
p is the sufficient condition for q; q is the necessary condition for p
<br>* False always true
<br>
<br>Contrapositive（质位变换命题, 逆否命题: 
<br>Converse (逆命题)：
<br>Inverse (否命题)：$\neg p \rightarrow \neg q $
<br><br><br>
<br>p if and only if q
<br>if p then q<br>
<img alt="img_2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/img_2.png" referrerpolicy="no-referrer">
<br><br>
<br>A compound proposition involves a number of propositional variables and logical operators. <img alt="img_3" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/img_3.png" referrerpolicy="no-referrer"><br>
 does not mean 
<br><br>
<br>Equivalently, if a specification {} is consistent, then the compound proposition  is true for at least one assignment
<br>If the specification is inconsistent, then  is always false.<br>
1
]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/propositional-logic.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/propositional-logic.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/img_1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/img_1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[propositional-equivalence]]></title><description><![CDATA[ 
 <br><br><br>
<br>Tautology(恒真)
<br>contradiction(矛盾)
<br>contingency(偶然)
<br><br>
<br>Two propositions (P,Q) are equivalent if the proposition 

<br>If two propositions are equivalent, they must have the same truth table.


<br><br>
<br>Identity(同一) laws  

<br>
<br>


<br>Domination(支配) laws

<br>
<br>


<br>Idempotent (幂等) laws

<br>
<br>


<br>Double negation laws

<br>


]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/propositional-equivalence.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/propositional-equivalence.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Logic-Circuits]"]]></title><description><![CDATA[ 
 <br><br><br>
<br>Logic gate symbols
<br>Logic circuits design
<br>Minimization of logic circuits
<br><br>*<img alt="LogicalGate" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/LogicGates.png" referrerpolicy="no-referrer"><br>
<br>Buffer

<br>It is used for delay
<br>Useful for timing purpose
<br>Not for the logical purpose
<br><img alt="Buffer" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Buffer.png" referrerpolicy="no-referrer">


<br><br><img alt="LogicalGate01" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/LogicCircuit01.png" referrerpolicy="no-referrer"><br><img alt="LogicalGate02" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/LogicCircuit02.png" referrerpolicy="no-referrer"><br>
<br>Steps in Design of Logical Circuits (Without minimization)
<br>
<br>Find the inputs and outputs

<br>Inputs: number of variables in the Boolean function
<br>Outputs: how many functions are required


<br>Draw the truth table

<br>Truth table: indicate the relationship between outputs and inputs
<br>Specify what ‘0’ and ‘1’ (in input and output) in the table represent?


<br>Figure out the functions

<br>Use sum of products or product of sums


<br>Design the logical circuits
<br><br>
<br>Add two bits

<br>0 + 0 = 0
<br>0 + 1 = 1
<br>1 + 0 = 1
<br>1 + 1 = 0 and carry 1 to the next place


<br><img alt="HalfAdder" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Half-Adder.png" referrerpolicy="no-referrer">
<br>S: 本位
<br>C: 进位
<br><img alt="HalfAdder" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/HA.png" referrerpolicy="no-referrer">
<br><br><img alt="Full-Adder" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Full-Adder.png" referrerpolicy="no-referrer"><br><br>
<br>Find the inputs and outputs

<br>Inputs: number of variables in the Boolean function
<br>Outputs: how many functions are required


<br>Draw the truth table

<br>Truth table: indicate the relationship between outputs and inputs
<br>Specify what ‘0’ and ‘1’ (in input and output) in the table represent?


<br>Figure out the functions

<br>Use sum of products or product of sums


<br>Minimization of the Boolean functions if possible
<br>Design the logical circuits
<br><img alt="Karnaugh-Map" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Karnaugh-Map.png" referrerpolicy="no-referrer"><br><img alt="KM_1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/KM1.png" referrerpolicy="no-referrer"><br><img alt="KM_2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/KM2.png" referrerpolicy="no-referrer"><br><img alt="KM_3" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/KM3.png" referrerpolicy="no-referrer"><br><img alt="KM_4" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/KM4.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/logic-circuits.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/logic-circuits.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/LogicGates.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/LogicGates.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[graph-theory]]></title><description><![CDATA[ 
 <br><br><br>
<br>Definition:<br>
A graph G = is a pair and consists of two sets V and E such that

<br> is the set of vertices and
<br> is the set of edges.


<br>V cannot be empty, E cannot be empty.
<br>A vertex can also be called an endpoint (node).
<br>Each edge has one or two vertices.
<br><br>
<br>A graph is a simple graph if:

<br>each edge connects two different vertices and
<br>where no two edges connect the same pair of vertices.


<br>
简单图是一种没有自环和重复边的图。也就是说，在简单图中，每条边连接两个不同的点，且同一对顶点之间只有一条边。
<br><br>
<br>A multigraph is a graph that may have multiple edges connecting the same pair of vertices.
<br>If there are m different edges associated to the same unordered pair of vertices.
<br>
Multigraph（多重图）是一种有重复边的图。也就是说，在Multigraph中，两个顶点之间可以有多条边。<br>
在图论中，Multiplicity（重数）指的是一条边在一个图中出现的次数。在简单图中，每条边的重数为1，而在Multigraph中，一条边的重数可以大于1。
<br><br>
<br>A loop is an edge that connects one vertex to itself.
<br>Graphs that may include loops, and possibly multiples edges connecting the same pair of vertices are called pseudo-graph.(伪图)
<br>
在图论中，Loop（自环）是一条连接同一个顶点的边。自环的两个端点是同一个顶点。在简单图中不存在自环，但在Multigraph中可以存在自环。自环的重数为自环的数量。
<br><br>
<br>A directed graph (V, E) consists of a nonempty set V and a set of directed edges E.
<br>The edge (u, v) in a directed graph starts at u and ends at u.
<br>The edge (v, u) starts at v and ends at u.
<br>The edges in an undirected graph have no direction.
<br><br><br>
<br>The degree of a vertex in an undirected graph is the number of edges connected with it except that a loop at a vertex contribute twice to the degree of that vertex.
<br>Denoted by  where v is a vertex.
<br><br>
<br>In-Degree and Out-Degree
<br>The in-degree of a vertex (u) in a directed graph is the number of edges that end at this vertex, denoted by .<br>
The out-degree of a vertex in a directed graph is the number of edges that start at this vertex, denoted by 
<br><br>
<br>Theorem: For an undirected graph <br>

<br><br>
<br>Theorem: An undirected graph has an even number of vertices of odd degree.<br>
(奇度点个数偶数)
<br>Theorem: In a directed graph <br>

<br><br><br>
<br>A complete graph is a simple graph in which there is an edge between each pair of distinct vertices, denoted by  where n is the number of nodes in the graph.
<br><img alt="CompleteGraph" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CompleteGraph.png" referrerpolicy="no-referrer"><br><br>
<br>A cycle is a graph that contains n  vertices  and n edges  denoted by  where n is the number of nodes in the graph.
<br><img alt="Cycle" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Cycle.png" referrerpolicy="no-referrer"><br><br>
<br>A wheel  is obtained by adding an additional vertex to the cycle , for n &gt; 3, and connect this new vertex to each of the vertices in , by new edges.
<br><img alt="Wheel" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Wheel.png" referrerpolicy="no-referrer"><br><br>
<br>A cube of dimension n  is a simple graph of  vertices, where each vertex represents a bit string of length n. Two vertices are adjacent if and only if they differ by one bit.
<br><img alt="Cube" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Cube.png" referrerpolicy="no-referrer"><br><br>
<br>A simple graph  is called bipartite if its vertex set V can be partitioned into two disjoint set , and , such that every edge in the graph connects a vertex in , and a vertex in ,
<br> and , are called a bipartite of the vertex set V of G.
<br><img alt="Bipartite Graph" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/BipartiteGraph.png" referrerpolicy="no-referrer"><br><br>
<br>Theorem: A simple graph G = (V, E) is bipartite if and only if it ispossible to color each vertex with one of two colors so that noadiacent vertices have the same color.
<br><br>
<br>A subgraph H = (W, F) of graph G = (V, E) is made up of vertices  and edges 
<br>A subgraph H of G is a proper subgraph if 
<br><img alt="Subgraphs" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Subgraphs.png" referrerpolicy="no-referrer"><br><img alt="Union" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Union.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/graph-theory.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/graph-theory.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CompleteGraph.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CompleteGraph.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[functions-sequence-and-summations]]></title><description><![CDATA[ 
 <br><br><br>
<br>A function  from  to  is a subset of  which satisfies the following two conditions

<br>

<br><a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>


<br>

<br> <a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>




<br><br>
<br> is one-to-one iff:

<br>For , if  then 


<br>One-to-One function is also called injective function <a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a>
<br><br>
<br> is onto iff:

<br>


<br>Onto function is also called surjective function <a data-footref="[inline3" href="https://www.allenygy.vip/about:blank#fn-4-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[4]</a>
<br><br>
<br> is a bijective function iff

<br> is both onto and one-to-one


<br>One-to-One and onto function is also called bijective function <a data-footref="[inline4" href="https://www.allenygy.vip/about:blank#fn-5-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[5]</a>
<br><br>
<br>Injection: 
<br>Surjection: , But  may not equal to 
<br>Bijection: 
<br><br>
<br>If  from set A to set B, then

<br> is called the image of  under 
<br> is called a pre-image of 
<br>The set of all the images of the elements in the domain under is called the range of .


<br><br>
<br>  is a bijection.

<br>The inverse of  is bijection   for all x 
<br>if  then 


<br><br>If  is a function from  to  and  is a function from  to , then  is the composition of g and f<br><br>
<br>Floor Function

<br>Denoted 


<br>Ceiling Funcation
<br>Denoted  eg. 
<br><br>
<br>Sequences are ordered lists of elements
<br>A sequence is a function from  a subset of the set of integers  or  to a set , denoted . The integers determine the positions of the elements in the list.
<br><br>
<br>Sequences are very useful in summations.
<br>A summation is the value of the sum of the terms of a sequence.<br>

<br><br>
<br>A geometric series is a summation of a geometric progression

<br>Geometric progression: 
<br>Geometric series: 


<br>A harmonic series is the summation of a harmonic progression

<br>Harmonic progression: 
<br>Harmonic series:


<br>
<br>
<br>For all elements in A<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>One and only one y in B for each x in A<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>(单射)<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>(满射函数)<br>
值域y是满的，每个y都有x对应，不存在某个y没有x对应的情况<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>(双射函数)<a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/functions-sequence-and-summations.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/functions-sequence-and-summations.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[counting-principles]]></title><description><![CDATA[ 
 <br><br><br>
<br>
The product rule<br>
Suppose that a procedure can be broken into a sequence of two tasks. If there are m ways  to do the first task and n ways  to do the second task, then there are   x  to do the procedure.

<br>
Theorem: If  

]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/counting-principles.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/counting-principles.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Boolean-Expressions]"]]></title><description><![CDATA[ 
 <br><br>
<br>
The operands are {0,1}.

<br>
The operators are   (multiplication, addition, complement).

<br>
Similar to basic arithmetic (addition table for example), we can form tables to show calculations in Boolean algebra.

<br><img alt="Operators" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Operators.png" referrerpolicy="no-referrer"><br><img alt="ComOperators" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ComOperators.png" referrerpolicy="no-referrer"><br><img alt="Identities" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Identities.png" referrerpolicy="no-referrer"><br>
<br>Unit Property: 
<br>Zero Property: 
<br><br><br>
<br>The disjunctive normal form (DNF) of a Boolean expression is the unique sum of min-terms of the variables in the expression (function).

<br>Each min-term has exactly one literal for every variable.
<br>Also called sum of products expansion.
<br>At most one min-term can have value 1 for a combination of values of<br>
variables.
<br>Some of min-terms can be simplified by a method (next lecture). After<br>
simplification, the expression is called sum of product.
<br>But in some books, DNF means the sum of products (after<br>
simplification) while canonical disjunctive normal form (CDNF) is the<br>
sum of products expansion. We do not use this naming in this course.


<br><img alt="DNF" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DNF.png" referrerpolicy="no-referrer">
<br><br>
<br>A max-term of Boolean variables  is the sum of n literals y1 + y_2+,..., +y_n where y_i (1 &lt; i &lt; n) is either $x{i};
<br>The conjunctive normal form (CNF) of a Boolean expression is theproduct of max-terms of the variables in the expression (function) Also called product of sums expansion.
<br><img alt="CNF" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CNF1.png" referrerpolicy="no-referrer">
<br><img alt="CNF1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/CNF1.png" referrerpolicy="no-referrer">
<br><img alt="Completeness01" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/FunctionalCompleteness01.png" referrerpolicy="no-referrer"><br><img alt="Completeness02" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/FunctionalCompleteness02.png" referrerpolicy="no-referrer"><br><img alt="Completeness03" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/FunctionalCompleteness03.png" referrerpolicy="no-referrer"><br><img alt="Completeness04" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/FunctionalCompleteness04.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/math/discrete-structure/lecture/boolean-expressions.html</link><guid isPermaLink="false">Math/Discrete Structure/Lecture/boolean-expressions.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Operators.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Operators.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Vector Space]]></title><description><![CDATA[ 
 <br><br><br><br> Definition
The set of all column n-vectors   is called N-dimensional real space and is denoted .<a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>

<br>e.g.  is the  component of .

<br><br>
<br>Let  and  be two elements of  and let  be a scalar. Addition and scalar multiplication are defined as

<br>Addition:<br>
 
<br>Scalar Multiplication:<br>



<br><br>
<br>  ( is closed under addition) 加法闭合
<br>  ( is closed under scalar multiplication) 乘法闭合
<br><br>Zero Vector Definition:
The vector , having n zero components, is called the zero vector of  and is denoted .<br>
Property: .
<br><br>Negative Vector Definition:
   The vector  is written  and is called the negative of .<br>
It is a vector having the same magnitude as , but lies in the opposite direction to .<br>
Property: for any vector , 
<br><br>Vector Space Axioms
Let V be a set on which the operations of addition and scalar multiplication are defined.<a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a><br>
The set V together with the operations of addition and scalar multiplication is said to form a vector space if the following axioms are satisfied:

<br>.    for any x and y in V.
<br>.  for any x, y, and z in V.
<br>. There exists an element 0 in V such that x + 0 = x for each x ∈ V.
<br>. For each x ∈ V, there exists an element −x in V such that x + (−x) = 0.
<br> for each scalar α and any x and y in V.
<br> for any scalars α and β and any x ∈ V.
<br> for any scalars α and β and any x ∈ V.
<br> for all x ∈ V.

<br><br>
<br>:

<br>Addition:   The sum is still an  matrix
<br>Scalar multiplication:   It is still an  matrix


<br><br> Definition:
  is the set of all real-valued continuous functions defined on the interval .<br>
Vectors in this case are continuous real-valued functions.
<br>
<br>:

<br>Addition: 
<br>Scalar multiplication: 


<br><br> Definition:
A polynomial of degree k (k≥0) is a function of the form

<br>  where .
<br> is also considered to be a polynomial.

<br><br>If  is a vector space and   then

<br>
<br>
<br>

<br>
<br>

<br>
<br>
<br>


<br><br><br> Subspaces Definition:
Let V be a vector space (for example, ). A nonempty subset S of V is a subspace if it is closed under addition and closed under scalar multiplication.
<br>To show that a subset S of a vector space forms a subspace, we must show that<br>
<br>S is nonempty (it contains the zero vector)
<br>    (S is closed under addition)
<br> (S is closed under scalar multiplication)
<br><br>
<br>Definition:<br>
If V is a vector space, then V is a subspace of itself, and S = {0} is a subspace of V.<br>
All the other subspaces are referred to as proper subspaces.
<br>We refer to {0} as the zero subspace.
<br><br>
<br>Definition:<br>
For a m×n matrix A, let 𝑁(A) denote the set of all solutions to the homogeneous system Ax = 0, that is 𝑁(A)={|Ax=𝟎}<br>
Null space is a subspace

<br>Addition: if 𝒙,𝒚∈𝑁(A), then A𝒙=𝟎,  A𝒚=𝟎⇒A(𝒙+𝒚)=𝟎, so x+𝑦∈𝑁(A)
<br>Scalar multiplication: if 𝒙∈𝑁(A), c∈R, then A𝒙=𝟎⇒A(c𝒙)=𝟎 ⇒ c𝒙∈𝑁(A)


<br><br>
<br>Definition:

<br>For vectors  from a vector space V and scalars  the sum  is called a linear combination of .
<br>The set of all possible linear combinations of  is called the span of , denoted by :<br>
()={}


<br><br>If  are vectors from a vector space V , then  is a subspace of V.<br><br>
<br>Definition:<br>
The set of vectors {} is a spanning set for a vector space V if and only if every vector in V can be written as a linear combination of , that is to say, for any x𝜖V there exist scalars  such that 
<br><br>
<br>Step 1: Put the column vectors into a matrix, A=[,...]
<br>Step 2: Augment the matrix by the vector 
<br>Step 3: Row reduce the augmented matrix  to check whether it is consistent for All a, b, c
<br>Step 4: If  is consistent for All a, b, c, then the columns of , is a spanning set of .
<br><br><br>
<br>Definition:<br>
The vectors  in a vector space V are said to be linearly dependent (线性相关) if and only if there exist scalars , not all zero, such that<br>

<br>Let , then  is linearly dependent if and only if the null space of A, 𝑁(A), is NOT the zero subspace {0}.
<br><br>Nonzero vectors  are linearly dependent if and only if at least one vector is a linear combination of the others.<br><br>
<br>Definition:<br>
The vectors  in a vector space V are said to be  linearly independent (线性无关) if implies that all the scalers  must equal to 0.
<br>Let , then  is linearly independent if and only if the null space of A is the zero subspace: 𝑁(A)={𝟎}.
<br>None of the vectors  can be written as a linear combination of the others.
<br><br>Let  be n vectors in  and let .<br>
<br>The vectors  will be linearly dependent if and only if 𝑋 is singular.
<br><br>Let  be vectors in a vector space V.<br>
<br>A vector  can be written uniquely as a linear combination of  if and only if  are linearly independent.
<br><br>
<br>Definition：<br>
The vectors  form a basis for a vector space V if and only if

<br> are linearly independent.
<br> span V.


<br>If  form a basis for V, then:for any 𝒃∈V, there exists unique  such that 
<br><br>
<br>Definition：<br>
The set {} of n vectors is the standard basis for .

<br>Standard basis for : {}.
<br>Standard basis for : {}.  


<br><br>
<br>Definition:<br>
Let V be a vector space. If V has a basis consisting of n vectors, we say that V has dimension n and write dim V=n
<br>The subspace {0} of V is said to have dimension 0.
<br>V is  finite dimensional if there is a finite set of vectors that spans V; otherwise V is infinite dimensional.

<br>dim R^n = n
<br>dim R^(m×n) = m×n
<br>dim Pn = n


<br><br>
<br>If S = {} is a spanning set for a vector space V , then any collection of m vectors in V with m &gt; n is linearly dependent.
<br><br>
<br>If {} and {} are both bases for a vector space V , then m = n.
<br><br>If V is a vector space with dim ⁡V = n &gt; 0, then<br>
<br>Any set of n linearly independent vectors also spans V;
<br>Any n vectors that span V are also linearly independent
<br><br>If V is a vector space with dim V = n &gt; 0, then<br>
<br>No set with k &lt; n vectors can span V ;
<br>Any subset of k &lt; n linearly independent vectors can be extended to form a basis for V;
<br>Any spanning set of V with m &gt; n vectors can be cut down to form a basis for V .
<br><br><br>
<br>Definition：<br>
Let V be a vector space and let E={} be an ordered basis for V. If v is any element of V, then v can be written uniquely in the form<br>
 where  are scalers.<br>
Thus, we can associate each vector v a unique column vector {}. The vector is called the coordinate vector of v with respect to (w.r.t). the ordered basis E, denoted .
<br><br>Given vector , find its coordinates (w.r.t).  and .<br>
<br>As we have x=Uc.
<br>Matrix U is nonsingular, therefore .
<br>Thus,  is the transition matrix from {} to {}.
<br>Given vector , find its coordinates w.r.t.  and .<br>
<br>If c is the coordinate vector of x with respect to the basis {}, then

<br>x=Uc


<br>And

<br>


<br>Where U={} is called the transition matrix from the {} to the standard basis {}, and  is the transition matrix from {} to {}.
<br>Changing coordinate vectors from one basis {} of  to another basis {}:<br>
<br>Suppose for a given vector x, its coordinates (w.r.t.) {} are known: We want to write x as .
<br>We have ; Let  and .
<br>Then   is the transition matrix from {} to {}.
<br>Property

<br>A transition matrix is nonsingular
<br>If S is the transition matrix from {} to {}, then  is the transition matrix from {} to {}.


<br><br><br>For an m×n matrix A, the rows are n-vectors from , and the column vectors are m-vectors from .<br>
<br>Definition:

<br>For an m×n matrix A, the subspace of  spanned by the row vectors of A is called the row space of A.
<br>The subspace of  spanned by the column vectors of A is called the column space of A.


<br><br>
<br>Two row-equivalent matrices have the same row space.
<br><br>
<br>Two row-equivalent matrices have the same null space.
<br>If U is the rref of A and , then als .
<br>All the column vectors of A corresponding to the leading variables in U form a basis of the column space of A.
<br><br>
<br>Definition:<br>
The rank of a matrix A is the dimension of the row space of A, denoted rank(A).
<br>Property: The rank of a reduced row echelon form is equal to the number of lead variables
<br><br>
<br>dim(Row Space A) = dim(Column Space A) = rank(A).
<br><br>
<br>The linear system Ax = 𝐛 is consistent if and only if 𝐛 is in the column space of A.

<br>An n×n square matrix A is nonsingular if and only if the column vectors of A form a basis for  ⇔ Ax=b always have unique solution ⇔ 𝑟ank(A)=n⇔det⁡(A)≠0


<br><br>
<br>Definition:<br>
The nullity of a matrix A is the dimension of the null space of A, that is nullity(A) = dim(𝑁(A)).
<br>Properties：

<br>The number of lead variables:   rank(A)
<br>The number of free variables:   dim(N(A))
<br>The number of variables:        n


<br><br>
<br>rank(A)+dim(N(A))=n
<br><br>Let . The following are equivalent:<br>
<br>The columns of A are linearly independent
<br>𝑁(A)={𝟎}
<br>Nullity(A) = 0
<br>A𝒙=𝒃 has at most 1 solution for any 𝒃
<br>Let . The following are equivalent:<br>
<br>The columns of  spans 
<br>The column space of  is 
<br>Rank(A) = m
<br> always have at least 1 solution for any 𝒃
<br><br>
<br>
<br>Euclidean Vector Spaces<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Perhaps the most elementary vector spaces are the Euclidean vector spaces .<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>By this we mean that, with each pair of elements x and y in V, we can associate a unique element x+y that is also in V, and with each element x in V and each scalar α, we can associate a unique element αx in V.<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Here vector is one  matrix<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Only Square matrix<a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/math/linear-algebra/vector-space.html</link><guid isPermaLink="false">Math/Linear Algebra/Vector Space.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Product]]></title><description><![CDATA[ 
 <br><br><br>For vector a and b<br>
<br>Inner Products Formula

<br>内积的几何意义<br>点乘的几何意义是可以用来表征或计算两个向量之间的夹角，以及在b向量在a向量方向上的投影。<br>]]></description><link>https://www.allenygy.vip/math/linear-algebra/product.html</link><guid isPermaLink="false">Math/Linear Algebra/Product.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Orthogonality]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Definition:<br>
For vectors x and y in , the 1×1 matrix  (also treated as a scalar) is called the scalar product of  x and y, and is given by<br>

<br>Other names: inner product ⟨x,y⟩, dot product x⋅y
<br><br>
<br>Definition:<br>
For a vector x in , the Euclidean length (norm, magnitude)<br>
‖x‖ of x  is defined to be<br>

<br>A vector u in \mathbb{R}^n is a unit vector if and only if ‖u‖=1.
<br>If x is a nonzero vector, then   is a unit vector in the direction of x.
<br>The distance between two vectors x and y is 
<br><br>
<br>Definition:<br>
Let the angle between the two vectors be 𝜃 (0≤𝜃≤𝜋), then =‖x‖‖y‖  cos⁡𝜃, i.e. if u=x/‖x‖ ,𝐯=y/‖y‖
<br>
<br><br>
<br>Definition:<br>
If =0, then we say that x and y are orthogonal, and denote x{\bot}y.
<br><br><br>
<br>scalar projection: .
<br>vector projection: .<br>
If u is a unit vector, then
<br>The scalar projection of x onto u is<br>

<br>The vector projection of x onto u is<br>

<br><br><br><br>
<br>Definition:<br>
Two subspaces 𝑋 and y of  are said to be orthogonal if  for every x∈𝑋 and every y∈y.<br>
If 𝑋 and y are orthogonal, we write 𝑋{\bot}y.<br>
Note: 𝑋 and y are subspaces of the same vector space .
<br>In .
<br>In ,  
<br><br>
<br>Definition:<br>
For a subspace y of \mathbb{R}^n, the set of vectors in  that are orthogonal to every vector in y will be denoted . Thus, ={  for every  $ y∈y$}
<br>The set  is called the orthogonal complement of y
<br> is the “biggest” subspace orthogonal to y.
<br><br>If 𝑋 and y are orthogonal subspaces of , then 𝑋∩y={𝟎}<br><br>If y is a subspace of , then  is also a subspace of .<br><br>
<br>Let A be an m×n matrix.

<br>As a linear transformation, . (m-n)<br>
N(A) is a subspace of  (where ).<br>
The range of A = the column space of A (subspace of ):<br>
R(A)={ |b = Ax for some   } 



<br>As a linear transformation, . (n-m)<br>
N() is a subspace of  (where ).<br>
The column space of ,  is a subspace of <br>
={y =A^T x$ for some   } 



<br>The column space of  is basically the row space of A, except row vectors “stands up” and become column vectors in .<br>
Thus,   if and only if  is in the row space of A.<br>
<br>
<br>
<br><br><br>If A is an m×n matrix, then<br>
<br>
<br><br>
 <a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>
<br><br>If S is a subspace of , then dim + dim =n.<br>
Furthermore, if {} is a basis for S and {} is a basis for , then {} is a basis for .<br><br>
<br>Definition:<br>
If U and 𝑉 are subspaces of a vector space 𝑊 and each 𝐰∈𝑊 can be written uniquely as a sum u + 𝐯, where u∈U and 𝐯∈𝑉, then we say that 𝑊 is a direct sum of U and 𝑉, and we write 
<br><br>If S is a subspace of , then .<br><br>If S is a subspace of , then <br><br>For a subspace S in :<br>
<br>
<br>
<br>
<br>For a m×n matrix A:
<br>Subspaces of . <a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>
<br>
<br>Subspaces of . <a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a>
<br>
<br><br><br>
<br>
<br><br><br><br>
<br>For an m×n matrix A, if the linear system Ax=b does not have a solution , we still want a vector &nbsp; such that &nbsp;is closest to b.
<br>If , we seek to minimize ,  which is the same as minimizing ‖𝑟(x)‖
<br>A vector  that minimizes  is called a least squares solution of .
<br> is the vector in , the column space of A, that is closest to b.
<br><br>
<br><br>

<br>Therefore, <br>

<br><br>Summary<br>
<br>To solve the least squares problem 
<br>We need to solve 
<br>Least squares solution x minimizes ‖𝑟(x)‖=‖b−Ax‖ and b−Ax&nbsp;is orthogonal to R(A).
<br><br><br>If A is an m×n matrix of rank n, the normal equation have a unique solution &nbsp;is the unique least squares solution of .<br><br>If A is an m×n matrix of rank n (i.e. columns are independent),<br>
<br>The unique least squares solution of Ax=b is 
<br>The projection of b onto R(A) is 
<br>Projection is a linear operator, with projection matrix 
<br><br><br>For ANy vector space 𝑉, there is an abstract definition of inner product ⟨x,y⟩: it must satisfy<br>
<br>⟨x,x⟩≥0, with equality if and only if x=𝟎
<br>⟨x,y⟩=⟨y,x⟩
<br>⟨x+𝛽y,𝐳⟩=⟨x,𝐳⟩+𝛽⟨y,𝐳⟩
<br><br>
<br>⟨x,y⟩ in , it means the scalar product .
<br><br>
<br>Definition:<br>
A set {} of nonzero vectors is said to be an orthogonal set if ⟨⟩=0 whenever i≠𝑗.
<br><br>
<br>Definition:<br>
An orthonormal set of vectors is an orthogonal set of unit vectors.<br>
you can turn an orthogonal set into an orthonormal set by scaling each vector to have unit length: 
<br><br>If {} is an orthogonal set of nonzero vectors, then  is linearly independent. <a data-footref="[inline3" href="https://www.allenygy.vip/about:blank#fn-4-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[4]</a><br><br>If 𝐵={} is an orthonormal set, then by the theorem above, 𝐵 is a basis for the subspace S=Span()=R(U).<br>
We say that 𝐵 is an orthonormal basis for S.<br><br><br>Let {} be an orthonormal basis for 𝑉. If , then .<br>
In other words, for any x∈𝑉 then<br>
<a data-footref="[inline4" href="https://www.allenygy.vip/about:blank#fn-5-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[5]</a><br>
In other word, <br>
<br>Parseval’s formula<br>
If , then ‖x‖<br>
in other word, ‖​x‖
<br><br>
<br>The unique least squares solution of Ax=b is 
<br>The projection of b onto R(A) is 
<br>Projection is a linear operator, with projection matrix 
<br><br>If the column vectors of m×n matrix A form an orthonormal set of vectors in , then the projection of  onto S=R(A) is projection matrix: <br><br>If {} is an orthonormal basis for a nonzero subspace S of , then the projection of  onto S is<br>
<br><br><br>
<br>Definition:<br>
An n×n matrix 𝑄 is called an orthogonal matrix if the columns of 𝑄 form an orthonormal basis in .
<br><br>An n×n matrix 𝑄 is an orthogonal matrix if and only if<br>
<br>
<br>Properties<br>
Let 𝑄 be an n×n matrix. The following are equivalent:

<br>𝑄 is an orthogonal matrix.
<br>The columns of 𝑄 form an orthonormal basis for .
<br>, that is, .
<br> for all .
<br>‖𝑄x‖=‖x‖ for all .


<br><br>
<br>Least Square<br>

<br><br>If the column vectors of m×n matrix A form an orthonormal set of vectors in , then  and the solution to the least squares problem Ax=b is <br><br>
<br>Orthogonal set:  when i≠𝑗
<br>Vectors in an orthogonal set are linearly independent
<br>Orthonormal set/basis: =𝛿
<br>Orthogonal matrix: 
<br>If {} is an orthonormal basis for 𝑉:

<br>$x=⟨x,u_1 ⟩ u_1+…+⟨x,u_n ⟩ u_n $
<br>, ‖x‖


<br>If {} is an orthonormal basis for a subspace S=R(U):
<br>Least squares solution to Ux=b is 
<br>Projection of b onto S is 
<br>
<br>
<br><a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>  <a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>  <a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>If =𝟎, need to show .<br>
Taking the inner product of 𝐯_1 on both sides:<br>
<br>
but since , ⟨⟩=‖‖&gt;0, so .<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Proof: <a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/math/linear-algebra/orthogonality.html</link><guid isPermaLink="false">Math/Linear Algebra/Orthogonality.md</guid><dc:creator><![CDATA[AllenyGy]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Review]]></title><description><![CDATA[ 
 <br><br>公式  是矩阵对角化的基本公式，表示将矩阵  通过相似变换转化为对角矩阵  的过程。要解释这个公式如何得出，我们可以从特征值和特征向量的定义出发，逐步推导。<br><br>给定一个  的矩阵 ，它的特征值  和对应的特征向量  满足：<br><br>其中：<br>
<br> 是矩阵，
<br> 是  的特征值，
<br> 是与  对应的特征向量。
<br>这个方程说明矩阵  作用于特征向量  时，只是将  缩放，而不改变方向。<br><br>假设矩阵  有  个线性无关的特征向量 。我们可以将这些特征向量排成一个矩阵 ：<br><br>其中，矩阵  的每一列是一个特征向量。<br><br>由于每一个特征向量  满足 ，我们可以将这个关系写成矩阵形式：<br><br>根据每个特征向量的定义，这就变成了：<br><br>换句话说：<br><br>其中，矩阵  是一个对角矩阵，其对角线上的元素是矩阵  的特征值：<br><br><br>现在我们有了 ，为了将矩阵  对角化，我们可以在这个方程两边同时乘以 ：<br><br>由于  是单位矩阵 ，我们得到：<br><br>这就是矩阵对角化的公式。<br><br>
<br> 是由矩阵  的特征向量组成的矩阵。
<br> 是  的逆矩阵。
<br> 是对角矩阵，对角线上是矩阵  的特征值。
<br>通过相似变换 ，我们将矩阵  转换为一个对角矩阵 ，对角线上的元素就是矩阵  的特征值。这意味着矩阵  的本质性质（特征值）可以通过对角化过程显现出来，而这个对角矩阵可以极大简化某些复杂的矩阵运算。]]></description><link>https://www.allenygy.vip/math/linear-algebra/eigen-decomposition-review.html</link><guid isPermaLink="false">Math/Linear Algebra/Eigen-Decomposition-Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Matrix Operation]]></title><description><![CDATA[ 
 <br><br>
<br>分子布局
<br>分母布局 行数与分母相同
]]></description><link>https://www.allenygy.vip/math/linear-algebra/matrix-operation.html</link><guid isPermaLink="false">Math/Linear Algebra/Matrix Operation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Linear Transformations]]></title><description><![CDATA[ 
 <br><br><br>Definition:<br>
A mapping L from a vector space V into a vector space W is said to be a linear transformation if<br>for all  and for all scalars  and .<br>
<br>Alternative definition:<br>
L is a linear transformation if and only if for all  and scalars 𝛼,<br>

<br><br>
<br>Definition:<br>
A mapping L from a vector space V into a vector space W will be denoted<br>
When the arrow notation is used, it will be assumed that V and V represent vector spaces.
<br><br>
<br>Definition:<br>
When the vector spaces V and W are the same, we will refer to a linear transformation  as a linear operator on V. Thus, a linear operator is a linear transformation that maps a vector space V into itself.
<br>L𝑖n𝑒𝑎𝑟 𝑜𝑝𝑒𝑟𝑎𝑡𝑜𝑟 ⊂ 𝑙𝑖n𝑒𝑎𝑟 𝑡𝑟𝑎n𝑠𝑓𝑜𝑟m𝑎𝑡𝑖𝑜n<br>
<br><br>
<br>Definition:<br>
If A is any m×n matrix, and define<br>
via<br>
for all . Then L is a linear transformation from  to .
<br>Property:<br>
If L is a linear transformation mapping a vector space V into a vector space W, then

<br> (where  and  are the zero vectors in V and W, respectively).
<br>If  are elements of V and  are scalars, then =
<br>.


<br><br>
<br>Definition:<br>
Let L :  be a linear transformation. The kernel of L, denoted ker⁡(L), is defined by

<br> = {}


<br>The kernel of L is the set of all vectors from V that L transforms to the zero vector in W.
<br>Note, if L is defined via matrix multiplication for some matrix A, then ker⁡(L)=𝑁(A), the null space of A.
<br><br>
<br>Definition:<br>
Let L : V \rightarrow  W be a linear transformation and let S be a subspace of V. The image of S, denoted L(S), is defined by<br>
 = { for some $ v\in S$}
<br><br>
<br>Definition:<br>
The image of the entire vector space, L(V), is called the range of L.
<br>In other word<br>
<br>If {} is a spanning set of S, then L(S) is the span of .
<br>If L is defined via matrix multiplication for some matrix A, then L(V), the range of L, is the column space of A.
<br><br>If L : V \rightarrow  W is a linear transformation and S is a subspace of V. Then<br>
<br>={} is a subspace of V.
<br>={ for some } is a subspace of W.
<br><br><br>If L is a linear transformation mapping  into , then there is an m×n matrix A, such that for each , L(x)=Ax.<br>
In fact, the  column vector of A is given by (j=1,2,…,n)<br>
<br>How to write the m×n matrix A:

<br>See what L does to the basis vectors  in V. Because  is in W, write it as linear combination of ;
<br>write the coordinate vector  as the first column of matrix A.
<br>Repeat for , to find the ,… column of A.


<br><br>If 𝐸={} and 𝐹={} be ordered bases for  and , respectively. If L:  is a linear transformation and A is the matrix representing L w.r.t. 𝐸 and 𝐹, then<br>
 (j=1,2,…,n)<br>
Where W=.<br><br>If A is the matrix representing the linear transformation L:  with respect to the bases<br>
𝐸={} and 𝐹={}<br>
then the reduced row echelon form of [|] is .<br>]]></description><link>https://www.allenygy.vip/math/linear-algebra/linear-transformations.html</link><guid isPermaLink="false">Math/Linear Algebra/Linear Transformations.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Eigenvalues and Eigenvectors]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Definition：<br>
Let A be an n×n matrix.<br>
A scalar  is said to be an eigenvalue of A if there exists a nonzero vector  such that<br>
Such  is said to be an eigenvector for A belonging to .

<br>The pair (,x) is sometimes called an eigen-pair for A.
<br>Eigenvalues and eigenvectors are only defined for square matrices
<br>Eigenvectors must be nonzero


<br>Property

<br>A is singular ⇔ =0 is an eigenvalue of A.
<br>If A is nonsingular, then  is an eigenvalue of , and x is an eigenvector of  belonging to ^(−1), i.e. .
<br>For ,  is an eigenvalue of , and x is an eigenvector of  belonging to , i.e. 
<br>If , what can  be? Hint: .
<br>If , what can  be? Hint: 


<br><br>Find eigenvalue and eigenvector<br>
<br>
<br>: eigenspace 特征空间 corresponding to the eigenvalue .<br>
This has a nontrivial solution x \ne 0 if and only if we pick  so that the square matrix (A−I) is singular.That is: First use det⁡(A−I)=0 to find all eigenvalues for A, and then use N(A−I) to find all eigenvectors for A.
<br><br>
<br>
Property:<br>
Let A be an n×n matrix and  be a scalar. The following statements are equivalent:

<br> is an eigenvalue of A.
<br> has nontrivial solutions.
<br>
<br>A−I is singular.
<br>det⁡(A−I)=0


<br>
 is a degree n polynomial in variable , called the characteristic polynomial 特征多项式.

<br>
: characteristic equation for A

<br><br><br>If   are distinct eigenvalues of an  n×n matrix A with corresponding eigenvectors , then the vectors  are linearly independent.<br><br>An n×n matrix A is said to be diagonalizable if there exists a nonsingular matrix X and a diagonal matrix D such that<br>
We say that X diagonalizes A.<br><br>An n×n matrix A is diagonalizable if and only if A has n linearly independent eigenvectors.<br>
<br>If A is diagonalizable, then the column vectors of the diagonalizing matrix X are eigenvectors of A and the diagonal elements of D are the corresponding eigenvalues of A.
<br>The diagonalizing matrix X is not unique. Reordering the columns of a given diagonalizing matrix X or multiplying them by nonzero scalars will produce a new diagonalizing matrix.
<br>If A is n×n and A has n distinct eigenvalues, then A is diagonalizable. If the eigenvalues are not distinct, then A may or may not be diagonalizable, depending on whether A has n linearly independent eigenvectors.
<br>If A is diagonalizable, then A can be factored as a product<br>
 
<br><br>
trace = a+d =<br>
det(A)=
<br><br>Let A be a symmetric n×n matrix: <br>
<br>Property:

<br>
<br>If x is an eigenvector of A and y⊥x, then Ay⊥x. <a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>
<br>If  are eigenvectors of A with , then . <a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>


<br><br>A square matrix A is orthogonally diagonalizable if  for some diagonal matrix D and some orthogonal matrix Q.<br>
<br>n×n matrix A is orthogonally diagonalizable if and only if A has n orthonormal eigenvectors (columns of Q)
<br>From the previous slide, if a symmetric matrix A has n distinct eigenvalues, then A has n mutually orthogonal eigenvectors.
<br>Surprisingly, symmetric n×n matrix A ALWAYS has 𝒏 orthonormal eigenvectors, and ALL eigenvalues are real!
<br><br>If A is a real symmetric matrix, then there is an orthogonal matrix Q that diagonalizes A; that is, , where  is diagonal, with real entries.<br><br><br>Properties<br>
<br>Eigenvalue: nonnegative , real
<br>Eigenvector: Orthoganal
<br><br>Suppose a m×n matrix A Then<br>
<br> and  are symmetric. are orthogonally diagonalizable
<br> and  are orthogonally diagonalizable
<br>
 has m orthonormal eigenvectors<br>
 has n orthonormal eigenvectors
<br>
<br>All eigenvalues of  and  are non-negative.<a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a>
<br><br>Assume that A is an m×n matrix with m ≥ n.  is SVD of A<br>
Factorize A into a product  , where<br>
<br>U is an m × m orthogonal matrix 
<br>V is an n ×n orthogonal matrix  
<br>\sum  is an m ×n matrix whose off-diagonal entries are all 0’s and whose diagonal elements satisfy: Properties
<br>The first r columns of V is an orthonormal basis for 
<br>The rest of columns of V is an orthonormal basis for 
<br>The first r columns of U is an orthonormal basis for 
<br>The rest of columns of U is an orthonormal basis for 
<br><br>If A is an m × n matrix, then A has a singular value decomposition.<br><br>2×2： 3×3： <br>
<br>In , for a symmetric n×n matrix A, the function  
<br><br>A real n×n symmetric matrix A is said to be<br>
<br>Positive definite 正定 if  for all nonzero x in   
<br>Negative definite 负定 if  for all nonzero x in 
<br>Positive semidefinite 半正定 if  for all nonzero x in 
<br>Negative semidefinite 半负定 if  for all nonzero x in 
<br>Indefinite 不定 if  takes positive and negative values
<br><br>If A is a real symmetric n×n matrix, then there is a change of variables , where Q is an orthogonal matrix, such that<br>
 where D is a real diagonal matrix.<br><br>Let A be a real symmetric n×n matrix. Then A is positive definite if and only if all its eigenvalues are positive.<br>
A is<br>
<br>Positive definite iff all its eigenvalues are positive
<br>Negative definite iff all its eigenvalues are negative
<br>Positive semidefinite iff all its eigenvalues are nonnegative
<br>Negative semidefinite iff all its eigenvalues are nonpositive
<br>Indefinite iff all it has both positive and negative eigenvalues
<br><br>Let A be a real symmetric n×n matrix. The following are equivalent:<br>
<br>A is positive definite.
<br>The leading principal submatrices  all have positive determinant.
<br>
Leading principal submatrices:upper-left  1×1, 2×2, 3×3,…<br>
If some determinants are positive, and others negative: A is indefinite.<br>
If these determinants are all ≥0: positive semidefinite.
<br>
<br>
<br><a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Proof:<br>
Compare  and :<br>
=&gt;, but . Therefore  =&gt; <a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br> <br>
=  &gt;0<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/math/linear-algebra/eigenvalues-and-eigenvectors.html</link><guid isPermaLink="false">Math/Linear Algebra/Eigenvalues and Eigenvectors.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Judgment Questions]]></title><description><![CDATA[ 
 <br><br><br>
<br>

<br>The set {} is a basis for a two-dimensional subspace of .  True


<br>

<br>The set {} is a basis for a one-dimensional subspace of .  True


<br>

<br>The set of all vectors of the form  is a subspace spanned by the vectors  and .  True


<br>

<br>The set of vectors of the form  is a vector in the plane spanned by the vectors  and .  True


<br>

<br>The set {} is a basis for a subspace of .  False


<br><br>
<br>

<br>If 𝑆 is a subspace of a vector space 𝑉, then 𝑆 is a vector space.  True


<br>

<br>It is possible to find a pair of two-dimensional subspaces 𝑆 and 𝑇 of  such that 𝑆∩𝑇={𝟎}.  False


<br>

<br>If 𝑆 and 𝑇 are different proper subspaces of a vector space 𝑉, then 𝑆∪𝑇 is a subspace of 𝑉.  False  


<br>

<br>If 𝑆 and 𝑇 are subspaces of a vector space 𝑉, then 𝑆∩𝑇 is a subspace of 𝑉.  True


<br>

<br>If  span , then they are linearly independent.  True


<br>

<br>If  span a vector space 𝑉, then they are linearly independent.  False


<br>

<br>If  are vectors in vector space 𝑉 and = then  are linearly dependent.  True


<br>

<br>If 𝐴 is an 𝑚×𝑛 matrix, then 𝐴 and  have the same rank.  True


<br>

<br>If 𝐴 is an 𝑚×𝑛 matrix, then 𝐴 and  have the same nullity.  False


]]></description><link>https://www.allenygy.vip/math/linear-algebra/judgment.html</link><guid isPermaLink="false">Math/Linear Algebra/Judgment.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Lagrange Multipliers]]></title><description><![CDATA[ 
 <br><br>Consider a problem of the following form: <br><br><br>Define the Lagrange multiplier method to solve the problem <br><br>
<br>'s are called the Lagrange multipliers 
<br>Then Solve the problem by 

<br>set  partial derivative to 0, 

<br>
<br>




<br><br>In optimization theory,&nbsp;duality&nbsp;means that optimization problems may be viewed from either of two perspectives, the primal problem or the dual problem.<br>The solution to the dual problem provides a lower bound to the solution of the primal (minimization) problem.&nbsp;<br>If you have a minimization&nbsp;problem, you can also see it as a maximization&nbsp;problem. &nbsp;And when you find the maximum of this problem, it will be a lower bound to the solution of the minimization problem.<br><br>Consider a generalized constrained optimization problem which contains inequality as well as equality constraints.:<br><br><br><br>Also called primal problem. To solve it, we start by defining the generalized Lagrangian:<br><br>
<br>
Here, the ′s and&nbsp; ′ s are the Lagrange multipliers or dual variables

<br>
objective is augmented with weighted sum of constraint functions

<br>Consider the quantity<br><br>
<br> stands for "primal". Let  be given; if  violates any of the primal constraints, then ; if the constraints are indeed satisfied for a particular value of , then .
<br>Hence,<br><br>Hence, consider the minimization problem<br><br>
<br>It is the same as our original, primal problem. Let the optimal value of the primal problem be .
<br>Now, let’s look at a slightly different problem:<br><br>
<br>The new problem is optimizing (maximizing) with respect to , which are minimized with respect to .
<br>Then, we can have the dual optimization problem:<br><br>
<br>This is exactly the same as our primal problem shown above, except that the order of the "max" and the "min" are now exchanged.
<br>Let <br>
<br>The solution to the dual problem provides a lower bound to the solution of the primal (minimization) problem.
<br>Now, we can solve the dual problem in lieu of the primal problem:<br>
<br>Easier for computation
<br>Kernel functions
<br>Under the condition that  and  are convex functions and  are affine, and constraints of  are strictly feasible:<br>
<br>There exists , so that  is the solution to the primal problem and  are the solution to the dual problem, and .
<br>Moreover,  satisfy the KKT conditions.
<br>KKT conditions are as follows:<br><br><br><br><br>]]></description><link>https://www.allenygy.vip/math/optimization/lagrange-multipliers.html</link><guid isPermaLink="false">Math/Optimization/Lagrange Multipliers.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Probability-Theory]]></title><description><![CDATA[ 
 <br><br>
<br>Set Theory
<br>Probability Theory
<br>Conditional Probability and Independence
<br>Random Variables
<br>Distribution Functions
<br><br>
<br>
Countable set: it consists of countable number (finite or countably infinite) of elements. For example, the set of even numbers is countably infinite; the set of prime numbers under 10,000 is finite.

<br>
Uncountable set: it consists of uncountable number of elements. For example, the number of real numbers in any interval (a, b); the set of possible outcomes from measuring human weight or height.

<br><br>Experiments<br>
<br>Many investigations may be characterized in part by the fact that repeated experimentation.
<br>Each experiment terminates with an outcome.
<br>Suppose that we have such an experiment, the outcome of which can’t be predicted.
<br>If this kind of experiment can be repeated under the same conditions, it is called a random experiment.
<br>The collection of every possible outcome is called the experimental space or the sample space.
<br>Event – a set of outcomes.
]]></description><link>https://www.allenygy.vip/math/probability-statistics/probability-theory.html</link><guid isPermaLink="false">Math/Probability Statistics/Probability-Theory.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Poisson-Distribution]]></title><description><![CDATA[ 
 <br><br><br>
<br>
Consider the number of times an event occurs over an interval of time or space, and assume that: (考虑事件在一段时间和空间内发生的次数)

<br>

<br>The probability of occurrence is the same for any intervals of equal length


<br>

<br>The occurrence in any interval is independent of an occurrence in any non-overlapping interval




<br>
The probability distribution of X is characterized by<br>


<br>
For Poisson distribution, the following is true:<br>
λ is called the Poisson parameter. λ is the average number of items considered in the Poisson process during the observed time period.

<br><br>
<br>Binomial distribution

<br>


<br>Poisson distribution

<br>


<br>Intuitively, the Binomial distribution and the Poisson distribution seem to be unrelated. But a closer look reveals a very interesting relationship. The Poisson distribution is just a special case of the binomial distribution. When n tends to infinity and p approaches zero, the binomial distribution approaches the Poisson distribution.<br>As you can see on the slide,  intuitively the 2 distributions seem to be unrelated. However, by searching on the internet. We found an interesting relationship between the Binomial distribution and the Poisson distribution. That is when the trail n tends to infinity.  The Poisson distribution is just a special case of the binomial distribution.
<br><br>Let me give you a simple derivation<br>For binomial distribution<br>
<br><br>
 

<br> represents the number of trails
<br> represents the probability that a trial will succeed


<br>As you can see the binomial distribution on the slide, the expected value of the binomial distribution is equal to the variable n times the probability p. So we can get p by lambda divided by n.
<br>Put the equation in the expression for the binomial distribution， we can get the following expression<br><br>And we put this equation to the binomial distribution, we can get the following expression 
<br>By expanding the combination number<br><br>There is an assumption in the Poisson distribution<br>For Poisson distribution  <br><br>For the Poisson distribution, the variable n tends to the infinity
So we just need to simplify this limit expression
<br>We can expand the factorial， then cancel out the (n-k)factorial part<br><br>After that, we switch the positions of the denominators<br><br>We can see that the factorial part has k terms， and we have n k times<br><br><br><br><br>This part can be divided into two terms<br><br><br><br><br>According to the definition of the natural constant e<br><br><br>It can be found that the base part is the same as the definition<br>]]></description><link>https://www.allenygy.vip/math/probability-statistics/poisson-distribution-midterm-pre.html</link><guid isPermaLink="false">Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 09:00:50 GMT</pubDate></item><item><title><![CDATA[Hypothesis-Testing-Two-Population]]></title><description><![CDATA[ 
 <br><br><br>
<br>Population Means, Independent Samples

<br>Population 1 vs independent Population 2


<br>Population Means, Related Samples

<br>Same population before vs after treatment


<br>Population Proportions

<br>Proportion 1 vs Proportion 2


<br><br>
<br> and  are known
<br> and  are unknown, assumed equal
<br> and  are unknown, not assumed equal
<br>Use the difference between 2 sample means<br>The Point estimate for the difference is<br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/twopopulationmeans.png" referrerpolicy="no-referrer"><br><br>Test statistic is a z statistic<br>The standard error of  is<br><br>The test statistic for :<br><br>The confidence interval  is:<br><br><br>Test statistic is a t statistic with  (n1 + n2 – 2)  degrees of freedom<br>The population variances are assumed equal, so use the two sample variances and pool them to estimate the common  <br><br>The test statistic for  is:<br><br>The confidence interval  is:<br><br><br>Samples are randomly and independently drawn<br>Populations are normally distributed or both sample sizes are at least 30<br>The population variances are not assumed equal, so include the two sample variances in the computation of the t-test statistic<br>The test statistic is a t statistic with  degrees of freedom<br>The number of degrees of freedom is the integer portion of:<br><br>The test statistic for  is:<br><br>The confidence interval  is:<br><br><br>Dependent samples are samples that are paired or related in some fashion.<br><br><br><br><br>Paired (matched)-Sample T Test, the test statistic for   is a t-statistic<br><br>The confidence interval for  is<br><br><br>The point estimate for the difference is<br><br>Mean:<br><br>Standard deviation:<br><br>if :<br><br>if :<br><br>The test statistic for  is a  Z statistic:<br><br>The confidence interval for  is:<br><br><br>Compared two independent samples<br>
<br>Performed Z  test for the difference in two means
<br>Performed pooled variance t-test for the difference in two means
<br>Performed separate-variance t-test for difference in two means
<br>Formed confidence intervals for the difference between two means
<br>Compared two related samples (paired samples)<br>
<br>Performed paired t-tests for the mean difference
<br>Formed confidence intervals for the mean difference
<br>Compared two population proportions<br>
<br>Formed confidence intervals for the difference between two population proportions
<br>Performed Z-test for two population proportions
]]></description><link>https://www.allenygy.vip/math/probability-statistics/hypothesis-testing-two-population.html</link><guid isPermaLink="false">Math/Probability Statistics/Hypothesis-Testing-Two-Population.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 09:01:15 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/twopopulationmeans.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/twopopulationmeans.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Hypothesis-Testing-Single-Population]]></title><description><![CDATA[ 
 <br><br>
<br>State the null hypothesis,  and the alternative hypothesis, 
<br>Choose the level of significance, , and the sample size, n
<br>Determine the appropriate test statistic and sampling distribution
<br>Determine the critical values that divide the rejection and non-rejection regions
<br>Collect data and compute the value of the test statistic
<br>Make the statistical decision and state the managerial conclusion.  

<br>If the test statistic falls into the non-rejection region, do not reject the null hypothesis .
<br>If the test statistic falls into the rejection region, reject the null hypothesis.
<br>Express the managerial conclusion in the context of the problem


<br><br>p-value: Probability of obtaining a test statistic more extreme ( or ) than the observed sample value given  is true<br>
<br>Also called observed level of significance
<br>Smallest value of  for which  can be rejected
<br>就是把求出的值代回  求概率<br>If   p-value   ,  reject <br>
If   p-value ,  do not reject <br>If , then there is some evidence to reject <br>
If , then there is strong evidence to reject <br>
If , then there is very strong evidence to reject <br>
If , then there is extremely strong evidence to reject <br><br><br>Reject a true null hypothesis 原假设是对的却拒绝<br>
The probability of Type I Error is <br><br>Fail to reject a false null hypothesis 原假设是错的却接受<br>
Fail to reject a false null hypothesis <br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/Error.png" referrerpolicy="no-referrer"><br>Type I and Type II errors cannot happen at the same time<br>
<br>Type I error can only occur if  is true
<br>Type II error can only occur if  is false
<br>If Type I error probability  then Type II error probability <br>
If Type I error probability  then Type II error probability <br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/error-1-2.png" referrerpolicy="no-referrer"><br><br>Performed  Z  Test for the mean ( known)<br>
Performed  t  Test for the mean ( unknown)<br>
Performed Z Tests about a Population Proportion<br>
Discussed  critical value and p–value approaches to hypothesis testing<br>
Type I &amp; II errors]]></description><link>https://www.allenygy.vip/math/probability-statistics/hypothesis-testing-single-population.html</link><guid isPermaLink="false">Math/Probability Statistics/Hypothesis-Testing-Single-Population.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/Error.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/Error.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Confidence-Interval]]></title><description><![CDATA[ 
 <br><br>
<br>z-Based Confidence Intervals for a Population Mean:  Known
<br>t-Based Confidence Intervals for a Population Mean:  Unknown
<br>Confidence Intervals for a Population Proportion
<br>Sample size determination
<br>Descriptive Statistics <br>The science of describing the important aspects of a set of measurements<br>
<br>Collect data<br>
e.g. Survey
<br>Present data<br>
e.g. Tables and graphs
<br>Characterize data<br>
e.g. Sample mean = 
<br>Inferential Statistics<br>The science of using a sample of measurements to make generalizations about the important aspects of a population of measurements.<br>
<br>Estimation<br>
e.g.: Estimate the population mean weight using the sample mean weight
<br>Hypothesis testing<br>
e.g.: Test the claim that the population mean weight is 120 pounds
<br><br>
<br>Point

<br>A point estimate is a single number


<br>Interval Estimates

<br>a confidence interval provides additional information about variability


<br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/confidence/estimation.png" referrerpolicy="no-referrer"><br><br>An interval estimate provides more information about a population characteristic than does a point estimate<br>Such interval estimates are called confidence intervals<br><br>The general formula for all confidence intervals is:<br>]]></description><link>https://www.allenygy.vip/math/probability-statistics/confidence-interval.html</link><guid isPermaLink="false">Math/Probability Statistics/Confidence-Interval.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/confidence/estimation.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/confidence/estimation.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Probability-Theory]]></title><description><![CDATA[ 
 <br><br>
<br>The Chi-Square Distribution
<br>Chi-square goodness of fit tests 
<br>A chi-square test for independence 
<br>Chi-Square Tests<br>
<br>Test of Multinomial Experiment

<br>General Test
<br>Test for homogeneity
<br>Test for normal distribution


<br>Test for independence
<br><br>The chi-square  distribution depends on the number of degrees of freedom.<br>
<br>There is a family of chi-square distributions.
<br>It is skewed to the right.
<br>It is non-negative.<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/Chi-Square.png" referrerpolicy="no-referrer">
<br><br><br>
<br>H0: multinomial probabilities are p1, p2, … , pk<br>
Ha: at least one of the probabilities differs from p1, p2,…, pk
<br>Choose 
<br>Multinomial Experiment<br>
Assumption: The excepted cell frequencies are &gt;5
<br>Critical value is , with k-1 degrees of freedom
<br>Test statistic:
<br><br>
<br>Reject H0 if  &gt; 
<br><br>Marital status<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/General-test.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/General-test-1.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/General-test-2.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/General-test-3.png" referrerpolicy="no-referrer"><br><br>Support calls<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/homogeneity-1.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/homogeneity-2.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/homogeneity-3.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/homogeneity-4.png" referrerpolicy="no-referrer"><br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/homogeneity-6.png" referrerpolicy="no-referrer"><br><br>Chi-square test of independence is used to determine if there is a significant relationship between two qualitative (categorical) variables.<br>A contingency table is used to investigate whether two traits or characteristics are related.<br>
<br>
H0: X and Y are independent<br>
Ha: X and Y are dependent

<br>
Assumption: The excepted cell frequencies are &gt; 5

<br>
Set the level of significance

<br><br>
<br>Critical value is , with degrees of freedom (r-1)(c-1)
<br>Test statistic:
<br><br>where:<br>
 = observed frequency in cell <br>
 = expected frequency in cell <br>
 = number of rows<br>
 = number of columns<br>
6. Reject H0 if <br><br><img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/contingency-1.png" referrerpolicy="no-referrer">
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/contingency-2.png" referrerpolicy="no-referrer">
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/contingency-3.png" referrerpolicy="no-referrer">
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/contingency-4.png" referrerpolicy="no-referrer">
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/contingency-5.png" referrerpolicy="no-referrer">
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/chi/contingency-6.png" referrerpolicy="no-referrer"><br><br>Chi-squared test of goodness of fit:<br><br>d.f. = k - 1<br>Chi-squared test of independence in a contingency table:<br><br>d.f. = (r - 1)(c - 1)<br>These formulas and degrees of freedom calculations are fundamental to performing chi-squared tests in statistics.]]></description><link>https://www.allenygy.vip/math/probability-statistics/chi-square-tests.html</link><guid isPermaLink="false">Math/Probability Statistics/Chi-Square-Tests.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/Chi-Square.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/PB/Chi-Square.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Mathematica]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/math/math.html</link><guid isPermaLink="false">Math/Math.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[NJU OS PA0]]></title><description><![CDATA[ 
 <br><br><br><br><br>然后看教程的时候，教程说在正常用户下，无法使用<br>poweroff
<br>需要切换到Superuser: root才能用poweroff指令<br>su -
<br>所以我就去切换了<br>结果报错 Authentication failure！！！<br>我的第一反应是重装<br>10min后，重装完发现还是不行，但是Debian 启动的时候要求我选择<br>sudo or su<br>然后我就去网上查sudo 和su的区别，才知道有的时候系统默认是没有激活root用户<br>sudo passwd
Password：[你当前的密码]
Enter new password：[这个是root的密码]
Retype new UNIX password：[重复root的密码]
<br>果然，su 切换成功了<br>
然后我想，现在可以用poweroff了吧<br>md,  command not found！！！<br>又是网上查<br>造成这个问题的原因是没有把 /sbin 的目录路径（系统用户目录）添加到＄PATH变量中<br>echo $PATH 看/sbin  在不在<br>echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
<br>如果没有 /sbin 可以使用以下命令<br>export PATH=$PATH:/sbin/
<br>果然成功了<br>临时把对应路径加到$PATH变量中，测试一下是否可用。<br>需要永久添加需要编辑 .bashrc 文件<br>打开.bashrc<br>vi .bashrc
<br>在最后一行，添加<br>export PATH=$PATH:/usr/sbin
<br>然后退出<br>source .bashrc
<br>结束！<br><br><br>在NJU的教程里使用了清华的源<br>echo "deb http://mirrors.tuna.tsinghua.edu.cn/debian/ stable main" &gt; /etc/apt/sources.list
<br>我不知道是什么原因，反正在我的电脑里<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>，使用这个源包管理器故障频出，问了GPT才想到换一个源<br>这个应该是 Debian的默认源<br>
deb http://deb.debian.org/debian/ bullseye main<br>然后我就先把原来的删了<br>sudo rm /etc/apt/sources.list
<br>然后去里面把默认源加了<br>vi /etc/apt/sources.list
<br>果然这下就都能装了<br>不过还有意外之喜，配环境发现一个<a data-tooltip-position="top" aria-label="https://installati.one/" rel="noopener nofollow" class="external-link" href="https://installati.one/" target="_blank">Linux包管理工具的网站</a><br>顺便给我科普了一下Linux的包管理工具<br>
<br>apt
<br>apt-get
<br>aptitude
<br><br>能装软件之后也走了不少弯路<br>
按照教程来，其实中规中矩，去<a data-tooltip-position="top" aria-label="https://shurufa.sogou.com/linux" rel="noopener nofollow" class="external-link" href="https://shurufa.sogou.com/linux" target="_blank">sogou</a>下载对应的版本 x86, arm....<br>然后一般浏览器下载默认路径在Downloads里<br>所以启用命令行后还要跑到Downloads, 同时还得登录root<br>cd Downloads
su -
<br>sudo dpkg -i xxx.deb #xxx 是下载的文件名
<br>这时候一般就会开始报错了<br>因为没有fcitx<br>然后在这篇文章看到一个说法<br>
<a data-tooltip-position="top" aria-label="https://juejin.cn/post/6989171574209249287" rel="noopener nofollow" class="external-link" href="https://juejin.cn/post/6989171574209249287" target="_blank"><code></code>和<code></code>是不能共存的，两者只能装其一，所以安装其中一个时最好先使用sudo apt purge命令卸载</a>fcitxibus<br>这里一并给出卸载方法<br><br>sudo apt purge ibus*
sudo apt autoremove
<br><br>
<br>Google拼音
<br>sudo apt install fcitx-googlepinyin
<br>
<br>sun拼音
<br>sudo apt install fcitx-sunpinyin
<br>然后需要去更改默认输入法<br>
<img alt="`fcitx`" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/fcitx.png" referrerpolicy="no-referrer"><br>找到Fcitx Configuration 打开, 默认输入法不能放在第一行<br><img alt="IM-config" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/IM-config.png" referrerpolicy="no-referrer"><br>然后还可以去Global Config 调整切换快捷键<br><br>sudo apt purge fcitx*
sudo apt autoremove
<br>比起fcitx，ibus安装配置起来可能稍显复杂一点。<br>先安装ibus框架：<br>sudo apt install ibus ibus-libpinyin

<br>然后安装对应输入法：<br>ibus智能拼音：<br>sudo apt install ibus-pinyin
<br>sun拼音：<br>sudo apt install ibus-sunpinyin
<br>后面的步骤笔者没试过可以<a data-tooltip-position="top" aria-label="https://juejin.cn/post/6989171574209249287" rel="noopener nofollow" class="external-link" href="https://juejin.cn/post/6989171574209249287" target="_blank">参考</a><br>Recommend
建议卸载ibus

<br>一方面我卸载ibus后面操作成功了, 卸载fcitx 笔者没有试过
<br>另一方面: <a data-tooltip-position="top" aria-label="http://www.linux265.com/distro" rel="noopener nofollow" class="external-link" href="http://www.linux265.com/distro" target="_blank">Linux发行版</a>下有两大输入法框架：ibus 和fcitx，其中fcitx 的体验要比<a data-tooltip-position="top" aria-label="http://linux265.com/soft/622.html" rel="noopener nofollow" class="external-link" href="http://linux265.com/soft/622.html" target="_blank"><code></code></a>ibus&nbsp;好，因此选择&nbsp;<a data-tooltip-position="top" aria-label="http://linux265.com/soft/620.html" rel="noopener nofollow" class="external-link" href="http://linux265.com/soft/620.html" target="_blank"><code></code></a>fcitx&nbsp;框架，并安装中文<a data-tooltip-position="top" aria-label="http://linux265.com/soft/g42.html#search" rel="noopener nofollow" class="external-link" href="http://linux265.com/soft/g42.html#search" target="_blank">输入法</a>.

<br><br><a data-tooltip-position="top" aria-label="https://blog.csdn.net/u012852597/article/details/79353949" rel="noopener nofollow" class="external-link" href="https://blog.csdn.net/u012852597/article/details/79353949" target="_blank">parallels desktop 安装centos7默认密码和root问题</a><br><a data-tooltip-position="top" aria-label="https://cloud.tencent.com/developer/article/1985786" rel="noopener nofollow" class="external-link" href="https://cloud.tencent.com/developer/article/1985786" target="_blank">Debian 安装完成找不到命令解决方法</a><br><a data-tooltip-position="top" aria-label="https://juejin.cn/post/6989171574209249287" rel="noopener nofollow" class="external-link" href="https://juejin.cn/post/6989171574209249287" target="_blank">Linux下安装中文输入法总结</a><br><a data-tooltip-position="top" aria-label="https://jingyan.baidu.com/article/925f8cb88390f5c0dde056a0.html" rel="noopener nofollow" class="external-link" href="https://jingyan.baidu.com/article/925f8cb88390f5c0dde056a0.html" target="_blank">搜狗输入法for linux 安装</a><br><a data-tooltip-position="top" aria-label="https://www.cnblogs.com/xiangxinhouse/p/11135924.html" rel="noopener nofollow" class="external-link" href="https://www.cnblogs.com/xiangxinhouse/p/11135924.html" target="_blank">Linux(Debian)发行版中文输入法</a><br>
<br>
<br>可能用了虚拟机？<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/operating-system/extend/nju-os-pa0.html</link><guid isPermaLink="false">Operating System/Extend/NJU OS PA0.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/fcitx.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/fcitx.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux Basic Operation]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Rename a.txt into b.txt
<br>mv a.txt b.txt
<br>
<br>得到交互提示（在存在同名文件的情况下）得到提示，防止误操作
<br>mv -i a.txt b.txt
<br>
<br>Copy-Delete Operation
<br>cp a.txt b.txt
rm a.txt
<br>
<br>rename command

<br>rename命令的使用是rename oldfile newfile matchfile


<br>rename a.txt b.txt a.txt
<br>rename命令的优点是它可以用来批量重命名文件和目录，支持正则表达式。<br>
例如我们想要批量重命名“txt”文件为“log”文件，可以使用以下命令：<br>rename .txt .log *.txt
<br>rename命令支持多种参数，下面介绍一些常用参数:<br>
<br>-v：显示重命名的详细信息
<br>-n：显示模拟执行的结果，但不实际执行
<br>-f：强制执行，忽略存在的文件
<br>-i：忽略大小写
<br>-h：显示帮助信息。
<br><br>]]></description><link>https://www.allenygy.vip/operating-system/extend/linux-basic-operation.html</link><guid isPermaLink="false">Operating System/Extend/Linux Basic Operation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[File System Implementation]]></title><description><![CDATA[ 
 <br><br>
<br>File-System Structure 
<br>File-System Operations 
<br>Directory Implementation 
<br>Allocation Methods 
<br>Free-Space Management 
<br>Efficiency and Performance
<br>
<br>Why a file system is organized in layers?
<br>
<br>Minimize the duplication of code
<br>File system organized into layers 
<br>Each layer in the design uses the features of lower layers to create new features.
<br>
<br>What are two categories of structures used in file system implementation?
<br>
<br>On-disk (on-storage) structures
<br>In-memory structures
<br>
<br>What is File Control Block or inode?
<br>
<br>Each file has a File Control Block or inode
<br>
<br>What open file tables are there in an operating system? What are they used for?
<br>
<br>
Search the directory structure on disk for the file and copy the content of entry （metadata） to system-wide open file table if the file is opened for the first time

<br>
Update the per-process open-file table by adding a pointer to system-wide open file table

<br>
<br>What methods are used to allocate disk blocks to files？
<br>
<br>Contiguous allocation(not common now)
<br>Linked allocation (e.g. FAT32 in Windows)
<br>Indexed allocation (e.g. ex3 in Unix)
<br>
<br>What are main methods used to manage free space on disk?
<br>
<br>Bit Map 
<br>Linked List
<br>Grouping 
<br>Counting
]]></description><link>https://www.allenygy.vip/operating-system/lecture/10-file-system-implementation.html</link><guid isPermaLink="false">Operating System/Lecture/10-File System Implementation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[File System Interface]]></title><description><![CDATA[ 
 <br><br>File System Interface

<br>File Concept 
<br>Access Methods 
<br>Disk and Directory Structure 
<br>File System Mounting 
<br>File Sharing 
<br>Protection

<br><br>What is File?

<br>A named collection of related information that is recorded on secondary storage. 

<br>(e.g. Disk, SSD, Flash, etc.)


<br>A sequence of bits, bytes, lines, or records

<br>the meaning of which is defined by the file’s creator


<br>Smallest logical storage unit for user view

<br>File Property

<br>Contiguous logical address space
<br>Represents programs or data

<br>File system resides on secondary storage (disks)

<br>Provides user interface to storage, mapping logical to physical.
<br>Provides efficient and convenient access to disk by allowing data to be stored, located, retrieved easily.

<br><br>File attributes 

<br>Name – only information kept in human-readable form
<br>Identifier – unique tag (number) identifies file within file system
<br>Type – needed for systems that support different types
<br>Location – pointer to file location on device
<br>Size – current file size
<br>Protection – controls who can do reading, writing, executing
<br>Time, date, and user identification – data for protection, security, and usage monitoring 

<br>
<br>Information about files metadata are kept in the directory structure, which is maintained on the disk
<br><br>Basic File Operations

<br>Create a file
<br>Write a file
<br>Read a file
<br>Reposition within a file
<br>Truncate a file<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>

<br>File is reset to length zero 

<br>当一个文件被截断时，其内容被清空，文件的长度被重置为零。这意味着文件中原有的所有数据都将被删除。


<br>File space is released

<br>截断文件后释放的空间指的是之前文件内容所占用的存储空间被系统回收。这样可以提高存储效率，为其他文件或数据释放空间。


<br>File attributes are unchanged

<br>尽管文件的内容和大小发生了改变，文件的属性（如修改时间、访问权限等）保持不变。这意味着文件的元数据，除了与文件大小相关的部分，不会因为截断操作而受到影响。




<br>Delete a file

<br>
Except file creation and deletion, all other operations need to open the file first and then close the file after the operation
<br><br>
<br>Lock of file is provided by some operating systems
<br>Similar to reader writer locks
<br>Two Kinds of Lock
Shared lock

<br>Similar to reader lock
<br>Several processes can acquire concurrently 

Exclusive lock

<br>Similar to writer lock
<br>Mandatory lock 

<br>Once a process acquires an exclusive lock, the operating system will prevent any other process from accessing the locked file

<br>Windows




<br>Advisory lock

<br>it is up to software developers to ensure that locks are appropriately acquired and released

<br>Unix/Linux





<br><br>The OS uses the extension to indicate the type of the file.<br>Most common types 

<br>.c 
<br>.exe 
<br>.docx 
<br>.pdf 
<br>.jpg 
<br>.png 
<br>.zip

<br><br>
<br>Sequential Access
<br>Direct/Random Access
<br>Access Methods

<br>Sequential Access

<br>Commands

<br>read_next 
<br>write_next 
<br>reset (to the beginning)  




<br>Direct/Random Access

<br>Commands 

<br>read next 
<br>write next 
<br>read n 
<br>write n 
<br>position to n 
<br>rewrite n





n = an index relative to the beginning of the file

<br>Index and Relative Files

<br>Keep index in memory for fast determination of location of data to be operated on 

<br>E.g., VMS OS





<br><br><br>A directory structure (per file system) is used to organize the files<br>Both the directory structure and the files reside on disk<br><br>
<br>Drive 驱动器
<br>Partition 分区
<br>Volume 卷
<br><br>
<br>A drive is a physical block disk.
<br>A drive can be subdivided into several logic block disks (partitions)
<br><br>
<br>Disk or partition can be used raw

<br>i.e., without a file system 


<br>Partition can be formatted with a file system (cooked)

<br>Root partition contains the OS kernel, and other system files
<br>Other partitions can hold other OSes, other file systems, or be raw.


<br><br>
<br>A volume is a single accessible storage area with a single file system, a volume can contain multiple partitions
<br><br>
<br>General-purpose file systems 

<br>Mostly used, like Windows


<br>Special-purpose file systems

<br>Solaris’s contract file system


<br> Basic operations

<br>Search for a file 
<br>Create a file 
<br>Delete a file 
<br>List a directory 
<br>Rename a file
<br>Traverse the file system

<br>The directory is organized logically to obtain<br>
<br>Efficient location of a files 
<br>Naming convenient to users

<br>Two files in different directories can have the same name 
<br>The same file can have several different names


<br>Grouping of files with similar properties

<br>put photos in a directory


<br><br>
<br>Single level directory
<br>Two-level directory 
<br>Tree-structured directories 
<br>Acyclic graph directories
<br><br>Tree structures is a tree of arbitrary height, mostly common directory structure <br>
<br>It allows users to create their own subdirectories and to organize their files accordingly.
<br>Advantages

<br>Efficient searching 
<br>Grouping capability


<br><br>
<br>A tree structure prohibits the sharing of files or directories. 
<br>An acyclic graph (a graph with no cycles) allows directories to share subdirectories and files 
<br>A file may have multiple different path names 
<br>Some OSes simply do not allow shared directories or links
<br> How do we guarantee no cycles?

<br>
Allow only links to file not subdirectories

<br>
Every time a new link is added, use a cycle detection algorithm to determine whether it is OK. Very expensive.


<br><br>
<br>A file system must be mounted before it can be accessed 
<br>An unmounted file system can be mounted at a mount point 
<br>The amount point must be an empty directory 

<br>i.e., original file system at the mount point must be removed if exists


<br><br>
<br>A file can be shared by multiple users 
<br>Access might be protected 
<br>The owner of a file is the user who can change attributes and grant access and who has the most control over the file.
<br>The group attribute defines a subset of users who can share access to the file § The owner and group IDs of a given file (or directory) are stored as part of file attributes

<br>User IDs identify users, allowing permissions and protections for a user
<br>Group IDs allow users to be in groups, permitting group access rights


<br><br>
<br>
When information is stored in a computer system, we want to keep it safe from physical damage (the issue of reliability) and improper access (the issue of protection)

<br>
File owner/creator should be able to control:

<br>what can be done
<br>by whom


<br>
Types of access

<br>Read: Read from the file.
<br>Write: Write or rewrite the file.
<br>Execute: Load the file into memory and execute it.
<br>Append: Write new information at the end of the file.
<br>Delete: Delete the file and free its space for possible reuse. 
<br>List: List the name and attributes of the file


<br>
Other operations, such as renaming, copying, and editing the file, are high levels, done through read, write access.

<br><br>
<br>Each file and directory has an access-control list (ACL) 
<br>lists user names and the types of access allowed for each user. 
<br>Three modes of access 

<br>Read (R),
<br>Write (W)
<br>Execute (X)


<br>The UNIX system defines three fields (owner, group, public) of three bits (RWX) 
<br>Three classes of users on Unix / Linux
<br>Three classes of users on Unix / Linux RWX creator <br>
<br>Owner access 7  111
<br>Group access  6  110
<br>Public access  1   001 
<br><br> Four implementation methods for remote file sharing

<br>Manually transferring files between machines via programs like ftp (file transfer protocol) 4 both anonymous and authenticated access
<br>Use a distributed fil system (DFS), in which remote directories are visible from a local machine 4 tighter integration between the machine
<br>The World Wide Web, is a reversion to the first. Use a browser to gain access to the remote files, and separate operations (essentially a wrapper for ftp) 4 anonymous access
<br>Cloud computing 4 delivers computing, storage, and even applications as a service across a network.

<br>
<br>
<br>截断文件的操作通常用于快速清空文件内容而不删除文件本身，这在需要保留文件但不需要其内容的场景中非常有用。例如，日志文件管理中，当日志文件达到一定大小需要被清空重写时，可以使用截断操作来实现。<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/operating-system/lecture/09-file-system-interface.html</link><guid isPermaLink="false">Operating System/Lecture/09-File System Interface.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Virtual Memory]]></title><description><![CDATA[ 
 <br><br>
<br>Demand Paging 
<br>Copy-on-Write 
<br>Page Replacement 
<br>Allocation of Frames 
<br>Thrashing 
<br>Allocating Kernel Memory 
<br>Other Considerations
<br><br><br>Could bring a page into memory only when it is needed <br>Advantages:<br>
<br>Less I/O needed
<br>No unnecessary I/O 
<br>Less memory needed 
<br>Faster response 
<br>More users/processes
<br><br><br><br><br><br><br><br><br><br><br>
<br>Frame-allocation algorithm determines 

<br>How many frames to give each process 


<br>Page-replacement algorithm 

<br>Which frames to replace  Want lowest page-fault rate on both first access and re-access


<br><br>
<br>FIFO 
<br>Optimal 
<br>Least Recently Used (LRU) 
<br>Second chance 
<br>Enhanced second chance
<br><br>Rule <br>
<br>Replace the oldest one
<br>Implementation<br>
<br>OS maintains a circular queue of all pages 

<br>Page at head of the list: Oldest one
<br>Page at the tail: Recent arrival 


<br>When there is a page fault 

<br>Page at the head is removed
<br>New page added to the tail


<br><br>Belady’s Anomaly For some page-replacement algorithms, the page-fault rate may increase as the number of allocated frames increases.<br>Adding more frames might cause more page faults!<br><br>Replace the page that will not be used for longest period of reference string<br>Problem <br>
<br>Can’t read the future<br>
This method can only be used to measure how other algorithms are close to the optimal
<br><br>Replace page that has not been used in the most amount of time<br>
<br>LRU is a good algorithm and frequently used 
<br>LRU and OPT don’t have Belady’s Anomaly
<br><br>
<br>There is a global counter that increases by 1 whenever a page is referenced. Every page in the memory has its own counter 
<br>When a page is referenced, its counter is synchronized with the global counter 
<br>When a page needs to be replaced, find the page in the memory with the smallest value
<br>Disadvantage<br>
<br>Take O(n) time to search
<br><br>
<br>
Keep a stack of page numbers in a double link form:

<br>
When a page referenced: 

<br>move it to the top 
<br>Advantage 

<br>No search for replacement 


<br>Disadvantage 

<br>Each update of the stack might requires 6 pointers to be changed




<br><br>Usage of a reference bit <br>
<br>Associate each page with a reference bit, initial value 0 
<br>When a page is referenced, set the bit 1 
<br>When a page is needed to be replaced, find the ones with reference bit 0 if exist one
<br><br>Second-chance algorithm <br>
<br>Use a circular FIFO and reference bit for each page in memory 
<br>If page to be replaced has reference bit = 0 » replace it
<br>reference bit = 1 » set reference bit to 0 » search for the next page
<br><br>Improve algorithm by using reference bit and modify bit for each page in memory <br>
<br>i.e., an ordered pair (reference, modify) 
<br>All pages in memory fall into four classes<br>
<br>(0, 0) neither recently used not modified – best page to replace
<br>(0, 1) not recently used but modified – not quite as good, must write out before replacement
<br>(1, 0) recently used but clean – probably will be used again soon
<br>(1, 1) recently used and modified – probably will be used again soon and need to write out before replacement – worst page to replace
<br>When page replacement called for, replace page in lowest nonempty class in clock scheme <br>
<br>Disadvantage 

<br>Might need to search circular queue several times


<br><br>More strategies (algorithms) in improving the efficiency of page replacement <br>Page-buffering consideration <br>
<br>
Keep a pool of free frames always

<br>Whenever it is possible, select a victim to evict and add it to free pool  
<br>When convenient, evict the victim 
<br>When frame needed, read page into free frame 
<br>Advantage: Reduce time to find a free frame at a page fault


<br>
Expansion

<br>Keep a list of modified pages 

<br>Whenever the paging device is idle, write the modified page to the disk. Its modify bit is then reset to 0 


<br>Keep free frame contents intact （完整的，内容未被清除的） 

<br>Reduce penalty if wrong victim frame was selected 
<br>If the page is referenced again, no need to load from the disk




<br><br>For performance reason, each process needs minimum number of frames<br><br><br>
<br>Each process is allocated same number of frames
<br>Disadvantage

<br>Space waste for small process


<br><br>
<br>Allocate frames according to the size of a process
<br>Disadvantage

<br>Process size might be changed during the execution


<br><br>
<br>the ratio of frames depends on the combination of size and priority of a process 
<br>Replace the pages of process with lower priority
<br><br>If a process does not have “enough” frames in memory, the page-fault rate is very high<br>
<br>Replace page frequently 
<br>The replaced page might be used again 
<br>This leads to: 

<br>Low CPU utilization 
<br>Operating system keeps adding new process, trying to increase CPU utilization
<br>Things get worse -&gt; entering a bad cycle 
<br>Thrashing 

<br>A process is busy swapping pages in and out, instead of doing useful work.




<br> Solutions to thrashing

<br>Decrease the degree of multiprogramming
<br>Establish “acceptable” page-fault frequency (PFF) rate and use local replacement policy
<br>Install enough physical memory (hardware)
<br>Install faster hard disk

<br><br>
<br>If actual rate too low, process loses frame (we think too many frames assigned, remove some frames) 
<br>If actual rate too high, process gains frame
<br><br>
<br>Allocating memory for Kernel is different from the allocation of memory for user applications 
<br>Special features of kernel 

<br>Kernel requests memory for structures of varying sizes 

<br>Structure for PCB
<br>Structure for file descriptor 


<br>There are multiples instances for each structure

<br>there is a PCB for each process


<br>Memory needs to be contiguous


<br><br>
<br>Allocates memory from fixed-size segment consisting of physically  contiguous pages
<br>Power-of-2 allocator: memory allocated in units is sized as power of2, one smallest but bigger than requested size
<br>Advantage:<br>
<br>Unused chunks can be merged to a bigger one
<br><br>
<br>A cache 

<br>is used for unique kernel data structure
<br>consists of one or more slabs
<br>A slab is one or more physically contiguous pages

<br>Filled with same kind of objects – instantiations of the data structure, 
<br>Each object has two status: free and used




<br>If slab is full of used objects, next object is allocated from empty slab

<br>If no empty slabs, new slab allocated


]]></description><link>https://www.allenygy.vip/operating-system/lecture/08-virtual-memory.html</link><guid isPermaLink="false">Operating System/Lecture/08-Virtual Memory.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Main Memory]]></title><description><![CDATA[ 
 <br><br><br>
<br>
Static linking –system libraries and program code are combined by the loader into the binary image

<br>
Dynamic linking –linking is postponed until execution/run time

<br><br><br><br><br><br><br><br><br><br><br>
<br>What is memory management?
<br>Memory management is to bind a logical address space to a separate physical address space.<br>
<br>When does the address binding happen?
<br>Binding is delayed until run time.<br>
<br>What is physical memory address?
<br>Logical address<br>
<br>generated by the Program/CPU
<br>also referred to as virtual address
<br>all the addresses used by the CPU
<br>Addressed in bytes
<br>Size of space depends on the CPU bits
<br>
<br>What is logical memory address?
<br>Physical address<br>
<br>All the addresses used by the memory hardware
<br>Addressed in bytes
<br>Size of space depends on real size of physical memory
<br>
<br>In which situation, the above two addresses are same? In which situation, the above two addresses are different?
<br>Logical and physical addresses are the same in <br>
<br>compile-time address binding 
<br>load-time address-binding schemes
<br>logical (virtual) and physical addresses differ in <br>
<br>execution-time address-binding scheme
<br>
<br>What memory allocation methods are there? Advantages? Disadvantages?
<br>Memory for each process can be<br>
<br>Contiguous (early method)
<br>Not contiguous (modern method)
<br>• How to map the logical address to physical address?<br>• How to reduce time to find physical address?<br>• What methods are used to solve the big page table problem?]]></description><link>https://www.allenygy.vip/operating-system/lecture/07-main-memory.html</link><guid isPermaLink="false">Operating System/Lecture/07-Main Memory.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Process Synchronization]]></title><description><![CDATA[ 
 <br><br><br>
<br>Background
<br>The Critical Section 临界区
<br>Synchronization Software 软件实现同步
<br>Synchronization Hardware 硬件实现同步
<br>Mutex Locks 互斥
<br>Semaphores 信号两
<br>Classic Problems of Synchronization 同步问题
<br>Monitors 管程
<br>Deadlock and Starvation 死锁与饥饿
<br><br>Processes can execute concurrently 进程并发地执行<br>
<br>May be interrupted at any time, partially completing execution.

<br>如当一个进程时间片用尽，被另一个进程切换


<br>Concurrent access to shared data may result in data inconsistency. 

<br>如果此时访问相同的数据，将导致数据不一致


<br>进程具有异步性。<br>
异步性：各并发执行的进程以及各自独立的、不可预知的速度向前推进。<br>To solve this problem, we need to make processes access the same data mutually exclusive 令进程互斥地访问相同数据来解决数据不一致的问题<br>Race condition:<br>
<br>Several processes access and manipulate the same data concurrently
<br>Outcome depends on which order each access takes place.
<br><br>Critical section problem is to design a protocol that the processes can use to cooperate.<br>Critical Section

<br>The segment of code in a process that modifies shared variables, tables, files
<br>When one process is in critical section, other process should not enter their critical sections for these shared data. 互斥访问 

<br>一个时间段内只允许一个进程使用的资源称为临界资源。<br>
临界资源只能互斥的访问。<br>对临界资源的互斥访问，可以在逻辑上分成四部分：<br>
<br>Entry section 进入区

<br>Ask for Permission 申请权限


<br>Critical section 临界区

<br>Protect this Section


<br>Exit section 退出区

<br>Do sth in order to allow other process to enter critical  section 


<br>Reminder section 剩余区
<br>Process with critical section should follow the following steps 

<br>execute entry section to ask for permission
<br>then execute critical section
<br>execute exit section to allow other process to enter critical section
<br>then execute remainder section

<br>do {
	entry section
		critical section
	exit section 
		reminder section 
}
<br><br><br>Requirements to Critical Section Problem

<br>Mutual Exclusion 互斥访问（忙则等待）

<br>If process  is executing in its critical section, then no other processes can be executing in their critical sections.


<br>Progress 空闲让进

<br>If no process is executing in its critical section and if other processes want to enter critical section, one of them must be selected. They cannot be postponed indefinitely.


<br>Bounded Waiting 有限等待

<br>If a process has made a request to enter its critical section, then, before that request is granted, there is a bound to the times that others can enter critical section.



<br>Assumptions in the solution 

<br>Each process executes at a nonzero speed 
<br>No concerning relative speed of the n processes 
<br>The load and store machine-language instructions are atomic (that is, cannot be interrupted)

<br>为了实现对临界资源的互斥访问，同时保证系统整体性能，需要遵循以下原则:

<br>空闲让进。临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区:
<br>忙则等待。当已有进程进入临界区时，其他试图进入临界区的进程必须等待;
<br>有限等待。对请求访问的进程，应保证能在有限时间内进入临界区(保证不会饥饿)
<br>让权等待。当进程不能进入临界区时，应立即释放处理机，防止进程忙等待。(课件未提及)

<br><br>Solution to Critical Section Problem

<br>单标志法
<br>双标志先检查
<br>双标志后检查
<br>Peterson算法

<br><br>turn’s value is initialized to be either i or j<br>
<br>
<br>do{
	while(turn==j); // Entry section
		critical section; // turn is i 
	turn = j; // Exit section
		reminder section; 
} while(true);
<br>
<br>
<br>do{
	while(turn==i); // Entry section
		critical section; // turn is i 
	turn = i; // Exit section
		reminder section; 
} while(true);
<br>
<br>Mutual Exclusion： Yes 
<br>Progress： No 
<br>Bounded waiting： Yes
<br>Can't Satisfy Progress 无法实现，空闲让进<br><br>
<br>在进入临界区前先检查其他进程是否进入临界区 

<br>如果存在进程进程进入临界区，则等待
<br>否则，标志自己进入临界区


<br>存在问题：当越过判断时发生进程切换，则无法互斥访问数据 违反忙则等待
<br>原因：检查上锁无法连贯执行
<br>bool flag[2];
flag[0]=false;
flag[1]=false;
<br>
<br>
<br>// For P0 Process
while(flag[1]);
flag[0] = true;
critical section;
flag[0] = false;
reminder section;
<br>
<br>
<br>// For P0 Process
while(flag[0]);
flag[1] = true;
critical section;
flag[1] = false;
reminder section;
<br><br>
<br>
先上锁后检查以解决 双标志先检查 的问题

<br>
在进入临界区前先标志自己需要进入临界区，然后检查其他进程是否进入临界区 

<br>如果存在进程进程进入临界区，则等待
<br>否则，则进入临界区


<br>
存在问题：当标记时发生进程切换，多个进程都需要进入临界区---导致死锁

<br>
违反空闲让进，有限等待

<br>bool flag[2];
flag[0]=false;
flag[1]=false;
<br>
<br>
<br>// For P0 Process
flag[0] = true;
while(flag[1]);
critical section;
flag[0] = false;
reminder section;
<br>
<br>
<br>// For P0 Process
flag[1] = true;
while(flag[0]);
critical section;
flag[1] = false;
reminder section;
<br><br>It is a classic software-based solution to the critical-section problem<br>
<br>Good algorithmic description of solving the problem 
<br>Solution for two processes by using two variables:<br>
<br>
int turn; // indicates whose turn it is to enter the critical section.  表示谦让  最后谦让的无法执行

<br>
boolean flag[2] // indicate if a process is ready to enter the critical section. 表达意愿

<br>flag[i] = true implies that process  is ready! 
<br>It is initialized to FALSE.


<br>


<br>do{
	flag[i] = true; //ready
	turn = j; //allow pj to enter
	while(flag[j] &amp;&amp; turn == j);
	critical section
	falg[i] = false; //exit
	reminder section 
} while(true);
<br>
<br>
<br>do{
	flag[i] = true; //ready
	turn = j; //allow pj to enter
	while(flag[j] &amp;&amp; turn == j);
	critical section
	falg[i] = false; //exit
	reminder section 
} while(true);
<br>
<br>Mutual Exclusion： Yes 
<br>Progress： Yes
<br>Bounded waiting： Yes
<br><br>Software-based solutions are not guaranteed to work on modern computer architecture<br>Many systems provide hardware support for implementing the critical section code.<br>Modern machines provide special atomic hardware instructions<br>
Atomic = non-interruptible，the atomic hardware instruction will do the following work<br><br>Uniprocessors -  could disable interrupts  单处理器 禁止中断 实现<br>
Currently running code would execute without preemption<br>
<br>Too inefficient 
<br>Advantage &amp; Disadvantage
Advantage:

<br>简单

Disadvantage:

<br>不适用于多处理机
<br>只适用于操作系统内核进程，不适用于用户进程

<br>因为开/关中断指令只能运行在内核态，这组指令不能让用户随意使用



<br><br>Use the idea of locking<br>
<br>Protecting critical regions via locks
<br>A process that wants to enter the critical section must first get the lock.
<br>If the lock is already acquired by another process, the process will wait until the lock becomes available.<br>

<br>Solution to Critical-section Problem Using Locks
do {
	acquire lock; // Entry section
	critical section;
	release lock; // Exit Section 
	reminder section;
}while(true);

<br>
<br>Test memory word and set value
<br>Swap contents of two memory words
<br><br>TS 指令
Definition:  TS 指令由硬件实现的，只能一气呵成。
<br>bool test_and_set(bool *target); // Do nothing just wait;
	/*Critical  section*/	
 	bool rv = *target；
 	*target = true;
 	return rv;
<br>
<br>Using Test and Set:
<br>do {
	while(test_and_set(&amp;lock));
	/*Critical  section*/	
	lock = false;
	/*Reminder Section*/
} while(true);
<br>
<br>This instruction is executed atomically by CPU as a single hardware instruction.
<br>In practice, target is a pointer to the lock itself, shared by all the processes that want to acquire the lock.

<br>If target if FALSE, the return value of rv is FALSE, means lock is FALSE (available), target’s new value is TRUE 
<br>If target is true, the return value of rv is TRUE, means lock is TRUE (locked)


<br><br>
<br>When lock = true, keep while looping.
<br>When lock = false, process can enter the critical section
<br>And set lock = true, block other processes to enter.
<br>After finish the critical section, reset lock = false, to allow other processes to enter the critical section.
<br>Advantage &amp; Disadvantage
Advantage:

<br>实现简单

Disadvantage:

<br>不满足“让权等待”
<br>暂时无法进入临界区的进程会占用CPU并循环执行TSL指令，从而导致 “忙等

<br>
<br>Mutual Exclusion： Yes 
<br>Progress： Yes 
<br>Bounded waiting： No ?
<br><br>Exchange Instruction /XCHG Instruction <br>Swap 指令
Definition:  TS 指令由硬件实现的，只能一气呵成。

<br>In practice, value is a pointer to the lock itself, shared by all the processes that want to acquire the lock.
<br>Set 	*value (the lock) to the value of the passed parameter new_value but only if *value == expected. That is, the swap takes place only under this condition.

<br>Returns as result the original value of the lock. Similar to test_and_set but with an integer lock and an extra condition.<br>int compare_and_swap (int *value, int expected, int new_value){
 	
 	int temp = *value;
 	if(*value==expected)
 		*value=new_value;
 	return temp;
 }
<br>
Lock: 上锁
<br>bool 
while(test_and_set(&amp;lock));
lock = false;
<br><br><br>Previous hardware-based solutions are complicated and generally inaccessible to application programmers<br>OS designers build high level software tools to solve critical section problem<br>Mutex Lock

<br>Use mutex lock to protect a critical section by first

<br>acquire() a lock then release() the lock


<br>Assumption: Calls to acquire() and release() must be atomic

<br>Usually implemented via hardware atomic instructions



<br>acquire (){
	while(!available);
	available = false;
}

release (){
	available = true;
}
<br>This solution still requires busy waiting  This lock therefore is called a spin lock<br>
<br>忙等待 违反让权等待
<br>spin lock  TSL, SWAP, 单标志法
<br>
需忙等，进程时间片用完才下处理机，违反让权等待<br>
一般用于多处理器，一个核忙等，其他核照常工作，并快速释放临界区<br>
不太适用于单处理机系统、忙等的过程中不可能解锁
<br><br>Background 
Semaphore is a synchronization tool more sophisticated than mutex locks 

<br>用户进程可以通过使用操作系统提供的一对原语来对信号量进行操作，从而很方便的实现了进程互斥、进程同步。 

<br>从而很方便的实现了进程互斥、进程同步。



信号量其实就是一个变量(可以是一个整数，也可以是更复杂的记录型变量)，可以用一个信号量来表示系统中某种资源的数量

<br>比如:系统中只有一台打印机，就可以设置一个初值为1的信号量

原语是一种特殊的程序段，其执行只能一气呵成，不可被中断。原语是由关中断/开中断指令实现的。 软件解决方案的主要问题是由 “进入区的各种操作无法一气呵成”，因此如果能把进入区、退出区的操作都用“原语”实现，使这些操作能“一气呵成”就能避免问题。

<br>一对原语:wait(s)原语和signal(s)原语，可以把原语理解为我们自己写的函数，函数名分别为wait和signal，括号里的信号量S其实就是函数调用时传入的一个参数。
<br>Wait、signal 原语常简称为P、V操作(来自荷兰语proberen和verhogen)。

<br>
POSIX Named Semaphore Normally used among different processes<br>
POSIX Named Semaphore Normally used among different threads within a process
<br><br>Semaphore S: an integer variable S can only be accessed via two atomic operations<br>
int S=1;

//acquire lock
void wait(int S){
	while(S&lt;=0){
		S-=1;
	}
}
//release lock
void signal(int S){
	S+=1;
}

<br>
<br>仍旧Busy waiting
<br>无法让权等待
<br><br>typedef struct{
	int value;
	struct process* L;
} semaphore;

// acquire lock
void wait(semaphore S){
	S.value--;
	if(S.value &lt; 0){
		block(S.L); //阻塞该进程
	}
}

//release lock
void signal(semaphore S){
	S.value++;
	if(s.value&lt;=0){
		wakeup(S.L); //唤醒进程为就绪态
	}
}

<br><br>信号量机制实现进程互斥、同步、前驱<br>
 申请一个资源S, 如果资源不够就阻塞等待<br>
 释放一个资源S, 如果有进程在等待该资源，则唤醒一个进程<br><br>
<br>分析并发进程的关键活动，划定临界区
<br>设置互斥信号量mutex，初值为1
<br>进入区P(mutex) -- 申请资源 
<br>退出区V(mutex) -- 释放资源
<br>semaphore mutex=1;

P1(){
	P(mutex);
	...;
	V(mutex);
}

P2(){
	P(mutex);
	...;
	V(mutex);
}

<br>P, V操作必须成对出现

<br>缺少P(mutex) 就不能保证临界资源的互斥访问。
<br>缺少V(mutex) 会导资源永不被释放，等待进程永不被唤醒。

<br><br>
<br>分析什么地方需要实现“同步关系”，即 “一前一后” 执行的两个操作
<br>设置同步信号量S，初始为0
<br>在前操作之后执行 V(S)
<br>在后操作之前执行 P(S)

<br>前V后P


<br>semaphore S=0;
P1(){
	...;
	V(S);
	...;
}
P2(){
	P(S);
	...;
	...;
}
<br>保证了只能先执行P1()再执行	P2()<br><br><img alt="Process precursor" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process_Synchornization_Semaphore.png" referrerpolicy="no-referrer"><br><br>
<br>Producer consumer problem Bounded-Buffer Problem
<br>Readers Writers Problem 
<br>Dining Philosophers Problem
<br><br>Producer-Consumer problem 

<br>n buffers, each holds one item 
<br>Semaphore mutex initialized to the value 1 
<br>Semaphore full initialized to the value 0 
<br>Semaphore empty initialized to the value n

<br>生产者消费者问题 

<br>系统中有一组生产者进程和一组消费者进程，生产者进程每次生产一个产品进程每次从缓冲区中取出一个产品并使用。(注:这里的“产品”理解为某种数据)<br>
生产者、消费者共享一个初始为空、大小为n的缓冲区。<br>
只有缓冲区没满时，生产者才能把产品放入缓冲区，否则必须等待。 同步关系<br>
只有缓冲区不空时，消费者才能从中取出产品，否则必须等待。 同步关系<br>
缓冲区是临界资源，各进程必须互斥地访问。 互斥关系<br>
<img alt="Producer consumer problem" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Producer-Consumer-Problem.png" referrerpolicy="no-referrer">

<br>semaphore mutex = 1; // 互斥信号量，实现对缓冲区的互斥访问
semaphore empty = n; // 同步信号量，表示空闲缓冲区的数量
semaphore full = 0; // 同步信号量，表示产品的数量，也即非空缓冲区的数量

producer(){
	while(1){
		...;
		P(empty);//消耗一个空闲缓冲区
		P(mutex);
		...;
		V(mutex);
		V(full); //增加一个产品
	}
}

consumer(){
	while(1){
		P(full); //消耗一个产品
		P(mutex);
		...;
		V(mutex);
		V(empty); //增加一个空闲区
	}
}
<br>同步关系在线程之间实现，互斥关系在线程内实现<br><br><img alt="Multi-Producer and Consumer Problem" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Multi-Producer-Consumer-Problem.png" referrerpolicy="no-referrer"><br><br>Smokers Problem

<br>假设一个系统有三个抽烟者进程和一个供应者进程。
<br>每个抽烟者不停地卷烟并抽掉它，但是要卷起并抽掉一支烟，抽烟者需要有三种材料:烟草、纸和胶水。
<br>三个抽烟者中，第一个拥有烟草、第二个拥有纸、第三个拥有胶水。
<br>供应者进程无限地提供三种材料，供应者每次将两种材料放桌子上，拥有剩下那种材料的抽烟者卷一根烟并抽掉它，并给供应者进程一个信号告诉完成了，供应者就会放另外两种材料再桌上，这个过程一直重复(让三个抽烟者轮流地抽烟)<br>
<img alt="Smokers Problem" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Smokers-Problem.png" referrerpolicy="no-referrer">

<br>semaphore offer1 = 0;
semaphore offer2 = 0;
semaphore offer3 = 0;
semaphore finish = 0;
int i = 0;

provider(){
	while(1){
		if(i==0){
			...;// put Combination-1
			V(offer1);
		} else if(i==2){
			...;// put Combination-2
			V(offer2);
		} else if(i==3){
			...;// put Combination-3
			V(offer3);
		}
		i=(i+1)%3;
		P(finish);
	}
}

smoker1(){
	while(1){
		P(offer1);
		...;// Get Combination-1
		V(finish);
	}
}


smoker2(){
	while(1){
		P(offer2);
		...;// Get Combination-2
		V(finish);
	}
}


smoker3(){
	while(1){
		P(offer3);
		...;// Get Combination-3
		V(finish);
	}
}

<br><br>Readers-Writers Problem

<br>Allow multiple readers to read at the same time 
<br>Only one single writer can access the shared data at the same time

<br>Readers Writers Problem 读者写者问题
有读者和写者两组并发进程，共享一个文件，当两个或两个以上的读进程同时访问共享数据时不会产生副作用，但若某个写进程和其他进程(读进程或写进程)同时访问共享数据时则可能导致数据不一致的错误。

<br>允许多个读者可以同时对文件执行读操作;
<br>只允许一个写者往文件中写信息;
<br>任一写者在完成写操作之前不允许其他读者或写者工作;
<br>写者执行写操作前，应让已有的读者和写者全部退出。

<br>互斥关系：读进程-写进程，写进程-写进程 <br>semaphore rw=1; // 用于实现对共享文件的互斥访问
int count=0;   // 记录当前有几个读进程在访问文件
semaphore mutex; // 用于保证对count变量的互斥访问
<br>writer(){
	while(1){
		P(rw);
		...;
		V(rw);
	}
}
<br>	while(1){
		P(mutex); // 各读进程互斥访问count
		if(count==0) // 第一个读进程关门
			P(rw);
		count++;
		V(mutex);
		P(mutex);
		count--;
		if(count==0) // 最后一个读进程开门
			V(rw);
		V(mutex);
	}
<br>
这样的实现存在问题：<br>
如果一直有读进程进入那么写进程将会 starvation<br>
需要实现读写公平的算法
<br>semaphore rw = 1; // 用于实现对共享文件的互斥访问
int count = 0;   // 记录当前有几个读进程在访问文件
semaphore mutex; // 用于保证对count变量的互斥访问
semaphore w = 1; //实现读写公平 可以理解成排队
<br>writer(){
	while(1){
		P(w);  //谁先抢到 谁先排队
		P(rw);
		...;
		V(rw);
		V(w);
	}
}
<br>reader(){
	while(1){
		P(w);
		P(mutex); // 各读进程互斥访问count
		if(count==0) // 第一个读进程关门
			P(rw);
		count++;
		V(mutex);
		V(w);
		P(mutex);
		count--;
		if(count==0) // 最后一个读进程开门
			V(rw);
		V(mutex);
	}
}
<br>Case Analysis

<br>读者1 --&gt; 读者2<br>
读者2会被阻塞在P(w), 直到读者1 V(w) 
<br>写者1 --&gt; 写者2<br>
写者2会被阻塞在写者线程的P(w), 直到写者1 V(w) 
<br>写者1--&gt; 读者1<br>
读者1会被阻塞在读者线程的P(w), 直到写者1 V(w) 

总的来说，新增的 w 信号量实现了一个排队的功能，读者和写者都可以排队
<br><br>Dining Philosophers Problem

<br>Philosophers spend their lives alternating thinking and eating Don’t interact with their neighbors, occasionally try to pick up 2 chopsticks (one at a time) to eat from bowl 
<br>Need both chopsticks to eat, then release both when done In the case of 5 philosophers 


<br>Shared data<br>
- Bowl of rice (data set)<br>
- Semaphore chopstick [5] initialized to 1<br>
<img alt="Dining Philosophers Problem" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Dining_Philosophers_Problem.png" referrerpolicy="no-referrer">

<br>哲学家进餐问题

<br>一张圆桌上坐着5名哲学家，每两个哲学家之间的桌上摆一根筷子，桌子的中间是一碗米饭。
<br>哲学家们倾注毕生的精力用于思考和进餐，哲学家在思考时，并不影响他人。
<br>只有当哲学家饥饿时，才试图拿起左、右两根筷子(一根一根地拿起)。
<br>如果筷子已在他人手上，则需等待。
<br>饥饿的哲学家只有同时拿起两根筷子才可以开始进餐，当进餐完毕后，放下筷子继续思考。

<br>semaphore chopstick[5]={1,1,1,1,1};
Pi (){ //i 号哲学家的进程
	while(1){
		P(chopstick[i]); //Take Left chopstick 
		P(chopstick[(i+1)%5]); //Take Right chopstick 
		...;
		V(chopstick[i]); //Put Left chopstick 
		V(chopstick[(i+1)%5]); //Put Right chopstick 
		...;
	}
}
<br>如果每个哲学家同时拿起左边的筷子, 将导致死锁<br>Solution

<br>每次只允许4个哲学家拿筷子，这样最后至少会有一个哲学家可以进餐。<br>
新定义一个等于4的信号量
<br>奇数号哲学家拿左边筷子，偶数号拿右边筷子
<br>仅当一个哲学家左右两双筷子都可以使用时才能拿起筷子

<br>解释仅当一个哲学家左右两双筷子都可以使用时才能拿起筷子
更准确的说法应该是:各哲学家拿筷子这件事必须互斥的执行。

<br>这就保证了即使一个哲学家在拿筷子拿到一半时被阻塞，也不会有别的哲学家会继续尝试拿筷子。
<br>这样的话，当前正在吃饭的哲学家放下筷子后，被阻塞的哲学家就可以获得等待的筷子了。

<br>semaphore chopstick[5]={1,1,1,1,1};
semaphore mutex = 1; //互斥地取筷子
Pi (){ //i 号哲学家的进程
	while(1){
		P(mutex);
		P(chopstick[i]); //Take Left chopstick 
		P(chopstick[(i+1)%5]); //Take Right chopstick 
		V(mutex);
		...;
		V(chopstick[i]); //Put Left chopstick 
		V(chopstick[(i+1)%5]); //Put Right chopstick 
		...;
	}
}
<br><br>Deadlock - Processes wait for each other<br>Starvation – indefinite blocking 
A process may never be removed from the semaphore queue in which it is suspended
<br>Priority Inversion – Scheduling problem when lower-priority
Process holds a lock needed by higher-priority process
<br><br>Priority Inversion Example Explained:

<br>Process Priorities and Resource Requirement:

<br>Assume three processes: , , and  with priorities .
<br>Process  requires a resource  which is currently held by process .


<br>Scenario Development:

<br>Process  must wait for  to finish using the resource  because  has it locked.
<br>However, process  becomes runnable and, due to its higher priority compared to , it preempts .


<br>Consequence of Priority Inversion:

<br>Process  (with middle priority) has affected how long process  must wait for  to relinquish resource .
<br>Even though  does not need , its operation delays  release of , thereby delaying  further, which is a clear instance of priority inversion.



<br>This situation shows how a lower-priority task (in this case ) can indirectly prevent a higher-priority task  from progressing by holding onto a needed resource longer due to the intervention of a medium-priority task (). This is problematic in real-time systems where such delays can lead to failures or missed deadlines. Solutions often involve using priority inheritance protocols where  would temporarily inherit  higher priority to avoid being preempted by , thus resolving the inversion more swiftly.<br>优先级反转示例解释：

<br>进程优先级和资源需求：

<br>假设有三个进程：、 和 ，它们的优先级依次为 。
<br>进程  需要一个资源 ，该资源当前由进程  持有。


<br>场景发展：

<br>进程  必须等待  完成使用资源 ，因为  正在锁定该资源。
<br>然而，进程  变为可运行状态，并由于其优先级高于 ，它抢占了 。


<br>优先级反转的后果：

<br>中等优先级的进程  影响了高优先级的进程  必须等待低优先级的  释放资源  的时间。
<br>尽管  不需要  资源，其操作延迟了  释放 ，进而延迟了 ，这就是一个典型的优先级反转的例子。



这种情况显示了一个低优先级任务（在这个例子中是 ）如何因为持有所需资源而间接阻止高优先级任务（）的进行，由于中优先级任务（）的介入使得  持有资源的时间延长。这在实时系统中是有问题的，因为这样的延迟可能导致故障或错过截止时间。解决方案通常涉及使用优先级继承协议，其中  会暂时继承  的更高优先级，以避免被  抢占，从而更快地解决反转问题。
<br>Solution:  Priority-Inheritance Protocol Explained:

<br>Protocol Basics:

<br>All processes accessing resources needed by a higher-priority process inherit the higher priority until they are finished with the resources in question.
<br>When these processes complete their tasks involving the resource, their priorities revert to their original values.


<br>Problem Resolution:

<br>By allowing lower-priority processes (like process  in the earlier example) to inherit the higher priority of a blocked higher-priority process (like process ), the system reduces the chance that a medium-priority process (like process ) will preempt them.
<br>This inheritance ensures that the lower-priority process can complete its use of the resource more quickly, thereby freeing up the resource for the higher-priority process.


<br>Effectiveness:

<br>This protocol effectively resolves the problem where a lower-priority process blocks a higher-priority one by holding a needed resource, as seen in the previous examples.
<br>It reduces the wait time for high-priority processes, ensuring they can proceed with minimal delay, thus adhering more closely to their intended scheduling priorities.



<br>优先级继承协议

<br>在优先级继承协议中，当一个低优先级进程使用一个高优先级进程所需的资源时，低优先级进程的优先级会被临时提升到高优先级进程的级别。
<br>这样做的目的是防止中等或其他低优先级的进程在此期间抢占资源，从而允许低优先级进程更快地完成对资源的使用并释放它，这样高优先级的进程就可以不受延迟地访问所需的资源。

<br><br> Monitors 管程

<br>A high-level abstraction that provides a convenient and effective mechanism for process synchronization

<br>Abstract data type, internal variables only accessible via procedures 
<br>Only one process may be active within the monitor at a time 
<br>Can utilize condition variables to suspend or resume processes



<br>monitor monitor-name { // shared variable declarations
	procedure P1 (...) {...} 
	procedure Pn (...) {...} 
	Initialization code (...) {...}
}
<br>
<br>A programmer who needs to write a tailor-made synchronization scheme can define one or more condition variables.
]]></description><link>https://www.allenygy.vip/operating-system/lecture/06-process-synchronization.html</link><guid isPermaLink="false">Operating System/Lecture/06-Process Synchronization.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process_Synchornization_Semaphore.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process_Synchornization_Semaphore.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CPU Scheduling]]></title><description><![CDATA[ 
 <br><br><br>To maximize CPU utilization<br>
Using Multiprogramming<br>CPU-I/O Burst Cycle

<br>Process execution consists of a cycle of CPU execution and I/O wait 
<br>CPU burst followed by I/O burst
<br><img alt="Burst-Duration" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Burst-duration.png" referrerpolicy="no-referrer">
<br>横轴表示CPU Burst时间  

<br>

<br>短CPU突发：大多数进程都会有大量的短时间CPU突发，这表示进程在执行较短时间的计算后就会等待I/O操作。
<br>长CPU突发：只有少数进程会有较长时间的CPU突发，这些通常是计算密集型的进程，在执行更长时间的计算之后才会进行I/O操作。 

<br><br>The CPU scheduler selects a process from the processes in ready queue , and allocates the CPU to it  

<br>Ready queue 就绪队列 may be ordered in various ways

<br>When does the CPU Scheduling  happen ？

<br>switches from running to waiting state (non-preemptive自愿 )

<br>Example: the process does an I/O system call.


<br>switches from running to ready state (preemptive 非自愿)

<br>Example: there is a clock interrupt.


<br>switches from waiting to ready (preemptive)

<br>Example: there is a hard disk controller interrupt because the I/O is finished.


<br>terminates (non-preemptive)

<br>Preemptive vs. Nonpreemptive Scheduling

<br>When a process is pre-empted, 当进程非自愿离开CPU

<br>It is moved from its current processor
<br>However, it still remains in memory and in ready queue 仍保留在就绪队列


<br>When a process is non-preemptive 当进程自愿离开CPU

<br>Process runs until completion or until they yield control of a processor 进程运行直至完成或让出处理器控制权
<br>Disadvantage: Unimportant processes can block important ones indefinitely

<br>进程易阻塞





<br>Why preemptive scheduling is used?

<br>Improve response times 
<br>Create interactive environments (real-time)

<br><br>Concept

<br>Throughput: number of processes that complete their execution per time unit吞吐量 
<br>Response Time: amount of time it takes from when a request was submitted until the first response is produced, not output (for time-sharing environment) 等待时间-进程在就绪队列中等待的总时间
<br>Turnaround Time: amount of time to execute a particular process (from start to end of process, including waiting time) 执行特定流程的时间(从流程的开始到结束，包括等待时间)

<br>Turnaround Time = Waiting time + time for all CPU bursts  



<br>Scheduling Criteria

<br>Maximize

<br>CPU Utilization<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>
<br>Throughput<a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a>


<br>Minimize 

<br>Response time 
<br>Waiting time 
<br>Turnaround time



<br><br>Scheduling Algorithm

<br>
First-Come, First-Served FCFS

<br>
Shortest-Job-First SJF

<br>
Priority Scheduling PS

<br>
Round-Robin RR

<br>
Multilevel Queue Scheduling MQS

<br>
Multilevel Feedback Queue Scheduling MFQS


<br><br>Scheduling

<br>Suppose that the processes arrive in the ready queue at time  in the following order:  

<br><br>FCFS Example 

<br>The Gantt Chart for the schedule is:
<br><img alt="Gantt Schedule" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/GanttChart.png" referrerpolicy="no-referrer">
<br>Waiting time: 
<br>Average waiting time: 
<br>Average turnaround time:  

<br>Change Example
Suppose the order is changed to this 

<br>The Gantt Chart for the schedule is:
<br><img alt="GanttChart-1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/GanttChart-1.png" referrerpolicy="no-referrer">
<br>Waiting time: 
<br>Average waiting time: 
<br>Average turnaround time:  

<br>Convoy effect护送效应 - short process behind long process<br><br>Scheduling

<br>SJF is optimal – gives minimum average waiting time for a given set of processes 
<br>The difficulty is knowing the length of the next CPU request  Could ask the user

<br><br>SJF Example

<br>The Gantt Chart for the schedule is:
<br><img alt="GanttChart-2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/GanttChart-2.png" referrerpolicy="no-referrer">
<br>Average waiting time =  
<br>Average turnaround time = 

<br><br>Estimation Method
Use the length of previous CPU bursts, with exponential averaging<br>


<br> 是对下一个CPU突发的预测时间。 
<br> 是第n个CPU突发的实际长度。 
<br> 是第n个CPU突发的预测时间（基于过去的观测）。 
<br> 是一个介于0和1之间的权重，用来平衡最近的实际CPU突发时间和之前的预测。<br>


<br><br>Scheduling Algorithm
The preemptive version of SJF is also called shortest-remaining-time-first 

<br>Preemption: If a new process arrives in the ready queue while a current process is executing, the remaining time to complete the current process is compared with the total time required by the new process to finish. If the new process requires less time than what the current process has left, the current process is preempted (put back in the ready queue) and the CPU is given to the new process.
<br>Efficiency: This algorithm is effective in terms of average waiting time and turnaround time. By giving preference to processes that are closest to completion, it minimizes the amount of time each process has to wait to complete its execution.
<br>Starvation: A potential downside of SRTF is that longer processes may suffer starvation; if shorter processes keep arriving, the longer processes may be postponed indefinitely.
<br>Dynamic: Unlike SJF, which is static and decides on a process before it starts executing, SRTF has to make decisions dynamically as new processes arrive and as the remaining execution times of the processes in the ready queue change.

<br><br>SRTF Example

<br>The Gantt Chart for the schedule is:
<br><img alt="GanttChart-3" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Gantt-Chart-3.png" referrerpolicy="no-referrer">
<br>Average waiting time =  
<br>Average turnaround time = 

<br><br>Scheduling Algorithm

<br>Each process gets a small unit of CPU time (time quantum 定额, usually 10-100 milliseconds.
<br>After q has elapsed, the process is preempted by a clock interrupt and added to the end of the ready queue.
<br>Timer interrupts every quantum q to schedule next process
<br>If there are n processes in the ready queue and the time quantum is q. No process waits more than 
<br>Performance

<br>q too large   FCFS
<br>q too small   too much time is spent on context switch

<br>q should be large compared to context switch time
<br>q usually 10ms to 100ms, context switch &lt; 10 usec (微秒)





<br><br>SRTF
<img alt="GanttChart-4" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Gantt-Chart-4.png" referrerpolicy="no-referrer">

<br>Average waiting time: 
<br>Average turnaround time:  

<br><br>The CPU is allocated to the process with the highest priority<br>
(smallest integer  highest priority)<br>Two policies 

<br>Preemptive 

<br>the current process is pre-empted immediately by high priority process


<br>Non-preemptive<br>
-the current process finishes its burst first, then scheduler chooses the process with highest priority

SJF is priority scheduling where priority is the inverse of predicted next CPU burst time
<br>What is the Problem in Proority Scheduling ?

<br>Problem: Starvation: low priority processes may never execute 
<br>Solution: Aging: as time progresses increase the priority of the process

<br><br>Priority Scheduling (not preemptive)
<img alt="GanttChart-5" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Gantt-Chart-5.png" referrerpolicy="no-referrer"><br>
Average waiting time = 
<br><br>Priority Scheduling  
<img alt="Gantt-Chart-6" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Gantt-Chart-6.png" referrerpolicy="no-referrer"><br>
Average waiting time = 
<br><br>Multilevel Queue

<br>Ready queue is partitioned into separate queues, e.g.:

<br>Foreground (interactive processes) 
<br>Background (batch processes)


<br>Process permanently in a given queue (stay in that queue) Each queue has its own scheduling algorithm:

<br>Foreground – RR 
<br>Background – FCFS 


<br>Scheduling must be done between the queues:

<br>Fixed priority scheduling 

<br>Each queue has a given priority

<br>High priority queue is served before low priority queue
<br>Possibility of starvation 




<br>Time slice 

<br>Each queue gets a certain amount of CPU time




<br><img alt="MultilevelQueuePriority" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/MultilevelQueuePriority.png" referrerpolicy="no-referrer">

<br><br>Multilevel Feedback Queue

<br>A process can move between the various queues; 

<br>aging can be considered in this way (prevent starvation) 
<br>advantage: prevent 


<br>The multilevel feedback queue scheduler 

<br>the most general CPU scheduling algorithm 
<br>defined by the following parameters: 

<br>number of queues
<br>scheduling algorithms for each queue 
<br>Policies on moving process between queues 

<br>when to upgrade a processes 
<br>when to demote 降级 a processes 
<br>which queue a process will enter when that process needs service







<br>Example of Multilevel Feedback Queue
Three queues: FCFS+RR

<br> – RR with time quantum 8 milliseconds
<br> – RR with time quantum 16 milliseconds
<br> – FCFS<br>
<img alt="MFQ" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Example-MFQ.png" referrerpolicy="no-referrer">

<br>Scheduling

<br>A new job enters queue  which is served FCFS 
<br>When it gains CPU, job receives 8 milliseconds 
<br>If it does not finish in 8 milliseconds, job is moved to queue   
<br>At  job is again served FCFS and receives 16 additional milliseconds 
<br>If it still does not complete, it is preempted and moved to queue  where it runs until completion but with a low priority

<br><br>Distinguish between user-level and kernel-level threads<br>
<br>
When threads are supported by kernel,   threads are scheduled, not processes<br>
当内核支持线程时，内核调度的是线程，而不是进程
Example
Many-to-one and many-to-many models,

<br>Thread library schedules user-level threads to run on kernel threads (LWP: light-weight process)

Typically priority is set by programmer 优先级人为设置


<br>
Kernel threads are scheduled by Kernel onto available CPU 内核线程被可利用的CPU调度

<br>system-contention scope SCS 
<br>competition is among all kernel-level threads from all processes in the system


<br>
<img alt="ThreadScheduling-1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ThreadScheduling-1.png" referrerpolicy="no-referrer">

<br>
<img alt="ThreadScheduling-2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ThreadScheduling-2.png" referrerpolicy="no-referrer">

<br><br>The term Multiprocessor now applies to the following system architectures:<br>
<br>Multicore CPUs 
<br>Multithreaded cores 
<br>NUMA systems
<br><br>Symmetric multiprocessing (SMP) is where each processor is self scheduling<br>Two Scheduling Method

<br>All threads may be in a common ready queue (a) 所有进程共用一个就绪队列
<br>Each processor may have its own private queue of threads（b）每个处理机都有私有的队列<br>
<img alt="SMP" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/SMP.png" referrerpolicy="no-referrer">

<br><br>When multiple processor cores are on same physical chip ----》 Multicore Processor <br>
<br>Multicore Processor ==&gt; Recent trend
<br>Advantage
 Faster and consumes less power
<br>Disadvantage
Memory Stall Growing<a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a>
<br>Solution： 每个核都有多个硬件线程<br>
<br>Each core has more than one hardware threads. If one thread has a memory stall, switch to another thread!
<br><br>Chip-multithreading  CMT assigns each core multiple hardware threads. <br>
<br>(Intel refers to this as hyper-threading.)
<br>On a quad-core system (4核) with 2 hardware threads per core, the operating system sees 8 logical processors.<br>Abstract
在一个四核（4核）系统中，如果每个核心支持2个硬件线程，操作系统看到的8个逻辑处理器其实是由这种硬件线程技术（也称为超线程技术）使得每个物理核心能够同时处理两个线程。这种技术允许CPU更高效地利用其资源，特别是在某些核心的一部分资源（如执行单元）在特定时刻未被充分使用时。<br>
具体来说，超线程技术通过使每个物理核心在操作系统层面呈现为两个逻辑处理器来工作。这样，操作系统和应用程序可以将这些逻辑处理器视为独立的处理单元，从而在逻辑上扩展了CPU的并行处理能力。<br>
因此，在这样一个四核处理器中，由于每个核心可以处理两个线程，总共就有(4 \times 2 = 8)个逻辑处理器。这就是操作系统为什么会看到8个逻辑处理器的原因。这种安排使得处理器在处理多任务或多线程应用程序时更为高效，尤其是在等待I/O操作或进行其他非CPU密集型任务时，可以更好地利用CPU资源。
<br>Two levels of scheduling: 可以在两个层次调度 Multithreaded Multicore System<br>
<br>The operating system deciding which software thread to run on a logical CPU OS决定谁进CPU(逻辑上)
<br>Each core decides which hardware thread to run on the physical core Core 决定谁进入物理核心
<br><br>Load balancing
Load balancing attempts to keep workload evenly distributed 

<br>Push migration – periodic task checks load on each processor, and pushes tasks from overloaded CPU to other less loaded CPUs 
<br>Pull migration – idle CPUs pulls waiting tasks from busy CPU

<br>Push and pull migration need not be mutually exclusive  推迁移、拉迁移不必相互互斥<br>
<br>They are often implemented in parallel on load-balancing systems.
<br><br>处理器亲和性指的是线程或进程倾向于在被分配运行的同一个CPU上运行的性质。 当线程在一个处理器上运行时，它的数据会被存储在该处理器的高速缓存（cache）中。如果这个线程之后继续在同一个处理器上运行，它可以更快地访问之前的数据，因为数据已经在缓存中了。<br>Load balancing may affect processor affinity<br>
<br>
A thread may be moved from one processor to another to balance loads

<br>
That thread loses the contents of what it had in the cache of the processor it was moved off

<br>
Soft affinity软亲和性：操作系统会尽量让线程在同一个处理器上运行，但不保证。系统负载均衡器可能会根据需要将线程迁移到其他处理器。<br>


<br>
Hard affinity应亲和性：进程可以指定它希望运行的处理器集合。如果设置了硬亲和性，即使在负载高的情况下，内核也不会将进程移动到它未指定运行的处理器上。

<br><br>NUMA and CPU Scheduling
在NUMA架构中，计算机的内存被分割成多个区域，每个CPU都有一块局部内存。这些内存区域之间的访问速度可能不一样：<br>
局部内存（Local memory）：与某个CPU相邻的内存，这个CPU访问局部内存的速度快（fast access）。<br>
非局部内存（Non-local memory）：不与该CPU相邻的内存，该CPU访问非局部内存的速度慢（slow access）。<br>
NUMA-aware操作系统在调度线程到CPU时会考虑内存访问的非一致性。它会尝试将线程分配到可以快速访问所需数据的CPU上。这意味着操作系统会考虑线程正在使用的数据的内存位置，并尽量让线程在靠近这些数据的CPU上运行。<br>
这样做的好处是减少了内存访问延迟，提高了处理速度。但是，如果线程被调度到远离其数据的CPU上，它访问内存的速度将会慢下来，这可能会降低性能。<br>
<img alt="NUMA-CPU-Scheduling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/NUMA-CPU-Scheduling.png" referrerpolicy="no-referrer">
<br><br>Why Real-Time CPU Scheduling? 
  实时CPU调度（Real-Time CPU Scheduling）是一种操作系统的调度机制，它确保能够满足实时任务的时间要求。实时操作系统（RTOS）通常需要这种调度策略，因为它们运行着要求在特定时间内完成或响应的任务。
<br>Two kinds of RTOS

<br>Soft real-time systems 尽可能在截止时间内完成任务

<br>Critical real-time tasks have the highest priority, but no guarantee as to when tasks will be scheduled (best try only) 


<br>Hard real-time systems 严格在截止时间前完成任务

<br>a task must be serviced by its deadline (guarantee)



<br><br>Event latency 

<br>the amount of time that elapses from when an event occurs to when it is serviced.

<br>Two kinds of Event Latency

<br>Interrupt latency 中断延迟– time from arrival of interrupt to start of kernel interrupt service routine (ISR) that services interrupt 

<br><img alt="Interrupt Latency" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/InterruptLatency.png" referrerpolicy="no-referrer">


<br>Dispatch latency 调度延迟 – time for scheduler to take current process off CPU and switch to another

<br><img alt="Dispatch Latency" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/DispatchLatency.png" referrerpolicy="no-referrer"> 



<br><br>For real-time scheduling, scheduler must support preemptive, priority-based scheduling 

<br>But only guarantees soft real-time 
<br>For hard real-time, must also provide ability to meet deadlines

<br>Process need new Characteristic
New Characteristic: periodically require CPU at constant intervals

<br>Process Time <a data-footref="[inline3" href="https://www.allenygy.vip/about:blank#fn-4-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[4]</a>: 进程需要CPU的时间
<br>Deadline <a data-footref="[inline4" href="https://www.allenygy.vip/about:blank#fn-5-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[5]</a>: 进程必须完成其任务的最后期限
<br>Period <a data-footref="[inline5" href="https://www.allenygy.vip/about:blank#fn-6-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[6]</a>: 进程每隔一定时间就需要运行的周期。
<br>Rate of period task<a data-footref="[inline6" href="https://www.allenygy.vip/about:blank#fn-7-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[7]</a>: 
<br>Relation: 
<br><img alt="PriorityBasedScheduling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/PriorityBasedScheduling.png" referrerpolicy="no-referrer">

<br><br>Priority is assigned based on the inverse of its period<br><br>Example of Rate Monotonic Scheduling
Asume Priority : <br>
 needs to run for 20 ms every 50 ms.<br>
- <br>
 needs to run for 35 ms every 100 ms.<br>
- <br>
Assume deadline <br>
假定每个任务的截止时间d等于其周期p，即每个任务必须在下一个周期开始之前完成。<br>
<img alt="RateMonotonicScheduling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/RateMonotonicScheduling.png" referrerpolicy="no-referrer">
<br>Missed Deadlines Case
  needs to run for 25 ms every 50 ms.<br>
- <br>
 needs to run for 35 ms every 80 ms.<br>
- 

<br><img alt="RateMonotonicScheduling-MissedDeadline" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/RateMontonicScheduling-MissedDeadlinesCase.png" referrerpolicy="no-referrer"> 
<br>In this case It can't satisfy the Hard real-time systems

<br><br>Priorities are assigned according to deadlines<br><br>EDF Example 
  needs to run for 25 ms every 50 ms.<br>
- <br>
 needs to run for 35 ms every 80 ms.<br>
- <br>
<img alt="EDF" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/EDF.png" referrerpolicy="no-referrer">
<br><br>T shares are allocated among all processes in the system<br>Example of Proportional Share Scheduling
 T = 20, therefore there are 20 shares, where one share represents 5% of the CPU time

<br>An application receives N shares where 
<br>This ensures each application will receive  of the total processor time 
<br>Example: an application receives N = 5 shares the application then has 5 / 20 = 25% of the CPU time.
<br>This percentage of CPU time is available to the application whether the application uses it or not.
<br>无论应用程序是否使用这些CPU时间，这些份额都被保留给它。

<br><br>
<br>Linux Scheduling 
<br>Windows Scheduling
<br><br> Scheduling classes 

<br>2 scheduling classes are included, others can be added

<br>default 
<br>real-time 


<br>Each process/task has specific priority

<br>
<br>Real-time scheduling according to POSIX.1b 

<br>Real-time tasks have static priorities


<br>Real-time plus normal tasks map into global priority scheme 

<br>Nice value of -20 maps to global priority 100 
<br>Nice value of +19 maps to priority 139
<br><img alt="LinuxScheduling-Priority" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/LinuxScheduling-Priority.png" referrerpolicy="no-referrer">


<br><br>Scheduler picks highest priority task in highest scheduling class<br>
<br>Quantum is not fixed 时间片不固定
<br>Calculated based on nice value from -20 to +19 

<br>Lower value is higher priority


<br>CFS Mechanism

<br>CFS maintains per task virtual run time in variable vruntime <a data-footref="[inline7" href="https://www.allenygy.vip/about:blank#fn-8-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[8]</a>
<br>Associated with decay factor based on priority of task =&gt; lower priority is higher decay rate  <a data-footref="[inline8" href="https://www.allenygy.vip/about:blank#fn-9-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[9]</a>
<br>Normal default priority (Nice value: 0) yields virtual run time = actual run time 
<br>To decide next task to run, scheduler picks task with lowest virtual run time <a data-footref="[inline9" href="https://www.allenygy.vip/about:blank#fn-10-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[10]</a><br>
<img alt="LinuxScheduling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/LinuxScheduling.png" referrerpolicy="no-referrer">

<br><br>Windows uses priority-based preemptive scheduling<br>
<br>
Highest-priority thread runs next 

<br>Thread runs until 

<br>

<br>blocks,


<br>

<br>uses time slice,


<br>

<br>preempted by higher-priority thread






<br>
Real-time threads can preempt non-real-time

<br>
32-level priority scheme 

<br>Variable class is 1-15, real-time class is 16-31 
<br>Priority 0 is memory-management thread 
<br>There is a queue for each priority 
<br>If no run-able thread, runs idle thread


<br>
<img alt="Windows Scheduling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/WindowsScheduling.png" referrerpolicy="no-referrer">

<br>
Windows操作系统中进程可以属于六种优先级类别，每个类别中各个相对优先级的数值。Windows API定义了实时类（real-time class）和变量类（variable class），每个类别中都有不同的优先级级别。

<br>
在实时类别中，有一个时间关键（time-critical）优先级，这是最高的优先级，数值为31。其他优先级依次降低，直到最低的空闲（idle）优先级，数值为16。这些优先级是为需要即时响应的任务设计的，比如那些在特定时间限制内必须完成的任务。

<br>
在变量类别中，优先级从高（high）到空闲（idle）不等。每个优先级类别还有相对优先级，如正常（normal）类别的优先级数值范围从15到6不等。这些优先级通常用于普通应用程序和后台任务。

<br>
“变量”（Variable 意味着线程的优先级可以改变，即使它们属于同一类别。这允许操作系统根据当前的需求和资源情况动态调整进程的优先级。

<br>
在调度时，系统会选择优先级数值最高的线程来执行，确保时间敏感的任务能够获得及时的处理。通过这种方式，操作系统可以管理多任务环境中的资源分配，确保关键任务能够及时完成，同时为不太重要的任务提供必要的CPU时间。

<br>
<br>
<br>keep the CPU as busy as possible<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Increase throughput as high as possible<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>An event that occurs when a thread is on CPU and accesses memory content that is not in the CPU’s cache. The thread’s execution stalls while the memory content is retrieved and fetched<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>处理时间<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>截止时间<a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>周期时间<a href="https://www.allenygy.vip/about:blank#fnref-6-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>周期任务的频率<a href="https://www.allenygy.vip/about:blank#fnref-7-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>虚拟运行时间（vruntime）：CFS使用一个名为vruntime的变量来追踪每个进程应该获得的CPU时间。vruntime的增加速度取决于进程的优先级：优先级较低的进程（nice值较高）的vruntime增长得更快。<a href="https://www.allenygy.vip/about:blank#fnref-8-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>衰减因子：CFS使用衰减因子来根据进程的优先级调整其vruntime，优先级越低的进程，其vruntime的增长越快，从而减少它们被调度的概率。<a href="https://www.allenygy.vip/about:blank#fnref-9-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>选择下一个运行的进程：当需要选择下一个运行的进程时，CFS选择vruntime最低的进程，以尝试平等地分配CPU时间给每个进程。<a href="https://www.allenygy.vip/about:blank#fnref-10-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/operating-system/lecture/05-cpu-scheduling.html</link><guid isPermaLink="false">Operating System/Lecture/05-CPU Scheduling.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Burst-duration.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Burst-duration.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Threads]]></title><description><![CDATA[ 
 <br><br><br><br>What is Threads?
 A thread is a single sequence stream within a process.
<br>Threads Property
The threads of a process share resources at any given time.<br>
Resources including

<br>executable code 
<br>the values of its variables code section, data section, OS resources

<br>What thread can do?
Most modern applications are multi-threaded 

<br>Kernels are generally multi-threaded

Multiple tasks in an application can be implemented by separate threads

<br>Example: The following tasks can do in an application:

<br>Update display
<br>Fetch data
<br>Spell checking 
<br>Answer a network request 



<br>Advantage of Threads

<br>Economy 

<br>Process creation: heavy-weight
<br>Thread creation: light-weight	


<br>Resource Sharing
<br>Efficiency 

<br>Can simplify code


<br>Responsiveness

<br>May allow continued execution if part of process is blocked 
<br>即使进程的部分被阻塞，仍可以继续运行


<br>Scalability

<br>Process can take advantage of multicore architectures, with one or two threads per core



<br>Disadvantage of Threads
More difficult to program with threads<br>
New categories of bug are possible
<br>Similarities
Threads vs. Processes

<br>Threads share CPU and only one thread active (running) at a time. 在一个进程中
<br>Threads within a processes execute sequentially. 
<br>Thread can create children. 
<br>If one thread is blocked, another thread can run.

<br>Difference

<br>A thread is a component of a process 
<br>Multiple threads can exist within one process.
<br>Multiple threads execute concurrently and share resources such as memory, while different processes do not share these resources.

<br><br><br>Multi-core or multi-processor systems putting pressure on programmers <br>Challenges include:<br>
<br>Dividing activities 
<br>Load Balance Data splitting 
<br>Data dependency 
<br>Testing and debugging
<br><br>What is Concurrency ? 并发

<br>More than one task are progressing
<br>Single processor / core, CPU scheduler providing concurrency by doing context switches
<br>两个事件或多个事件在同一时间间隔内发生。事件在宏观上同时发生，但微观上是交替发生的<br>
<img alt="Concurrency" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Concurrency.png" referrerpolicy="no-referrer">

<br>What is Parallelism ? 并行

<br>More than one task are progressing
<br>Single processor / core, CPU scheduler providing concurrency by doing context switches 
<br>指两个或者多个事件在同一时刻同时发生<br>
<img alt="Parallelism" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Parallelism.png" referrerpolicy="no-referrer">

<br>Type of Parallelism

<br>Data parallelism – distributes subsets of the same data across multiple cores, same operation on each

<br>Example: when doing image processing, two cores can each process half of the image
<br><img alt="Data Parallelism" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Data-Parallelism.png" referrerpolicy="no-referrer">


<br>Task parallelism – distributing threads across cores, each thread performing unique operation

<br>Example: when doing sound processing, the sound data can move through each core in sequence, with each core doing a different kind of sound processing (filtering, echo, etc.)
<br><img alt="Task Parallelism" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Task-Parallelism.png" referrerpolicy="no-referrer">



<br>Parallelism implies concurrency, but concurrency does not imply parallelism.<br><br>Amdahl's Law
Identifies performance gains from adding additional cores to an application that has both serial and parallel components<br>
它是用来估计在给定部分程序能够并行化的前提下，多处理器系统相比于单处理器系统在执行该程序时能达到的最大加速比。<br>
 

<br> 是系统性能的提升倍数。
<br>S is serial portion 串行部分
<br> processing cores是处理器的数量。

<br>Proof:

<br>S is serial portion, P is parallel portion of program.<br>
So S + P = = 1 
<br>Assume that running time on one core: 
<br>Then running time on N cores:  <br>
(≥, not =, because of extra communication required between threads.)
<br>Therefore,   

<br><br>Gustafson's Law
Gustafson's law addresses the shortcomings of Amdahl’s law<br>
It is based on the assumption of a fixed problem size<br>
: theoretical scaled speedup of the program with parallelism.<br>
N,S,P: meanings are same as in Amdahl algorithm.
<br>Summary
 Gustafson's Law强调了随着问题规模的增加，可以实现更高的并行度<br>
Amdahl's Law则强调了并行计算的理论上限。两者都在并行计算领域提供了重要的视角。
<br><br><br>User Threads
Management<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a> done by user-level threads library.
<br>Advantages
No need for OS support<br>
Works even on very old or very simple OS that does not have system calls for thread management.<br>
No system call required<br>
Fast: only need a library function call.
<br>Disadvantages

<br>A process with only one thread gets as much CPU time as a process with many threads. 分配不合理
<br>All the thread scheduling inside a process must be done at user level (not done by kernel)

<br>Each thread must be nice and cooperate with the other threads in the process and regularly give CPU time to the other threads.
<br>Program more complicated to write.



<br><br>Kernel Threads
Management<a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a> supported by the kernel<br>
Kernel Threads  是处理机分配的单位
<br>Advantages
Kernel knows how many threads each process contains so it can give more CPU time to the processes with many threads. Kernel更好分配任务

<br>No need for threads to cooperate for scheduling

<br>Thread scheduling done automatically by kernel
<br>User program simpler to write.



<br>Disadvantages
Every thread management operation requires a system call<br>
Slower compared to user-level threads.<br>
Kernel’s PCB data structures more complex<br>
- The kernel needs to keep track of both processes and threads inside processes.
<br><br>
<br>Many-to-One
<br>One-to-One
<br>Many-to-Many
<br><br>Many-To-One

<br>Many user-level threads mapped to single kernel thread.
<br>One thread blocking (waiting for something) causes all threads to block (because their common kernel thread is blocked). 
<br>Multiple threads may not run in parallel on multicore system because only one may be in kernel at a time.
<br>Examples: 1. Solaris Green Threads 2. GNU Portable Threads
<br><img alt="Many-to-One" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Threads-Many-to-One.png" referrerpolicy="no-referrer">

<br>Few systems currently use this model.<br><br>One-To-One

<br>Each user-level thread maps to kernel thread.
<br>Creating a user-level thread creates a kernel thread.
<br>More concurrency than many-to-one.
<br>Number of threads per process sometimes restricted due to overhead.<br>
<img alt="One-to-One" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Threads-One-to-One.png" referrerpolicy="no-referrer"><br>
需要在用户态和内核态切换，开销大

<br>
<br>Windows and Linux use this model 
<br><br>Many-To-Many

<br>Allows many user level threads to be mapped to many kernel threads.
<br>Allows the operating system to create a sufficient number of kernel threads.
<br>Example: Windows with the ThreadFiber package. Otherwise not very common.<br>
<img alt="Many-to-Many" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Threads-Many-to-Many.png" referrerpolicy="no-referrer">

<br><br>What is Threads Library?
Thread library provides programmer with API for creating and managing threads
<br>Two primary ways of implementation
 Library entirely in user space (user threads only)<br>
OS-level library supported by the kernel (user threads mapped to kernel threads, with one-to-one model for example).
<br>Three primary thread libraries:

<br>POSIX Pthreads
<br>Windows threads
<br>Java threads

<br><br>Pthreads
May be provided either as user-level or kernel-level<br>
A POSIX standard (IEEE 1003.1c) API for thread creation and synchronization<br>
- Specification, not implementation<br>
- API specifies behavior of the thread library, implementation is up to developers of the library<br>
Common in UNIX operating systems (Linux &amp; Mac OS X)
<br><br>Implicit Threading
Implicit threading是一种编程方法，其中并行性是由编译器、运行时系统或其他并行编程框架自动管理的，而不是由程序员显式控制。
<br>Five methods explored

<br>Thread Pools
<br>Fork-Join
<br><a data-tooltip-position="top" aria-label="http://www.openmp.org/" rel="noopener nofollow" class="external-link" href="http://www.openmp.org/" target="_blank">OpenMP</a>
<br>Grand Central Dispatch<a data-footref="[inline2" href="https://www.allenygy.vip/about:blank#fn-3-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[3]</a>
<br>Intel Threading Building Blocks (TBB)<a data-footref="[inline3" href="https://www.allenygy.vip/about:blank#fn-4-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[4]</a>

<br><br>Thread Pools
Create a number of threads in advance in a pool where they await work

<br>Advantages:

<br>Usually slightly faster to service a request with an existing thread than create a new thread 
<br>Allows the number of threads in the application(s) to be bound to the size of the pool 
<br>Separating task to be performed from mechanics of creating task allows different strategies for running task


<br>Windows API supports thread pools:
<br>Available in Java as well

<br>
<br>
初始化：创建一个线程池，指定线程数量，通常基于可用的CPU核心数。

<br>
任务提交：任务提交给线程池，而不是直接提交给某个线程。这些任务通常保持在一个队列中。

<br>
任务执行：线程池中的空闲线程从队列中提取任务并执行。一旦线程完成了任务，它就可以用于另一个任务。

<br>
优势：这样可以避免为每个任务创建和销毁线程的开销，这种开销可能很大。它还允许更好地控制活跃线程的数量，防止系统因为太多并发线程而过载。

<br>
使用场景：线程池被用于服务器应用程序处理多个客户端连接，在工作队列管理中，以及任何任务可能成批出现并需要由限定数量的工作人员处理的情况。

<br>线程池是隐式线程的一种形式，因为程序员不直接管理线程生命周期或任务到线程的分配。相反，他们使用池和任务的更高级别抽象，而底层实现处理线程管理的细节。<br><br>Fork-Join Parallelism
Multiple threads (tasks) are forked, and then joined.<br>
-  Available in Java. （since Java SE7)<br>
- Similar to Hadoop MapReduce operation

<br><img alt="Fork-Join Parallelism" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Fork-Join-Parallelism.png" referrerpolicy="no-referrer">

<br>Explain Fork-Join  Parallelism
Fork-Join并行模型是一种实现并行处理的编程模式，特别适合于可以递归分解为更小问题的任务。这个模式通常是通过一种显式的方式使用的，但由于其高级的抽象性，它在某些上下文中也可以被看作是隐式线程的一种形式。
Fork-Join模型解释：
在Fork-Join模型中，主要的思想是将一个大的任务分解（Fork）成若干个小任务，这些小任务可以并行处理，处理完毕后再将结果合并（Join）起来。这种模型特别适合处理可以递归分解的问题，比如快速排序、归并排序、图像处理等。
Fork-Join并行模式通常在编程中通过特定的库（如Java中的java.util.concurrent库）来实现，这些库提供了创建任务、同步、以及合并结果的API。程序员需要明确地创建任务，并指定任务之间的分解和合并逻辑。
为什么Fork-Join有时候被看作隐式线程：
虽然Fork-Join模型通常需要程序员明确指定任务的拆分和合并，但是在一些现代编程框架中，如Java的Fork/Join框架，程序员不需要直接管理线程，而是通过高层次的任务（比如RecursiveAction和RecursiveTask）来表达并行逻辑。这些任务被提交到一个可以管理这些任务并自动处理线程分配和同步的线程池。在这个意义上，尽管Fork-Join模型需要程序员做一些并行设计，但线程的具体管理是由框架隐式完成的，所以可以认为这有隐式线程的特征。
<br><br>OpenMP
Set of compiler directives and an API for C, C++, FORTRAN<br>
Provides support for parallel programming in shared-memory environments<br>
Identifies parallel regions – blocks of code that can run in parallel
<br>Explain OpenMP
OpenMP（Open Multi-Processing）是一个支持多平台共享内存并行编程的应用程序接口（API），其目的是为高性能计算提供一个便捷的方式来编写多线程的应用程序。它定义了一系列编译器指令、运行时库调用和环境变量，这些可以被用来指定高级别的并行性，无需程序员直接管理线程。
主要特点：

<br>
跨平台：OpenMP可以在包括UNIX和Windows操作系统在内的多种平台上使用。

<br>
简易性：通过编译器指令（通常称为pragma），程序员可以轻松地将串行代码并行化。例如，在C/C++中，一个简单的#pragma omp parallel就能够将代码块内的指令并行执行。

<br>
灵活性：OpenMP允许程序员详细控制线程行为，例如分配和管理数据，以及优化并行执行的性能。

<br>
可扩展性：OpenMP可以根据可用的处理器核心数自动调整并行任务的数量。


如何工作：

<br>
并行区域：使用#pragma omp parallel创建并行区域，该区域内的代码将被多个线程并行执行。

<br>
循环并行化：对于迭代计算，可以使用#pragma omp for或#pragma omp parallel for指令来分配循环迭代给不同的线程。

<br>
任务并行化：OpenMP 3.0及以后的版本支持任务并行，允许程序创建可以独立于循环并行化的异步任务。

<br>
同步机制：OpenMP提供了多种同步机制，如屏障（#pragma omp barrier）、临界区（#pragma omp critical）和原子操作（#pragma omp atomic），用以控制线程间的执行顺序和数据访问。

<br>
数据环境：可以使用#pragma omp指令的子句来管理数据的作用域（共享或私有）。


OpenMP是一个成熟的API，被广泛应用于科学计算、工程模拟和数据分析等领域。由于它提供了一种高层次的抽象，并能自动处理许多与线程管理相关的复杂性，因此可以认为它在某种程度上提供了隐式线程管理。即使是在并行区域中，大部分的线程管理和同步工作都是自动完成的，使得开发者可以专注于算法的并行化，而不必深入底层的线程管理细节。
<br><br>TLS

<br>Thread-local storage (TLS) allows each thread to have its own copy of data
<br>Useful when you do not have control over the thread creation process (i.e., when using a thread pool) 
<br>Different from local variables  Local variables visible only during single function invocation

<br>TLS visible across function invocations Similar to static data 
<br>TLS is unique to each thread



Linux declare a TLS variable:
_ _thread int number;

<br><br>Thread Concellation
Terminating a thread before it has finished Thread to be canceled is target thread Two general approaches:

<br>
Asynchronous cancellation terminates the target thread immediately异步取消会立即终止目标线程

<br>
Deferred cancellation allows the target thread to periodically check if it should be cancelled 延迟取消允许目标线程定期检查是否应该取消


<br>Abstract
Invoking thread cancellation requests cancellation, but actual cancellation depends on thread state<br>
<img alt="Thread-state" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Thread-state.png" referrerpolicy="no-referrer"><br>
If thread has cancellation disabled, cancellation remains pending until thread enables it<br>
Default type is deferred

<br>Cancellation only occurs when thread reaches cancellation point

<br>i.e. pthread_testcancel()
<br>Then cleanup handler is invoked



<br>Windows Threads

<br>Windows API – primary API for Windows applications 
<br>Implements the one-to-one mapping, kernel-level 
<br>Each thread contains 

<br>A thread id 
<br>Register set representing state of processor 
<br>Separate user and kernel stacks for when thread runs in user mode or kernel mode 
<br>Private data storage area used by run-time libraries and dynamic link libraries (DLLs)  


<br>The register set, stacks, and private data storage area are known as the context of the thread

<br>
<br>
<br>thread creation, thread scheduling, etc.<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>thread creation, thread scheduling, etc.<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>a technology developed by Apple Inc. to optimize application support for systems with multi-core processors and other symmetric multiprocessing systems. It is an implementation of task parallelism based on the thread pool pattern.<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>Threading Building Blocks (TBB) is a C++ template library developed by Intel for parallel programming on multi-core processors. Using TBB, a computation is broken down into tasks that can run in parallel. The library manages and schedules threads to execute these tasks.<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/operating-system/lecture/04-threads.html</link><guid isPermaLink="false">Operating System/Lecture/04-Threads.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Concurrency.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Concurrency.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Process]]></title><description><![CDATA[ 
 <br><br><br>Process

<br>a program in execution in memory
<br>execution must progress in sequential fashion

<br>There can be several process for one program<br>
<img alt="process" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process/process-1.png" referrerpolicy="no-referrer"><br><br>ELFExecutable and Linkable Format<br>
<img alt="ELF" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process/ELF-1.png" referrerpolicy="no-referrer"><br>
<img alt="ELF-Format.png" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process/ELF-Format.png" referrerpolicy="no-referrer"><br>A process includes multiple parts

<br>the program code (also called text section) 
<br>stack containing temporary data  

<br>E.g., function parameters, return addresses, local variables


<br>data section containing global variables and static variables
<br>heap containing memory dynamically allocated during run time
<br>program counter, processor registers (include all current )

<br><br>
<br>New: The process is being created  创建状态
<br>Running: Instructions are being executed by CPU 运行状态
<br>Waiting: The process is waiting for some event to occur 阻塞状态
<br>Ready: The process is waiting to be assigned to a processor 就绪状态
<br>Terminated: The process has finished execution 终止状态
<br><br><img alt="ProcessState" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ProcessState.png" referrerpolicy="no-referrer"><br>
<br>Ready  Running 
<br>Running    Ready 
<br>Running   Waiting 
<br>Waiting  Ready 
<br><br>PCB

<br>PCB: Information associated with each process, can be stored in a struct type also called task control block
<br>A PCB is a kernel data structure  PCB 是内核的数据结构
<br>Each process has a corresponding unique PCB in the kernel PCB 是进程的唯一标志

<br>PCB Include

<br>Process state – running, waiting, etc. State
<br>Program counter – location of instruction to next execute PC
<br>CPU registers – contents of all process-centric registers Register
<br>CPU scheduling information- priorities, scheduling queue pointers 
<br>Memory-management information – memory allocated to the process 
<br>Accounting information – CPU used, clock time elapsed since start, time limits 
<br>I/O status information – I/O devices allocated to process, list of open files

<br> A PCB is a kernel data structure

<br>stored in the memory reserved for the kernel
<br>invisible to the process itself 
<br>changed only by the kernel.

<br>Each process has a corresponding unique PCB in the kernel. 

<br>When a new process is created, the kernel creates a new PCB for it.
<br>When a process dies, the kernel deletes the process’s PCB.

<br>All the PCBs together is how the kernel keeps track of which processes exist in memory, where they are in memory, what they are currently doing (Maybe State )<br>
<img alt="ReadyQueue" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/StateQueue.png" referrerpolicy="no-referrer"><br>Threads
If process has a single thread of execution 

<br>One program counter 

If a process has multiple threads of execution 

<br>Kernel will keep the control information for each thread 
<br>Multiple program counters

<br><br><br>
<br>Several processes want to use one CPU (or CPU core) 
<br>Process scheduler 调度 (algorithm inside the kernel, software) selects among available processes（i.e. in ready state） for next execution on CPU core 

<br>Maintains scheduling queues of processes

<br>Ready queue – set of all processes residing in main memory, ready and waiting to execute


<br>Wait queues – set of processes waiting for an event (i.e. I/O) 


<br>Processes migrate among the various queues
<br>Scheduling purpose: maximize CPU use, quickly switch processes
<br><br>A context switch occurs when the CPU switches from one process to another.<br>
<img alt="CPU Switch From Process to Process" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/CPUSwitch.png" referrerpolicy="no-referrer"><br><br>
<br>When CPU switches to another process, the system must 保护现场

<br>save the state of the old process (the one is running on CPU)
<br>load the saved state (CPU registers, program counter in PCB) for the new process (the one will run on CPU) via a context switch (i.e., switch PCB)


<br>Context-switch time is
 overhead

<br>the system does no useful work while switching 

  dependent on the complexity of OS

<br>The more complex the OS and the PCB， the longer time the context switch 

 dependent on hardware support

<br>some hardware provides multiple sets of registers per CPU  multiple contexts loaded at once, (no need to switch  context when load another process to run)

<br><br>OS must provide mechanisms for: 
Process Creation<br>
Process Termination
<br><br>Parent process <br>
<br>Create children processes 
<br>In turn create other processes,
<br>Finally forming a tree of processes<br>
Generally, process is identified and managed via a process identifier (pid)
<br>Parent and children <br>
<br>Resource sharing options

<br>

<br>Parent and children share all resources  全共享


<br>

<br>Children share subset of parent’s resources 子进程共享父进程的资源


<br>

<br>Parent and child share no resources 不共享




<br>Execution options 

<br>

<br>Parent and children execute concurrently `同时执行


<br>

<br>Parent waits until children terminate 父进程等待子进程销毁后执行




<br><br>
<br>Child process asks OS to terminate itself

<br>using the exit() system call.

<br>Returns status data from child to parent (via wait()) 
<br>Process’ resources are deallocated by operating system




<br>Parent may terminate the execution of children processes 

<br>using abort() system call for some reasons:

<br>Child has exceeded allocated resources
<br>Task assigned to child is no longer required
<br>Parent terminated (some OS do not allow children to be alive)




<br>Cascading 倾泻式的 termination 

<br>Some operating systems do not allow child to exist if its parent has terminated.
<br>When parent is terminated, all children, grandchildren, etc. are terminated. 
<br>The termination is initiated by the operating system.

<br>wait()system call <br>
<br>The parent process may wait for termination of a child process 
<br>The call returns status information and the pid of the terminated process
<br><br>Zombie Process 僵尸
A zombie process is  living corpse, half alive and half dead<br>
terminated, but still consumes system resources<br>
-  still has an entry in the process table<br>
- where the entry is still needed to allow the parent process to read its child's exit status.<br>
- once the exit status is read by parent via the wait system call, the zombie's entry is removed from the process table ("reaped“).
<br>Zombie Program 
#include &lt;stdio.h&gt; 
#include &lt;stdlib.h&gt; 
#include &lt;unistd.h&gt; 
#include &lt;sys/types.h&gt; 
int main(){
	pid_t pid = fork(); 
	if (pid == 0) { /* Child */
		printf("Running Child, PID = %d\n", getpid());	
		exit(0); 
	} 	
	else {	
		printf("Terminating Parent, PID = %d\n", getpid());
		while (1) ; /* Infinite loop */
	} 
     return 0;
}

子程序结束却并未通过wait()回收
<br>Reaping 回收 
Performed by parent on terminated child<br>
Parent is given exit status information (by OS)<br>
Kernel discards process
<br> What if parent doesn’t reap?
 If any parent terminates without reaping a child, then child will be reaped by init or system process<br>
So, only explicitly reaping is needed when parent is a long- running processes. e.g., shells and servers
<br>orphan  process 孤儿
An orphan  process is child process that is still running  but parent process has finished or terminated.
<br>Orphan Program
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;unistd.h&gt; 
#include &lt;sys/types.h&gt; 
int main(){
	pid_t pid = fork(); 
	if (pid == 0) { /* Child */
		printf("Running Child, PID = %d\n", getpid());
		while (1) ; /* Infinite loop */
	} else {	
		printf("Terminating Parent, PID = %d\n", getpid());
		exit(0); 
	} 
	return 0; 
}

父进程结束了却没有回收子进程
<br><br><br>Processes within a system may be independent or cooperating  	

<br>Independent process cannot affect or be affected by another process  	
<br>Cooperating process can affect or be affected by other processes, because they share data

<br> Advantages/Reasons of process cooperation

<br>Information sharing
<br>Computation speed-up 
<br>Modularity 
<br>Convenience 

<br>Disadvantages

<br>Added complexity 
<br>Deadlocks (死锁) possible 
<br>Starvation (饥饿) possible

<br><br>Cooperating processes need interprocess communication (IPC) <br> Two models of IPC 

<br>Shared memory //user processes control 
<br>Message passing //kernel control 
<br>Pipe Communication<br>
<img alt="Communication Model" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/CommunicationModel.png" referrerpolicy="no-referrer">

<br><br>Processes communicate through a shared memory<br><br>Producer process produces information that is consumed by a consumer process<br>
<br>Unbounded-buffer: no practical limit on the size of the buffer 

<br>Producer never has to wait because there is always extra space available for new information;
<br>Only consumer might have to wait if no information is available to read


<br>Bounded-buffer: buffer size is fixed Achieved by 循环队列

<br>Producer might have to wait if there is no space available to store new information;
<br>Consumer might have to wait if no information is available to read


<br><br>Two operations message size is either fixed or variable<br>
<br>send(message)
<br>receive(message)<br>
A communication link between processes must be created before communication.
<br> Implementation of communication link 

<br>Physical level: 

<br>Shared memory 
<br>Hardware bus 
<br>Network


<br>Logical level: 

<br>Direct (process to process) or indirect (mail box)
<br>Synchronous (blocking) or asynchronous (non-blocking) 
<br>Automatic or explicit buffering



<br><br>In Direct Communication, Processes must name each other explicitly.<br>
<br>Send() and receive() primitives 原语 are defined as 

<br>send (P, message) – send a message to process P 
<br>receive(Q, message) – receive a message from process Q


<br>Properties of communication link 
Links are established automatically<br>
A link is associated with exactly one pair of communicating processes<br>
Between each pair there exists exactly one link<br>
The link may be unidirectional, but is usually bi-directional
<br><br>MailBox
Messages are directed and received from mailboxes (also referred to as ports 端口)

<br>Each mailbox has a unique id 

<br>Processes can communicate only if they share a mailbox
<br>Processes can communicate only if they share a mailbox


<br>The send() and receive() primitives are defined as 

<br>send(A, message) – send a message to mailbox A 
<br>receive(A, message) – receive a message from mailbox A



<br> MailBox  Operations 

<br>Create a new mailbox (port) 
<br>Send and receive messages through mailbox 
<br>Destroy a mailbox

<br>Properties of communication link

<br>Link established only if processes share a common mailbox 
<br>A link may be associated with many processes 
<br>Each pair of processes may share several communication links 
<br>Link may be unidirectional or bi-directional

<br><br>Message passing may be either blocking or non-blocking<br>Blocking is considered synchronous 同步

<br>Blocking send 

<br>the sender is blocked until the message is received by the receiving process or by the mailbox 


<br>Blocking receive 

<br>the receiver is blocked until a message is available



<br> Non-blocking is considered asynchronous 异步 

<br>Non-blocking send 

<br>the sender sends the message and continues without waiting for the message to be received 


<br>Non-blocking receive 

<br>the receiver receives:  A valid message, or Null message



<br>Different combinations possible<br>
If both send and receive are blocking, this case is called rendezvous 会合<br>Queue of messages attached to the link, in kernel memory<br>
Implemented in one of three ways<br>
<br>Zero capacity – no messages are queued on a link.

<br>Sender must wait for receiver (rendezvous)


<br>Bounded capacity – finite length of n messages 

<br>Sender must wait if link full


<br>Unbounded capacity – infinite length 

<br>Sender never waits


<br><br>Acts as a conduit 管道 allowing two processes to communicate on the same computer<br>Anonymous Ordinary  Pipes <br>
<br>cannot be accessed from outside the process that created it.  匿名进程不能通过外部进程访问
<br>Typically, a parent process creates a pipe and uses it to communicate with a child process that it created.
<br>Named Pipes <br>
<br>can be accessed without a parent-child relationship.
<br><br>
<br>Ordinary Pipes allow communication in standard producer-consumer style 
<br>Producer writes to one end (the write-end of the pipe) 
<br>Consumer reads from the other end (the read-end of the pipe)
<br>Ordinary pipes are therefore unidirectional (单向) 

<br>create two separate pipes if bidirectional communication is necessary


<br>Require parent-child relationship between communicating processes<br>
<img alt="Ordinary  Pipe" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Pipe.png" referrerpolicy="no-referrer">
<br><br>
<br>Named Pipes are more powerful than ordinary pipes 
<br>Communication is bidirectional
<br>No parent-child relationship is necessary between the communicating processes 
<br>Several (&gt;=2) processes can use the named pipe for communication
<br>Provided on both UNIX and Windows systems
<br><br><br>Socket  套接字
Endpoint for communication 通讯的终结点<br>
A number included at start of message packet to differentiate network services on a host
<br>
<br>Concatenation of IP address and port

<br>E.g., 161.25.19.8:1625


<br>port 1625 on host 161.25.19.8
<br>All ports below 1024 are well known, used for standard services 
<br>Special IP address 127.0.0.1 (loopback) to refer to system on which process is running Communication happens between a pair of sockets, one on the local host and one on the remote host
<br>Sock
A data structure inside the kernel that represents the local end of a network connection<br>
IP and Port 
<br><br>
<br>Remote procedure call (RPC) abstracts procedure calls between processes on networked systems 

<br>Looks like a normal function call but done through the network 
<br>Uses ports for service differentiation


<br>OS typically provides a matchmaker service to connect client and server<br>
<img alt="RPC" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/RPCExecution.png" referrerpolicy="no-referrer">
<br>RPC Communication Steps

<br>The client-side stub (server proxy) 

<br>Locates the server 
<br>Marshals the parameters 
<br>Sends parameters to server-side stub in a network message


<br>The server-side stub (client proxy) 

<br>Receives this message 
<br>Unpacks the marshaled parameter
<br>Performs the procedure call on the server, marshals the result of the call
<br>Sends it back to the client-side stub in another message


<br>The client-side stub 

<br>Receives this second message 
<br>Unpacks the marshaled result 
<br>Gives it back to the client that did the RPC



<br>Stubs

<br>Manages the network connection between client and server
<br>Extra code on the client side and server side 
<br>Typically, a separate stub exists for each separate remote procedure 
<br>On Windows, stub code compile from specification written in Microsoft Interface Definition Language (MIDL)

<br>Marshel
Use External Data Representation (XDR) format to account for different CPU architectures<br>
Data Representation can be different in different CPU<br>
- <img alt="DataRepresentation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/MarshelDataRepresentation.png" referrerpolicy="no-referrer">

<br>On the client side, parameter marshaling involves converting the machine-dependent data into XDR before they are sent to server. 
<br>On the server side, the XDR data are un-marshaled and converted to the machine-dependent representation for the server.

]]></description><link>https://www.allenygy.vip/operating-system/lecture/03-process.html</link><guid isPermaLink="false">Operating System/Lecture/03-Process.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process/process-1.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Process/process-1.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Operating System Structure]]></title><description><![CDATA[ 
 <br><br><br><img alt="OS-Service" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/OS-Services.png" referrerpolicy="no-referrer"><br>
<br>Two categories of services

<br>Services to the user:

<br>UI,File tree,....


<br>Services for the efficient operations

<br>Management of memory
<br>CPU scheduling
<br>...




<br><br>
<br>User Interface UI

<br>Command-Line Interface CLI
<br>Graphics User Interface GUI
<br>Touch-screen
<br>Batch processing 批处理


<br>Program Execution

<br>Load a program into memory
<br>Run a program, and then end execution


<br>I/O Operations
<br>File-System Manipulation

<br>Read-Write


<br>Communications

<br>Process exchange information


<br>Error detection

<br>Handle possible errors


<br><br>
<br>Resource allocation
<br>When multiple users or multiple jobs are using computer concurrently, resources must be allocated to each of them

<br>Many types of resources

<br>CPU, main memory, file storage, I/O devices.




<br>Logging

<br>keep track of which programs use how much and what kinds of computer resources


<br>Protection and Security 

<br>Protection

<br>Ensure that all access to system resources is controlled


<br>Security

<br>Avoid attack from outside the system




<br><br><br>CLI or command interpreter allows direct command entry.<br>
<br>Commands are sometimes implemented in kernel

<br>commands built-in 内建指令


<br>Commands are sometimes by systems program

<br>names of programs 程序名
<br>Advantage: adding new features doesn’t require modification of interpreter


<br><br>
<br>User-friendly

<br>desktop metaphor (象征) interface
<br>Icons represent files, programs, actions, etc.


<br>Invented at Xerox PARC (1970s)
<br>Many systems now include both CLI and GUI interfaces

<br>Microsoft Windows is GUI with CLI “cmd” shell 
<br>Apple Mac OS X is “Aqua” GUI interface with UNIX kernel underneath and shells available 
<br>Unix and Linux have CLI with optional GUI interfaces


<br><br><br>System calls provide an programming interface for programs to use services of operating systems.<br><br>
<br>Typically, application developers design programs according to an API rather than directly system calls.
<br>The API Application Programming Interface specifies a set of functions that are available to an application programmer.

<br>Common API

<br>Win32 API for Windows
<br>POSIX API for POSIX-based systems (including virtually all versions of UNIX, Linux, and Mac OS X)
<br>POSIX Portable Operating System Interface is – a family of standards specified by the IEEE Computer Society for maintaining compatibility between operating systems.
<br>Java API for the Java virtual machine (JVM)




<br><br>
<br>
The caller just needs to obey API know nothing about how the system call is implemented Most details of OS interface hidden from programmer by API

<br>
The system call interface invokes the intended system call in OS kernel and returns status of the system call and any return values

<br>
Each system call has a number (as index)

<br>
System-call interface maintains a table: indexed according to these numbers

<br><br>
<br>Three general methods

<br>Simplest/Fastest: pass the parameters in registers 

<br>缺点：寄存器不够大，限制传参数量


<br>Parameters stored in a block/table, in memory, and address of block passed as a parameter in a register.
<br>Parameters are pushed onto the stack by the program and off the stack by the operating system


<br><br>
<br>Process Control
<br>File Management
<br>Device Management
<br>Information maintenance
<br>Communications
<br>Protection
<br><img alt="System Calls" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/SystemCalls.png" referrerpolicy="no-referrer"><br><br>
<br>
Standard C Library

<br>Contains functions which make system calls or do not make system calls makes programmers’ work much easier


<br>
Advantages of using Standard C Library

<br>It is simpler to call a function in a standard C library rather than to make a system call
<br>Portability

<br>Source code executed in one OS can be run in another OS




<br>
Advantages of using system Calls

<br>System calls are usually more powerful than functions from the Standard C Library

<br>Can create processes, share memory between processes, etc. These advanced features are not available in the Standard C Library.


<br>It’s a little bit faster than using a library function (since internally the library function uses a system call anyway).


<br><br>Subset  Superset<br>The C POSIX library was developed at the same time as the ANSI C standard. includes additional functions to those introduced in standard C<br><br>System programs provide a convenient environment for program development and execution. They can be divided into:<br>
<br>File manipulation 
<br>Status information sometimes stored in a file 
<br>Programming language support 
<br>Program loading and execution 
<br>Communications 
<br>Background services (e.g., launch OS, disk checking, daemons(守护进程)) 
<br>Application programs
<br>Most User's view of the operation system is <br>
<br>defined by system programs, not the actual system calls (for system or application programmers)
<br><br>
<br>
Apps compiled on one system usually are not executable on other operating systems

<br>Each operating system provides its own unique system calls


<br>
How can apps be used in multi-operating systems 

<br>Written in an interpreted language like Python, Ruby, and interpreter available on multiple operating systems解释性语言 
<br>Written in a language that includes a VM containing the running app (like Java) 包括虚拟机的语言
<br>Written in a standard language (like C), compiled separately on each operating system to run on each OS 标准语言


<br>
Application Binary Interface (ABI) is<br>
- about how different components of binary code can interface for a given operating system on a given architecture<br>
-  in low-level details<br>
定义了不同的二进制代码组件如何在特定操作系统和特定础础架构上进行交互的低级别细节。

<br><br>
<br>Early OSes in assembly language
<br>Then system programming languages like Algol, PL/1 
<br>Now high level language C, C++

<br>High-level language is easier to port to other hardware
<br>But slower 


<br>Actually usually a mix of languages<br>
<br>Lowest levels in assembly language
<br>Main body in C
<br>Systems programs in C, C++, scripting languages like PERL, Python, shell scripts
<br>Emulation can allow an OS to run on non-native hardware
<br><br>
<br>Various ways to structure ones 

<br>Simple structure – MS-DOS 
<br>More complex -- UNIX 
<br>Layered 
<br>Microkernel -Mach


<br><br>
<br>limited structuring (due to early hardware) 有限结构化
<br>The UNIX OS consists of two separable parts

<br>Systems programs
<br>The kernel

<br>Consists of everything below the system-call interface and above the physical hardware
<br>Provides the file system, CPU scheduling, memory management, and other operating-system functions;
<br>Consists of a large number of functions in one level




<br><br>
<br>Advantages for monolithic design

<br>High speed
<br>High efficiency


<br>Advantages for modular design

<br>changes in one component affect only that component, and no others
<br>Modules can be modified easily.


<br><br>
<br>The operating system is divided into a number of layers (levels)

<br>The bottom layer (layer 0), is the hardware. 
<br>The highest (layer N) is the user interface. 
<br>Each layer is built on top of lower layers 

<br>With modularity, each layer uses functions (operations) and services of only lower-level layers




<br>Advantage: Simplicity of construction and debugging.
<br>Disadvantages:<br>
- Hard to define each layer.<br>
- Poor performance.<br>

<br><br>Moves as much components from the kernel into user space<br>
<br>Mach<br>
Mac OS X kernel (Darwin) partly based on Mach
<br>Communication takes place between user modules using message passing<br>
<br>Microkernels provide minimal process and memory management, in addition to a communication facility.
<br>Communication between user modules through message passing.<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Microkernels.png" referrerpolicy="no-referrer">
<br>Advantage<br>
<br>Easier to

<br>extend to a microkernel
<br>port the operating system to new architectures 


<br>More reliable (less code is running in kernel mode)
<br>More secure
<br>Disadvantages<br>
<br>Overhead of communication between user space and kernel space
<br><br>Many modern operating systems implement loadable kernel modules (best practice)<br>
<br>Uses object-oriented approach
<br>Each core component is separate, is loadable as needed within the kernel, talks to the others over known interfaces
<br>Overall, similar to layers but with more flexible<br>
E.g., Linux, Solaris, macOS, Windows, etc<br><br>Most modern operating systems: not one pure model (structure) <br>
<br>Hybrid combines multiple approaches to address performance, security, usability needs. 
<br>Example<br>
<br>Linux and Solaris kernels: monolithic (in kernel memory), plus modular (for dynamic loading of functionality)
<br>Windows mostly monolithic, plus microkernel for different subsystem personalities, also provide support for dynamically loadable kernel modules.
<br>Apple Mac OS X, Microkernel plus layered, Aqua (GUI) plus Cocoa (API) programming environment
<br><br>
<br>
When power is initialized on system, execution starts at a fixed memory location

<br>
Operating system must be made available to hardware so hardware can start it

<br>One step process 

<br>Small piece of code – bootstrap loader引导程序, BIOS基本输入输出系统 stored in ROM or EEPROM locates the kernel, loads it into memory, and starts it


<br>Two step process 

<br>ROM code loads boot block (with bootstrap loader) in hard disk
<br>Bootstrap loader loads kernel




<br>
Bootstrap loader 引导程序  -----simple code to initialize the system 

<br>Load Kernel 
<br>Starts system daemons 守护进程 (services provided outside of the kernel)


]]></description><link>https://www.allenygy.vip/operating-system/lecture/02-operating-system-structure.html</link><guid isPermaLink="false">Operating System/Lecture/02-Operating System Structure.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/OS-Services.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/OS-Services.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Operating System Introduction]]></title><description><![CDATA[ 
 <br><br><br>主要由Memory,CPU,I/O Devices构成<br>
<br>Memory
<br>CPU
<br>I/O Devices

<br>disks
<br>mouse
<br>keyboard
<br>printer
<br>monitor
<br>...


<br><img alt="ComputerSystemArchitecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ComputerSystemArchitecture.png" referrerpolicy="no-referrer"><br><br><br><img alt="ComputerSystemArchitecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ComputerSystemArchitecture.png" referrerpolicy="no-referrer"><br>I/O devices and the CPU can work concurrently
I/O设备与CPU并发工作

<br>这意味着CPU可以处理指令，同时I/O设备可以进行数据传输，它们不必等待彼此完成任务才开始工作。

<br>Controller

<br>每个I/O设备都通过一个控制器与系统总线连接。控制器负责管理与特定I/O设备的数据传输。
<br>例如，磁盘驱动器通过磁盘控制器连接，鼠标和键盘可能通过USB控制器连接。
<br>设备控制器负责管理特定设备的操作，并且每个控制器都有其自己的本地缓冲区。
<br>控制器确保数据正确无误地在设备和计算机的内存之间传输。

<br>Each device controller is in charge of a particular device type

<br>每个设备控制器被一个特定的设备控制

<br>Each device controller has a local buffer

<br>每个设备控制器都有一个本地缓存

<br>Local Buffer  本地缓冲区

<br>每个设备控制器都有一个本地缓冲区（或本地内存），用于临时存储从设备传输的数据或要传输到设备的数据。
<br>缓冲区可以平衡CPU和设备之间的速度差异，因为CPU通常比I/O设备快得多。

<br>System Bus
系统总线

<br>系统总线是连接CPU、内存和所有I/O设备控制器的通道。
<br>它允许数据在CPU、内存和I/O设备之间传输。

<br>I/O is between the device and local buffer of controller

<br>IO 发生在设备与控制器的缓冲区之间

<br>Memory
内存

<br>在图中，内存单独显示，表示它与CPU和所有I/O设备通过系统总线相连。
<br>内存用于存储CPU当前正在处理的数据和指令，以及等待被I/O设备处理的数据。

<br><br><br>CPU与Memory间的关系 可以分成三种模型<br>Single Processor &amp; Multiple Processor  单处理器 和 多处理器

<br>单处理器
<br>这是最基本的配置，有一个CPU负责处理所有计算任务。

<br>这个CPU有自己的寄存器和缓存来处理指令和数据。


<br>多处理器
<br>在这种配置中，有两个或更多的独立CPU或处理器 

<br>与单处理器相同每个CPU都有自己的寄存器和缓存。
<br>这些处理器共享主内存，允许它们处理更多的任务和并行计算。



<br>Dual Core 双核处理器

<br>双核处理器实际上是一个包含两个独立核心的单个CPU。

<br>每个核心都有自己的Regisiter和 L1 cache。
<br>它们共享一个二级缓存L2 cache和 Main Memory。
<br>这允许一个处理器在同一时间内处理更多的任务。



<br>NUMA  非统一内存访问系统

<br>NUMA是一种内存设计，其中多个处理器被分配专用的内存块。
<br>每个CPU可以访问自己的内存memory0, memory1,....，以及其他CPU的内存，但访问其他CPU的内存会有更高的延迟。
<br>这种设计可以提高处理器访问内存的速度和效率，特别是在处理大量数据或高性能计算任务时。

<br><img alt="CPU" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/CPU.png" referrerpolicy="no-referrer"><br><br><br>Abstract

<br>操作系统作为用户和计算机硬件的中介
<br>它主要包括kernel,以及系统程序，应用程序，中间件(软件框架，如数据库，多媒体，...)
<br>操作系统是中断驱动的

<br>内核中的设备驱动器管理支配设备
<br>设备控制器通过中断告知CPU，设备已经完成操作
<br>内核的代码只有当中断发生时才执行	



<br>Operating System: Intermediary between a User and the Computer Hardware ----用户与操作系统的中介

<br>An operating system provides interface to a user, runs a program for a user
<br>Application Program: Compilers, web browsers....
<br>Computer Hardware: CPU, Memory, I/O devices...<br>
<img alt="Intermediary" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Intermediary.png" referrerpolicy="no-referrer">

<br>General goals of operation systems

<br>Execute user programs and make solving user problems easier 更简单的执行 User Programs 
<br>Make the computer system convenient to use 更方便的使用Computer System
<br>Use the computer hardware in an efficient manner 更高效的使用Computer Hardware

<br><br>What is Operating System ?
OS Include:

<br>Kernel Part of a operating system, resides in memory at all times on the computer<br>
<img alt="KernelInMemory" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/KernelInMemory.png" referrerpolicy="no-referrer">
<br>Others

<br>System programs -all programs associated with the operating system, but not in kernel 
<br>Application programs - all programs not associated with the operating system 
<br>Middleware中间件– a set of software frameworks that provide additional services to application developers such as:  databases, multimedia, graphics



<br>Operating System Is Interrupt-Driven

<br>Device driver inside the kernel knows how to talk and manage the device<br>
在kernel中的设备驱动知道如何管理设备以及和设备交流
<br>Device driver provides uniform interface between controller and kernel<br>
设备驱动器为控制器和内核提供统一接口
<br>Each device controller informs CPU that it has finished its operation by causing an interrupt<br>
每个设备控制器通过中断告知CPU，它已经完成了它的操作<br>
The code of the kernel is in memory all the time but the code of the kernel is only executed when there is an interrupt, on demand!<br>
内核的代码一直在内存中，但内核的代码只有在出现中断时才会按需执行！<br>
<img alt="Device Driver In Kernel" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/DeviceDriverInKernel.png" referrerpolicy="no-referrer">

<br><br>Abstract

<br>当软硬件发生需要OS立刻处理的事件时中断发生

<br>在软件层面：由Error或者System call引起中断
<br>在硬件层面：由Device 引发


<br>由ISR决定对于不同中断应该采取什么行动

<br>Interrupt
An interrupt is a signal emitted by hardware or software when a process or an event needs immediate attention

<br>Software: A trap or exception is a software-generated interrupt caused either by an error or a user request (system call)
<br>Hardware: Device<br>
[!abstract] Interrupt Service Routines (ISR)<br>
ISR inside the kernel determine what action should be taken for each type of interrupt

<br><br>When there is an interrupt, the operating system
Preserves the state of the CPU 

<br>by storing registers and the program counter(PC) for the software that was just interrupted (so that the same software can be restarted later).

Determine type of interrupt

<br>check Interrupt vector to get the address of corresponding ISR for this interrupt (used on all modern computers)

Runs ISR in kernel to handle interrupt
<br><br><br>Direct Memory Access (DMA)
<img alt="DMA" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/DMA.png" referrerpolicy="no-referrer">

<br>Device controller transfers blocks of data from buffer directly to main memory without CPU intervention, In the meantime the CPU can work on something else.


<br>DMA允许设备控制器直接将数据块从缓冲区传输到主内存，而不需要CPU干预。
<br>这样做的好处是CPU可以同时进行其他计算任务，而不需要管理这些数据传输。


<br>Only one interrupt is generated per block
<br>High transfer speed: not byte by byte, but block by block

<br><br><br>Timeline View
CPU

<br>CPU有两种状态，一种是执行用户程序，另一种是处理I/O中断。

I/O Device

<br>I/O设备的状态可以是空闲的或正在传输数据。

I/O Request

<br>当I/O设备准备好数据交换时，它会发出I/O请求。这通常发生在读取或写入操作开始时。

Interrupt

<br>当I/O设备完成数据传输时，它会发出中断信号给CPU。在图表中，这些中断用垂直的绿线表示。

<img alt="Timeline" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Interrupt-Driven-Timeline.png" referrerpolicy="no-referrer">
Interrupt Dealing

<br>CPU在执行用户程序的过程中会接收到中断信号，然后切换到处理I/O中断的状态。这个过程中，CPU会停止当前的用户程序执行，保存必要的状态，并开始执行与中断处理相关的指令。

Transfer Done

<br>一旦中断处理完成，I/O设备会标记为传输完成，并准备接收下一个I/O请求。

User Program Done

<br>在I/O设备忙于传输数据（绿线下降部分）和CPU处理中断之间的时间，CPU会继续执行用户程序。

Red Circle

<br>图表中的红色圆圈可能代表一个特定事件或异常，例如一个处理延迟或一个需要特殊注意的中断。<br>
[!abstract]+<br>
总的来说，这个时间线展示了中断驱动I/O如何使CPU在等待I/O操作完成时可以继续其他任务，从而提高了系统的效率。<br>
当设备完成数据传输时，它通过中断通知CPU，CPU随后会处理该中断，并在处理完毕后恢复用户程序的执行。这种机制减少了CPU等待I/O操作的空闲时间。<br>
<img alt="WorkflowView" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Interrupt-Driven-WorkflowView.png" referrerpolicy="no-referrer">

<br><br><br><img alt="TwoIOMethods" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/TwoIOMethods.png" referrerpolicy="no-referrer"><br>
这张图展示了中断驱动I/O周期的两种方法。<br>
在两种情况下，I/O操作都是由中断控制的，但是用户程序对I/O完成的处理方式不同。<br>
<br>Synchronous Method

<br>在这种方法中，用户程序启动I/O操作后，会一直等待直到I/O操作完成后才继续执行。这是一个同步I/O操作，因为用户程序在请求的I/O操作完成之前不会进行任何其他工作。
<br>用户程序进入等待状态，操作系统的设备驱动程序启动硬件操作，数据传输开始。
<br>一旦数据传输完成，中断处理程序（interrupt handler）会处理相应的中断，并控制权返回到用户程序，用户程序继续执行。 


<br>Example
想象你去银行取号等待办理业务。这个过程可以类比为一个计算机中的同步I/O操作。

<br>取号（启动I/O操作）:

<br>你走进银行，取一个号码，并等待你的号码被叫到。取号就像是一个程序请求I/O操作，比如从磁盘读取数据。


<br>等待（等待I/O完成）:

<br>取完号码后，你坐在等候区，不能离开，也不能做其他事情。你必须等待，直到银行工作人员叫到你的号码。在这个例子中，等待就像是程序在等待I/O操作完成。程序在这个等待期间不能执行其他任务，它被阻塞了。


<br>办理业务（处理I/O结果）:

<br>当你的号码被叫到，你前往柜台，开始与银行职员交谈，完成你的业务。这一部分对应于中断处理程序在I/O操作完成后运行，处理数据。


<br>返回（控制权返回用户程序）:

<br>业务办理完成后，你离开银行，可能回家或者去做其他事情。这就像是控制权从I/O操作返回到用户程序，用户程序继续执行其它任务。<br>
在这个同步I/O操作的例子中，你（用户程序）在整个等待过程中无法进行其他活动。你必须等待直到被叫号（I/O操作完成），这样可能导致效率低下，因为你的时间被完全占据在等待过程中，无法同时进行多个任务。这就是同步I/O可能引发的性能问题，尤其是在处理长时间的I/O操作时。



<br>
<br>Asynchronous Method

<br>在这种方法中，用户程序在启动I/O操作后不会等待I/O完成，而是立即继续执行其他工作。这是一个异步I/O操作，用户程序可以在I/O操作正在进行时做其他事情。
<br>用户程序发起I/O请求后，控制权立即返回，无需等待硬件操作完成。
<br>数据传输和中断处理会在后台进行，而用户程序在这个过程中可以继续执行其他任务。 


<br>Example
想象一下你在做饭，同时你想听音乐。你有一张CD和一个CD播放器（这里的CD播放器就像一个需要读取数据的I/O设备）。 

<br>启动播放器（请求I/O操作）:


<br>你把CD放入播放器并按下播放按钮。这一动作启动了播放器的内部机械装置去读取CD上的数据。


<br>继续做饭（用户程序继续执行）:

<br>一旦音乐开始播放，你不需要站在播放器旁边等待每首歌曲加载。相反，你可以继续做饭。这个阶段就像是服务器处理其他客户端请求或者进行其他工作。


<br>歌曲播放完毕（I/O操作完成）:

<br>当一首歌曲播放完毕，CD播放器会自动读取下一首歌曲。如果我们把这比喻成一个中断，那么每当一首歌播放完毕，播放器就“中断”当前状态，转而开始播放下一首歌。


<br>不需要干预:

<br>在整个过程中，你无需干预播放器的操作。你可以专注于做饭，而播放器在后台自行处理CD的播放。<br>
这就是一个日常生活中的异步I/O示例：你启动了一个需要时间完成的任务（CD播放），但在它完成之前，你可以去做别的事情（做饭），而不是等待它完成。当播放器需要你注意（比如CD播放完毕）时，它会以音乐停止的方式提醒你，这就好比是一个中断信号。



<br>这两种方法的选择取决于程序设计的需求。<br>
<br>同步I/O操作简单但可能效率较低，因为它会阻塞程序执行；
<br>异步I/O操作更复杂，但允许多任务同时进行，提高了效率。在多线程环境中，异步I/O特别有用，因为它允许程序在等待I/O完成的同时，继续在其他线程上工作。
<br><br><br>
<br>Operating system does a lot of management work

<br>Caching
<br>Process management
<br>Memory management
<br>File management
<br>Secondary storage management
<br>I/O
<br>Protection and security


<br><br><br><img alt="Cache" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Cache.png" referrerpolicy="no-referrer"><br>
<br>
Caching: Copy information from slower into faster storage system<br>
<img alt="TransferDirection" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/TransferDirection.png" referrerpolicy="no-referrer">

<br>
Data access procedure: faster storage (cache) checked first

<br>Data exist, information is used directly from the cache (fast)
<br>Data not exist , data are copied from slower device to the faster.


<br>
Cache design consideration

<br>size
<br>content replacement policy


<br>
Cache coherency

<br>The coordination of the contents of caches such that an update to a value stored in one cache is immediately reflected in all other caches that hold that value


<br><img alt="CharacteristicsofVariousTypesofStorage" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/CharacteristicsofVariousTypesofStorage.png" referrerpolicy="no-referrer"><br><br><br>Program vs Process
A process is a program in execution

<br>Program is a passive entity, on storage
<br>Process is an active entity, in memory

<br>Process

<br>Creation, execution needs resources

<br>CPU, memory, I/O, files
<br>Initialization data


<br>Termination requires reclaim of any reusable resources

<br>
<br>Process can be single-threaded, or multi-threaded
<br>Each process has a program counter to specify location of next instruction to execute
<br><br>Multiprogramming VS Multitasking<br>
<br>
Multiprogramming : A subset of total jobs are kept in memory at the same time

<br>Job scheduling: choose which jobs to load into memory.

<br>When job has to wait (for I/O for example), OS switches to another job




<br>
Multitasking: The CPU switches jobs so frequently to increase interactions with users

<br>CPU scheduling: choose which job will run next If several jobs are ready to run at the same time


<br>
<img alt="Scheduling" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Multiprogramming.png" referrerpolicy="no-referrer">

<br><br> Dual Mode<br><img alt="Dual Mode" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/Dual-Mode.png" referrerpolicy="no-referrer"><br>
<br>User Mode
<br>Kernel Mode
<br>Dual-mode operation allows OS to protect itself and other system components<br>Dual Mode

<br>
用户模式（User mode）:

<br>当进程运行在用户模式下时，它被限制只能执行非特权指令。用户模式下的进程不能直接执行可能会影响系统整体操作的操作，比如访问硬件设备或者修改关键系统数据。


<br>
内核模式（Kernel mode）:

<br>当进程运行在内核模式下时，它可以执行任何CPU指令。这通常包括访问硬件设备和内存管理操作。只有操作系统核心部分的代码才能在内核模式下运行。


<br>
系统调用（System call）:

<br>当用户进程需要操作系统服务时（比如读取文件、创建进程等），它会执行一个系统调用。这通常通过执行一个特殊的指令（如trap）来实现，这会导致CPU从用户模式切换到内核模式。


<br>
模式位（Mode bit）:

<br>CPU使用一个模式位来指示当前是在用户模式还是内核模式下执行。用户模式的模式位为1，内核模式的模式位为0。


<br>
执行系统调用:

<br>一旦进入内核模式，操作系统的内核会接管控制权，执行系统调用所请求的服务。


<br>
返回用户模式:

<br>系统服务完成后，操作系统会将控制权返回给用户进程，并且将模式位设置回1，进程继续在用户模式下运行。



双模式操作的关键好处是提供了一个安全层，确保用户进程不能直接执行可能会破坏系统稳定性或安全性的操作。这种机制允许操作系统保护自己和其他系统组件不受恶意或错误编程的用户进程的影响。
<br><br>Process management activities include:

<br>Creating and deleting both user and system processes
<br>Suspending and resuming processes
<br>Process synchronization
<br>Process communication
<br>Deadlock handling

<br><br><br>
<br>To execute a program

<br>All (or part) of the instructions of the program must be in memory
<br>All (or part) of the data needed by the program must be in memory


<br>Memory management activities include

<br>
Keeping track of which parts of memory are currently being used and by whom

<br>
Deciding which processes and data (or part of them) to move into and out of memory

<br>
Allocating and de-allocating memory space as needed


<br><br><br>
<br>Abstracts physical properties to logical storage unit - file
<br>Files are usually organized into directories
<br>Access control determines who can access what
<br>File system activities include

<br>
Creating and deleting files and directories

<br>
Mapping files onto secondary storage


<br><br><br>Secondary storage management activities

<br>Mounting and unmounting
<br>Free-space management
<br>Storage allocation
<br>Disk scheduling
<br>Partitioning
<br>Protection

<br>Disks usually are used to store data that do not fit in main memory or data that must be kept for a “long” period of time<br>
<br>Proper management is of central importance
<br>Entire speed of computer operation hinges on disk subsystem and its algorithms
<br><br><br>I/O subsystem responsible for

<br>Memory management of I/O including buffering (storing data temporarily while it is being transferred), caching (storing parts of data in faster storage for performance), spooling (the overlapping of output of one job with input of other jobs)
<br>General device-driver interface
<br>Drivers for specific hardware devices

<br>One purpose of OS is to hide peculiarities of hardware devices from the user<br><br><br>Protection<br>
<br>Any mechanism for controlling access of processes or users to resources defined by the OS<br>
Security
<br>defense of the system against internal and external attacks 4

<br>Huge range, including denial-of-service, worms, viruses, identity theft, theft of service


<br>Systems generally first distinguish among users, to determine who can do what

<br>User identities (user IDs, security IDs) include name and associated number, one per user
<br>Group identifier (group ID) allows set of users to be defined


<br>]]></description><link>https://www.allenygy.vip/operating-system/lecture/01-operating-system-introduction.html</link><guid isPermaLink="false">Operating System/Lecture/01-Operating System Introduction.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ComputerSystemArchitecture.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/OS/ComputerSystemArchitecture.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[OperatingSystem]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/operating-system/operating-system-overview.html</link><guid isPermaLink="false">Operating System/Operating System Overview.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[fileoperation]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/c/fileoperation.html</link><guid isPermaLink="false">Programming/C/fileoperation.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Pointers]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/c/pointers.html</link><guid isPermaLink="false">Programming/C/Pointers.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Multithreads]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/c/multithreads.html</link><guid isPermaLink="false">Programming/C/Multithreads.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Macro<sup data-footnote-id="fnref-1-56990f7407733d86" class="footnote-ref" id="fnref-1-56990f7407733d86"><a data-footref="[inline0" href="#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a></sup>]]></title><description><![CDATA[ 
 <br><br>今天看操作系统的时候，看到这个，懵了，还去CSDN<a data-tooltip-position="top" aria-label="https://blog.csdn.net/qq_37858386/article/details/78919163" rel="noopener nofollow" class="external-link" href="https://blog.csdn.net/qq_37858386/article/details/78919163" target="_blank">C语言宏定义中#符号和##的妙用</a>查了一下<br><br># 和 ## 编译器不会识别这两个运算符，仅在预处理时执行<br># 用法<br>
<br># 运算符用在预编译时期，用于将宏参数转为字符串<br>
## 用法
<br>## 运算符用在预编译时期粘连两个符号，增大了宏的使用灵活性！
<br>#include &lt;stdio.h&gt;  
#define NAME(n) int_name##n  
int main()  
{  
    int NAME(a);  
    int NAME(b);  
    NAME(a) = 520;  
    NAME(b) = 111;  
    printf("%d\n", NAME(a));  
    printf("%d\n", NAME(b));  
    return 0;  
}
<br><br>
<br><a data-tooltip-position="top" aria-label="https://blog.csdn.net/qq_37858386/article/details/78919163" rel="noopener nofollow" class="external-link" href="https://blog.csdn.net/qq_37858386/article/details/78919163" target="_blank">C语言宏定义中#符号和##的妙用</a>
<br>
<br>
<br>宏<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/programming/c/macro.html</link><guid isPermaLink="false">Programming/C/Macro.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Priority-Queue]]></title><description><![CDATA[ 
 <br><br><br>class Solution {
public:
	int lastStoneWeight(vector&lt;int&gt;&amp; stones) {
		priority_queue&lt;int&gt; q;
		for(auto v:stones){
			q.push(v);
		}
		while(q.size()&gt;1){
			int x=q.top();
			q.pop();
			int y=q.top();
			q.pop();
			if(x!=y)
				q.push(x-y);
		}
		if(q.size()==0)
			return 0;
		int ans=q.top();
		return ans;
	}
};
<br><br>class Solution {
public:
	long long pickGifts(vector&lt;int&gt;&amp; gifts, int k) {
		priority_queue&lt;long long &gt; q;
		for(auto v:gifts){
			q.push(v);
		}
		while(k--){
			long long top=q.top();
			q.pop();
			top=int(sqrt(top));
			q.push(top);
		}
		long long ans=0;
		while(q.size()!=0){
			ans+=q.top();
			q.pop();
		}
		return ans;
	}
};
<br>]]></description><link>https://www.allenygy.vip/programming/cpp/priority-queue.html</link><guid isPermaLink="false">Programming/Cpp/Priority-Queue.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Program/Cpp/Map]]></title><description><![CDATA[ 
 <br><br>std::unordered_map&lt;std::string, std::int&gt; umap; //定义

umap.insert(Map::value_type("test", 1));//增加

//根据key删除,如果没找到n=0
auto n = umap.erase("test")   //删除

auto it = umap.find(key) //改
if(it != umap.end()) 
    it-&gt;second = new_value; 


//map中查找x是否存在
umap.find(x) != map.end()//查
//或者
umap.count(x) != 0

]]></description><link>https://www.allenygy.vip/programming/cpp/map.html</link><guid isPermaLink="false">Programming/Cpp/Map.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Bitest]]></title><description><![CDATA[ 
 <br><br>
背景<br>
在使用数组时，有时需要递增地给数组中每个元素赋值。<br>
此时使用iota()函数就十分方便。
<br><br>
<br>
头文件： #include &lt;numeric&gt;

<br>

<br>对于数组


<br>格式：


<br>iota(array, array+length[array], number);
<br>从number开始，分别为数组array数组中各元素递增+1地赋值。<br>eg:<br>#include&lt;iostream&gt;
#include&lt;numeric&gt;
using namespace std;

int main() {

    int number[10];

    iota(number, number + 10, 66);
    for (int i = 0; i &lt; 10; i++) {
    cout &lt;&lt; number[i] &lt;&lt; " ";//输出：66 67 68 69 70 71 72 73 74 75
    }
    system("pause");
    return 0;
}
<br>从number开始，分别为数组vector容器中各元素递增+1地赋值。<br>
<br>

<br>对于vector


<br>格式：


<br>iota(vector.begin(), vector.end(), number);
<br>eg:<br>#include&lt;vector&gt;
using namespace std;

int main() {

    vector&lt;int&gt;number(10);

    iota(number.begin(), number.end(), 66);
    for (int i = 0; i &lt; 10; i++) {
        cout &lt;&lt; number[i] &lt;&lt; " ";
        //* 输出：66 67 68 69 70 71 72 73 74 75
    }
    return 0;
}
]]></description><link>https://www.allenygy.vip/programming/cpp/iota.html</link><guid isPermaLink="false">Programming/Cpp/Iota.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Bitest]]></title><description><![CDATA[ 
 <br><br><br>#include &lt;iostream&gt;
#include &lt;bitset&gt;

using namespace std;

int main() {
    const int n = 8; // Number of bits
    bitset&lt;n&gt; b1;    // Create bitset with all bits set to 0 (default)
    // Create bitset with value initialized to 170 (binary: 10101010)
	bitset&lt;n&gt; b2(170);

    cout &lt;&lt; "Initial bitset b1: " &lt;&lt; b1 &lt;&lt; endl;
    cout &lt;&lt; "Initial bitset b2 (170): " &lt;&lt; b2 &lt;&lt; endl;

    // 1. count() - Count the number of bits set to 1
    cout &lt;&lt; "b2 has " &lt;&lt; b2.count() &lt;&lt; " bits set to 1." &lt;&lt; endl;

    // 2. size() - Return the size (number of bits)
    cout &lt;&lt; "b2 size: " &lt;&lt; b2.size() &lt;&lt; " bits." &lt;&lt; endl;

    // 3. set() - Set all bits to 1
    b1.set();
    cout &lt;&lt; "b1 after set(): " &lt;&lt; b1 &lt;&lt; endl;

    // 4. set(pos) - Set a specific bit at position pos to 1
    b1.set(2); // Set bit at position 2 to 1
    cout &lt;&lt; "b1 after set(2): " &lt;&lt; b1 &lt;&lt; endl;

    // 5. reset() - Set all bits to 0
    b1.reset();
    cout &lt;&lt; "b1 after reset(): " &lt;&lt; b1 &lt;&lt; endl;

    // 6. reset(pos) - Set a specific bit at position pos to 0
    b2.reset(1); // Reset bit at position 1 (second bit from the right)
    cout &lt;&lt; "b2 after reset(1): " &lt;&lt; b2 &lt;&lt; endl;

    // 7. flip() - Flip all bits (0 becomes 1, 1 becomes 0)
    b2.flip();
    cout &lt;&lt; "b2 after flip(): " &lt;&lt; b2 &lt;&lt; endl;

    // 8. flip(pos) - Flip a specific bit at position pos
    b2.flip(0); // Flip the first bit
    cout &lt;&lt; "b2 after flip(0): " &lt;&lt; b2 &lt;&lt; endl;

    return 0;

}
]]></description><link>https://www.allenygy.vip/programming/cpp/bitest.html</link><guid isPermaLink="false">Programming/Cpp/Bitest.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Algorithm-Library]]></title><description><![CDATA[ 
 <br><br>在 C++ 算法竞赛中，标准库中的 algorithm 头文件中的函数是非常常用的。以下是一些常见的 algorithm 库函数，它们在解决各种算法竞赛问题时非常有用：<br>
<br>
排序算法：

<br>sort(): 对容器进行排序。
<br>stable_sort(): 稳定排序。
<br>partial_sort(): 部分排序。
<br>nth_element(): 找到容器中第 n 个元素，其他元素不一定有序。


<br>
搜索算法：

<br>find(): 在容器中查找某个值第一次出现的位置。 无序时使用
<br>count(): 统计某个值在容器中出现的次数。
<br>binary_search(): 二分查找。
<br>lower_bound(): 返回大于或等于给定值的第一个元素的位置。
<br>upper_bound(): 返回大于给定值的第一个元素的位置。


<br>
合并和删除算法：

<br>merge(): 合并两个已排序的容器。
<br>unique(): 删除容器中连续重复的元素。
<br>remove(): 删除容器中指定值的元素。


<br>
其他常见算法：

<br>min(), max(): 返回两个值中的最小值和最大值。
<br>accumulate(): 对容器中的值进行累积操作。
<br>next_permutation(): 获取容器的下一个排列。
<br>prev_permutation(): 获取容器的上一个排列。


<br><br>//在 [first, last) 区域内查找不小于 val 的元素
ForwardIterator lower_bound (ForwardIterator first, ForwardIterator last,
const T&amp; val);

//在 [first, last) 区域内查找第一个不符合 comp 规则的元素
ForwardIterator lower_bound (ForwardIterator first, ForwardIterator last,
const T&amp; val, Compare comp);
]]></description><link>https://www.allenygy.vip/programming/cpp/algorithm-library.html</link><guid isPermaLink="false">Programming/Cpp/Algorithm-Library.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Unified-Modeling-Language]]></title><description><![CDATA[ 
 <br><br><br>
<br>Class diagrams

<br>Sequence diagrams
<br>Use case diagrams
<br>Activity diagrams


<br><br>
<br>
Describe the system in terms of classes and their relationships.

<br>
Natural ways of reflecting the real-world entities and their relationships.

<br><br><br>
Association represents a general binary relationship that describes an activity between two classes.
<br>A class is aware of and holds a reference to another class.<br><img alt="Association" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/woM42m.png" referrerpolicy="no-referrer"><br>
<br>Bidirectional or Unidirectional

<br>Unidirection
<br><img alt="Has-A1" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/KXsYDz.png" referrerpolicy="no-referrer">  <img alt="Has-A2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/bIgbwh.png" referrerpolicy="no-referrer">
<br>Bidirectional
<br><img alt="Bidirection" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/W6reqQ.png" referrerpolicy="no-referrer">


<br><br>A special type of association, which represents a “Has-A” relationship  空心菱形<br>
<br>They may have different life cycles.
<br><img alt="Aggregation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/spPC2D.png" referrerpolicy="no-referrer">
<br><br>Represents a “Part-of” relationship. 实心菱形<br>
<br>Life cycle of the part is dependent on the whole’s life cycle
<br><img alt="Composition" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/w0JW5S.png" referrerpolicy="no-referrer">
<br><br>Often referred as a “is-a” relationship. 三角空心<br>
E.g., a dog is an animal.
<br>
<br><img alt="Inheritance" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/w0JW5S.png" referrerpolicy="no-referrer">
<br><br>For interface<br>
<br>In Java, an interface is not a class but a set of requirements for classes that want to conform to the interface
<br><img alt="Realization&amp;Implementation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/ssxw42.png" referrerpolicy="no-referrer">
]]></description><link>https://www.allenygy.vip/programming/java/lecture/unified-modeling-language.html</link><guid isPermaLink="false">Programming/Java/Lecture/Unified Modeling Language.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:16:56 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/woM42m.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/woM42m.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Java Programming Essentials]]></title><description><![CDATA[ 
 <br><br><br>
<br>A Java identifier must NOT start with a digit, and all the characters must be letters, digits, “$”or“_”
<br>Java is a case-sensitive language

<br>W_12, HelloWorld,_983, $bS5_c7 Correct
<br>4W2, class, Data#, 98.3, Hell world Not Ok


<br><br>
<br>new/const
<br><img alt="Keywords" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/NDukbV.png" referrerpolicy="no-referrer">
<br><br> int numberOfBeans;
 double myBalance, totalWeight;
<br>Every variable in a Java program must be declared before it is used<br><br>
<br>Camel Case

<br>Variable and Method names should begin with a lowercase letter. Indicate "word" boundaries with an uppercase letter and restrict the remaining characters to digits and lowercase letters:

<br>topSpeed bankRate1 timeOfArrival


<br>Class names should begin with an uppercase letter and, otherwise, adhere to the rules above:

<br>FirstProgram MyClass String




<br><br>
<br>Local variables
<br>
Local variables are declared (visible) in methods, constructors or blocks. No default value for local variables, therefore should be assigned an initial value before the first use.
<br>局部变量（local variable）是在方法或代码块内部定义的变量，只能在该方法或代码块内部访问。它们的生命周期仅限于该方法或代码块的执行期间。局部变量必须先声明，然后才能使用。在声明时，可以指定变量的类型和初始值。例如：<br>public void exampleMethod() {
    int x = 5; // x是一个局部变量，类型为int，初始值为5
    System.out.println(x); // 输出5
}
<br>
<br>Instance variables
<br>
Instance variables are declared in a class, but outside a method, constructor or any block. Instance variables have default values, e.g., numbers – 0, Boolean – false,etc.
<br>实例变量相当于该类的属性，需要 "new对象 "才能被调用。而且该变量不常驻内存，当这个类不再被使用时会java回收机制所释放。例如：<br>public class ExampleClass {
    int x; // x是一个实例变量，初始值为0
    String str = "hello"; // str是一个实例变量，初始值为"hello"
}
<br>
<br>
实例变量存在默认值：

<br>数值类型（byte，short，int，long，float，double）：0
<br>char类型：'\u0000'（空字符）
<br>boolean类型：false
<br>引用类型（例如String）：null


<br>
Class/static variables

<br>
Class/Static variables are declared with the static keyword in a class, but outside a method, constructor or blocks.<br>
There would only be one copy of each class variable per class, regardless of how many objects are created from it. Default values are same with instance variables.
<br>静态变量用 static字符修饰，随着类的加载而加载，静态变量存放在方法池中的静态区，可以直接通过"类名.变量名直接"调用，也可以通过类的对象调用。<br>public class ExampleClass {
    static int x; // x是一个静态变量，初始值为0
    static String str = "hello"; // str是一个静态变量，初始值为"hello"
}
int a = ExampleClass.x; // 通过类名访问静态变量x
String s = ExampleClass.str; // 通过类名访问静态变量str
<br><br>
<br>Standard output
<br>System.out.println(); //Print a line to the standard output (screen)
System.out.print(); //Print something to the standard output (screen)
<br>
<br>Standard input
<br>import java.util.Scanner;
Scanner input = new Scanner(System.in);
int a=input.nextInt();
String b=input.nextline();
Double c=input.nextDouble();
<br><br><img alt="DataType" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/yXXfTn.png" referrerpolicy="no-referrer"><br><br>
<br>numerical data type:  

<br>integer: byte, short,int,long long num=8888888(l);
<br>floating point： float，double float num=8888888(f);


<br>character data type: char
<br>boolean data type: bool

<br>小数默认是 double


<br>data range: <img alt="Data-Range" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/ZeCwja.png" referrerpolicy="no-referrer">
<br><br>
<br>class
<br>interface
<br>array
<br><br><br>
<br>
<br><img alt="TypeCasting" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/I2H3Fd.png" referrerpolicy="no-referrer">
<br><br>
<br>&amp; (“and”), | (“or”), ^ (“xor”), ~ (“not”)
<br>n&lt;&lt;k n左移k位
<br>n&gt;&gt;k n右移k位
<br><img alt="BinaryOperator" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Oo2z0n.png" referrerpolicy="no-referrer">
<br><img alt="Precedence" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/d2IP1M.png" referrerpolicy="no-referrer">
<br><br>
<br>Code libraries in Java are called packages.
<br>
A package is a collection of classes that is stored in a manner that makes it easily accessible to any program.<br>
In order to use a class that belongs to a package, the class must be brought into a program using an import statement
<br><br>
<br>if-else, if, and switch statements.
<br>while, do-while, and for statements.
<br>A Boolean expression evaluates to either true or false -- used to control the flow
<br><br>if(){}
else{}
<br>switch() {case"": break;}
<br><br>while(Boolean_Expression) {
    Statement_1
    Statement_2
    Statement_Last
}
<br>do {
    Statement_1
    Statement_2
    Statement_Last
} while(Boolean_Expression); 
<br>  for(initialization;Boolean_Expression;Update){

  }
<br><br>
<br>The break statement: break;

<br>When executed, the break statement ends the nearest enclosing switch or loop statement.


<br>The continue statement: continue;

<br>When executed, the continue statement ends the current loop body iteration of the nearest enclosing loop statement.
<br>Note that in a for loop, the continue statement transfers control to the update expression.


]]></description><link>https://www.allenygy.vip/programming/java/lecture/java-programming-essentials.html</link><guid isPermaLink="false">Programming/Java/Lecture/Java Programming Essentials.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:16:48 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/NDukbV.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/NDukbV.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Java-Introduction]]></title><description><![CDATA[ 
 <br><br><br>
<br>Machine languages:            机器语言

<br>10011110111100001111111 [Binary style]


<br>Low-level languages:          汇编语言

<br>Assembly language:
<br>add ax, bx [Intel x86 style]


<br>High-level: human-friendly languages:  高级语言

<br>Structured programming languages [Fortran, C, Pascal];
<br>C++ , a combination of structured programming &amp; object-oriented;
<br>Java, pure object-oriented language;
<br>C#, similar to Java.


<br><br>
<br>Developed by Sun Microsystems.
<br>Sun was bought by Oracle in 2010.

<br>1996: Java version 1.0;
<br>… Java 1.1, 1.2, 1.3, 1.4;
<br>2004: Java version 1.5, name changed to Java 5;
<br>… Java 6, 7, 8.<br>
One new release every 6 months now:
<br>September 2017: Java 9;
<br>March 2018: Java 10;
<br>September 2018: Java 11 (long term support);
<br>March 2019: Java 12
<br>...


<br><br><br>
<br>Simple
<br>Object-oriented                     面向对象
<br>Platform neutral                    跨平台
<br>Robust, secure, scalable.           稳健 安全 可扩展<br>
E.g.: programmers don’t need to care about memory allocation and release.
<br><br>
<br>Compiler: a program that translates a high-level language program into an equivalent low-level language program.
<br>This translation process is called compiling.
<br><br><img alt="Java Compilation Model" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/JavaCompilationModel.png" referrerpolicy="no-referrer"><br>
<img alt="JCM" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/JCM.png" referrerpolicy="no-referrer"><br>
<br>Java compiler translates Java programs into byte-code, a language for the Java Virtual Machine.
<br>Once compiled to byte-code, a Java program can be used on any computer that has a JVM, making it very portable.
<br><br>
<br>Reads “byte code” and executes it.
<br><br>
<br>Manages memory automatically;
<br>Included in the JVM.
<br><br><br>
<br>JRE

<br>Java Runtime Environment = JVM + Java libraries.
<br>For users to run byte-code programs on their computer.


<br>JDK 开发者使用

<br>Java Development Kit = JRE + Java compiler + other development tools.
<br>For developers to write Java software, create byte-code, and test it.


<br><br>
<br>Java Micro Edition (JavaME)

<br>Very small Java edition for smart cards, pages, phones, and set-top boxes.
<br>Subset of the standard Java libraries aimed at limited size and processing power.


<br>Java Standard Edition (JavaSE)

<br>The basic platform, which this course will cover.


<br>Java Enterprise Edition (JavaEE)

<br>For business applications, web services, mission-critical systems.
<br>JSP, Servlets, JDBC, EJB3.0, Struts   - Spring   - Hibernate.


]]></description><link>https://www.allenygy.vip/programming/java/lecture/java-introduction.html</link><guid isPermaLink="false">Programming/Java/Lecture/Java Introduction.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:14:48 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/JavaCompilationModel.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/JavaCompilationModel.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Inheritance]]></title><description><![CDATA[ 
 <br><br>
<br>Class inheritance is the process by which a new class is created from another class superclass-subclass, parent-child class

<br>Allows code to be reused 允许复用
<br>Subclass automatically has all the non-private instance variables and methods of the superclass 子类自动拥有父类非私有实例变量和方法
<br>Java does not allow multiple inheritance Java不允许多重继承
<br>Static methods cannot be overridden 静态方法不可重写
<br>Have the same method name and parameters and compatible return type
<br>New method cannot narrow the accessibility, but can widen it 只能扩展权限


<br><br><br>
<br>方法重载（Overloading）：在同一个类中定义多个同名但参数列表不同的方法，根据方法调用时传递的参数类型和个数来确定调用哪个方法。这种方式也称为编译时多态或静态多态。
<br>方法名相同
<br>参数列表不同
<br>方法调用更加方便
<br><br>
<br>
方法重写（Overriding）：在子类中重写父类的方法，通过子类对象引用调用该方法时，实际执行的是子类中的方法。这种方式也称为运行时多态或动态多态。

<br>
在继承中，改写父类的方法

<br>
方法名不学相同

<br>
返回参数要兼容

<br>
可访问区间只增大

<br>
Every class inherits the methods from Object and the methods need to be overridden with more appropriate definitions

<br><br>
<br>Calling parent methods using super
<br>super() with correct number of arguments to call the parent constructor  ----super 使用父类构造器方法
<br>this() with correct number of arguments to call current class constructor  ----this 使用本类已经实现的构造器方法
<br>Java implicitly adds a call to super() if the constructor dose not explicitly call super(…) as its first statement
<br><br>
<br>Placed before definition of a variable, the value of this variable cannot be changed; 该变量不可改变
<br>Placed before definition of a method, then that method cannot be redefined (overridden) in a subclass. 该方法不可重写
<br>If the modifier final is placed before definition of a class, then that class cannot have subclasses. 该类不继承
<br><br>
<br>Every class is a descendent of the class Object.所有类的祖先类都是object
<br>toString and equals 方法 所有类都自带该方法
<br><br><br>
<br>The java toString() method is used when we need a string representation of an object.
<br>This method can be overridden to customize the string representation of a specific class.
<br><br>
<br>The equals method compares the object given as argument to the method with the object on which the method is called: object1.equals(object2) compares object1 and object2 using the equals method of object1.
<br>The result may or may not be the same as: object2.equals(object1) because the two objects might be from different classes with different equals methods.
<br>This method can be overridden to customize the comparison of objects for specific classes.
<br>The equals method should always have a parameter of type Object so that we can compare the current object with any other object from any other class:
<br><br>
<br>对于基础数据类型：

<br>直接比较--值


<br>对于引用数据类型：

<br>比较是不是同一个对象


<br>public boolean equals(Object otherObject) {
        ...
}
<br><br>
<br>Connecting a method call to a method body is called binding.
<br>Automatically selecting the appropriate method at runtime is called dynamic binding or late binding.<br>
When binding is performed before the program is run (by the compiler, if there is one), it’s called early binding.
<br>All method binding in Java uses late binding unless the method is static or final (private methods are implicitly final).
<br>When the program runs and uses dynamic binding to call a method, then the virtual machine must call the version of the method that is appropriate for the actual type of the object.

<br>If the actual type class defines the matched method, then the method is called.
<br>Otherwise, the superclass of the actual type class is searched, and so on.
<br>Finally, the Object class is searched.


<br>Multiple implementations of the same method occur in different classes along the same hierarchy.
<br>A child class overrides the implementation of a method<br>
provided by its parent class.
<br>Dynamic binding then uses the first method with the right signature when searching bottom-up in the class hierarchy.
<br>在Java中使用父类或接口为参数的方法/其子类或实现了接口的方法 都可被传参
<br><br>
<br>An object from a subclass can be used as if it were an object from a superclass Subtyping polymorphism: an object from a subclass can be used as if it were an object from a superclass.
<br>Also called the Liskov substitution principle.
<br>Student inherits all the non-private methods of Person.
<br>So a Student object has all the methods necessary to act as a Person object!
<br>So Java allows us to use a Student object in any place where a Person object would work too.
<br><br>
<br>Object typecasting is when the type used for an object is changed, usually by assigning the object to a variable of a different type.
<br>The cast does not change the object itself, it only changes the type through which the object is used.
<br>There are two types of casts:

<br>Upcast: the type of the object is changed to the type of a superclass.
<br>Downcast: the type of the object is changed to the type of a subclass. 本来是父类则无法向下转型


<br><br>
<br>用于检验是不是该类及该类所属的子类
<br>Since the type used for an object can be changed, how do we know what kind of object it really is?

<br>The instanceof operator can be used to test if an object is from a class which is a descendent of the tested class//子类 instanceof 父类---true 父类 instanceof 子类---false
<br>object instanceof class

<br>For compile, class could be parent class/children class, otherwise “incompatible conditional operand types”
<br>For run time, return true if the class is the parent class of the object type; otherwise return false ----运行时才报错




]]></description><link>https://www.allenygy.vip/programming/java/lecture/inheritance.html</link><guid isPermaLink="false">Programming/Java/Lecture/Inheritance.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:15:05 GMT</pubDate></item><item><title><![CDATA[Exception Handling]]></title><description><![CDATA[ 
 <br><br><br>
<br>Compile-time errors: lexical / syntactic / semantic. ——&gt;语法错误------编译无法通过<br>
在编译时就无法通过
<br>// Example with compile-time error 语法错误再此处不作演示
public static void division(int i, int j) {   因为无法捕捉到ArithmeticException的异常所以直接报错
        int result = -1;
        try {
            result = i / j;
        } catch (Exception e) { // Catches all exceptions!
            System.out.println("Wrong: " + e.getMessage());
        } catch (ArithmeticException e) { // Unreachable code.
            System.out.println("Wrong: " + e.getMessage());
        } finally {
            System.out.println(i + " / " + j + " = " + result);
        }
    }

public static void main(String[] args) {
    division(100, 4);
    division(100, 0); // ArithmeticException: / by zero
    System.out.println("End of main()");
    }
//Unreachable catch block for ArithmeticException. 
//It is already handled by the catch block for Exception.
<br>
<br>Runtime errors:------编译通过，运行报错,需要程序员立刻处理否则无法运行

<br>Error

<br>Usually unrecoverable, very rare.
<br>Examples: JVM out of memory, hardware error, etc. ——&gt;越界，内存泄漏


<br>Exception：

<br>Often recoverable, fairly common.




<br><br>
<br>An exception in Java is any abnormal

<br>unexpected event
<br>extraordinary condition.


<br>example:

<br>file not found exception
<br>array out of bounds exception
<br>unable to get connection exception


<br>Java is guaranteed to:

<br>Automatically detect that something is wrong.
<br>Immediately stop the program.
<br>Show you an exception about the problem.
<br>Tell you what the exception is about.
<br>Tell you exactly where the exception happened in your code.


<br>Handling the exception

<br>Your Java program may catch the exception object. Your program can then use the object to recover from the problem.


<br>Throwing an exception

<br>When an exception occurs, the JVM automatically creates an object from the class Exception which contains information about the problem. This object represents the exception itself!


<br><br>
<br>The predefined class Exception is the root class for all possible exceptions
<br>Every exception class is a descendent class of the class Exception
<br>Although the Exception class can be used directly in a class or program, it is most often used to define a subclass
<br>The class Exception is in the java.lang package
<br><br><br>
<br>Unchecked exceptions are the class RuntimeException and any of its subclasses.

<br>These exceptions correspond to bugs (divisions by zero, array access out of bounds, etc.) that can happen anywhere in your program.
<br>The compiler does not force the programmer to handle these exceptions.
<br>In fact, the programmers may not even know that these exceptions could be thrown.
<br>Since an unchecked exception corresponds to a bug, it is normal for the program to die (instead of trying to recover from the problem); you must then find the bug in your program and fix it.


<br><br>
<br>Checked exceptions are subclasses of the Exception class, excluding the class RuntimeException and its subclasses.

<br>These exceptions correspond to situation which are unexpected but which are not bugs in the program.

(the network is temporarily down, the hard disk is full, etc.)


<br>These exception can happen at specific places in your program (when opening a network connection, when saving a file, etc.)
<br>The compiler forces the programmer to handle these exceptions in some way (see later). Usually the program can recover from the problem (instead of dying) and keep running.


<br><br><br>The Java code that you think may produce an exception is placed within a try block.<br>
<br>No exception occurs inside the try block → the finally block is executed, then the rest of the method.
<br>An exception occurs inside the try block → an exception object is created by Java and thrown, killing all the code after that inside the try block, until a matching catch block is found and executed to handle the exception object → the finally block is executed → the rest of the method is executed.
<br><br>
<br>An exception object created and thrown during execution of the try block can be caught and handled in a catch block.
<br>On exit from a catch block, normal execution continues and the finally block is executed, followed by the execution of the rest of the method.
<br>// try-catch example:
import java.util.Scanner;
public class Test2 {
  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    while(true) {
        System.out.print("Input an integer: ");
        String s = scanner.nextLine();
        try {
          int i = Integer.parseInt(s);
          System.out.println("i is: " + i);
        }catch(NumberFormatException e) {
          System.out.println("Wrong!");
        }
    }
  }
}
<br><br>
<br>A finally block is always executed.
<br>Generally a finally block is used for freeing resources, cleaning up, closing files or network connections etc. Otherwise you do not need it.
<br>If the finally block executes a control transfer statement such as a return or a break statement, then this control statement determines how the execution will proceed regardless of any return or control statement present in the try or catch.
<br>try {
    &lt;code that might throw an exception&gt;
} catch (&lt;exception type1&gt; &lt;parameter1&gt;) {
    &lt;statements handling parameter1&gt;
} catch (&lt;exception type2&gt; &lt;parameter2&gt;) {
    &lt;statements handling parameter2&gt;
}finally { // finally block
    &lt;statements always executed&gt;
}
<br>//finally example:
public class Test3 {
    public static void division(int i, int j) {
        int result = -1;
        try {
            result = i / j;
        } catch(ArithmeticException e) {
            System.out.println("Wrong: " + e.getMessage());
        } finally {
            System.out.println(i + " / " + j + " = " + result);
        }
    }
    public static void main(String[] args) {
        division(100, 4);
        division(100, 0); // ArithmeticException: / by zero
        System.out.println("End of main()");
    }
}
<br><br>A method can explicitly create an object from the Exception class (or one of its subclasses) using new and then throw the object using the throw statement. Then the method must either:<br>
<br>Catch the exception object itself using a try-catch statement. 使用try-catch捕获并处理异常

<br>This is not very useful: in general there is little reason for a method to throw an exception just to immediately catch it in the same method...


<br>use the throws clause to specify as part of the type of the method that the method might throw an exception. 在方法名旁边throws特定的异常

<br>The exception object will then have to be caught somewhere else, in  one of the callers of the method.   可以用if-else, 挑出异常，用throw抛出异常


<br><br>
<br>getMessage()

<br>Returns the detailed error message string for this exception object.抛出的异常中写啥，getMessage就返回啥


<br>printStackTrace()

<br>Prints this exception and its backtrace: the list of method calls starting from main up to the method that threw the exception object.


<br>//throw
import java.util.Scanner;
public class Test6 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.print("Input a positive integer: ");
            String s = scanner.nextLine();
            try {
                int i = Integer.parseInt(s);
                if (i &lt;= 0) {
                    // This is overkill. It is easier to just print the
                    // error message here and then use "continue" to start
                    // the next iteration of the while loop.
                    throw new Exception(i + " &lt;= 0 !");
                }
                System.out.println("i is: " + i);
            } catch (Exception e) { // Catch all exceptions!
                System.out.println("Catch: " + e.getMessage());
            }
        }
    }
}
<br>import java.util.Scanner;

public class Test7 {
    public static void readPosInt() throws Exception {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Input a positive integer: ");
        String s = scanner.nextLine();
        int i = Integer.parseInt(s);
        if (i &lt;= 0) {
            throw new Exception(i + " &lt;= 0 !");
        }
        System.out.println("i is: " + i);
    }

    public static void main(String[] args) {
        while (true) {
            try {
                readPosInt(); // May throw an exception, which we need to catch.
            } catch (Exception e) { // Catch all exceptions!
                System.out.println("Catch: " + e.getMessage());
            }
        }
    }
}
<br><br>
<br>In a method, if you throw an exception object and you don’t want to catch the exception object in the same method then you must use the throws clause.
<br>The method might throw multiple different kinds of exceptions: you need to list in the throws clause all the exceptions that the method does not catch itself.
<br>public Type methodName(…) throws &lt;Exception1&gt;,…, &lt;ExceptionN&gt; {
        …
}
<br><br>
<br>Define a subclass of Exception.
<br>Create an exception object from the subclass using new.
<br>Throw the exception object using throw.
<br>Use a try-catch statement to handle the exception object inside the method itself, or use a throws clause and catch the exception object somewhere else.
<br>
public class NotPositiveException extends Exception {
    public NotPositiveException(String msg) {
    // msg is the message given to the exception 
    when
    // it is created, which will later be the 
    resultP
    // of calling the getMessage() method.
    super(msg);
    }
}

import java.util.Scanner;
public class Test8 {
    public static void readPosInt() throws NotPositiveException {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Input a positive integer: ");
        String s = scanner.nextLine();
        int i = Integer.parseInt(s);
        if (i &lt;= 0) {
            throw new NotPositiveException(i + " &lt;= 0 !");
        }
        System.out.println("i is: " + i);
    }
    public static void main(String[] args) {
        while (true) {
            try {
                readPosInt();
            } catch (NotPositiveException e) { // If i &lt;= 0.
                System.out.println("NotPositive: " + e.getMessage());
            } catch (NumberFormatException e) { // If parseInt() fails.
                System.out.println("NumberFormat: " + e.getMessage());
            }
        }
    }
}
<br>
Input a positive integer: -2<br>
NotPositive: -2 &lt;= 0 !<br>
Input a positive integer: -2.5<br>
NumberFormat: For input string: "-2.5"
<br><br>
<br>An overriding method in subclass can throw any unchecked exception, regardless of whether the  overridden method in superclass throws exceptions  or not.
<br>If an overriding method in subclass throws checked exception, then it must be the same exception or child exceptions of the exception(s) declared in the  overridden method.
<br>class A {
    void meth() throws FileNotFoundException {
    }
}

class B extends A {
    @Override
    void meth() {
    } // compiles fine
}

class C extends A {
    @Override
    void meth() throws IOException {
    } // compile error
    /*
     * Exception IOException is not compatible with throws clause
     * in A.meth()
     */
}

class D extends A {
    @Override
    void meth() throws RuntimeException {
    }// compiles fine
}

interface A {
    void meth() throws IOException;
}

class B implements A {
    @Override
    public void meth() throws FileNotFoundException {
    }
    // compiles fine
}

class C implements A {
    @Override
    public void meth() {
    } // compiles fine
}

class D implements A {
    @Override
    public void meth() throws Exception {
    } // compile error
}
]]></description><link>https://www.allenygy.vip/programming/java/lecture/exception-handling.html</link><guid isPermaLink="false">Programming/Java/Lecture/Exception Handling.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:16:33 GMT</pubDate></item><item><title><![CDATA[Creating-Java-Classes]]></title><description><![CDATA[ 
 <br><br><br>
<br>
A class is a programmer-defined type.

<br>
A value of a class type is called an object or an instance of the class: an object exhibits the properties and behaviors defined by the object’s class.

<br>
Objects have data and behavior.

<br>Data in an object is called instance fields.
<br>Behaviors that operate on the data are called methods.


<br><br>
<br>A class definition specifies the data items and methods that all of it subjects will have:

<br>Data items and methods are sometimes called members of the object.
<br>Data items are usually called instance fields/instance variables/attributes/properties.


<br><br>
<br>UML : pictures of an Object-Oriented system

<br>Programming languages are not abstract enough for OO design.
<br>Open standard to model the OO system.


<br>The most popular diagrammatic notation used for Object-Oriented Development.
<br>Consists of:

<br>Class diagrams;
<br>Sequence diagrams;
<br>Use case diagrams;
<br>Activity diagrams;


<br><br>
<br>Class name in the top of box
<br>Attributes (optional)

<br>Include all instance fields of the object
<br>visibility name : type


<br>Operations / methods (optional)

<br>visibility name (parameters) : return_type
<br>May omit trivial methods (get/set)


<br>Visibility:

<br>+ public
<br># protected
<br>- private
<br>~ package (default)


<br>Underline static instance variables and static methods<br>
<img alt="ClassDiagram" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ClassDiagram.png" referrerpolicy="no-referrer">
<br><br><br>
In java we use constructors to construct new instances.
<br>
<br>Constructors always have the same name as the class name.
<br>A constructoris a special kind of method that is designed to initialize the instance variables for a new object:
<br>
public ClassName(Parameters){ code }
<br>
<br>A constructor must have the same name as the class.
<br>A constructor has no type returned, not even void.
<br>Constructors are often overloaded. <a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>
<br><br>
The new operator is used in combination with constructor to create an object from a particular class.
<br>&gt; ClassName classVar= new ClassName();
<br>
<br>The object variable refers to the newly constructed object.
<br>
In Java, the value of any object variable is a reference <a data-footref="[inline1" href="https://www.allenygy.vip/about:blank#fn-2-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[2]</a> to an object that is stored elsewhere.
<br><br>
<br>Initialize the object variable with a newly constructed object 创建一个新的对象
<br>Set the variable to refer to an existing object 对存在的对象进行引用
<br>Person person1 = new Person();
Person person2 = person1;
Person person3 = null;       //refers to no object
<br><img alt="MemoryAnalysis" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MemoryAnalysis.png" referrerpolicy="no-referrer"><br><br>
<br>Define:<br>
[&lt;modifiers&gt;] type &lt;fields_name&gt; [= defaultValue] 定义在类里，方法外的变量
<br>In order to refer to a particular instance variable, preface it with its object name as follows:
<br>person1.name // "." is the period operator
person2.age
<br>

<br>instance variables store the data of the object.
<br>Each object has its own copy of the variables.
<br>Every object has a state that is determined by the values stored in the instance variables of the object.

<br><img alt="DefaultValue" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DefaultValue.png" referrerpolicy="no-referrer"><br><br>
A variable declared within a method definition is called a local variable. 定义在方法里的变量
<br>
<br>If two methods each have a local variable of the same name, they are still two entirely different variables.
<br>A local variable is only valid for calculation insideits method definition.
<br>Local variables aredestroyed automatically when the method call ends
<br><br>
<br>Define:<br>
[&lt;modifiers&gt;] &lt;return_type&gt;&lt;name&gt;([parameter_list]) {}
<br><br>
It(this) works as a reference to the current Object, whose method or constructor is being invoked.
<br><br>
<br>this must be used if a parameter or a local variable with the same name is used in a method.
<br><br>
<br>this keyword can be used inside the constructor to call another overloaded constructor in the same class.
<br>By this way, we can call the constructor explicitly.
<br>Note: thiskeyword can only be the first statement in Constructor
<br>public class Person{
    private intage;
    private String name;
    public Person(){
        this("Bob",0);
        System.out.println("Inside Constructor without parameter");
    }
    public Person(String name, intage){
        this.name = name;
        this.age= age;
        System.out.println("Inside Constructor with two parameters");
    }
}
<br><br>public class Person {
    private intage;
    private String name;
    public Person(String name, intage) 
    {
        this.name = name;
        this.age= age;
    }
    public void method1(Person pp) 
    {
        System.out.println("Inside Method1");
        System.out.println("Age:"+pp.age);
    }
    public void method2() 
    {
        this.method1(this);
        System.out.println("Inside Method2");
    }
    public static void main(String[] args) {
        // TODO Auto-generated method stub
        Person p = new Person("Bob",23);
        p.method2();
    }
}
<br><img alt="MemoryAnalysis2" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/MemoryAnalysis.png" referrerpolicy="no-referrer"><br><br>
<br>Java Method Overloading

<br>Overloading occurs if several methods have the same name but different parameters.
<br>Overloaded methods:
<br>appear in the same class;
<br>have the same name; but
<br>have different parameter lists; and
<br>can have different return types


<br><br><img alt="AccessModifiers" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/AccessModifiers.png" referrerpolicy="no-referrer"><br>
<br>Only public and default can be used in the class declaration 只有public和default可以用于类名的申明
<br>A public class can be accessed from any place.
<br>A no modifier class can only be accessed from within the same package.
<br>protected instance variables or methods can be accessed by:

<br>the code of the class itself;
<br>subclasses;
<br>other code in the same package.


<br>private instance variables or methods can be accessed by:

<br>the code of the class itself;


<br>
<br>
<br>(there is more than one constructor in the same class)<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>(basically an address of a memory location)<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/programming/java/lecture/creating-java-classes.html</link><guid isPermaLink="false">Programming/Java/Lecture/Creating Java Classes.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:15:23 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ClassDiagram.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/ClassDiagram.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Array and Generics]]></title><description><![CDATA[ 
 <br><br><br>
<br>An array is a container object that holds a fixed number of values of a single type. The length of an array is established when the array is created. After creation, its length is fixed.
<br>
array 一经创建长度不可变
<br>
<br>Arrays of primitive types.

<br>Declare an array variable by specifying the array type—which is the element type followed by []—and the array variable name.
<br>Initialize the array variable with an actual array. Use new operator to create the array.
<br>The number of elements in the array is stored in a public instance variable of the array object called length.


<br>Declare an array a of integers: 
    int[] a; int b[];
Create an array object that can hold 100 integers:
    a = new int[100];
Array literal:
    int [] array = {1,2,3,4,5}
Length 
    a.length;
<br>
<br>Arrays of objects.

<br>After creating the array object itself, you must also create each element object of the array one by one using the newoperator (inside a loop).


<br>
创建后需要使用 new 方法 初始化对象
<br>    Student[] a; // Variable.
    a = new Student[3]; // Array object.
    System.out.println("length: " + a.length);
// Creating all the array elements one by one:
    for(int i = 0; i &lt; a.length; i++) {
      a[i] = new Student("Student " + i); //* neeed to new an object
    }
    for(int i = 0; i &lt; a.length; i++) {
// a[i] is of type Student.
      System.out.println("name: " + a[i].getName());
    }
<br><br>for (elementType varName : arrayName){ 
    …statement…
}
<br>
<br>Internally the Java compiler automatically transformssuch a loop into a normal for loop.
<br>varName is then a synonym (another name) for arrayName[i].
<br>ElementType can be a primitive type or a class type, both work the same way.
<br>Possible to modify the element object
<br>for(Student s: a) {
    System.out.println("name: " + s.getName());
}
for(int i = 0; i &lt; a.length; i++) {
    Student s = a[i];
    System.out.println("name: " + s.getName());
}
<br><br>
<br>It is easier to write
<br>It is easier to read
<br>Less opportunities for indexing errors
<br><br>
<br>Does not modify the content of the array object!
<br>
Because varName is only a synonym for arrayName[i], and is not arrayName[i] itself, modifying varName does not modify the array object!<br>
It is not possible to use an enhanced for loop to modify the array object.<br>
It is possible to use an enhanced for loop to modify the element objects!<br>
element object 可以修改， array 本身不可变
<br>
<br>
The array elements are always all accessed one by one in order of increasing index (from 0 to length - 1) and there is no way to change that.

<br>
Do not confuse the array object with its element objects!

<br><br>
<br>By default the type of the elements of an arraylist is Object.

<br>This allows an arraylist to contain any kind of object.
<br>A downcast is then usually required when reading an element from an arraylist.


<br>ArrayList vs Array

<br>Like an array: an arraylist is an object that can contain other objects. You can access elements of the arraylist using an index that starts at 0.
<br>Like a list, you can grow or shrink the size of the arraylist dynamically by adding or removing elements.


<br>Methods must be used to read / write array elements:

<br>the usual array notation does not work.


<br>Arraylists are mostly used to store objects.
<br>Arraylists can also be used with primitive values:

<br>Java then automatically converts the primitive value into an equivalent object: int becomes Integer, double becomes Double, boolean becomes Boolean, etc.
<br>These classes are provided by Java.
<br>This automatic conversion is called boxing.
<br>The object equivalent to the primitive value is then stored in the arraylist.
<br>Later when taking the object out of the arraylist (and doing a downcast), Java can automatically unbox the object back into the original primitive value.


<br>ArrayList a; // Variable.
a = new ArrayList(); // ArrayList object.
// Loop up to 3 because a.size() is 0 initially.
for(int i = 0; i &lt; 3; i++) {
    a.add(new Student("Student " + i)); // Upcast.
}
for(int i = 0; i &lt; a.size(); i++) {
    Student s = (Student)a.get(i); // Downcast.
    System.out.println("name: " + s.getName());
}
<br><br>
<br>Generics are a way to parameterize a class over a type.

<br>A method can take a value as argument.
<br>A generic class can take a type as argument.


<br>We don’t need downcasts anymore when reading elements from an object such as an arraylist.

<br>All type errors can be found at compile time.


<br>Generics are also useful when we have two classes that have exactly the same code but with different types.
<br>Advantages:

<br>There is no need for downcasts anymore, Java knows exactly what kind of value is stored in which box, based on the type of the box itself.
<br>All types can be checked at compile time.
<br>So errors in your code are detected before you ship your software to your customers!
<br>The code runs faster too.
<br>And there is no code duplication.


<br>public class Generics&lt;T&gt;{

    Random random=new Random();
    private T product;
    public ArrayList&lt;T&gt; products=new ArrayList&lt;&gt;();
    public Generics(){

    }
    public void addproduct(T product){
        products.add(product);
    }
    public T getproduct(){
        product=products.get(random.nextInt(products.size()));
        return product;
    }
    public static void main(String[] args) { 
        Generics&lt;String&gt; sGenerics=new Generics&lt;&gt;();
        String [] sProducts={"Iphone","Iwatch","Mac","airpods"};
        for (int i = 0; i &lt; sProducts.length; i++) {
            sGenerics.addproduct(sProducts[i]);            
        }
        System.out.println("You get "+sGenerics.getproduct());    
    }
}
<br>
<br>Generic application

<br>Arraylist is a generic class too
<br>Many of Java’s classes are generic too

<br>lists, queues, trees, hash maps, etc.




]]></description><link>https://www.allenygy.vip/programming/java/lecture/array-and-generics.html</link><guid isPermaLink="false">Programming/Java/Lecture/Array and Generics.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:16:20 GMT</pubDate></item><item><title><![CDATA[Abstract Methods and Classes Interfaces]]></title><description><![CDATA[ 
 <br><br><br>
<br>Some methods should not have code.
<br>So make the methods abstract: do not need to implement the methods at all. The methods have no code, only a ";".
<br>
<br>Non-private abstract methods are inherited by subclasses, just like other methods. -----&gt;非私有抽象类将其被子类继承。
<br>Abstract methods will later be overridden in subclasses using non-abstract methods, just like other methods. -----&gt;抽象化方法将在子类被重写。

<br>Example: the Circle class overrides the abstract area method inherited from the Shape class, to compute the area of a circle using Math.PI.


<br>It is possible to override an inherited abstract method with another abstract method, but it is useless since it just replaces one abstract method with another. -----&gt;可以用新的抽象方法重写，但也意味着子类仍是抽象类。
<br>A class with one or more abstract methods must itself be declared abstract. -----&gt;存在抽象方法的类是抽象类

<br>A class can even be declared as abstract even though ithas no abstract methods. -----&gt;即使没有抽象方法也可被定义成抽象类


<br>Abstract classes cannot be instantiated. -----&gt;抽象方法不可被实例化 ==&gt;不可创建新的类对象
<br>
<br>Note that you can still create object variables of an abstract class, but such a variable must refer to an object of a non abstract subclass.
<br>public class Test {
    public static void main(String[] args) {
    // Cannot instantiate the type shape
    Shape s = new Shape(); // Forbidden
    Circle c = new Circle(); // Okay
    Shape sc = new Circle(); // Okay
    }
}
<br><br>
<br>An interface is a specification of what some classes can do (which public methods they have) without saying how the classes do it (which code the methods have) 一些共用的抽象的方法的集合

<br>In the Java programming language, an interface is not a class but a set of requirements for classes that want to conform to the interface.


<br>All methods listed in an interface are always public. 方法必须是公开的，否则没有意义
<br>An interface is specified using the interface keyword.<br>
public interface xxx {}
<br>
<br>An interface is not a class . Interfaces never have instance fields, and the methods are never implemented in the interface.
<br>
It is not possible to create an object from an interface 因为接口是抽象方法的集合，所以可以类比抽象类，所以无法创建对象<br>
接口不是类
<br>A class specifies that it implements an interface using the implements keyword.<br>
public class xxx implements xxx {}
<br>
<br>The class must then provide code for all the methods listed in that interface (except if the class is abstract, in which case some of the methods listed in the interface can be abstract in the class).
<br>An interface can also contain constants (static final data) but this is more rare.
<br>public interface Movable {
    public double getSpeed();

    public void setSpeed(double newSpeed);

    public static final int MY_CONSTANT = 100;
    //在上面的示例中，MY_CONSTANT是一个常量，它被声明为public static final，这意味着它是一个公共的、静态的和不可变值。
}

public class Car extends Vehicle implements Movable {
    @Override
    public double getSpeed() {  }

    @Override
    public void setSpeed(double newSpeed) {  }
}

public abstract class Car extends Vehicle implements Movable {
    /*
     * Does not implement setSpeed method, leave it to a
     * subclass to implement the missing method
     */
@Override
public double getSpeed() {  }
}

public class SmallCar extends Car {
    @Override
    public void setSpeed(double newSpeed) {
        // Implement the missing method
    }
}

<br><br>
<br>Multiple unrelated classes can implement the same interface. 接口可以实现多重继承

<br>Example: a Car class and a Rabbit class both might have getSpeed and setSpeed methods to implement the Movable interface, even though the two classes are unrelated (their only common ancestor is the Object class).


<br>The same class can implement multiple unrelated interfaces.

<br>Example: a Rabbit class might implement both the Movable interface and the Edible interface.


<br>If a class implements an interface, then any subclass implicitly implements the same interface too, because the subclass inherits from its parent class all the methods necessary to implement the interface.
<br>public interface Movable {
    public double getSpeed();

    public void setSpeed(double newSpeed);
}

public interface Edible {
    public void cook();
}

public class Car extends Vehicle implements Movable {
    @Override
    public double getSpeed() {  }

    @Override
    public void setSpeed(double newSpeed) {  }
}

public class Rabbit extends Animal implements Movable, Edible {
    @Override
    public double getSpeed() {  }

    @Override
    public void setSpeed(double newSpeed) { }

    @Override
    public void cook() { }
}
<br><br>
<br>Just like a class, an interface can also be used as a type.

<br>Example: the Rabbit class implements the Edible interface, therefore a rabbit object can be assigned to a variable of type Edible:


<br>Edible e = new Rabbit(); //类比子类继承父类
e.cook(); // Cooking the rabbit.
<br>
<br>This is the same subtyping polymorphism we have seen when studying class inheritance (a rabbit object can be used as an animal object if the Rabbit class is a subclass of the Animal class) but with interfaces.
<br><br>
<br>Using interfaces, you can write code that processes data without knowing what kind of data it really is.
<br>Example:
<br>public class Test {
    public void stopMovable(Movable m) {
        m.setSpeed(0.0); // m’s speed is now zero.
    }
}
<br>
<br>
The stopMovable method stops a movable object, but it does not know whether the movable object is a car or a rabbit. It only knows that the object is movable (which is really the only thing it needs to know).

<br>
An interface splits your software into two parts:

<br>The classes that implement the interface (provide code for all the methods listed in the interface).
<br>The rest of the code that uses the interface (call the methods listed in the interface).


<br>
The classes that implement the interface do not need to know anything about how the rest of the code uses the interface. 实现时不需考虑如何使用

<br>
The rest of the code that uses the interface does not need to know anything about how the classes implementing the interface work internally. 使用时不需考虑如何实现

<br><br>
<br>The interface creates a contract between the two sides:

<br>The implementation side promises to provide code for all the methods listed in the interface.
<br>The use side promises to use only the methods listed in the interface.


<br><br>
<br>Compare:

<br>Both contain no code for abstract methods.
<br>Both cannot be used to create objects.
<br>Both provide subtyping polymorphism.


<br>Contrast:

<br>The interface splits your code into two parts and works as an API between the two parts. The classes implementing the interface are unrelated to each other (Car and Rabbit), they just happen to be able to do some of the same things.
<br>The abstract class is used for code inheritance (even if all the methods are abstract and no code is actually inherited). The subclasses are closely related to each other (Student and Teacher) since they are special cases of the same parent class (Person).<br>
<img alt="Interfaces vs. Abstract Classes" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/InterfacesvsAbstractClasses.png" referrerpolicy="no-referrer">


]]></description><link>https://www.allenygy.vip/programming/java/lecture/abstract-methods-and-classes-interfaces.html</link><guid isPermaLink="false">Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 25 Dec 2024 13:11:30 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/InterfacesvsAbstractClasses.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/InterfacesvsAbstractClasses.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Web/Javascript/Quick-Start]]></title><description><![CDATA[ 
 <br><br><br>&lt;script&gt; 
&lt;/script&gt;
<br><br>弹窗alert()<br>
打印console.log()<br><br>
<br>Number
<br>
<br>JavaScript中不区分小数和整数
<br>-99 //负数99
<br>NaN &nbsp; //not a number
<br>Infinity &nbsp;//表示无限大
<br>
<br>String
<br>
<br>‘ABC’ 
<br>“ABC”
<br>
<br>Boolean value
<br>
<br>True、false
]]></description><link>https://www.allenygy.vip/programming/javascript/quick-start.html</link><guid isPermaLink="false">Programming/Javascript/quick-start.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[python-exceptions]]></title><description><![CDATA[ 
 <br><br>With thanks to Dr. Eric Zhao from the Finance Mathematics Program, BNU-HKBU United International College<br><br>
<br>
An exception is an event, which occurs during the execution of a program that disrupts the normal flow of the program's instructions. In general, when a Python script encounters a situation that it cannot cope with, it raises an exception.

<br>
An exception is a Python object that represents an error.

<br>
When a Python script raises an exception, it must either handle the exception immediately otherwise it terminates and quits.

<br>Example 1
fileDir = ''
f = open(fileDir, 'r')
f.close()


<br>
Explanation: Since Python cannot find the file under fileDir, it will raise IOError immediately. The program will terminate and Python will quit.

<br>
Python has many built-in Exceptions. You can check <a data-tooltip-position="top" aria-label="https://docs.python.org/3/library/exceptions.html" rel="noopener nofollow" class="external-link" href="https://docs.python.org/3/library/exceptions.html" target="_blank">here</a>.


<br>
<br>
In some cases, you would know that some suspicious code may raise an exception (e.g. irregular user input), you can defend your program by placing the suspicious code in a try block, and handles the potential exceptions explicitly in except block.

<br>
This is very helpful to write strong and reliable code.

<br><br><br>try: # You do your error prone operations here;
	#statement2
	#statement3
except Exception1:
	#If there is Exception1, then execute this block.
except Exception2:
	#If there is Exception2, then execute this block.
else:
	#If there is no exception then execute this block.
<br>Workflow<br>
<br>
It works in the following way:

<br>
First all lines between try and except statements.

<br>
If ExceptionName happens during execution of the statements then except clause statements execute

<br>
If no exception happens then the statements inside except clause does not execute.

<br>
If the Exception is not handled in the except block then it goes out of try block.

<br>Attention<br>
<br>
Here are few important points about the above-mentioned syntax:

<br>
A single try statement can have multiple except statements. This is useful when the try block contains statements that may throw different types of exceptions.

<br>
You can also provide a generic except clause, which handles any exception.

<br>
After the except clause(s), you can include an else clause. The code in the else block executes if the code in the try block does not raise an exception.

<br>
The else block is a good place for code that does not need the try block's protection.

<br>Example-2
fh = open('testfile.txt', 'r')
s = fh.read()
fh.close()
print(s)

try:
	fh = open('testfile.txt', 'r')
	s = fh.read()
	fh.close()
	print(s)
except FileNotFoundError:
	print ("Error: can't find file")
else:
	print ("Read succeeded!")
print ("Haha") # Always printed


Output
Error: can't find file
Haha

<br>The result depends on whether your current directory contains the testfile.txt. If exists, the file will be read and then the else statement will be executed. If not, except FileNotFoundError will be executed.<br>Example 3
def get_number():
#"Returns a float number"
	number = float(input("Enter a float number: "))
	return number
  
i = 0.0
while i != 8.0:
	try:
		i = get_number()
	except ValueError:
		print ("You entered a wrong value.")
	else:
		print ('There is no error. i is:', i)
	print ('haha') # Always printed every time around the loop
print('after loop') # Always printed

Output
Enter a float number: 8.0
There is no error. i is: 8.0
haha
after loop

<br><br>
<br>You can also use the except statement with no exceptions defined as follows
<br>try:
	#You do your operations here;
except:
	#If there has exception, then execute this block.
else:
	#If no exception then execute this block.
<br>
<br>This kind of a try-except statement catches all the exceptions that occur. Using this kind of try-except statement is not considered a good programming practice though, because it catches all exceptions but does not make the programmer identify the root cause of the problem that may occur.
<br>try:
	assert int(input('Input a value: ')) == 3
except ValueError:
	print ('Input type is not appropriate')
except:
	print ('Other errors like assertion error')  
print ('If the error is handled, then you can see this.')
<br>Output<br>Input a value: 3
If the error is handled, then you can see this.
<br><br>
<br>You can use a finally block along with a try block. The finally block is a place to put any code that must execute, whether the try block raised an exception or not. The syntax of the try-finally statement is:
<br>try:
	#You do your operations here;
except &lt;expeciton&gt;:
	#Due to any exception, this may be skipped.
finally:
	#This would always be executed.
<br>Example 4
def testFunc():
	try:
		f = open('test.txt', 'w') # Succeeds
		f.dummyFunction() # Exception here
	except AttributeError:
		print ('Exception appears happening here')
		return # no matter what, "finally" will be executed
	finally:
		print ('I am finally here')
		f.close() # We always close the file, even when doing return  
		
testFunc()

Output
Exception appears happening here
I am finally here

<br><br>
<br>
You can create your own exception by inheriting the Python built-in Exception class.

<br>
When certain condition meets, you can raise the exception object which is defined.

<br>class ShortInputException(Exception): # inherit from the "Exception" class
	'''A user-defined exception class containing two variables.'''
	def __init__(self, length, atleast):
		Exception.__init__(self)
		self.length = length
		self.atleast = atleast
	def shortInputExceptionAction(self):
		print ('shortInputException can do many operations here')
		print ('Your input length %d, but the length should be at least %d'% (self.length, self.atleast))

try:
	s = input('Enter Something: ')
	if len(s) &lt; 3:
	raise ShortInputException(len(s), 3) # create and raise (activate) your own Exception object

except KeyboardInterrupt: # When using the Kernel -&gt; Interrupt menu

print ('Why did you do interrupt me?')

except ShortInputException as x: # x is now the name for the exception object which is handled in this block

x.shortInputExceptionAction()

else:

print ('No exception was raised.')

<br>Enter Something: 3333<br>No exception was raised.<br>
<br>You can create as many exception classes as needed.
<br><br>
class ShortInputException(Exception):

'''A user-defined exception class.'''

def __init__(self, length, atleast):

Exception.__init__(self)

self.length = length

self.atleast = atleast

  

def shortInputExceptionAction(self):

print ('shortInputException can do many operations here')

print ('Your input length %d, but the length should be at least %d'% (self.length, self.atleast))

  

class LongInputException(Exception):

'''A user-defined exception class.'''

def __init__(self, length, atmost):

Exception.__init__(self)

self.length = length

self.atmost = atmost

  

def longInputExceptionAction(self):

print ('longInputExceptionAction can do many operations here')

print ('Your input length %d, but the length should be at most %d'% (self.length, self.atmost))

<br>
try:

s = input('Enter Something: ')

if len(s) &lt; 3:

raise ShortInputException(len(s), 3) # raise your own Exception object

if len(s) &gt; 7:

raise LongInputException(len(s), 7)

except KeyboardInterrupt: # When using the Kernel -&gt; Interrupt menu

print ('Why did you do interrupt me?')

except ShortInputException as x: # x is the "ShortInputException" object

x.shortInputExceptionAction()

except LongInputException as x:

x.longInputExceptionAction()

else:

print ('No exception was raised.')

<br>Enter Something: 33333<br>No exception was raised.<br><br>
<br>
The assert statement will help you check the validity of an expression. If the expression is false, Python raises an AssertionError exception.

<br>
Programmers often place assertions to check whether the input or the result obtained fulfills the expectation.

<br><br>
assert Expression[, ArgumentExpression]

<br>
<br>If the assertion fails, Python uses ArgumentExpression as the argument for the AssertionError. AssertionError exceptions can be caught and handled like any other exception using the try-except statement, but if not handled, they will terminate the program and produce a traceback.
<br><br>
def KelvinToFahrenheit(Temperature):

# assert Temperature &gt;= 0, "So cold, temperature below zero"

return (Temperature - 273) * 1.8 + 32

  

print (KelvinToFahrenheit(273))

print (int(KelvinToFahrenheit(505.78)))

print (KelvinToFahrenheit(-5))

<br>32.0<br>451<br>-468.40000000000003<br>
def KelvinToFahrenheit(Temperature):

try:

assert Temperature &gt;= 0

return (Temperature - 273) * 1.8 + 32

except AssertionError:

print ('So cold, temperature below zero')

<br>
KelvinToFahrenheit(-10)

<br>So cold, temperature below zero<br>Task 1: Complete the function divide which takes two strings, m and n as the arguments. The function should return m/n as the result.<br>Note that<br>
<br>
if m or n are not numbers, the function should return 'Error: Not numbers';

<br>
if n is zero, the function should return 'Error: Zero divisor'.

<br>You program should not crash in any of the cases above.<br>Note: You are NOT allowed to use any if-branches!<br>
def divide(m, n):

try:

# Attempt to convert strings to floats

m = float(m)

n = float(n)

result = m / n # This can raise a ZeroDivisionError

return result

except ZeroDivisionError: # Handle division by zero

return 'Error: Zero divisor'

except ValueError: # Handle non-numeric values

return 'Error: Not numbers'

<br>
assert divide('2', 'haha') == 'Error: Not numbers'

assert divide('haha', '0') == 'Error: Not numbers'

assert divide('2','0') == 'Error: Zero divisor'

assert divide(10, 2) == 5.0

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>Task 2: Complete the function robustLog which takes two strings, b and x as the arguments. The function should first convert b and x to real numbers and then return .<br>Note that<br>
<br>
if b or x are not real numbers, the function should return 'Error: Not real';

<br>
if b or x are not positive, the function should return 'Error: Non-positive values';

<br>
if b equals to 1, the function should return 'Error: Zero divisor'.

<br>You program should not crash in any of the cases above.<br>Hint: To compute the logarithm, You can import math and use math.log().<br>Note: You are NOT allowed to use any if-branches!<br>
  

import math

def robustLog(b, x):

try:

b = float(b)

x = float(x)

# Check for errors using assertions which will raise an AssertionError if conditions fail

assert b &gt; 0 and x &gt; 0, 'Error: Non-positive values'

assert b != 1, 'Error: Zero divisor'

return math.log(x, b)

except ValueError: # Handle conversion errors

return 'Error: Not real'

except AssertionError as error: # Handle assertions

return str(error)

  
  

<br>
assert robustLog('haha','10') == 'Error: Not real'

assert robustLog('1','haha') == 'Error: Not real'

assert robustLog('2','0') == 'Error: Non-positive values'

assert robustLog('-1','3') == 'Error: Non-positive values'

assert robustLog('1','-3') == 'Error: Non-positive values'

assert robustLog('1','3') == 'Error: Zero divisor'

assert robustLog('2','8') == 3

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

]]></description><link>https://www.allenygy.vip/programming/python/python-exceptions.html</link><guid isPermaLink="false">Programming/Python/python-exceptions.md</guid><dc:creator><![CDATA[Dr. Eric Zhao]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[python-environment-management]]></title><description><![CDATA[ 
 <br><br><br>where python3
where python
<br><br>import site
print(site.getsitepackages())
<br>import snownlp
print(snownlp.__file__)
]]></description><link>https://www.allenygy.vip/programming/python/python-environment-management.html</link><guid isPermaLink="false">Programming/Python/python-environment-management.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Regular Expression]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/python/regular-expression.html</link><guid isPermaLink="false">Programming/Python/Regular Expression.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Python Exceptions]]></title><description><![CDATA[ 
 <br><br>With thanks to Dr. Eric Zhao from the Finance Mathematics Program, BNU-HKBU United International College<br><br>
<br>
An exception is an event, which occurs during the execution of a program that disrupts the normal flow of the program's instructions. In general, when a Python script encounters a situation that it cannot cope with, it raises an exception.

<br>
An exception is a Python object that represents an error.

<br>
When a Python script raises an exception, it must either handle the exception immediately otherwise it terminates and quits.

<br>Example 1
fileDir = ''
f = open(fileDir, 'r')
f.close()


<br>
Explanation: Since Python cannot find the file under fileDir, it will raise IOError immediately. The program will terminate and Python will quit.

<br>
Python has many built-in Exceptions. You can check <a data-tooltip-position="top" aria-label="https://docs.python.org/3/library/exceptions.html" rel="noopener nofollow" class="external-link" href="https://docs.python.org/3/library/exceptions.html" target="_blank">here</a>.


<br>
<br>
In some cases, you would know that some suspicious code may raise an exception (e.g. irregular user input), you can defend your program by placing the suspicious code in a try block, and handles the potential exceptions explicitly in except block.

<br>
This is very helpful to write strong and reliable code.

<br><br><br>try: # You do your error prone operations here;
	#statement2
	#statement3
except Exception1:
	#If there is Exception1, then execute this block.
except Exception2:
	#If there is Exception2, then execute this block.
else:
	#If there is no exception then execute this block.
<br>Workflow<br>
<br>
It works in the following way:

<br>
First all lines between try and except statements.

<br>
If ExceptionName happens during execution of the statements then except clause statements execute

<br>
If no exception happens then the statements inside except clause does not execute.

<br>
If the Exception is not handled in the except block then it goes out of try block.

<br>Attention<br>
<br>
Here are few important points about the above-mentioned syntax:

<br>
A single try statement can have multiple except statements. This is useful when the try block contains statements that may throw different types of exceptions.

<br>
You can also provide a generic except clause, which handles any exception.

<br>
After the except clause(s), you can include an else clause. The code in the else block executes if the code in the try block does not raise an exception.

<br>
The else block is a good place for code that does not need the try block's protection.

<br>Example-2
fh = open('testfile.txt', 'r')
s = fh.read()
fh.close()
print(s)

try:
	fh = open('testfile.txt', 'r')
	s = fh.read()
	fh.close()
	print(s)
except FileNotFoundError:
	print ("Error: can't find file")
else:
	print ("Read succeeded!")
print ("Haha") # Always printed


Output
Error: can't find file
Haha

<br>The result depends on whether your current directory contains the testfile.txt. If exists, the file will be read and then the else statement will be executed. If not, except FileNotFoundError will be executed.<br>Example 3
def get_number():
#"Returns a float number"
	number = float(input("Enter a float number: "))
	return number
  
i = 0.0
while i != 8.0:
	try:
		i = get_number()
	except ValueError:
		print ("You entered a wrong value.")
	else:
		print ('There is no error. i is:', i)
	print ('haha') # Always printed every time around the loop
print('after loop') # Always printed

Output
Enter a float number: 8.0
There is no error. i is: 8.0
haha
after loop

<br><br>
<br>You can also use the except statement with no exceptions defined as follows
<br>try:
	#You do your operations here;
except:
	#If there has exception, then execute this block.
else:
	#If no exception then execute this block.
<br>
<br>This kind of a try-except statement catches all the exceptions that occur. Using this kind of try-except statement is not considered a good programming practice though, because it catches all exceptions but does not make the programmer identify the root cause of the problem that may occur.
<br>try:
	assert int(input('Input a value: ')) == 3
except ValueError:
	print ('Input type is not appropriate')
except:
	print ('Other errors like assertion error')  
print ('If the error is handled, then you can see this.')
<br>Output<br>Input a value: 3
If the error is handled, then you can see this.
<br><br>
<br>You can use a finally block along with a try block. The finally block is a place to put any code that must execute, whether the try block raised an exception or not. The syntax of the try-finally statement is:
<br>try:
	#You do your operations here;
except &lt;expeciton&gt;:
	#Due to any exception, this may be skipped.
finally:
	#This would always be executed.
<br>Example 4
def testFunc():
	try:
		f = open('test.txt', 'w') # Succeeds
		f.dummyFunction() # Exception here
	except AttributeError:
		print ('Exception appears happening here')
		return # no matter what, "finally" will be executed
	finally:
		print ('I am finally here')
		f.close() # We always close the file, even when doing return  
		
testFunc()

Output
Exception appears happening here
I am finally here

<br><br>
<br>
You can create your own exception by inheriting the Python built-in Exception class.

<br>
When certain condition meets, you can raise the exception object which is defined.

<br>class ShortInputException(Exception): # inherit from the "Exception" class
	'''A user-defined exception class containing two variables.'''
	def __init__(self, length, atleast):
		Exception.__init__(self)
		self.length = length
		self.atleast = atleast
	def shortInputExceptionAction(self):
		print ('shortInputException can do many operations here')
		print ('Your input length %d, but the length should be at least %d'% (self.length, self.atleast))

try:
	s = input('Enter Something: ')
	if len(s) &lt; 3:
	raise ShortInputException(len(s), 3) # create and raise (activate) your own Exception object

except KeyboardInterrupt: # When using the Kernel -&gt; Interrupt menu

print ('Why did you do interrupt me?')

except ShortInputException as x: # x is now the name for the exception object which is handled in this block

x.shortInputExceptionAction()

else:

print ('No exception was raised.')

<br>Enter Something: 3333<br>No exception was raised.<br>
<br>You can create as many exception classes as needed.
<br><br>
class ShortInputException(Exception):

'''A user-defined exception class.'''

def __init__(self, length, atleast):

Exception.__init__(self)

self.length = length

self.atleast = atleast

  

def shortInputExceptionAction(self):

print ('shortInputException can do many operations here')

print ('Your input length %d, but the length should be at least %d'% (self.length, self.atleast))

  

class LongInputException(Exception):

'''A user-defined exception class.'''

def __init__(self, length, atmost):

Exception.__init__(self)

self.length = length

self.atmost = atmost

  

def longInputExceptionAction(self):

print ('longInputExceptionAction can do many operations here')

print ('Your input length %d, but the length should be at most %d'% (self.length, self.atmost))

<br>
try:

s = input('Enter Something: ')

if len(s) &lt; 3:

raise ShortInputException(len(s), 3) # raise your own Exception object

if len(s) &gt; 7:

raise LongInputException(len(s), 7)

except KeyboardInterrupt: # When using the Kernel -&gt; Interrupt menu

print ('Why did you do interrupt me?')

except ShortInputException as x: # x is the "ShortInputException" object

x.shortInputExceptionAction()

except LongInputException as x:

x.longInputExceptionAction()

else:

print ('No exception was raised.')

<br>Enter Something: 33333<br>No exception was raised.<br><br>
<br>
The assert statement will help you check the validity of an expression. If the expression is false, Python raises an AssertionError exception.

<br>
Programmers often place assertions to check whether the input or the result obtained fulfills the expectation.

<br><br>
assert Expression[, ArgumentExpression]

<br>
<br>If the assertion fails, Python uses ArgumentExpression as the argument for the AssertionError. AssertionError exceptions can be caught and handled like any other exception using the try-except statement, but if not handled, they will terminate the program and produce a traceback.
<br><br>
def KelvinToFahrenheit(Temperature):

# assert Temperature &gt;= 0, "So cold, temperature below zero"

return (Temperature - 273) * 1.8 + 32

  

print (KelvinToFahrenheit(273))

print (int(KelvinToFahrenheit(505.78)))

print (KelvinToFahrenheit(-5))

<br>32.0<br>451<br>-468.40000000000003<br>
def KelvinToFahrenheit(Temperature):

try:

assert Temperature &gt;= 0

return (Temperature - 273) * 1.8 + 32

except AssertionError:

print ('So cold, temperature below zero')

<br>
KelvinToFahrenheit(-10)

<br>So cold, temperature below zero<br>Task 1: Complete the function divide which takes two strings, m and n as the arguments. The function should return m/n as the result.<br>Note that<br>
<br>
if m or n are not numbers, the function should return 'Error: Not numbers';

<br>
if n is zero, the function should return 'Error: Zero divisor'.

<br>You program should not crash in any of the cases above.<br>Note: You are NOT allowed to use any if-branches!<br>
def divide(m, n):

try:

# Attempt to convert strings to floats

m = float(m)

n = float(n)

result = m / n # This can raise a ZeroDivisionError

return result

except ZeroDivisionError: # Handle division by zero

return 'Error: Zero divisor'

except ValueError: # Handle non-numeric values

return 'Error: Not numbers'

<br>
assert divide('2', 'haha') == 'Error: Not numbers'

assert divide('haha', '0') == 'Error: Not numbers'

assert divide('2','0') == 'Error: Zero divisor'

assert divide(10, 2) == 5.0

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>Task 2: Complete the function robustLog which takes two strings, b and x as the arguments. The function should first convert b and x to real numbers and then return .<br>Note that<br>
<br>
if b or x are not real numbers, the function should return 'Error: Not real';

<br>
if b or x are not positive, the function should return 'Error: Non-positive values';

<br>
if b equals to 1, the function should return 'Error: Zero divisor'.

<br>You program should not crash in any of the cases above.<br>Hint: To compute the logarithm, You can import math and use math.log().<br>Note: You are NOT allowed to use any if-branches!<br>
  

import math

def robustLog(b, x):

try:

b = float(b)

x = float(x)

# Check for errors using assertions which will raise an AssertionError if conditions fail

assert b &gt; 0 and x &gt; 0, 'Error: Non-positive values'

assert b != 1, 'Error: Zero divisor'

return math.log(x, b)

except ValueError: # Handle conversion errors

return 'Error: Not real'

except AssertionError as error: # Handle assertions

return str(error)

  
  

<br>
assert robustLog('haha','10') == 'Error: Not real'

assert robustLog('1','haha') == 'Error: Not real'

assert robustLog('2','0') == 'Error: Non-positive values'

assert robustLog('-1','3') == 'Error: Non-positive values'

assert robustLog('1','-3') == 'Error: Non-positive values'

assert robustLog('1','3') == 'Error: Zero divisor'

assert robustLog('2','8') == 3

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

<br>
# This cell contains hidden tests, do NOT delete!

]]></description><link>https://www.allenygy.vip/programming/python/python-exceptions.html</link><guid isPermaLink="false">Programming/Python/Python Exceptions.md</guid><dc:creator><![CDATA[Dr. Eric Zhao]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Python Environment Management]]></title><description><![CDATA[ 
 <br><br><br>where python3
where python
<br><br>import site
print(site.getsitepackages())
<br>import snownlp
print(snownlp.__file__)
]]></description><link>https://www.allenygy.vip/programming/python/python-environment-management.html</link><guid isPermaLink="false">Programming/Python/Python Environment Management.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Python Basic]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>The naming of identifiers is exactly the same as in C.
<br>In Python, you don't have to declare a variable before using it.
<br>In Python, a variable is more like a reference and one variable can refer to any data type.
<br>The following assignments of variables are all valid.<br>a = 1.2
a = "Daisy"

a, b = "Hello", "World"
# a is "Hello" and b is "World"

a = b = [1,2,3]
# a and b are both [1,2,3]
<br><br>
<br>You can enclose strings using single ('), double (") or triple (''') quotes.
<br>There is no difference between single and double quotes.

<br>Python 中单引号 ' 和双引号 " 使用完全相同。


<br>Triple quotes can denote a string across multiple lines.

<br>使用三引号(''' 或 """)可以指定一个多行字符串。


<br><br>Python has a smaller set of keywords than C does.<br>
All the python keywords, as shown below, contain only lowercase letters.<br>and, exec, not, as, finally, or, assert,
for, pass, break, from, print, class, global,
raise, continue, if, return, def, import, try,
del, in, while, elif, is, with, else,
lambda, yield, except
<br><br>In Python, end of a statement is marked by a newline character (no semicolon!). But we can write a single statement over multiple lines with the line continuation character (\). For example:<br># use "\" to divide one statement over multiple lines
a = 1 + 2 + 3 + \
    4 + 5 + 6 + \
    7 + 8 + 9
<br>Further, line continuation is implied inside parentheses (()), brackets ([]) and braces ({}). In the following example, the line continuation character can be omitted.<br>print("Hello",
      "World")
gender = ["female",
         "male"]
<br>If you want to put multiple statements in a single line, seperate them using semicolons (;).<br>a = 1; b = 2; c = 3
<br>Python does not use braces ({}) to indicate blocks of code. Code blocks are denoted by line indentation and this is rigidly enforced. Wrong indentation will cause error!<br>A code block starts with indentation and ends with the first unindented line.<br>
Generally four whitespaces are used for indentation. In a Jupyter notebook, you may press "tab" to input four whitespaces.<br><br>Till now, we have used the print() function for output for plenty of times. For input, we have the input() function, and its syntax is:<br>input([prompt])
<br>prompt is a string which can be printed on the screen. This parameter is optional. Below is an example.<br>name = input("What is your name? ")
print(name, "is a good name :)")
<br>
<br>
<br>语法<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>标志符和变量<a href="https://www.allenygy.vip/about:blank#fnref-2-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>引用<a href="https://www.allenygy.vip/about:blank#fnref-3-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>保留字<a href="https://www.allenygy.vip/about:blank#fnref-4-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
<br>缩进<a href="https://www.allenygy.vip/about:blank#fnref-5-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/programming/python/python-basic.html</link><guid isPermaLink="false">Programming/Python/Python Basic.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[pandas]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/python/pandas.html</link><guid isPermaLink="false">Programming/Python/Pandas.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[numpy]]></title><description><![CDATA[ 
 <br><br><br>
<br>Using List Create numpy array
<br># integer array:
np.array([1, 4, 2, 5, 3])
<br>Output:<br>array([1, 4, 2, 5, 3])
<br>
<br>NumPy is constrained to arrays that all contain the same type.
<br>
<br>If types do not match, NumPy will upcast if possible (here, integers are up-cast to floating point):
<br>np.array([3.14, 4, 2, 3])
<br>Output:<br>array([3.14, 4.  , 2.  , 3.  ])
<br>
<br>Explicitly set the data type of the resulting array, use the dtype keyword:
<br>np.array([1, 2, 3, 4], dtype='float32')
<br>Output:<br>array([1., 2., 3., 4.], dtype=float32)
<br>
<br>NumPy arrays can explicitly be multi-dimensional
<br># nested lists result in multi-dimensional arrays
a = np.array([range(i, i + 3) for i in [2, 4, 6]])
a
<br>Output<br>array([[2, 3, 4], [4, 5, 6], [6, 7, 8]])
<br><br>Especially for larger arrays, it is more efficient to create arrays from scratch using routines built into NumPy.<br><br>np.zeros(&lt;createshape&gt;, dtype=&lt;datatype&gt;)
np.ones(&lt;createshape&gt;, dtype=&lt;datatype&gt;)
np.full(&lt;createshape&gt;,&lt;fill number&gt;)
<br>Example: Create a length-10 integer array filled with zeros
np.zeros(10, dtype=int)

Output
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])

<br>Example: Create a 3x5 floating-point array filled with ones
np.ones((3, 5), dtype=float)

Output
array([[1., 1., 1., 1., 1.], [1., 1., 1., 1., 1.], [1., 1., 1., 1., 1.]])

<br>Example: Create a 3x5 array filled with 3.14
np.full((3, 5), 3.14)

array([[3.14, 3.14, 3.14, 3.14, 3.14],
       [3.14, 3.14, 3.14, 3.14, 3.14],
       [3.14, 3.14, 3.14, 3.14, 3.14]])
  

<br><br>np.arange(start, end, step) #Starting at start, ending at end, stepping by step
np.linspace(start, end, step) #Starting at start, ending at end, Divide by step
np.random.random(&lt;shape&gt;) #Uniformly distributed
np.random.normal(a, b, &lt;shape&gt;) #Construct range from a to b normally distributed matrix 
np.random.randint(a, b, &lt;shape&gt;) #random integers in the interval [0, 10)
np.eye(n) # Construct identity matrix 
<br>Example: Create an array filled with a linear sequence
# Starting at 0, ending at 20, stepping by 2
# (this is similar to the built-in range() function)
np.arange(0, 20, 2)

array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])

<br>Example: Create an array of five values evenly spaced between 0 and 1
# Create an array of five values evenly spaced between 0 and 1
np.linspace(0, 1, 5)

	array([0.  , 0.25, 0.5 , 0.75, 1.  ])

<br>Example: Create a 3x3 array of uniformly distributed
# random values between 0 and 1
np.random.random((3, 3))

array([[0.37598881, 0.21179029, 0.70865879],
       [0.95135829, 0.7208924 , 0.90282807],
       [0.94199024, 0.31798853, 0.96914883]])

<br>Example: Create a 3x3 array of normally distributed random values
# with mean 0 and standard deviation 1
np.random.normal(0, 1, (3, 3))

array([[-0.60396295, -1.2562087 , -0.70299877],
       [ 1.19554453,  0.16795621, -1.08435634],
       [-1.53097616, -0.88395816, -0.16151936]])

<br>Example: Create a 3x3 array of random integers in the interval [0, 10)
np.random.randint(0, 10, (3, 3))

array([[6, 1, 5],
       [5, 8, 9],
       [9, 6, 4]])

<br>Example: Create a 3x3 identity matrix
np.eye(3)

array([[1., 0., 0.],
       [0., 1., 0.],
       [0., 0., 1.]])

<br>Create an uninitialized array of three integers
# The values will be whatever happens to already exist at that memory location
np.empty(3)

array([1., 1., 1.])

<br><br>
<br>NumPy arrays contain values of a single type, so it is important to have detailed knowledge of those types and their limitations.
<br>Because NumPy is built in C, the types will be familiar to users of C language.
<br>Note that when constructing an array, they can be specified using a string:<br>np.zeros(10, dtype='int16')
<br>Or using the associated NumPy object:<br>np.zeros(10, dtype=np.int16)
<br>The standard NumPy data types are listed in the following table.

<br><br>This section will present several examples of using NumPy array manipulation to access data and subarrays, and to split, reshape, and join the arrays.<br>Get to know them well!<br>We'll cover a few categories of basic array manipulations here:<br>
<br>Attributes of arrays: Determining the size, shape, memory consumption, and data types of arrays
<br>Indexing of arrays: Getting and setting the value of individual array elements
<br>Slicing of arrays: Getting and setting smaller subarrays within a larger array
<br>Reshaping of arrays: Changing the shape of a given array
<br>Joining and splitting of arrays: Combining multiple arrays into one, and splitting one array into many
<br><br>First let's discuss some useful array attributes.<br>
We'll start by defining three random arrays, a one-dimensional, two-dimensional, and three-dimensional array.<br>
We'll use NumPy's random number generator, which we will seed with a set value in order to ensure that the same random arrays are generated each time this code is run:<br>import numpy as np
np.random.seed(0)  # seed for reproducibility

x1 = np.random.randint(10, size=6)  # One-dimensional array
x2 = np.random.randint(10, size=(3, 4))  # Two-dimensional array
x3 = np.random.randint(10, size=(3, 4, 5))  # Three-dimensional array
<br>Each array has attributes ndim (the number of dimensions), shape (the size of each dimension), and size (the total size of the array):<br>print("x3 ndim: ", x3.ndim)
print("x3 shape:", x3.shape)
print("x3 size: ", x3.size)
<br>x3 ndim:  3
x3 shape: (3, 4, 5)
x3 size:  60
<br>Another useful attribute is the dtype, the data type of the array:<br>print("dtype:", x3.dtype)
<br>dtype: int64
<br>Other attributes include itemsize, which lists the size (in bytes) of each array element, and nbytes, which lists the total size (in bytes) of the array:<br>print("itemsize:", x3.itemsize, "bytes")
print("nbytes:", x3.nbytes, "bytes")
<br>itemsize: 8 bytes
nbytes: 480 bytes
<br>In general, we expect that nbytes is equal to itemsize times size.<br><br>If you are familiar with Python's standard list indexing, indexing in NumPy will feel quite familiar.<br>
In a one-dimensional array, the  value (counting from zero) can be accessed by specifying the desired index in square brackets, just as with Python lists:<br>x1
<br>array([5, 0, 3, 3, 7, 9])
<br>x1[0]
<br>5
<br>To index from the end of the array, you can use negative indices:<br>x1[-1]
<br>9
<br>In a multi-dimensional array, items can be accessed using a comma-separated tuple of indices:<br>x2
<br>array([[3, 5, 2, 4],
       [7, 6, 8, 8],
       [1, 6, 7, 7]])
<br>x2[2, 0]
<br>1
<br>x2[2, -1]
<br>7
<br>Q4: What is x2[-1, -2]?<br>Values can also be modified using any of the above index notation:<br>x2[0, 0] = 12
x2
<br>array([[12,  5,  2,  4],
       [ 7,  6,  8,  8],
       [ 1,  6,  7,  7]])
<br>Keep in mind that, unlike Python lists, NumPy arrays have a fixed type.<br>
This means, for example, that if you attempt to insert a floating-point value to an integer array, the value will be silently truncated. Don't be caught unaware by this behavior!<br>x1[0] = 3.14159  # this will be truncated!
x1
<br>array([3, 0, 3, 3, 7, 9])
<br><br>Just as we can use square brackets to access individual array elements, we can also use them to access subarrays with the slice notation, marked by the colon (:) character.<br>
The NumPy slicing syntax follows that of the standard Python list; to access a slice of an array x, use this:<br>x[start:stop:step]
<br>If any of these are unspecified, they default to the values start=0, stop=size of dimension, step=1.<br>
We'll take a look at accessing sub-arrays in one dimension and in multiple dimensions.<br><br>x = np.arange(10)
x
<br>array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
<br>x[:5]  # first five elements
<br>array([0, 1, 2, 3, 4])
<br>x[5:]  # elements after index 5
<br>array([5, 6, 7, 8, 9])
<br>x[4:7]  # middle sub-array
<br>array([4, 5, 6])
<br>x[::2]  # every other element
<br>array([0, 2, 4, 6, 8])
<br>x[1::2]  # every other element, starting at index 1
<br>A potentially confusing case is when the step value is negative.<br>
In this case, the array is reversed. start is the starting index of the reversed list, while stop is the stopping index<br>
This becomes a convenient way to reverse an array:<br>x[::-1]  # all elements, reversed
<br>x[5::-1]  # reversed list starting from index 5
<br>Q5: What is x-2-2?<br><br>Multi-dimensional slices work in the same way, with multiple slices separated by commas.<br>
For example:<br>x2
<br>x2[:2, :3]  # first two rows, first three columns
<br>Q5: What is x2[:4, :5]?<br>x2[:3, ::2]  # all rows, every other column
<br>Finally, subarray dimensions can even be reversed together:<br>x2[::-1, ::-1] # reverse rows and columns together
<br><br>One commonly needed routine is accessing of single rows or columns of an array.<br>
This can be done by combining indexing and slicing, using an empty slice marked by a single colon (:):<br>print(x2[:, 0])  # first column of x2
<br>x2[:,0].shape
<br>print(x2[0, :])  # first row of x2
<br>In the case of row access, the empty slice can be omitted for a more compact syntax:<br>print(x2[0])  # equivalent to x2[0, :]
<br><br>One important–and extremely useful–thing to know about array slices is that they return views rather than copies of the array data.<br>
This is one area in which NumPy array slicing differs from Python list slicing: in lists, slices will be copies.<br>
Consider our two-dimensional array from before:<br>print(x2)
<br>Let's extract a  subarray from this:<br>x2_sub = x2[:2, :2]
print(x2_sub)
<br>Now if we modify this subarray, we'll see that the original array is changed! Observe:<br>x2_sub[0, 0] = 99
print(x2_sub)
<br>print(x2)
<br>This default behavior is actually quite useful: it means that when we work with large datasets, we can access and process pieces of these datasets without the need to copy the underlying data buffer.<br><br>Despite the nice features of array views, it is sometimes useful to instead explicitly copy the data within an array or a subarray. This can be most easily done with the copy() method:<br>x2_sub_copy = x2[:2, :2].copy()
print(x2_sub_copy)
<br>If we now modify this subarray, the original array is not touched:<br>x2_sub_copy[0, 0] = 42
print(x2_sub_copy)
<br>print(x2)
<br><br>Another useful type of operation is reshaping of arrays.<br>
The most flexible way of doing this is with the reshape method.<br>
For example, if you want to put the numbers 1 through 9 in a  grid, you can do the following:<br>grid = np.arange(1, 10).reshape((3, 3))
print(grid)
<br>Note that for this to work, the size of the initial array must match the size of the reshaped array.<br>
Where possible, the reshape method will use a no-copy view of the initial array, but with non-contiguous memory buffers this is not always the case.<br>Another common reshaping pattern is the conversion of a one-dimensional array into a two-dimensional row or column matrix.<br>
This can be done with the reshape method, or more easily done by making use of the newaxis keyword within a slice operation:<br>x = np.array([1, 2, 3])
x
<br># row vector via newaxis
x[np.newaxis, :]
<br># column vector via reshape
x.reshape((3, 1))
<br>Q6: What has been changed after the reshape method?<br># column vector via newaxis
x = np.array([1, 2, 3])
x[:, np.newaxis]
<br><br>All of the preceding routines worked on single arrays. It's also possible to combine multiple arrays into one, and to conversely split a single array into multiple arrays. We'll take a look at those operations here.<br><br>Concatenation, or joining of two arrays in NumPy, is primarily accomplished using the routines np.concatenate, np.vstack, and np.hstack.<br>
np.concatenate takes a tuple or list of arrays as its first argument, as we can see here:<br>x = np.array([1, 2, 3])
y = np.array([3, 2, 1])
np.concatenate([x, y])
<br>You can also concatenate more than two arrays at once:<br>z = [99, 99, 99]
print(np.concatenate([x, y, z]))
<br>It can also be used for two-dimensional arrays:<br>grid = np.array([[1, 2, 3],
                 [4, 5, 6]])
<br># concatenate along the first axis
np.concatenate([grid, grid])
<br># concatenate along the second axis (zero-indexed)
np.concatenate([grid, grid], axis=1)
<br>For working with arrays of mixed dimensions, it can be clearer to use the np.vstack (vertical stack) and np.hstack (horizontal stack) functions:<br>x = np.array([1, 2, 3])
grid = np.array([[9, 8, 7],
                 [6, 5, 4]])

# vertically stack the arrays
np.vstack([x, grid])
<br>Q7：What may happen if we use hstack function in the previous cell?<br># horizontally stack the arrays
y = np.array([[99],
              [99]])
np.hstack([grid, y])
<br>Similary, np.dstack will stack arrays along the third axis.<br><br>The opposite of concatenation is splitting, which is implemented by the functions np.split, np.hsplit, and np.vsplit.  For each of these, we can pass a list of indices giving the split points:<br>x = [1, 2, 3, 99, 99, 3, 2, 1]
x1, x2, x3 = np.split(x, [3, 5]) # split at third position and fifth position.
print(x1, x2, x3)
<br>Notice that N split-points, leads to N + 1 subarrays.<br>
The related functions np.hsplit and np.vsplit are similar:<br>grid = np.arange(16).reshape((4, 4))
grid
<br>upper, lower = np.vsplit(grid, [2])
print(upper)
print(lower)
<br>left, right = np.hsplit(grid, [2])
print(left)
print(right)
<br>Similarly, np.dsplit will split arrays along the third axis.<br><br>Computation on NumPy arrays can be very fast, or it can be very slow.<br>
The key to making it fast is to use vectorized operations, generally implemented through NumPy's universal functions (ufuncs).<br>
This section motivates the need for NumPy's ufuncs, which can be used to make repeated calculations on array elements much more efficient.<br>
It then introduces many of the most common and useful arithmetic ufuncs available in the NumPy package.<br><br>The relative slowness of Python generally manifests itself in situations where many small operations are being repeated – for instance looping over arrays to operate on each element.<br>
For example, imagine we have an array of values and we'd like to compute the reciprocal (倒数) of each.<br>
A straightforward approach might look like this:<br>import numpy as np
np.random.seed(0)

def compute_reciprocals(values):
    output = np.empty(len(values))
    for i in range(len(values)):
        output[i] = 1.0 / values[i]
    return output
        
values = np.random.randint(1, 10, size=5)
compute_reciprocals(values)
<br>This implementation probably feels fairly natural to someone from, say, a C or Java background.<br>
But if we measure the execution time of this code for a large input, we see that this operation is very slow, perhaps surprisingly so!<br>
We'll benchmark this with IPython's %timeit :<br>big_array = np.random.randint(1, 100, size=1000000)
%timeit compute_reciprocals(big_array)
<br>It takes several seconds to compute these million operations and to store the result!<br>
When even cell phones have processing speeds measured in Giga-FLOPS (i.e., billions of numerical operations per second), this seems almost absurdly slow.<br>
It turns out that the bottleneck here is not the operations themselves, but the type-checking and function dispatches that CPython must do at each cycle of the loop.<br>
Each time the reciprocal is computed, Python first examines the object's type and does a dynamic lookup of the correct function to use for that type.<br>
If we were working in compiled code instead, this type specification would be known before the code executes and the result could be computed much more efficiently.<br><br>For many types of operations, NumPy provides a convenient interface into just this kind of statically typed, compiled routine. This is known as a vectorized operation.<br>
This can be accomplished by simply performing an operation on the array, which will then be applied to each element.<br>
This vectorized approach is designed to push the loop into the compiled layer that underlies NumPy, leading to much faster execution.<br>Compare the results of the following two:<br>print(compute_reciprocals(values))
print(1.0 / values)
<br>Looking at the execution time for our big array, we see that it completes orders of magnitude faster than the Python loop:<br>%timeit (1.0 / big_array)
<br>Vectorized operations in NumPy are implemented via ufuncs, whose main purpose is to quickly execute repeated operations on values in NumPy arrays.<br>
Ufuncs are extremely flexible – before we saw an operation between a scalar and an array, but we can also operate between two arrays:<br>np.arange(5)
<br>np.arange(5) / np.arange(1, 6)
<br>And ufunc operations are not limited to one-dimensional arrays–they can also act on multi-dimensional arrays as well:<br>x = np.arange(9).reshape((3, 3))
2 ** x
<br>Computations using vectorization through ufuncs are nearly always more efficient than their counterpart implemented using Python loops, especially as the arrays grow in size.<br>
Any time you see such a loop in a Python script, you should consider whether it can be replaced with a vectorized expression.<br><br>Ufuncs exist in two flavors: unary ufuncs, which operate on a single input, and binary ufuncs, which operate on two inputs.<br>
We'll see examples of both these types of functions here.<br><br>NumPy's ufuncs feel very natural to use because they make use of Python's native arithmetic operators.<br>
The standard addition, subtraction, multiplication, and division can all be used:<br>x = np.arange(4)
print("x     =", x)
print("x + 5 =", x + 5)
print("x - 5 =", x - 5)
print("x * 2 =", x * 2)
print("x / 2 =", x / 2)
print("x // 2 =", x // 2)  # floor division
<br>There is also a unary ufunc for negation, and a ** operator for exponentiation, and a % operator for modulus:<br>print("-x     = ", -x)
print("x ** 2 = ", x ** 2)
print("x % 2  = ", x % 2)
<br>In addition, these can be strung together however you wish, and the standard order of operations is respected:<br>-(0.5*x + 1) ** 2
<br>Each of these arithmetic operations are simply convenient wrappers around specific functions built into NumPy; for example, the + operator is a wrapper for the add function:<br>np.add(x, 2)
<br>The following table lists the arithmetic operators implemented in NumPy:<br><br><br>Just as NumPy understands Python's built-in arithmetic operators, it also understands Python's built-in absolute value function:<br>x = np.array([-2, -1, 0, 1, 2])
abs(x)
<br>The corresponding NumPy ufunc is np.absolute, which is also available under the alias np.abs:<br>np.absolute(x)
<br>np.abs(x)
<br>This ufunc can also handle complex data, in which the absolute value returns the magnitude:<br>x = np.array([3 - 4j, 4 - 3j, 2 + 0j, 0 + 1j])
np.abs(x)
<br><br>NumPy provides a large number of useful ufuncs, and some of the most useful for the data scientist are the trigonometric functions.<br>
We'll start by defining an array of angles:<br>Q8: What is the Chinese of Trigonometric functions?<br>theta = np.linspace(0, np.pi, 3)
print(theta)
<br>Now we can compute some trigonometric functions on these values:<br>print("theta      = ", theta)
print("sin(theta) = ", np.sin(theta))
print("cos(theta) = ", np.cos(theta))
print("tan(theta) = ", np.tan(theta))
<br>The values are computed to within machine precision, which is why values that should be zero do not always hit exactly zero.<br>
Inverse trigonometric functions are also available:<br>x = [-1, 0, 1]
print("x         = ", x)
print("arcsin(x) = ", np.arcsin(x))
print("arccos(x) = ", np.arccos(x))
print("arctan(x) = ", np.arctan(x))
<br><br>Another common type of operation available in a NumPy ufunc are the exponentials:<br>x = [1, 2, 3]
print("x     =", x)
print("e^x   =", np.exp(x))
print("2^x   =", np.exp2(x))
print("3^x   =", np.power(3, x))
<br>The inverse of the exponentials, the logarithms, are also available.<br>
The basic np.log gives the natural logarithm; if you prefer to compute the base-2 logarithm or the base-10 logarithm, these are available as well:<br>x = [1, 2, 4, 10]
print("x        =", x)
print("ln(x)    =", np.log(x))
print("log2(x)  =", np.log2(x))
print("log10(x) =", np.log10(x))
<br>There are also some specialized versions that are useful for maintaining precision with very small input:<br>x = [0, 0.001, 0.01, 0.1]
print("exp(x) - 1 =", np.expm1(x))
print("log(1 + x) =", np.log1p(x))
<br>When x is very small, these functions give more precise values than if the raw np.log or np.exp were to be used.<br>There are many, many more ufuncs available in both NumPy and scipy.special.<br>
Because the documentation of these packages is available online, a web search along the lines of "gamma function python" will generally find the relevant information.]]></description><link>https://www.allenygy.vip/programming/python/numpy.html</link><guid isPermaLink="false">Programming/Python/Numpy.md</guid><dc:creator><![CDATA[Dr. Eric Zhao]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[matplotlib]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/python/matplotlib.html</link><guid isPermaLink="false">Programming/Python/Matplotlib.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[datetime]]></title><description><![CDATA[ 
 <br><br>With thanks to Dr. Eric Zhao from the Finance Mathematics Program, BNU-HKBU United International College<br><br>
<br>Create datetime object for time parsing, formatting, and arithmetic.
<br>The resources come from <a data-tooltip-position="top" aria-label="https://pymotw.com/3/datetime/" rel="noopener nofollow" class="external-link" href="https://pymotw.com/3/datetime/" target="_blank">here</a>.<br>
<br>
The datetime module provides a number of ways to deal with dates, times, and time intervals.

<br>
The datetime module contains the following types:

<br>datetime type:  represents a date and a time during that day.
<br>date type: represents just a date, between year 1 and 9999 (see below for more about the calendar used by the datetime module)
<br>time type: represents a time, independent of the datetime.date 
<br>timedelta type: represents the difference between two time or date objects.


<br><br>
<br>objects of the datetime type represent a date and a time in some timezone, which has 7 attributes 'year', 'month', 'day', 'hour', 'minute', 'second', 'microsecond' as a tuple.
<br>You can construct the datetime.datetime object by the tuple, or retrive the tuple by datetime.datetime object.
<br><br>import datetime
d = datetime.datetime.now()
print (d.year)
print (d.month)
print (d.day)
print (d.hour)
print (d.minute)
print (d.second)
print (d.microsecond)
<br>2024
4
15
15
30
14
378257
<br>dir(d)
    ['__add__',
     '__class__',
     '__delattr__',
     '__dir__',
     '__doc__',
     '__eq__',
     '__format__',
     '__ge__',
     '__getattribute__',
     '__gt__',
     '__hash__',
     '__init__',
     '__init_subclass__',
     '__le__',
     '__lt__',
     '__ne__',
     '__new__',
     '__radd__',
     '__reduce__',
     '__reduce_ex__',
     '__repr__',
     '__rsub__',
     '__setattr__',
     '__sizeof__',
     '__str__',
     '__sub__',
     '__subclasshook__',
     'astimezone',
     'combine',
     'ctime',
     'date',
     'day',
     'dst',
     'fold',
     'fromisocalendar',
     'fromisoformat',
     'fromordinal',
     'fromtimestamp',
     'hour',
     'isocalendar',
     'isoformat',
     'isoweekday',
     'max',
     'microsecond',
     'min',
     'minute',
     'month',
     'now',
     'replace',
     'resolution',
     'second',
     'strftime',
     'strptime',
     'time',
     'timestamp',
     'timetuple',
     'timetz',
     'today',
     'toordinal',
     'tzinfo',
     'tzname',
     'utcfromtimestamp',
     'utcnow',
     'utcoffset',
     'utctimetuple',
     'weekday',
     'year']

<br><br>
<br>By 7-elements tuple
<br>dt = datetime.datetime(2003, 8, 4, 12, 30, 45)
<br>
<br>From current system time in ticks 
<br>print (time.time())
dt = datetime.datetime.fromtimestamp(time.time())
<br>
<br>From time string
<br>str_time = '2017-08-02 18:14:26'
form = '%Y-%m-%d %H:%M:%S'
print ('original time is: %s, time format is: %s'%(str_time, form))
# transform the date string to datetime object
dt = datetime.datetime.strptime(str_time, form) 
<br>Example 2: Construct datetime object by 7-elements tuple
import datetime

print  ('construct object from y-m-d, h-m-s-m attributes')
dt = datetime.datetime(2003, 8, 4, 12, 30, 45)

for attr in [ 'year', 'month', 'day', 'hour', 'minute', 'second', 'microsecond']:
    print(attr, ':', getattr(dt, attr))

construct object from y-m-d, h-m-s-m attributes
year : 2003
month : 8
day : 4
hour : 12
minute : 30
second : 45
microsecond : 0

<br>Example 3: Build object from current system time in ticks
import time
time.time?

time.time()

1713166214.4785035

time.time()/(3600*24*365.25)

54.286961444911746

print ('build object from current system time in ticks')
print (time.time())
dt = datetime.datetime.fromtimestamp(time.time())
for attr in [ 'year', 'month', 'day', 'hour', 'minute', 'second', 'microsecond']:
    print (attr, ':', getattr(dt, attr))

build object from current system time in ticks
1713166214.5121484
year : 2024
month : 4
day : 15
hour : 15
minute : 30
second : 14
microsecond : 512215

<br>Example 4: Build datetime object from time string
import datetime
str_time = '2017-08-02 18:14:26'
form = '%Y-%m-%d %H:%M:%S'
print ('original time is: %s, time format is: %s'%(str_time, form))
# transform the date string to datetime object
dt = datetime.datetime.strptime(str_time, form) 
print ('now we successfully obtain the datetime object')

for attr in [ 'year', 'month', 'day', 'hour', 'minute', 'second', 'microsecond']:
    print (attr, ':', getattr(dt, attr))

another_form = '%Y-%m-%d %H-%M-%S'
print ('express the date-time in a new form:')

# transform the datetime object to date string
dt_new_format = dt.strftime(another_form)
print (dt_new_format)

original time is: 2017-08-02 18:14:26, time format is: %Y-%m-%d %H:%M:%S
now we successfully obtain the datetime object
year : 2017
month : 8
day : 2
hour : 18
minute : 14
second : 26
microsecond : 0
express the date-time in a new form:
2017-08-02 18-14-26

<br><br><br>
<br>The date type represents the date portions of a datetime object. It has attributes for year, month, and day.
<br>import datetime

# build "date" object by year-month-day triple
d = datetime.date(2017, 8, 2)
print ('year: %d, month: %d, day: %d'% (d.year, d.month, d.day))
print (d.strftime('%Y-%m-%d'))
<br>year: 2017, month: 8, day: 2
2017-08-02
<br><br>import datetime

t = datetime.time(18, 54, 32)
print (t)
print (t.hour, t.minute, t.second, t.microsecond)
<br>18:54:32
18 54 32 0
<br><br>
<br>The datetime type provides method to extract date and time objects, as well as a class method that combines two objects into a single datetime object:
<br>import datetime
# generate a datetime.datetime object
dt = datetime.datetime.now()
date = dt.date()
print (type(date))
time = dt.time()
print (type(time))
dt1 = datetime.datetime.combine(date, time)
print (dt == dt1)
<br>&lt;class 'datetime.date'&gt;
&lt;class 'datetime.time'&gt;
True
<br>day = datetime.date(2017, 8, 2)
time = datetime.time(18, 54, 32)
dt = datetime.datetime.combine(day, time)
print (dt.strftime('%Y-%m-%d %H-%M-%S'))
<br>2017-08-02 18-54-32
<br><br><br>
<br>In somecases, you may need to add/minus a period of time on a datetime. For example, if you are asked to add 5 days, 7 hours, 36 minutes, 10 microseconds to the datetime "2017-08-02 17:29:12:34", what is the result?
<br>The datetime.timedelta object will help you perform such operation.
<br>import datetime
# you can build a datetime.timedelta object (set up a period 
# of time) by 7-elements tuple.
print ("microseconds:", datetime.timedelta(microseconds=1))
print ("milliseconds:", datetime.timedelta(milliseconds=1))
print ("seconds     :", datetime.timedelta(seconds=1))
print ("minutes     :", datetime.timedelta(minutes=1))
print ("hours       :", datetime.timedelta(hours=1))
print ("days        :", datetime.timedelta(days=1))
print ("weeks       :", datetime.timedelta(weeks=1))
<br>microseconds: 0:00:00.000001
milliseconds: 0:00:00.001000
seconds     : 0:00:01
minutes     : 0:01:00
hours       : 1:00:00
days        : 1 day, 0:00:00
weeks       : 7 days, 0:00:00
<br># this example will solve the above datetime arithmetic problem
import datetime

dt = datetime.datetime(2017,8,2,17,29,12,34)
print ('original time: ', dt)
# we use td to represent the period of time we want to add
td = datetime.timedelta(weeks=0, days=5, hours=7, minutes=36, microseconds=10)
# this will be td time later w.r.t the original time dt
datetime_future = dt + td
# this will be td time earlier w.r.t the original time dt
datetime_past = dt - td
print ('after adding some time: ', datetime_future)
print ('after minus some time: ', datetime_past)
<br>original time:  2017-08-02 17:29:12.000034
after adding some time:  2017-08-08 01:05:12.000044
after minus some time:  2017-07-28 09:53:12.000024
<br><br>
<br>Both date and time values can be compared using the standard operators to determine which is earlier or later.
<br>import datetime

print ('Times:')
t1 = datetime.time(12, 55, 0)
print ('\tt1:', t1)
t2 = datetime.time(13, 5, 0)
print ('\tt2:', t2)
print ('\tt1 &lt; t2:', t1 &lt; t2)

print ('Dates:')
d1 = datetime.date.today()
print ('\td1:', d1)
d2 = datetime.date.today() + datetime.timedelta(days=1)
print ('\td2:', d2)
print ('\td1 &gt; d2:', d1 &gt; d2)
<br>Times:
 t1: 12:55:00
 t2: 13:05:00
 t1 &lt; t2: True
Dates:
 d1: 2024-04-15
 d2: 2024-04-16
 d1 &gt; d2: False
<br>Task 1: Complete the function last_week which accepts a string s representing a date and returns another string representing its previous week. Note that the format of s is mm/dd/yyyy and the returned string of the funtion should use the same format, too. You can assume that the input is always valid.<br>Hint: the methods you may need in this question are: strptime(), timedelta(), strftime().<br>import datetime
def last_week(s):
    # YOUR CODE HERE
    form = '%m/%d/%Y'
    d1=datetime.datetime.strptime(s, form) 
    d2 = d1-datetime.timedelta(weeks=1)
    d2 = d2.strftime(form)
    return d2

<br>assert last_week('01/01/2024') == '12/25/2023'
assert last_week('03/07/2020') == '02/29/2020'
<br># This cell contains hidden tests, do NOT delete!
<br># This cell contains hidden tests, do NOT delete!
<br>Task 2: Complete the function days which accepts two strings, start and end, representing two dates for format yyyy-mm-dd. It returns the number of days between the start date and the end date, both end inclusive. Note that days should return 0 if the start date is later than the end date.<br>For example,<br>
<br>days('1980-08-28', '1980-08-29') should return 2
<br>days('1980-08-28', '1980-08-30') should return 3
<br>days('1980-08-26', '1980-08-30') should return 5
<br>days('1980-08-29', '1980-08-29') should return 1
<br>days('1980-08-30', '1980-08-29') should return 0
<br>You can assume that the input is always valid.<br>import datetime
def days(start, end):
    # YOUR CODE HERE
    form = '%Y-%m-%d'
    start_date=datetime.datetime.strptime(start, form) 
    end_date=datetime.datetime.strptime(end, form) 
#     print(start_date,end_date)
    if(start_date&gt;end_date):
        return 0
    else:
        delta = end_date - start_date
        return delta.days + 1  # 包含结束日期，如果只需要差距可以去掉 +1
#     raise NotImplementedError()
# print(days('1980-08-28', '1980-08-29'))
<br>assert days('1980-08-28', '1980-08-29') == 2
assert days('1980-08-28', '1980-08-30') == 3
assert days('1980-08-26', '1980-08-30') == 5
assert days('1980-08-29', '1980-08-29') == 1
assert days('1980-08-30', '1980-08-29') == 0
<br># This cell contains hidden tests, do NOT delete!
<br># This cell contains hidden tests, do NOT delete!
<br># This cell contains hidden tests, do NOT delete!
<br># This cell contains hidden tests, do NOT delete!
]]></description><link>https://www.allenygy.vip/programming/python/datetime.html</link><guid isPermaLink="false">Programming/Python/Datetime.md</guid><dc:creator><![CDATA[Dr. Eric Zhao]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Beautiful Soup]]></title><description><![CDATA[ 
 <br>]]></description><link>https://www.allenygy.vip/programming/python/beautiful-soup.html</link><guid isPermaLink="false">Programming/Python/Beautiful Soup.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[R-Data-Structure]]></title><description><![CDATA[ 
 <br><br>
<br>vector
<br>list
<br>matrix
<br>array
<br>data frame
<br>factor
<br><br>A vector is simply a list of items that are of the same type.<br>To combine the list of items into a vector, use the c() function and separate the items by a comma.<br><br># Vector of strings
fruits &lt;- c("banana", "apple", "orange")

# Print fruits
fruits
<br>output:<br>[1] "banana" "apple"  "orange"
<br><br># Vector with numerical values in a sequence
numbers &lt;- 1:10

numbers
<br>output:<br>[1]  1  2  3  4  5  6  7  8  9 10
<br><br># Vector with numerical decimals in a sequence
numbers1 &lt;- 1.5:6.5
numbers1

# Vector with numerical decimals in a sequence where the last element is not used
numbers2 &lt;- 1.5:6.3
numbers2
<br>output:<br>[1] 1.5 2.5 3.5 4.5 5.5 6.5
[1] 1.5 2.5 3.5 4.5 5.5 6.3
<br>默认步长为1，即每一个元素都相隔一个单位。<br><br><br>fruits &lt;- c("banana", "apple", "orange")

length(fruits)
<br>To create a vector of numbers, use the seq() function.<br># Vector of numbers
numbers &lt;- seq(1, 10)

# Print numbers
numbers
<br>output<br>[1]  1  2  3  4  5  6  7  8  9 10
]]></description><link>https://www.allenygy.vip/programming/r/r-data-structure.html</link><guid isPermaLink="false">Programming/R/R Data Structure.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:18:00 GMT</pubDate></item><item><title><![CDATA[Basic-R]]></title><description><![CDATA[ 
 <br><br><br>Easy Input<br># String 
"Hello World!"
print("Hello World!")
5+5
<br>Output<br>[1] "Hello World!"
[1] 10
<br><br>
<br>To assign a value to a variable, use the &lt;- sign. To output (or print) the variable value, just type the variable name:
<br>赋值操作用"&lt;-"实现
<br>输出仅需要变量名即可
<br>name &lt;- "John"
age &lt;- 40

name   # output "John"
age    # output 40
<br>name &lt;- "John"
age &lt;- 40

name   # output "John"
age    # output 40
<br>
<br>多变量赋值
<br># Assign the same value to multiple variables in one line
var1 &lt;- var2 &lt;- var3 &lt;- "Orange"

# Print variable values
var1
var2
var3
<br>Output<br>[1] "Orange"
[1] "Orange"
[1] "Orange"
<br>The Global Assignment Operator<br>
Normally, when you create a variable inside a function, that variable is local, and can only be used inside that function.<br>To create a global variable inside a function, you can use the global assignment operator &lt;&lt;-<br>my_function &lt;- function() {
txt &lt;&lt;- "fantastic"
  paste("R is", txt)
}
my_function()
print(txt)
<br><br>拼接结果<br>text1 &lt;- "R is"
text2 &lt;- "awesome"

paste(text1, text2)
<br>Output<br>[1] "R is awesome"
<br><br>
<br>numbers

<br>numeric - (10.5, 55, 787)  小数
<br>integer - (1L, 55L, 100L, where the letter "L" declares this as an integer) 整数
<br>complex - (9 + 3i, where "i" is the imaginary part) 复数


<br>character (a.k.a. string) - ("k", "R is exciting", "FALSE", "11.5") 字符串
<br>logical (a.k.a. boolean) - (TRUE or FALSE) 布尔代数
<br># numeric
x &lt;- 10.5
class(x)

# integer
x &lt;- 1000L
class(x)

# complex
x &lt;- 9i + 3
class(x)

# character/string
x &lt;- "R is exciting"
class(x)

# logical/boolean
x &lt;- TRUE
class(x)
<br>Output<br>[1] "numeric"
[1] "integer"
[1] "complex"
[1] "character"
[1] "logical"
<br><br>
<br>numeric
<br>integer
<br>complex
<br><br>任意两种类型之间的转换<br>as.numeric()
as.integer()
as.complex()
<br><br><br>以上是常见的数学运算符及其含义。在表格中，第一列是运算符，第二列是对应的含义说明，第三列是示例演示了运算符的使用。<br><br><br>str &lt;- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."

str # print the value of str
<br>Output<br>[1] "Lorem ipsum dolor sit amet,\nconsectetur adipiscing elit,\nsed do eiusmod tempor incididunt\nut labore et dolore magna aliqua."
<br>R will add a "\n" at the end of each line break. This is called an escape character, and the n character indicates a new line.<br>If you want the line breaks to be inserted at the same position as in the code, use the cat() function:<br>str &lt;- "Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua."
cat(str)
<br>Output<br>Lorem ipsum dolor sit amet,
consectetur adipiscing elit,
sed do eiusmod tempor incididunt
ut labore et dolore magna aliqua.
<br>
<br>nchar() 返回字符串的长度
<br>substr() 从字符串中提取子字符串
<br>paste() 将多个字符串连接成一个字符串
<br>paste0() 将多个字符串连接成一个字符串，但不添加空格
<br>gsub() 用新的字符串替换字符串中的旧字符串
<br>strsplit() 将字符串分割成多个子字符串
<br>grepl() 检查该字符串是否在字符串
<br>在字符串中间插入字符串<br>str &lt;- "We are the so-called \"Vikings\", from the north."

str
cat(str)

# Output
[1] "We are the so-called \"Vikings\", from the north."
We are the so-called "Vikings", from the north.
<br>用cat()合并<br><br><br>x &lt;- 10
if (x &gt; 5) {
  print("x is greater than 5")
} else if (x == 5) {
  print("x equals 5")
} else {
  print("x is less than 5")
}
<br>
<br>AND: &amp;
<br>OR: |
<br><br><br>x &lt;- 10
while (x &gt; 5) {
  print(x)
  x &lt;- x - 1
}
<br><br>for (i in 1:10) {
  print(i)
}

# list

fruits &lt;- list("apple", "banana", "cherry")

for (x in fruits) {
  print(x)
}

# vector

dice &lt;- c(1, 2, 3, 4, 5, 6)

for (x in dice) {
  print(x)
}

<br>Next: just like continue<br>fruits &lt;- list("apple", "banana", "cherry")

for (x in fruits) {
  if (x == "banana") {
    next
  }
  print(x)
}
<br>dice &lt;- 1:6

for(x in dice) {
  if (x == 6) {
    print(paste("The dice number is", x, "Yahtzee!"))
  } else {
    print(paste("The dice number is", x, "Not Yahtzee"))
  }
}
<br><br>
<br>Creating a Function<br>
To create a function, use the function() keyword:
<br>add &lt;- function(x, y) {
  return(x + y)
}

add(10, 20)
<br>
<br>Argument
<br>my_function &lt;- function(fname, lname) {
  paste(fname, lname)
}

my_function("Peter", "Griffin")
<br>output<br>[1] "Peter Griffin"
<br>
<br>Default Parameter Value
<br>my_function &lt;- function(country = "Norway") {
  paste("I am from", country)
}

my_function("Sweden")
my_function("India")
my_function() # will get the default value, which is Norway
my_function("USA")
<br>output<br>
[1] "I am from Sweden"
[1] "I am from India"
[1] "I am from Norway"
[1] "I am from USA"
<br>
<br>Return values
<br>my_function &lt;- function(x) {
  return (5 * x)
}

print(my_function(3))
print(my_function(5))
print(my_function(9))
<br>output<br>[1] 15
[1] 25
[1] 45
<br>
<br>return multiple values
<br>my_function &lt;- function(x, y) {
  return(x + y, x - y)
}
<br><br>Nested_function &lt;- function(x, y) {
  a &lt;- x + y
  return(a)
}

Nested_function(Nested_function(2,2), Nested_function(3,3))
<br>output<br>[1] 10
<br>Outer_func &lt;- function(x) {
  Inner_func &lt;- function(y) {
    a &lt;- x + y
    return(a)
  }
  return (Inner_func)
}
output &lt;- Outer_func(3) # To call the Outer_func
output(5)
<br>Example Explained<br>
You cannot directly call the function because the Inner_func has been defined (nested) inside the Outer_func.<br>We need to call Outer_func first in order to call Inner_func as a second step.<br>We need to create a new variable called output and give it a value, which is 3 here.<br>We then print the output with the desired value of "y", which in this case is 5.<br>The output is therefore 8 (3 + 5).<br><br>tri_recursion &lt;- function(k) {
  if (k &gt; 0) {
    result &lt;- k + tri_recursion(k - 1)
    print(result)
  } else {
    result = 0
    return(result)
  }
}
tri_recursion(6)
<br>output<br>[1] 1
[1] 3
[1] 6
[1] 10
[1] 15
[1] 21
]]></description><link>https://www.allenygy.vip/programming/r/basic-r.html</link><guid isPermaLink="false">Programming/R/Basic R.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:18:03 GMT</pubDate></item><item><title><![CDATA[Program Language]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/programming/program-language.html</link><guid isPermaLink="false">Programming/Program Language.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 17:36:40 GMT</pubDate></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://github.com/ALLENYGY/DataBase-Management-System-Project" rel="noopener nofollow" class="external-link" href="https://github.com/ALLENYGY/DataBase-Management-System-Project" target="_blank">Courier Station Information Management System</a>]]></title><description><![CDATA[ 
 <br><br><br>
<br>There is only one courier station in each region.
<br>The address in this area is the address of the delivery station.

<br>For example, there is a courier station on XiangZhou,ZhuHai,GuangDong then the address of this station will be XiangZhou,ZhuHai,GuangDong. There will be no additional specific address


<br>One courier station may have many courier station manager.
<br><br>Since we have different kinds of users, I will describe user requirements by user.<br><br>
<br>Pick Parcel: Allows customers to pick a parcel from another customer.
<br>Send Parcel: Allows customers to send a parcel to another customer.
<br>Parcel Tracking: Allows customers to view the real-time location and status of their parcel during delivery.
<br>Personal Information Management: Allow customers to update their personal information,  contact details.
<br>History: Give customers the ability to view their order history.
<br>Shipping Options: Choose from different delivery speeds and prices, such as standard, expedited, or timed delivery.
<br>Service Evaluation: Provide a platform for customers to rate the express service and leave feedback.
<br><br>
<br>Status Update: Ability to update the delivery status of a package in the system, such as delivered or delayed.
<br>Courier Station Information Management: Allow courier station manager to update their personal information, contact details, opening hours.
<br>History: Allow courier station manager the ability to view information on packages that pass through this Courier station
<br><br>
<br>Station status: Ability to check the status of all of the courier station in this system.
<br>History: Ability to view view all package information.
<br>Here is a basic feature about the pick and send parcel.<br><img alt="Pick-Send Process" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/process.png" referrerpolicy="no-referrer"><br>CustomerA delivers the package to courier stationA and fills in the address that needs to be delivered, then the manager of courier stationA checks the package and transfers it to courier stationB according to the address, and the manager of courier stationB accepts the package. Finally, CustomerB can pick up the package.<br><br>In the user part, the user uses uID to login, we use the ISA relationship to distinguish the user as customer, delivery manager and administrator, and this ISA relationship is not disjoint, which means that all users registered in the system can be more than one identity.<br><img alt="ER-user" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/user.png" referrerpolicy="no-referrer"><br>
In the parcel section. Each parcel will be sent and picked up by one customer, each customer can send or pick up more than one parcel at the same time, and each parcel has its responsible delivery manager, and corresponding logistic company.<br><img alt="ER-parcel" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/parcel.png" referrerpolicy="no-referrer"><br>In the courier station section, we can see that each delivery manager belongs to a courier station, and the administrator of the system can control multiple courier stations. Every courier station has a specific location for the logistics company to transport the parcel to the fixed address.<br><img alt="ER-courier_station" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/courier_station.png" referrerpolicy="no-referrer"><br>Finall we can get the ER diagram like this.<br><img alt="E-R" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/E-R.png" referrerpolicy="no-referrer"><br><br>In our user requirement the 3 different kinds of users should be disjoint and total participation.<br>For the Entity part<br>we can get 3 relationship sets about the user according to the method in logical design.<br>
<br>
<br>(courier_adminstrator)
<br>(adminstrator)
<br>And for each entity we can get one relationship set<br>
<br>
<br>
<br>
<br>
<br>
<br>For the relationship part, we have 8 relationship in our system.<br>
<br>  
<br>  
<br>  
<br>  
<br> 
<br> 
<br>For above case we could not to create table.<br>
<br> 
<br> 
<br><br>
<br>
<br><br>
<br>
<br>
<br>
<br>
<br><br>After the logical design the schemas in our database have already satisfed 1NF<br>Now let's continue to normalize the schema.<br>For these 3 user tables they have similar attributes<br><br>
<br>
<br>We can get the following function dependency.<br><br><br><br> is obviously candicate key it can hold the whole schema.<br>
While  and  can hold the attribute , respectively.<br>but email and phone are not superkey, therefore it violates BCNF.<br>so we do this decomposition to this schema.<br>Decomposition<br><br>
<br>
<br><br>
<br>
<br><br>
<br>
<br>This obviously satisfies the BCNF.<br>For the Courier station schema it also has email and phone attribute, and there is one more property csaddress<br><br>
Functional dependency:<br>
<br>
<br>
<br>
<br>Therefore, we do decomposite just like before<br><br>
<br>
<br>
<br>The next schema is about the parcel.<br><br>We can get the following function dependency like this.<br><br>We can find it only has one functional dependency. And obviously, the parcelID is the condicate key in this schema. So it has been already satisfied BCNF.<br><br>For the rest of the schema we can find it only has 2 attributes. So it must satisfy BCNF.<br><br>
<br>
<br><br><br>In this project, foreign keys are used in almost all the tables to establish connections.<br><br>In the table for each user, I used BLOB to save the profile picture。<br><img alt="BLOB" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/BLOB.png" referrerpolicy="no-referrer"><br><br>When dealing with the weight and volume of the package, I checked them on the front and back ends, especially on the back end, where I used triggers to make the volume and weight range from 0-300.<br><img alt="triggers" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/triggers.png" referrerpolicy="no-referrer"><br><br>
<br>
Customers can effortlessly pick and send packages, track deliveries in real-time, manage personal information, view order history, and evaluate the quality of service.<br>
Our system offers a range of dynamic shipping options to suit different customer preferences.

<br>
For courier station managers, features such as status updates, site information management, and access to comprehensive historical logs can effectively manage packages. The ability to transfer parcels between sites ensures a smooth flow of parcels through the logistics network.

<br>
In addition, administrators benefit from a centralized view of workstation status and a complete package history, allowing them to monitor and optimize overall system performance.

<br><br>
<br>customer: 200000 records.
<br>courier admin: 50000 records.
<br>admin: 500   records. (There's no need to have 10,000 administrators)
<br>parcel：15000 records.
<br>courier station：5000  records. (There are only about 5,000 in the whole country)
<br>email and phone table are the same size as its main(customer,  courier admin,  admin) table
]]></description><link>https://www.allenygy.vip/projects/dbm/courier-station-information-management-system.html</link><guid isPermaLink="false">Projects/DBM/Courier Station Information Management System.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/process.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Project/DBM/process.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://github.com/ALLENYGY/Chat-Room-Application" rel="noopener nofollow" class="external-link" href="https://github.com/ALLENYGY/Chat-Room-Application" target="_blank">Chat-Application</a>]]></title><description><![CDATA[ 
 <br><br>A chat application allows users to interact or communicate by texting, audio, and video. It can be useful for social or commercial activities.<br>In this assignment, students are required to write a Chat Program based on Windows Socket Programming C++.<br>
The program should allow users to chat concurrently on the Internet (i.e., User A can send encrypted messages to User B, and vice versa).<br>
You can download the sample programs (namely, “server.cpp” and “client.cpp”) from the Web site. The program should consist of the following modules:<br>
<br>User management: provide functions to add, delete, or group users;
<br>Group chat: allow users to chat as a group;
<br>Management of connections: support at least three concurrent connections.
<br>User Management:  Implemented By Server<br>
<br>Server: Store the User Information
<br>Group chat: Group started by Client<br>
<br>Server Provide all users for Client User to select. 
<br>Management of connections: Give every User a Threads<br>Content Chinese version
起初，我们的客户端实现仅采用了单线程方式，消息的接收和发送是交替进行的。这种实现方式存在一个显著的问题：客户端无法同时进行消息的接收和发送操作，而是只能在完成接收后进行发送，反之亦然。这导致了客户端在等待接收或发送消息时会发生阻塞，影响用户体验。
为了克服这一问题，我们引入了多线程技术。在客户端中，我们分别为消息的接收和发送操作创建了独立的线程，从而实现了这两项操作的并发处理。这一改进使得客户端可以同时进行消息的接收和发送，提高了响应速度和用户体验。
在服务器端，我们引入了互斥锁（mutex）来确保数据传输的正确性和线程安全性。当多个用户向同一个用户发送消息时，服务器会将这些消息推送到该用户的消息队列中，并在这一过程中使用互斥锁来保证消息的有序和完整传输。这样，服务器能够在多用户环境下稳定、高效地管理消息队列，确保每个用户都能正确收到发送给他们的消息。
<br><br> I'm going to talk some details  about how we implemented this chat room application.<br><br><img alt="DataStructure" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DCN/Project-DataStructure.png" referrerpolicy="no-referrer"><br>
<br>Sock: Client socket
<br>messageQueue: Queue to store messages to be sent
<br>queueMutex: Mutex to protect the message queue 
<br>queueCond: Condition variable to notify the send thread
<br><br><br><img alt="ServerThreads" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DCN/Project/ServerThreads.png" referrerpolicy="no-referrer"><br>
<br>Initially, our client was single-threaded, handling message receiving and sending alternately. 
<br>This caused a problem: the client or server couldn't receive and send messages concurrently, leading to blocking and a poor user experience.
<br>To solve this, we introduced multithreading.<br>
Separate threads for receiving and sending to improve responsiveness and user experience.<br><br><br><img alt="Send" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DCN/Project/SendMessage.png" referrerpolicy="no-referrer"><br>
<br>On the server side, we introduced a mutex to ensure data transmission accuracy and thread safety. 
<br>When multiple users send messages to the same user, the server pushes these messages into the receiver's message queue using a mutex to lock the process. 
<br>This ensures orderly and complete message transmission.
<br>These changes enabled the server to efficiently manage message queues in a multi-user environment, ensuring each user correctly receives their messages.<br>]]></description><link>https://www.allenygy.vip/projects/dcn/chat-application.html</link><guid isPermaLink="false">Projects/DCN/Chat-Application.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DCN/Project-DataStructure.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DCN/Project-DataStructure.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[System-Design-Specification]]></title><description><![CDATA[ 
 <br><br><br><br><br>
<br>DOCUMENT CHANGE LOG 
<br>TABLE OF CONTENTS 
<br>DESIGN OVERVIEW 
<br>TOOLS AND STANDARDS

<br>Tools
<br>Standards


<br>USER INTERFACE DESIGN

<br>Usage Scenario I
<br>Usage Scenario II


<br>DIAGRAMS
<br><br>Design Overview for the Data Analysis Platform<br>Our platform is meticulously architected to provide an end-to-end data analysis solution, encompassing data preprocessing, modeling, and visualization functionalities. To ensure a robust and responsive user experience, our system architecture distinctly separates the frontend and backend services.<br>Backend Architecture: We leverage the power of Python's FastAPI framework, renowned for its high performance and ease of use, to handle data-intensive backend operations efficiently. This choice enables us to implement asynchronous processing, significantly boosting the responsiveness of our platform.<br>Frontend Design: The user interface is built using Vue.js, a progressive JavaScript framework known for its adaptability and component-based architecture. This setup allows for a dynamic and seamless interaction with the data analysis functionalities, providing users with an intuitive experience as they upload and manipulate their data.<br>Core Functionalities:<br>
<br>Data Upload: Users can easily upload datasets via the frontend interface.
<br>Data Preprocessing: The platform offers a suite of tools for cleaning and preparing data for analysis, ensuring data quality and readiness.
<br>Modeling Capabilities: Users have access to a variety of built-in models, including regression and clustering, to uncover patterns and derive insights from their data.
<br>Visualization Tools: Integrated visualization tools enable users to create engaging and informative visual representations of their analysis results.
<br>Our platform is designed to be flexible, catering to a wide range of data analysis needs and making sophisticated data science accessible to users with varying levels of expertise.<br>Here， we show some models instruction<br>Linear regression is a basic statistical model, which is used to explore the linear relationship between variables. It assumes that there is a straight line relationship between the dependent variable and the independent variable, and predicts by fitting the best straight line. The fitting of the model is completed by the least square method, and the indexes such as the square of R, the square of adjusted R and the standard error are usually used in the evaluation. In application, we need to pay attention to model assumptions, such as linear relationship, multicollinearity and normal distribution of error terms.<br>Decision tree is a non-parametric supervised learning algorithm, which is utilized for both classification and regression tasks. It has a hierarchical, tree structure, which consists of a root node, branches, internal nodes and leaf nodes.<br>
A decision tree starts with a root node, which does not have any incoming branches. The outgoing branches from the root node then feed into the internal nodes, also known as decision nodes. Based on the available features, both node types conduct evaluations to form homogenous subsets, which are denoted by leaf nodes, or terminal nodes. The leaf nodes represent all the possible outcomes within the dataset.<br>K-nearest neighbor (KNN) is an instance-based supervised learning algorithm, and it is sensitive to data size and dimension. It performs classification or regression by measuring the distance between a new sample and a known sample in the training set. In classification, it assigns the new sample to the category to which the K closest neighbors belong. In regression, it predicts the value of the new sample, estimated by the average of the K closest neighbors. The working principle of the KNN algorithm consists of the following steps: Calculate distance, Select Nearest neighbor, Voting or calculating the mean.<br>设计总览
我们将会搭建一个通用的数据分析平台，平台将会实现包括数据预处理，建模，可视化等功能。<br>
我们将使用前后端分离的架构，后端将使用由python搭建的FASTAPI框架<br>
前端将使用Vue.js<br>
用户将通过我们搭建的前端界面，上传数据；选择希望执行的操作，完成一整套数据分析的流程<br>
们也提供常用的模型包括回归，聚类
<br><br><br>In python we use the Numpy, pandas, sklearn, matplotlib libraries<br><br>Common to all platforms, including MacOS, Windows, Linux<br>
Accessible via browser on all platforms<br><br><img alt="User Interface" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DPW/DesignOverview.png" referrerpolicy="no-referrer"><br>]]></description><link>https://www.allenygy.vip/projects/dpw/system-design-specification.html</link><guid isPermaLink="false">Projects/DPW/System-Design-Specification.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DPW/DesignOverview.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DPW/DesignOverview.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Movie-Data-Analysis]]></title><description><![CDATA[ 
 <br><br><br>
主观数据分析

<br>
影评情感分析

<br>
二分类 正向情感/负面情感<br>
- SnowNLP （已跑通）<br>
- KNN（已跑通）

<br>
水军评论筛选（如有空）


<br>
客观数据分析

<br>词云图
<br>近年年度电影主题
<br>影视主题与票房关系？<br>
...

<br><br>
<br>豆瓣
<br>猫眼
<br><br><img alt="情感分析" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DPW/%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90.png" referrerpolicy="no-referrer"><br><br>
<br>后续做词云图
<br><br>
<br>词向量

<br>word2vec 
<br>GloVe
<br>BERT 


<br><br>
<br>MLP
<br>CNN 
<br>RNN
<br>Transformer？
<br><br>客观数据包括：<br>
<br>电影名称
<br>导演，演员....
<br>票房
<br>....
<br><br>
<br>词云图
<br>
]]></description><link>https://www.allenygy.vip/projects/dpw/movie-data-analysis.html</link><guid isPermaLink="false">Projects/DPW/Movie-Data-Analysis.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DPW/%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DPW/%E6%83%85%E6%84%9F%E5%88%86%E6%9E%90.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Data-Programming-Workshop]]></title><description><![CDATA[ 
 <br><br> <a data-tooltip-position="top" aria-label="https://github.com/BiliVista/document" rel="noopener nofollow" class="external-link" href="https://github.com/BiliVista/document" target="_blank">Bilibilivista</a><br>
<br>Bilibili data analysis platform
<br>Sentiment analysis based on deep learning
<br><br><img alt="DPW-Overview" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/dpw.png" referrerpolicy="no-referrer"><br>Project Overview<br>
<br>
Data Acquisition

<br>Crawling Movie Comments

<br>Douban: Collect comments from the Douban movie site.
<br>Maoyan: Collect comments from the Maoyan movie site.


<br>Data Cleaning

<br>Perform data cleaning to ensure the quality and consistency of the collected comments.




<br>
Model Training

<br>Machine Learning Model

<br>Utilize SnowNLP for sentiment analysis and other natural language processing tasks.


<br>Deep Learning Model

<br>Employ PaddleNLP to build and train deep learning models for advanced text analysis.




<br>
Model Application

<br>Crawling Data from Bilibili

<br>Implement real-time data crawling from Bilibili, allowing users to input a video url and retrieve video information and comments instantly.


<br>Backend Development

<br>Develop the backend using the FastAPI Python framework to handle data processing and model integration.


<br>Frontend Development

<br>Implement a user-friendly interface to visualize and interact with the analysis results.




<br><br><br>Sources of Our Data<br>
<br>Douban: A prominent movie site where users freely express their opinions on movies. These comments are often labeled by users' sentiments, making them invaluable for our analysis.
<br>Maoyan: Another key player in the movie industry with a rich database of user comments, similarly labeled, allowing for comparative studies and robust model training.
<br>Why These Datasets?<br>
<br>Labeled Data: We chose to focus on comments from Douban and Maoyan because they offer labeled datasets. This is critical as labeled data provides a foundation for training and evaluating our sentiment analysis models with higher accuracy.
<br><img alt="Comment on Douban and Maoyan" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/comment.png" referrerpolicy="no-referrer"><br><br><img alt="Data Preparation" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/datapreparation.png" referrerpolicy="no-referrer"><br>
<br>Data Categorization

<br>Negative dict: ratings less than or equal to 3
<br>Positive dict: ratings greater than 3


<br>Dataset Splitting

<br>Random Split


<br>Training and Testing set

<br>Training set : Test set = 8:2


<br><br><br>
<br>SnowNLP is a library focused on natural language processing tasks for Chinese text, such as sentiment analysis and text processing.
<br>Uses the labeled training data to train the classifier using the Naive Bayes algorithm.
<br><br>
<br>Assumes that features are independent of each other.
<br>Estimates probabilities based on the features and labels in the training dataset.
<br><br><br>Split Chinese characters and calculate the probability that the term appears in the set<br><img alt="Cut Chinese Comment" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/cutcomment.png" referrerpolicy="no-referrer"><br><br><br><br>
<br>Comment of Movie
<br>
<br>Crawl the Comment of the Movie 《 Wandering Earth 2》 From&nbsp; the Bilibili
<br>
<br>Estimation the comment score
<br>
<br>Get a comment sentiment score using the trained SnowNLP model.
<br>Average comment sentiment score is only 0.54. (Calculate method In the appendix )
<br>
<br>Comment Score Distribution
<br>
<br>The distribution is polarized, it does not work well<br>
<img alt="SnowNLP Comment Score Distribution" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/snownlpresult.png" referrerpolicy="no-referrer">
<br>
<br>Comment Score Example
<br><br>It turns out that the model does not work well in practice<br><br><br>
<br>With the development of deep learning, the number of model parameters has increased rapidly, and in order to train these parameters, larger data sets are needed to avoid overfitting.
<br>Nowadays, &nbsp;studies have shown that Pretrained Models (PTM) based on large-scale unlabeled corpora can acquire generic language representations and perform well when fine-tuned to downstream tasks.
<br>In addition, pre-training models can avoid training models from scratch.
<br><img alt="Contex2Vec" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/contex2vec.png" referrerpolicy="no-referrer"><br>
<br>BERT requires minimal architecture changes for a wide range of natural language processing applications.
<br><br>
<br>Remove a batch data from the dataloader
<br>Feed batch data to the model for forward calculation
<br>Pass forward calculation result to loss function to calculate loss. The forward calculation result is passed to the evaluation method, and the evaluation index is calculated.
<br>Loss reverse return and update gradient. Repeat the above steps.
<br>Each time an epoch is trained, the program will evaluate the effectiveness of the current model training.<br><br><br><br>
<br>Comment of Movie
<br>
<br>Crawl the Comment of the Movie 《 Wandering Earth 2》 From&nbsp; the Bilibili
<br>
<br>Estimation the comment score
<br>
<br>Get a comment sentiment score using the trained PaddleNLP model.
<br>Average comment sentiment score is 0.89. (Calculate method In the appendix )
<br>
<br>Sentiment Score Distribution
<br><img alt="PaddleNLP Comment Score Distribution" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/paddlenlpresult.png" referrerpolicy="no-referrer"><br><br><br>
<br>Set the User-Agent and cookie information
<br>Through bvid access to the comment information of the video including:<br>
<br>Comment
<br>Number of comments and likes
<br><img alt="User-Agent" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/user-agent.png" referrerpolicy="no-referrer"><br>
<br>Crawl video basic information
<br>Through bvid access to the basic information of the video including:<br>
<br>Title
<br>Author
<br>Reply count, Favorite count,
<br>Coin count, Share count
<br><img alt="Video-info" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/video-info.png" referrerpolicy="no-referrer"><br>
<br>Crawl video comment content and danmu content
<br>Through bvid request screen XML file obtained through basic information:<br>
<br>Time
<br>Timestamp
<br>Danmu text
<br><img alt="Comment" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/commentdata.png" referrerpolicy="no-referrer"><br>
<img alt="Danmu" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/danmudata.png" referrerpolicy="no-referrer"><br><br>Why FastAPI?<br>“FastAPI is a modern, fast (high-performance) web framework for building APIs with Python 3.6+.”<br>Key Advantages:<br>
<br>High performance
<br>Rapid development
<br>Automatic interactive API documentation
<br>Type hints for fewer bugs
<br><img alt="BackendAPI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/backendapi.png" referrerpolicy="no-referrer"><br>Introduction to the three main API categories: video, videos, newvideo<br>
<br>Usage of 3 APIs:

<br>video: Fetch specific video information.

<br>videos: Gather statistics on all scraped videos.
<br>newvideo: Add new video data to the system.




<br><br><br><br>
<br>Compute the values for the  column:
<br><br>   Here,  and  represent the values of the  and  columns for the -th row, respectively, and  is the result of their product, stored in a new column .<br>
<br>Calculate the ratio of the sum of the  column to the sum of the  column, which represents the mean sentiment value:

Here,  is the sum of all values in the  column, and  is the sum of all values in the  column. This ratio represents the weighted average sentiment value, where the weight for each comment is its number of likes.
]]></description><link>https://www.allenygy.vip/projects/dpw/data-programming-workshop.html</link><guid isPermaLink="false">Projects/DPW/Data-Programming-Workshop.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/dpw.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/Img/dpw.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[<a data-tooltip-position="top" aria-label="https://github.com/BiliVista" rel="noopener nofollow" class="external-link" href="https://github.com/BiliVista" target="_blank">BilibiliVista</a>]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:AllenYGY" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#AllenYGY</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:WMHGYP" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#WMHGYP</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Project" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Project</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Python" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Python</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:DPW" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DPW</a> 
 <br><br>author: <a href="https://www.allenygy.vip?query=tag:AllenYGY" class="tag" target="_blank" rel="noopener nofollow">#AllenYGY</a> <a href="https://www.allenygy.vip?query=tag:WMHGYP" class="tag" target="_blank" rel="noopener nofollow">#WMHGYP</a><br>
Tags: <a href="https://www.allenygy.vip?query=tag:Project" class="tag" target="_blank" rel="noopener nofollow">#Project</a> <a href="https://www.allenygy.vip?query=tag:Python" class="tag" target="_blank" rel="noopener nofollow">#Python</a> <a href="https://www.allenygy.vip?query=tag:DPW" class="tag" target="_blank" rel="noopener nofollow">#DPW</a><br>
<br>Our codes are open source on github<br>
<a data-tooltip-position="top" aria-label="https://github.com/BiliVista" rel="noopener nofollow" class="external-link" href="https://github.com/BiliVista" target="_blank">BilibiliVista</a>
<br><br>
<br>For Backend
<br>cd backend
python main.py
<br>
<br>For Frontend
<br>cd frontend/code
npm i
npm run dev
<br><br>Firstly,We have implemented an automated movie review scraper to quickly obtain a large volume of movie reviews and ratings data. Based on this dataset (over 50,000 entries), we trained and implemented two favorability rate analysis models: one based on a favorability rate dictionary and Naive Bayes (machine learning), and another retrained on a transformer with whole word masking pre-training. Additionally, we developed a scraper capable of dynamically obtaining Bilibili video information (comments, bullet chats, etc.). Finally, we integrated these features using FastAPI to achieve front-end and back-end separation, supporting dynamic retrieval of Bilibili-related information and favorability rate analysis of comments on specified Bilibili videos using the two trained models, with dynamic data presentation to the front end.<br><br>
<br>
Automated Movie Review Scraper:

<br>Rapidly obtains a large volume of movie reviews and ratings data.


<br>
favorability rate Analysis Models:

<br>Model 1: favorability rate dictionary combined with Naive Bayes (machine learning).
<br>Model 2: Transformer-based model with whole word masking pre-training, retrained for favorability rate analysis.


<br>
Dynamic Bilibili Video Information Scraper:

<br>Fetches detailed video information including comments and bullet chats dynamically.


<br>
FastAPI-based Front-End and Back-End Integration:

<br>Supports dynamic retrieval of Bilibili-related information.
<br>Facilitates dynamic favorability rate analysis of specified Bilibili video comments using the two trained models.
<br>Provides real-time data presentation to the front end.


<br><br><img alt="Core Workflow" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/DPW.png" referrerpolicy="no-referrer"><br>
<br>
Data Acquisition

<br>Crawling Movie Comments

<br>Douban: Collect comments from the Douban movie site.
<br>Maoyan: Collect comments from the Maoyan movie site.


<br>Data Cleaning

<br>Perform data cleaning to ensure the quality and consistency of the collected comments.




<br>
Model Training

<br>Machine Learning Model

<br>favorability rate dictionary combined with Naive Bayes (machine learning).


<br>Deep Learning Model

<br>Transformer-based model with whole word masking pre-training, retrained for favorability rate analysis.




<br>
Model Application

<br>Crawling Data from Bilibili

<br>Implement real-time data crawling from Bilibili, allowing users to input a video url and retrieve video information and comments instantly.


<br>Backend Development

<br>Develop the backend using the FastAPI Python framework to handle data processing and model integration.


<br>Frontend Development

<br>Implement a user-friendly interface to visualize and interact with the analysis results.




<br><br><br>
<br>Douban: A prominent movie site where users freely express their opinions on movies. These comments are often labeled by users' favorability rates, making them invaluable for our analysis.
<br>Maoyan: Another key player in the movie industry with a rich database of user comments, similarly labeled, allowing for comparative studies and robust model training.
<br><br>To quickly acquire a large dataset, we wrote an automated crawler for movie reviews to simplify the task. It can automatically scrape movie reviews and rating information from Douban and Maoyan.<br>Additionally, we have also open-sourced this crawler on <a data-tooltip-position="top" aria-label="https://github.com/open17/movie-comment-spider" rel="noopener nofollow" class="external-link" href="https://github.com/open17/movie-comment-spider" target="_blank">GitHub</a>.<br><br>
<br>Labeled Data: We chose to focus on comments from Douban and Maoyan because they offer labeled datasets. This is critical as labeled data provides a foundation for training and evaluating our favorability rate analysis models with higher accuracy.
<br><img alt="Comment on Douban and Maoyan" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/Comment.png" referrerpolicy="no-referrer"><br><br><br><br>
<br>Here we use favorability rate dictionary combined with Naive Bayes which is based on SnowNLP.<a data-footref="[inline0" href="https://www.allenygy.vip/about:blank#fn-1-56990f7407733d86" class="footnote-link" target="_self" rel="noopener nofollow">[1]</a>
<br>According the dataset we gained from crawl data (50000+ entries), Randomly split the dataset into training dataset and test dataset (8:2).
<br><br><br>
<br>Assumes that features are independent of each other.
<br>Estimates probabilities based on the features and labels in the training dataset.
<br><br><br><br>Split Chinese characters and calculate the probability that the term appears in the set<br><img alt="Cut Chinese Comment" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/CutComment.png" referrerpolicy="no-referrer"><br><br><br>
<br>Nowadays, &nbsp;studies have shown that Pretrained Models (PTM) based on large-scale unlabeled corpora can acquire generic language representations and perform well when fine-tuned to downstream tasks.
<br>Here we use Transformer-based model with whole word masking pre-training, retrained for favorability rate analysis which is based on Pre-training model ERNIE (Like Bert-wwm)
<br>According the dataset we gained from crawl data (50000+ entries), Randomly spilit the dataset into traning dataset, dev dataset(Used to dynamically adjust hyperparameters) and test dataset.
<br><br>
<br>Remove a batch data from the dataloader
<br>Feed batch data to the model for forward calculation
<br>Pass forward calculation result to loss function to calculate loss. The forward calculation result is passed to the evaluation method, and the evaluation index is calculated.
<br>Loss reverse return and update gradient. Repeat the above steps.
<br>Each time an epoch is trained, the program will evaluate the effectiveness of the current model training.<br><br><br><br><br>In order to test the generalizability of our model. We crawl the comment of the movie 《Wandering Earth 2》 From&nbsp; the Bilibili, and analyze it with two models respectively.<br>
<br>Estimation the comment score
<br>
<br>Machine Learning: Average comment favorability rate score is only 0.54. (Calculate method In the appendix)
<br>Deep Learning: Average comment favorability rate score is 0.89. (Calculate method In the appendix)
<br>
<br>Favorability rate Score Distribution
<br>
<br>Machine Learning Comment Score Distribution:<br>
<img alt="SnowNLP Comment Score Distribution" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/SnowNLPResult.png" referrerpolicy="no-referrer"><br>
The distribution is polarized
<br>Deep Learning Comment Score Distribution:<br>
<img alt="Deep Learning Comment Score Distribution" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/PaddleNLPResult.png" referrerpolicy="no-referrer">
<br>Obviously, the deep learning approach is more convincing, and the machine learning approach runs much faster than the deep learning approach.<br><br><br><br>A crawler capable of dynamically obtaining Bilibili video information (comments, bullet chats, etc.) which will be used in the backend part.<br><br>
<br>Set the User-Agent and cookie information
<br>Through bvid access to the comment information of the video including:<br>
<br>Comment
<br>Number of comments and likes
<br><img alt="User-Agent" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/User-Agent.png" referrerpolicy="no-referrer"><br>
<br>Crawl video basic information
<br>Through bvid access to the basic information of the video including:<br>
<br>Title
<br>Author
<br>Reply count, Favorite count,
<br>Coin count, Share count
<br><img alt="Video-info" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/Video-info.png" referrerpolicy="no-referrer"><br>
<br>Crawl video comment content and danmu content
<br>Through bvid request screen XML file obtained through basic information:<br>
<br>Time
<br>Timestamp
<br>Danmu text
<br><img alt="Comment" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/CommentData.png" referrerpolicy="no-referrer"><br>
<img alt="Danmu" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/DanmuData.png" referrerpolicy="no-referrer"><br><br><br>Those features talking about above will be used in backend according to FastAPI (backend framwork) to achieve front-end and back-end separation, supporting dynamic retrieval of Bilibili-related information and favorability rate analysis of comments on specified Bilibili videos using the two trained models, with dynamic data presentation to the front end.<br><br>Why FastAPI?<br>“FastAPI is a modern, fast (high-performance) web framework for building APIs with Python 3.6+.”<br>
<br>High performance
<br>Rapid development
<br>Automatic interactive API documentation
<br>Type hints for fewer bugs
<br><img alt="BackendAPI" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/BackendAPI.png" referrerpolicy="no-referrer"><br>Introduction to the three main API categories: video, videos, newvideo<br>
<br>Usage of 3 APIs:

<br>video: Fetch specific video information.
<br>videos: Gather statistics on all scraped videos.
<br>newvideo: Add new video data to the system.


<br><br>In this part, we use Vue3 + Typescripts + Arco Design + Vue-18n + Vite and connect the python backend to visualize data.<br><img alt="Main Page" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/MainPage.png" referrerpolicy="no-referrer"><br><br><br>
<br>Backend
<br><img alt="3lian" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/3lianbackend.png" referrerpolicy="no-referrer"><br>
<br>Frontend
<br><img alt="alt text" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/3lianfront.png" referrerpolicy="no-referrer"><br><br>
<br>Backend
<br><img alt="PopularRankbackend" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/PopularRankbackend.png" referrerpolicy="no-referrer"><br>
<br>Frontend
<br><img alt="Popular Rank" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/PopularRank.png" referrerpolicy="no-referrer"><br><br>
<br>Backend
<br><img alt="VideoInfos" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/VideoInfos.png" referrerpolicy="no-referrer"><br>
<br>Frontend<br>
<img alt="VideoCards" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/VideoCards.png" referrerpolicy="no-referrer">
<br><br>
<br>
Backend<br>
<img alt="alt text" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/TableBackend.png" referrerpolicy="no-referrer">

<br>
Frontend<br>
<img alt="alt text" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/Table.png" referrerpolicy="no-referrer">

<br><br><img alt="Backend Code" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/BackendCode.png" referrerpolicy="no-referrer"><br>
<br>
<br>SnowNLP is a library focused on natural language processing tasks for Chinese text, such as favorability rate analysis and text processing.<a href="https://www.allenygy.vip/about:blank#fnref-1-56990f7407733d86" class="footnote-backref footnote-link" target="_self" rel="noopener nofollow">↩︎</a>
]]></description><link>https://www.allenygy.vip/projects/dpw/bilibilivista.html</link><guid isPermaLink="false">Projects/DPW/BilibiliVista.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/DPW.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@main/uPic/BiliVistaImg/DPW.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Ploidy]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>Ploidy traditionally has been investigated by measuring DNA content using flow cytometry
<br>It can also be inferred from next generation sequencing (NGS) data either by examining k-mer distributions, or by assessing the distribution of allele frequencies at biallelic single nucleotide polymorphisms (SNPs)
<br><br><br>
<br>Disadvantage:

<br>does not provide summary statistics that permit quantifying how well the data fit the expected distributions
<br>this approach is that it is preceded by the identification of variable sites (“SNP calling”), which is carried out using methodologies that benefit from a previously known ploidy level


<br>This method was primarily developed for resequencing studies
<br><br><br>It models base frequencies as a Gaussian Mixture Model (GMM), and uses maximum likelihood to assess empirical data under the assumptions of diploidy, triploidy and tetraploidy.<br>使用高斯混合模型对可变位点的基频分布进行建模并使用最大似然法来选择最合理的倍性模型<br><br><br><br><br><br>latent variables  .<br><br><br><br><br><br>The log-likelihood is calculated after the M-step, and the next E-step is initiated unless the log-likelihood has changed by less then  from the previous M-step.<br><br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/research/bioinfo/ploidy/ploidy.html</link><guid isPermaLink="false">Research/BioInfo/Ploidy/Ploidy.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Ploidy Review]]></title><description><![CDATA[ 
 <br><br>
<br>求断点
<br>预处理断点数据
<br>求极值
<br><br>
<br><br>

<br>
<br><br><br>
<br>对每个断点算出所有的 
<br> 已知<br>
 给定  的每一组  可求
<br><br><br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/research/bioinfo/ploidy/ploidy-review.html</link><guid isPermaLink="false">Research/BioInfo/Ploidy/Ploidy Review.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 18:16:06 GMT</pubDate></item><item><title><![CDATA[Calculate Structure Entropy]]></title><description><![CDATA[ 
 <br><br><br>
<br>
<br>
<br>
<br>2m
]]></description><link>https://www.allenygy.vip/research/bioinfo/calculate-se.html</link><guid isPermaLink="false">Research/BioInfo/Calculate SE.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 18:14:28 GMT</pubDate></item><item><title><![CDATA[AlphaFold2]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:ReadPaper" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ReadPaper</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Bioinfo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Bioinfo</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:ProteinStructurePrediction" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ProteinStructurePrediction</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:AlphaFold2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#AlphaFold2</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:Transformer" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Transformer</a> 
 <br><a href="https://www.allenygy.vip?query=tag:ReadPaper" class="tag" target="_blank" rel="noopener nofollow">#ReadPaper</a> <a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a> <a href="https://www.allenygy.vip?query=tag:Bioinfo" class="tag" target="_blank" rel="noopener nofollow">#Bioinfo</a> <a href="https://www.allenygy.vip?query=tag:ProteinStructurePrediction" class="tag" target="_blank" rel="noopener nofollow">#ProteinStructurePrediction</a>	<a href="https://www.allenygy.vip?query=tag:AlphaFold2" class="tag" target="_blank" rel="noopener nofollow">#AlphaFold2</a> <a href="https://www.allenygy.vip?query=tag:Transformer" class="tag" target="_blank" rel="noopener nofollow">#Transformer</a><br><br><a data-tooltip-position="top" aria-label="https://www.nature.com/articles/s41586-021-03819-2" rel="noopener nofollow" class="external-link" href="https://www.nature.com/articles/s41586-021-03819-2" target="_blank">Highly accurate protein structure prediction with AlphaFold</a>

<br><a data-href="AlphaFold2" href="https://www.allenygy.vip/AlphaFold2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AlphaFold2</a><a data-href="AlphaFold2" href="https://www.allenygy.vip/research/bioinfo/alphafold2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AlphaFold2</a> 被 《Science》 评选为2021年AI在科学界最大的突破
<br><a data-href="AlphaFold2" href="https://www.allenygy.vip/AlphaFold2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AlphaFold2</a><a data-href="AlphaFold2" href="https://www.allenygy.vip/research/bioinfo/alphafold2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AlphaFold2</a> 把通过氨基酸序列对蛋白质三维结构预测的误差，降低到原子级别

<br><br><img alt="Model architecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/e.png" referrerpolicy="no-referrer"><br>模型大概可以分成四个部分<br>
<br>Feature Extraction
<br>Encoder
<br>Decoder
<br>Recycling
<br><br>特征提取两部分信息<br>
<br>MSA 
<br>Pairing &amp; Templates 
<br><br>MSA提取序列在多物种中的共进化信息<br>
<br>在基因数据库中搜索相似的氨基酸序列

<br>多序列比对


<br>得到不同氨基酸序列的特征
<br><img alt="FeatureExtraction" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/FeatureExtraction.png" referrerpolicy="no-referrer"><br><br>提取氨基酸之间的特征<br>
<br>氨基酸之间的关系 
<br>在结构数据库中搜索，从已知的氨基酸序列的结构中搜索得到空间信息
<br><br><br>MSA Representation<br>
<br>s: s 行氨基酸序列 

<br>第一行是人的氨基酸序列 
<br>后面s-1 是从基因数据库中匹配到的不同物种的氨基酸序列 


<br>r: r个氨基酸
<br>c:  每个氨基酸表示为长为c的向量
<br><img alt="Encoder Input" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/EncoderInput.png" referrerpolicy="no-referrer"><br>Pair Representation <br>
<br>r: r个氨基酸
<br>c: 每个氨基酸表示为长为c的向量
<br>主要用于表示氨基酸两两之间的空间信息
<br><br>
<br>与Transformer 不同

<br>Transformer 输入的是一段序列
<br>Evoformer 在这里输入的是一个二维的矩阵 


<br><img alt="a" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/a.png" referrerpolicy="no-referrer"><br>MSA和Pair都会进入多头自注意力模块<br>
<br>具有残差连接和在元素作用上的MLP
<br>Pair的部分还需要加入物理上三角不等式的处理<br>与Transformer不同<br>
<br>氨基酸对 (Pair Representation) 之间的信息会加入对序列的建模<br>
- 序列建模之后也会加入对氨基酸对的建模<br>
- 自注意力机制做两次<br>
- 因为输入是一个二维的矩阵<br>
<img alt="a" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/a.png" referrerpolicy="no-referrer">
<br><br>
<br>输出的矩阵维度不发生变化, c发生变化
<br><img alt="Encoder Output" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/EncoderOutput.png" referrerpolicy="no-referrer"><br><br>根据Encoder的输出拿到<br>
<br>Single Representation (r, c) 人氨基酸序列

<br>人类氨基酸所有的特征的表示


<br>Pair Representation (r, r, c) 氨基酸对

<br>氨基酸之间的相关信息


<br>Backbone frames 

<br>氨基酸序列主干的空间结构


<br><img alt="Decoder" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/Decoder/Decoder.png" referrerpolicy="no-referrer"><br><br><br>记录下一个氨基酸与上一个氨基酸的相对位置<br>
<br>R基部分原子的旋转的角度

<br>欧几里得变换
<br> 
<br>极性，电荷可以限制 A, B 值


<br>先预测backbone上氨基酸的相对位置
<br>再预测每个氨基酸R基上的原子的相对位置<br>
<img style="zoom: 50%;" alt="ProteinPrediction" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/ProteinPrediction.png" referrerpolicy="no-referrer">
<br><br>把编码器的输出和解码器的输出通过回收机制传回编码器的输入<br>
<br>类似RNN，但是这里的梯度不反传, 只经过56层就可以计算梯度
<br><img alt="Model architecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/e.png" referrerpolicy="no-referrer"><br><br>Training<br>
<br>
<br>  <br>
<br>特征对齐损失，用于量化模型预测的原子位置与实际原子位置之间的差异。 
<br><br>
<br>辅助损失，它可能与多个预测任务相关，例如二级结构预测、溶剂可及性预测等。
<br> <br>
<br>距离损失，它衡量模型预测的残基间距离与真实结构之间的误差。
<br>Training<br>
<br>
<br> <br>
<br>多序列比对损失，用于确保模型预测与进化信息一致。
<br> <br>
<br>构象损失，用于确保整体蛋白质构象的准确性。
<br>Fine-tuning<br>
<br>
<br> <br>
<br>用于处理实验解析度的损失，用于在蛋白质结构中考虑到实验数据的不确定性。
<br> <br>
<br>违反物理或生物化学约束的损失。
<br><br><br>先在有标号的数据集PDB里训练一个模型, 通过这个模型预测没有标号的数据形成一个大一些的数据集，然后选择置信度较高的数据，加上原来有标号的数据，训练新的模型<br>
<br>Using an approach similar to noisy student self-distillation.
<br>In this procedure, we use a trained network to predict the structure of around 350,000 diverse sequences from Uniclust3036 and make a new dataset of predicted structures filtered to a high-confidence subset.
]]></description><link>https://www.allenygy.vip/research/bioinfo/alphafold2.html</link><guid isPermaLink="false">Research/BioInfo/AlphaFold2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 24 Nov 2024 18:15:11 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/e.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Research/AlphaFold/e.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CoT Reading List]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:ReadingList" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ReadingList</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:CoT" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#CoT</a> 
 <br><a href="https://www.allenygy.vip?query=tag:ReadingList" class="tag" target="_blank" rel="noopener nofollow">#ReadingList</a> <a href="https://www.allenygy.vip?query=tag:CoT" class="tag" target="_blank" rel="noopener nofollow">#CoT</a><br><br><br>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2201.11903" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2201.11903" target="_blank">Chain-of-Thought Prompting Elicits Reasoning in Large Language Models</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2205.11916" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2205.11916" target="_blank">Large Language Models are Zero-Shot Reasoners</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2210.03493" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2210.03493" target="_blank">Automatic Chain of Thought Prompting in Large Language Models</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2205.10625" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2205.10625" target="_blank">Least-to-Most Prompting Enables Complex Reasoning in Large Language Models</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2210.03350" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2210.03350" target="_blank">Measuring and Narrowing the Compositionality Gap in Language Models</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2203.11171" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2203.11171" target="_blank">Self-Consistency Improves Chain of Thought Reasoning in Language Models</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2302.12246" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2302.12246" target="_blank">Active Prompting with Chain-of-Thought for Large Language Models</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2207.00747" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2207.00747" target="_blank">Rationale-Augmented Ensembles in Language Models</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2203.14465" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2203.14465" target="_blank">STaR: Self-Taught Reasoner Bootstrapping Reasoning With Reasoning</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2206.02336" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2206.02336" target="_blank">On the Advance of Making Language Models Better Reasoners</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2210.03057" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2210.03057" target="_blank">Language Models are Multilingual Chain-of-Thought Reasoners</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2204.02311" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2204.02311" target="_blank">PaLM: Scaling Language Modeling with Pathways</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2206.07682" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2206.07682" target="_blank">Emergent Abilities of Large Language Models</a>
<br><a data-tooltip-position="top" aria-label="https://arxiv.org/abs/2207.10342" rel="noopener nofollow" class="external-link" href="https://arxiv.org/abs/2207.10342" target="_blank">Language Model Cascades</a>
<br><br>
<br><a data-href="Sampling Methods" href="https://www.allenygy.vip/Sampling Methods" class="internal-link" target="_self" rel="noopener nofollow">Sampling Methods</a>

<br>Top-k Sampling
<br>Nucleus Sampling 
<br>Beam Search
<br>Temperature Sampling 


<br><a data-href="Decoding Methods" href="https://www.allenygy.vip/Decoding Methods" class="internal-link" target="_self" rel="noopener nofollow">Decoding Methods</a>

<br>Greedy Decoding 
<br>Self-Consistency 
<br><a data-href="CoT-Decoding" href="https://www.allenygy.vip/CoT-Decoding" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT-Decoding</a><a data-href="CoT-Decoding" href="https://www.allenygy.vip/research/cot/cot-decoding.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT-Decoding</a>


<br>Instruction-tuned 
<br>System I
<br>System II
]]></description><link>https://www.allenygy.vip/research/cot/cot-reading-list.html</link><guid isPermaLink="false">Research/CoT/CoT-Reading-List.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Chain-of-Thought Reasoning Without Prompting]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:ReadPaper" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ReadPaper</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:DeepLearning" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#DeepLearning</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:CoT-Decoding" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#CoT-Decoding</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:CoT" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#CoT</a> 
 <br><a href="https://www.allenygy.vip?query=tag:ReadPaper" class="tag" target="_blank" rel="noopener nofollow">#ReadPaper</a> <a href="https://www.allenygy.vip?query=tag:DeepLearning" class="tag" target="_blank" rel="noopener nofollow">#DeepLearning</a> <a href="https://www.allenygy.vip?query=tag:CoT-Decoding" class="tag" target="_blank" rel="noopener nofollow">#CoT-Decoding</a> <a href="https://www.allenygy.vip?query=tag:CoT" class="tag" target="_blank" rel="noopener nofollow">#CoT</a><br><br> <a data-tooltip-position="top" aria-label="https://doi.org/10.48550/arXiv.2402.10200" rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2402.10200" target="_blank">Chain-of-Thought Reasoning without Prompting</a>
这篇文章通过优化解码方法，提出了CoT-Decoding， 提高回答的准确性
<br>CoT-Decoding  类似做选择题时的排除法<br>
<br>当解题人认为选项之间差距不大的时候，难以决策，或者说决策的准确性会下降

<br>对应到解码就是，不同 token 的概率差距不大的时候


<br>而当解题人认为选项答案差距较大时，决策的准确性会提高

<br>对应到解码就是，不同 token 的概率差距较大的时候


<br><br>传统的解码方法是 Greedy decoding<br>贪婪解码（Greedy Decoding）是一种简单的序列生成方法，通常用于自然语言处理中的文本生成任务。在这种方法中，每一步都选择具有最高概率的下一个词作为输出，直到生成结束符或达到预定的输出长度。<br>具体过程如下：<br>
<br>从模型生成的概率分布中选择概率最高的词作为当前步的输出。
<br>将这个词作为输入，继续生成下一个词。
<br>重复上述步骤，直到生成完整的序列。
<br>贪婪解码的优点是实现简单，速度快，因为它只需在每一步选择一个最高概率的词。然而，这种方法有一个明显的缺点，即它可能会错过全局最优的序列。由于每一步都只选择局部最优的词，贪婪解码可能会导致生成的文本质量较低，缺乏连贯性和多样性。<br>Example
例如，在给定一个语言模型预测下一个词的任务中，如果模型在某一步预测的概率分布为：

<br>"The"：0.5
<br>"A"：0.3
<br>"An"：0.2

贪婪解码会选择概率最高的词 "The" 作为输出，然后继续这个过程，选择下一个词，直到生成完整的句子。
<br><br><br>The formula represents the confidence score  for the -th decoding path when generating the answer. The formula is as follows:<br><br>Where:<br>
<br>: Confidence score for the -th decoding path.
<br>: Normalization factor by the length of the answer.
<br>: Summation over all tokens in the answer.
<br>: Probability of the top-ranked token  at the -th decoding step.
<br>: Probability of the second-ranked token  at the -th decoding step.
<br>Here,  and  represent the top two tokens at the -th decoding step in the -th decoding path, chosen for their maximum post-softmax probabilities from the vocabulary, given  being part of the answer tokens.<br>The model’s overall confidence in decoding the final answer is approximated by averaging these probability differences for all relevant answer tokens .<br>CoT-Decoding 

<br>在生成第一个 token 时，在 n 个 token 中选择前 k个 token
<br>现在每个 token 都对应了该推理路径的起点，之后模型对每条路径都采用 Greedy Decoding 的方式生成后续的 token
<br>在生成 token 的同时，将该时刻生成的 n 个 token 里 softmax 排名最高的两个 token 概率相减，累加到该路径的置信度中
<br>最后选择置信度最高的路径作为最终的推理路径

<img alt="CoT-Decoding" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407080251459.png" referrerpolicy="no-referrer">
<br>CoT-Decoding  类似做选择题时的排除法

<br>当解题人认为选项之间差距不大的时候，难以决策，或者说决策的准确率会下降

<br>对应到解码就是，不同 token 的概率差距不大的时候


<br>而当解题人认为选项答案差距较大时，决策的准确性会提高

<br>对应到解码就是，不同 token 的概率差距较大的时候



<br><br>这个公式表示对答案  的综合置信度  的计算方法。公式如下：<br><br>其中：<br>
<br>：答案  的综合置信度。
<br>：对所有解码路径  进行求和。
<br>：解码路径  对答案  的置信度。
<br>这个公式表示将所有解码路径中对答案  的置信度求和，以得到答案  的综合置信度。<br>English Version
This formula represents the calculation method for the overall confidence degree  of answer . The formula is as follows:

Where:

<br>: The overall confidence degree of answer .
<br>: Summation over all decoding paths .
<br>: The confidence degree of decoding path  for answer .

This formula indicates that the overall confidence degree of answer  is obtained by summing the confidence degrees of all decoding paths for answer .
<br><br>
<br>
CoT-Decoding Effectively Elicits Reasoning from Language Models
 CoT-Decoding 能有效地从语言模型引导出推理路径

<br>首先是把 CoT-Decoding 与其他解码方法进行对比 
<br>然后是测试 CoT-Decoding 在不同参数量的同一个模型影响 
<br>以及 k 值的选择对结果的影响



<br>
CoT-Decoding Enables a Better Understanding of Model's Intrinsic Reasoning Abilities
 CoT-Decoding 能更好地揭示模型的内在推理能力	

<br>测试 CoT-Decoding 在不同推理任务上的表现
<br>以及展示模型本身的推理能力不足



<br>
Combining CoT-decoding with CoT-Prompting
 将 CoT-Decoding 与 CoT-Prompting 效果更好	

<br><br><br>这个实验采用了不同的采样和解码方法对Mistral-7B这个预训练模型进行测试<br>采样方法包括<br>
<br> k = 10
<br> p = 0.9
<br> b = 10
<br> T = 0.7
<br>解码方法包括<br>
<br> 
<br> 10 paths
<br> k = 10
<br><img alt="Result" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407062132592.png" referrerpolicy="no-referrer"><br>作者认为只有 CoT-decoding 方法可以有效地引导模型进行推理。<br><br>在这个实验中，作者针对不同的模型包括 Mistral-7B、PaLM-2 和 Gemma，分别采用Greedy Decoding 和 Cot Decoding 进行测试。<br><img alt="Effectively In Different Models" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407061332678.png" referrerpolicy="no-referrer"><br>PaLM-2, Mistral and Gemma, all show a significant improvement in performance when using CoT-decoding compared to greedy decoding. 
针对不同的模型，采用 CoT-Decoding 方法，都能提高模型的准确性
<br><br> 在这个实验中，作者对GSM8K和Year Parity两个测试集<br>
使用不同参数的同一个模型PaLM-2进行测试<br>
<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407062151542.png" referrerpolicy="no-referrer"><br>
CoT-decoding reliably improves reasoning performance across model scales (PaLM-2), even when the task does not naturally improve by scaling up only (e.g., year parity).<br>Quote

<br>On GSM8K, CoT Decoding consistently yields +10-30% absolute accuracy gains. 
<br>On year parity, when using greedy decoding, the model's performance remains flat even after scaling up model sizes.<br>
CoT-Decoding 在不同参数大小上的模型都能表现出甚至超过下一个参数大小模型的效果

<br><br>在下图的 Large size 和 Instruction-tuned 的两个模型测试结果上看，两者的准确率相差不大<br><img alt="closes the reasoning gap between pre-trained and instruction-tuned models" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407061345129.png" referrerpolicy="no-referrer"><br>Intriguingly, we observe that CoT-decoding enables a pre-trained model to achieve a similar performance of an instruction-tuned model

<br>作者还认为，CoT-Decoding 方法可以部分地缩小预训练和指导调整模型之间的推理差距，而不需要使用任何监督数据。

<br>更有趣的是，CoT-Decoding 可以优化 Instruction-tuned model<br>
<br>
<img src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407062222490.png" referrerpolicy="no-referrer"><br>More interestingly, we observe that CoT decoding can further improve the instruction tuned model<br><br>因为 CoT-Decoding 最后还是得从模型中给出的 K 条路径里选择一条推理路径<br>
所以 K 的选择会影响最终的结果	<br>在这个实验里，作者对PaLM-2 model 进行不同 K 值的测试<br><img alt="Result" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407071256543.png" referrerpolicy="no-referrer"><br>Quote
Overall we found that higher values of K typically result in improved model performance, suggesting that in many cases, the correct CoT paths may indeed exist but are often ranked lower during model's decoding.<br>
For instruction-tuned models, the effect of 𝑘 is less significant, indicating that the process of instruction-tuning effectively brings forth the majority of CoT-paths to the first few decoding paths.
<br>总体上看，较高的 K 值通常会导致模型性能的提高，这表明在许多情况下，正确的 CoT 路径可能确实存在，但通常在模型的贪心解码过程中排名较低。	<br>
对于指令微调的模型，K的影响较小，这表明指令调整的过程有效地将大多数 CoT 路径提到了前几个解码路径中。<br>
<br><br>作者认为 CoT-Decoding 能更好地揭露模型的内在推理能力<br>在这个实验里使用 CoT-Decoding，尝试了常见的几个推理任务<br>以下是这几个符号推理任务的解释：(来自 ChatCPT)

<br>
Coin Flip Task（抛硬币任务）：

<br>描述：这个任务来自Wei等人的研究（2022年）。在这个任务中，模型需要模拟多轮抛硬币的过程，并推断最终的结果。
<br>难度：任务难度通过潜在抛硬币轮次（2轮、3轮、4轮）来调整。每一轮抛硬币的结果（正面或反面）会影响最终的推理过程。


<br>
Web of Lies Task（谎言之网任务）：

<br>描述：这个任务来自Big-Bench-Hard基准测试，由Suzgun等人（2022年）设计。在这个任务中，模型需要解析包含若干真假声明的语句集合，并确定哪些语句是真实的，哪些是虚假的。
<br>难度：任务难度通过声明的数量（3个、4个、5个）来调整。随着声明数量的增加，推理的复杂性也随之增加。


<br>
Multi-step Arithmetic Task（多步骤算术任务）：

<br>描述：这个任务同样来自Big-Bench-Hard基准测试。在这个任务中，模型需要解决包含多个步骤的算术问题。这些问题可能涉及加法、减法、乘法、除法等基本算术运算，需要模型逐步推理出最终答案。
<br>难度：任务难度通过问题的深度（𝑑）和长度（𝑙）来调整。深度表示问题包含的步骤数量，长度表示每一步涉及的操作复杂性。随着深度和长度的增加，任务的复杂性也随之增加。



<br><img alt="Result" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407061409636.png" referrerpolicy="no-referrer"><br>Quote

<br>We also looked at the model's top-K decoding paths, and found that models can generate the correct CoT paths when the solution involves at most 1 or 2 step knowledge manipulation, and the model starts to struggle with generating the correct CoT-paths when the steps become 3 or more.
<br>This mirrors the finding in (McCoy et al., 2023), where the authors show language models are highly influenced by the distribution they have been trained on.

<br>当解决方案涉及最多1或2步知识操作时，模型可以生成正确的 CoT 路径，但当步骤变为3或更多时，模型开始难以生成正确的 CoT 路径。作者认为这表明模型在推理方面的局限性。<br>
作者也认为这与 (McCoy et al., 2023) 的研究结果一致，他们表明语言模型受到它们训练的分布的影响。	<br>Quote

<br>On Coin-Flip and Web-of-Lies, we observe that the model can generate CoT paths that simulate the process step-by-step, but it can easily lose track of the states, especially when the task complexity increases.
<br>On Multi-step Arithmetic, we observe that the model tends to perform calculations from left to right in the CoT-decoding paths, rather than following the correct mathematical order.

<br>在 Coin-Flip 和 Web-of-Lies 任务中，我们观察到模型可以生成逐步模拟过程的 CoT 路径，但当任务复杂度增加时，模型很容易失去状态。<br>
在 Multi-step Arithmetic 任务中，我们观察到模型倾向于在 CoT-decoding 路径中从左到右进行计算，而不是按照正确的数学顺序进行计算。<br>总的来说，就是 CoT-Decoding 可以从模型里选到比较合理的推理路径，但没办法无中生有直接生成正确的推理路径<br><br>最后作者尝试把CoT-Decoding 和 CoT-Prompting 结合，发现效果会更好<br>Quote
CoT-Decoding maintains a strong performance compared to self-consistency (Wang et al., 2023a) when both are combined with CoT-prompts.
<br>CoTCoT-Decoding 与 CoT-Prompting 结合后，与 self-consistency 方法相比，性能仍然很强。<br><img alt="Combining CoT-decoding with CoT-Prompting" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407061420054.png" referrerpolicy="no-referrer"><br>Quote
Since self-consistency aggregates over multiple paths, we also show the performance based on our path aggregation algorithm, which significantly improves the model's reasoning at a similar cost.
<br>由于 self-consistency 聚合了多个路径，我们还展示了基于我们的路径聚合算法的性能，在成本差不多的情况下，模型的推理能力显著提高。]]></description><link>https://www.allenygy.vip/research/cot/cot-decoding.html</link><guid isPermaLink="false">Research/CoT/CoT-Decoding.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407080251459.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407080251459.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CoT Indivisual Report]]></title><description><![CDATA[ 
 <br><br>During this summer course, in the Reading Paper phase, our group was assigned the paper "Chain-of-Thought reasoning without prompting". After reading this paper, I developed an interest in the Chain of Thought (CoT) approach. Therefore, in my Individual Report, I would like to further explore and summarize the literature related to Chain of Thought.<br><br>Chain of Thought is a series of short sentences that mimic the reasoning process a person might go through when answering a question. CoT Promoting is a method that provides a series of prompts to guide the model through a series of thoughts. In my view, CoT Promoting offers a paradigm for thinking when answering questions—similar to the steps we take when solving problems—except here, the process of thinking is handed over to the model to generate answers.<br>Compared to Zero Shot learning, CoT Promoting has several advantages:<br>
<br>First, CoT provides explainability. When we receive an answer, we not only get the solution but also understand how it was derived.
<br>Secondly, CoT breaks down complex problems into simpler steps, enhancing the accuracy of the answers.
<br>Experiments on three large language models show that chain-of-thought prompting improves performance on a range of arithmetic, commonsense, and symbolic reasoning tasks.<br><img style="zoom:50%;" alt="Chain-of-Thought Result" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407252346079.png" referrerpolicy="no-referrer"><br>PaLM 540B uses chain-of-thought prompting to achieve new state of-the-art performance on the GSM8K benchmark of math word problems.<br><br>Through reviewing relevant literature, I believe there are two main methods to elicit the Chain of Thought: one is through prompting, and the other is by changing the decoding approach.<br><br>Let's first look at how to elicit Chain of Thought through prompting. After reviewing the literature, I have identified several approaches. Here, I will mainly introduce two methods: Auto-CoT and Active Prompting.<br><br>CoT prompting can be divided into two major paradigms. The first paradigm, known as Zero-Shot-CoT, involves adding a simple prompt such as "Let's think step by step" following the test question to facilitate reasoning chains in Large Language Models (LLMs). This approach does not require input-output demonstrations and is task-agnostic. The second paradigm, Manual-CoT, relies on manually designed demonstrations. Each demonstration includes a question followed by a reasoning chain that leads to the answer. Although Manual-CoT has demonstrated superior performance, it requires significant manual effort to design task-specific demonstrations.<br><img alt="Zero Shot CoT and Manual CoT" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407251741501.png" referrerpolicy="no-referrer"><br>However, manually designing CoT prompting requires a significant amount of manpower and is not suitable for all tasks. Therefore, the authors have proposed Auto CoT, an automated method for designing CoT prompting. Briefly, Auto-CoT consists of two main steps:<br>
<br>Partition questions of a given dataset into eight clusters** — sentence-BERT is used to encode the questions, and then clusters are formed based on cosine similarity.
<br>Select a representative question from each cluster and generate its reasoning chain using Zero-Shot-CoT with simple heuristics — the heuristics involve not selecting a question with more than 60 tokens or a rationale with more than five reasoning steps. These heuristics aim to improve the likelihood of the auto-generated response being correct.
<br><img alt="Auto CoT" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407251729807.png" referrerpolicy="no-referrer"><br>In fact, the authors initially attempted to generate a series of reasoning explanations using the Zero-Shot-CoT approach. However, they found that this simple method could not effectively replace the benefits brought by manual design, as errors often occurred in the reasoning chains generated by Zero-Shot-CoT.<br>Further analysis revealed that the diversity of problems in the reasoning explanations is crucial for mitigating the errors caused by Zero-Shot-CoT.<br>This is also why the article emphasizes the approach of "Let's think not just step by step, but also one by one."<br><br>In this method, the focus is on how to select prompts for Chain of Thought (CoT). Simply put, it's similar to how during an exam, we identify the questions that confuse us the most and prioritize learning them, rather than randomly choosing questions to study. This approach helps achieve better results.<br>The authors employed four uncertainty metrics—disagreement, entropy, variance, and confidence, with disagreement and entropy being the main metrics used in their experiments.<br>Subsequently, the questions identified as the most uncertain based on these metrics are selected for manual annotation.<br>These 'n' uncertain questions are annotated by human annotators to generate CoT rationales and then used as examples for few-shot prompting along with the test question to generate responses.<br><img alt="Active Promoting" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407251635179.png" referrerpolicy="no-referrer"><br>Overall, the approach of Auto CoT is based on diversity. It involves partitioning questions into clusters and generating reasoning chains for representative questions from each cluster. This method utilizes sentence embeddings and cosine similarity to ensure a wide coverage of different types of problems within a dataset, aiming to generate a broad spectrum of reasoning paths that enhance the model's ability to tackle diverse challenges.<br>On the other hand, Active Prompting is based on uncertainty. It prioritizes the selection of prompts by identifying questions with high levels of uncertainty, using metrics like disagreement and entropy. These uncertain questions are then manually annotated to create detailed CoT rationales. This approach ensures that the model is trained on the most challenging aspects of a dataset, which may require nuanced reasoning or exhibit higher error rates in automated reasoning processes.<br>Both methods aim to improve the reasoning capabilities of language models by guiding them in how to think through problems, but they approach the task from different angles—Auto CoT through the lens of problem diversity, and Active Prompting through the lens of targeting uncertainty.<br><br>The traditional decoding method is greedy decoding. Greedy decoding is a simple method for generating sequences where, at each step, the word with the highest probability is selected as the output, until an end symbol is generated or a predetermined output length is reached. The advantages of greedy decoding are its simplicity and speed, as it only requires selecting the highest probability word at each step. However, this method has a significant drawback: it may miss the globally optimal sequence. Since it selects only the locally optimal word at each step, greedy decoding can lead to lower quality text generation, lacking in coherence and diversity.<br><br><img alt="Self Consistency Decoding" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407260033779.png" referrerpolicy="no-referrer"><br>Self-Consistency Decoding essentially aggregates the answers by selecting the most frequently occurring result as the answer. First, a set of candidate outputs is sampled from the language model's decoder, generating a group of different candidate reasoning paths. Then, the answers are aggregated by marginalizing the sampled reasoning paths and selecting the most consistent answer from the generated results.<br><img alt="Self Consistency Decoding" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407260054056.png" referrerpolicy="no-referrer"><br>Self-consistency significantly enhances arithmetic reasoning performance across all four language models, surpassing the results achieved with chain-of-thought prompting. This approach yields substantial gains across the models and has achieved state-of-the-art results on five out of six tasks.<br><br>CoT-Decoding builds upon Self-Consistency by introducing a confidence metric. This method calculates the confidence level for each reasoning path and aggregates paths that lead to the same answer, ultimately selecting the path with the highest confidence as the final reasoning path. The concept mirrors the elimination method used in multiple-choice tests, where incorrect options are first excluded to identify the most probable answer from the remaining choices.<br><img alt="CoT-Decoding" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407080251459.png" referrerpolicy="no-referrer"><br>This approach is particularly effective when there is a significant difference between the options. When options are closely matched, decision-making becomes challenging, and the accuracy of decisions decreases—akin to scenarios in decoding where the probability differences between tokens are minimal. In contrast, when the disparity between answer options is marked, decision-making confidence increases, similar to when there is a significant difference in token probabilities during decoding. CoT-Decoding enhances confidence assessment by accumulating the difference in probabilities between the top-2 predicted tokens.<br><img alt="Result" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407062132592.png" referrerpolicy="no-referrer"><br>In the final part of the study, the authors compared various sampling and decoding methods in their experiments. The results indicate that CoT-Decoding achieved the best performance across all tasks, demonstrating that CoT-Decoding is an effective decoding method that can enhance the performance of models.	<br><br>This report has explored the Chain of Thought (CoT) approach, focusing on enhancing the reasoning capabilities of language models through diverse prompting and decoding strategies. Auto CoT and Active Prompting refine how models generate and improve answers by harnessing problem diversity and addressing uncertainty, respectively. Meanwhile, decoding techniques like Self-Consistency Decoding and CoT Decoding improve answer accuracy and confidence by emphasizing the most consistent and probable outcomes. <br><br>Diao, S., Wang, P., Lin, Y., Pan, R., Liu, X., &amp; Zhang, T. (2024). Active Prompting with Chain-of-Thought for Large Language Models (No. arXiv:2302.12246). arXiv. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2302.12246" target="_blank">https://doi.org/10.48550/arXiv.2302.12246</a><br>Kim, S., Joo, S. J., Kim, D., Jang, J., Ye, S., Shin, J., &amp; Seo, M. (2023). The CoT Collection: Improving Zero-shot and Few-shot Learning of Language Models via Chain-of-Thought Fine-Tuning (No. arXiv:2305.14045). arXiv. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2305.14045" target="_blank">https://doi.org/10.48550/arXiv.2305.14045</a><br>Wang, X., Wei, J., Schuurmans, D., Le, Q., Chi, E., Narang, S., Chowdhery, A., &amp; Zhou, D. (2023). Self-Consistency Improves Chain of Thought Reasoning in Language Models (No. arXiv:2203.11171). arXiv. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2203.11171" target="_blank">https://doi.org/10.48550/arXiv.2203.11171</a><br>Wang, X., &amp; Zhou, D. (2024). Chain-of-Thought Reasoning Without Prompting (No. arXiv:2402.10200). arXiv. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2402.10200" target="_blank">https://doi.org/10.48550/arXiv.2402.10200</a><br>Wei, J., Wang, X., Schuurmans, D., Bosma, M., Ichter, B., Xia, F., Chi, E., Le, Q., &amp; Zhou, D. (2023). Chain-of-Thought Prompting Elicits Reasoning in Large Language Models (No. arXiv:2201.11903). arXiv. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2201.11903" target="_blank">https://doi.org/10.48550/arXiv.2201.11903</a><br>Zhang, Z., Zhang, A., Li, M., &amp; Smola, A. (2022). Automatic Chain of Thought Prompting in Large Language Models (No. arXiv:2210.03493). arXiv. <a rel="noopener nofollow" class="external-link" href="https://doi.org/10.48550/arXiv.2210.03493" target="_blank">https://doi.org/10.48550/arXiv.2210.03493</a>]]></description><link>https://www.allenygy.vip/research/cot/cot-individual-report.html</link><guid isPermaLink="false">Research/CoT/CoT Individual Report.md</guid><dc:creator><![CDATA[Junya YANG]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407252346079.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/DeepLearning/202407252346079.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[An integration approach of hybrid databases based on SQL in cloud computing environment]]></title><description><![CDATA[<a class="tag" href="https://www.allenygy.vip/?query=tag:Database" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#Database</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:integration" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#integration</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:NoSQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#NoSQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:SQL" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#SQL</a> <a class="tag" href="https://www.allenygy.vip/?query=tag:ReadPaper" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ReadPaper</a> 
 <br><a href="https://www.allenygy.vip?query=tag:Database" class="tag" target="_blank" rel="noopener nofollow">#Database</a> <a href="https://www.allenygy.vip?query=tag:integration" class="tag" target="_blank" rel="noopener nofollow">#integration</a>  <a href="https://www.allenygy.vip?query=tag:NoSQL" class="tag" target="_blank" rel="noopener nofollow">#NoSQL</a> <a href="https://www.allenygy.vip?query=tag:SQL" class="tag" target="_blank" rel="noopener nofollow">#SQL</a> <a href="https://www.allenygy.vip?query=tag:ReadPaper" class="tag" target="_blank" rel="noopener nofollow">#ReadPaper</a>  <br><br><br>
<br>What is IOT？
<br>SQL Versus NoSQL
<br>Experiment 
<br>SQL and NoSQL Integration
<br>Conclusion
<br><br>
<br>IoT refers to any object/thing around us which is connected to internet. 
<br>This object is also able to communicate through internet.
<br>Like temperature sensor connected to oven, fridge or just to measure a room temperature. IoT is network of such things which may communicate with each other or with user.<br>IoT is having application in various domains like smart city, industrial, medical services, etc.<br><br><br><br>Temperature, humidity, soil moisture sensors are used in the hardware along with the water level detection.<br>Sprinkler motor is turned ON depending on the inputs from soil moisture and water level in the tank. If the soil moisture level drops below the threshold value and if water level is TRUE, then sprinkler motor turns ON.<br><br><img alt="System Architecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407101124185.png" referrerpolicy="no-referrer"><br>The data from these sensors is collected and is sent to database server and user email ID. The aim is to further utilize this data for analysis using data processing tools.<br>Data is stored in both MySQL and MongoDB database systems for carrying out the comparison study.<br><br><img alt="MySQL" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407101137755.png" referrerpolicy="no-referrer"><br>Db.collection.insert({
	sensor_id: &lt;sensor ID number&gt;,
	Humidity: &lt;humidity sensor reading&gt;, 
	Soil_moisture: &lt;moisture sensor reading&gt;, 
	Temperature: &lt;temperature sensor reading&gt;, 
	CreateDate: new Date(), 
	Userid: &lt;User ID&gt; 
})
<br><br>
<br>SELECT query with varying number of threads 
<br>Here is the summary of the first two experiments from the document comparing MySQL and MongoDB databases for an IoT application:<br><br>Measure the response time of SELECT queries with varying numbers of threads.<br>
<br>Setup: The number of threads was varied from 1 to 10. Each SELECT query fetched 1000 records from a database containing 10,000 records.
<br>Results: 

<br>For up to 4 threads, the response times for MySQL and MongoDB were similar.
<br>At 10 threads, MongoDB showed a significant increase in response time compared to MySQL.
<br>Observation: Too many threads in MongoDB can overwhelm the system, leading to increased latency and CPU starvation.


<br><br>
<br>Objective: Measure the response time for INSERT queries with varying numbers of threads.
<br>Setup: Similar to the SELECT query test, the number of threads was varied from 1 to 10.
<br>Results: 

<br>The response time for MySQL increased at a faster rate compared to MongoDB.
<br>MongoDB demonstrated faster performance for INSERT operations.
<br>Observation: MongoDB outperformed MySQL in write latency, making it a better choice for applications with heavy write operations.


<br>These experiments highlight the differences in performance characteristics between MySQL and MongoDB, with MongoDB showing advantages in handling write operations under load, while MySQL maintained more stable read performance with higher thread counts.<br>
<br>INSERT query with varying number of threads 
<br>SELECT query with varying number of records 
<br>INSERT query with varying number of records
<br>Each database has its own advantages and disadvantages.<br>
<br>MongoDB showed less response time in some scenarios compared to MySQL.
<br>MySQL responses were more stable compared to MongoDB.
<br><br>
<br>SQL + X[NoSQL]

<br>Redis+MySQL As a Caching Layer for MySQL


<br>Hybrid Database

<br>MSI Architecture 


<br><br>Scenario: Improve read performance and reduce database load.<br><img alt="Redis" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407101217920.png" referrerpolicy="no-referrer"><br>
<br>MySQL: Serves as the primary persistent data storage, handling complex queries and transactions.
<br>Redis: Acts as a caching layer, storing frequently accessed or common data such as user sessions and popular product information.
<br>Example:<br>
When a user requests data, the application first checks the Redis cache. If the data is found in the cache, it is returned immediately. If not, the data is fetched from MySQL, then stored in Redis for future requests. This approach reduces the load on MySQL and improves the overall response time of the application.<br>缓存层
场景：提高读性能，减少数据库负载。

<br>MySQL：作为主要的持久化数据存储，处理复杂的查询和事务。 
<br>Redis：作为缓存层，存储常用或频繁访问的数据，如用户会话、热门商品信息等。

<br><br>MSI mainly includes eight components<br>
<br>API dispatcher 
<br>SQL parser 
<br>SQL optimizer 
<br>SQL router 
<br>SQL executor 
<br>DBMS adapter 
<br>Result merger 
<br>Meta-data management
<br><img alt="MSI Architecture" src="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407101200521.png" referrerpolicy="no-referrer"><br>
<br>The MSI's input and the result of the SQL process is the MSI's output.
<br><br>
<br>SQL and NoSQL databases offer unique sets of capabilities and advantages. 
<br>The key to successful integration lies in understanding the intrinsic properties of each database type and crafting a strategy tailored to the specific needs of the organization.
<br><br>
<br><a data-tooltip-position="top" aria-label="https://doi.org/10.1002/spe.2666" rel="noopener nofollow" class="external-link" href="https://doi.org/10.1002/spe.2666" target="_blank">An integration approach of hybrid databases based on SQL in cloud computing environment</a>
<br><a data-tooltip-position="top" aria-label="https://www.lonti.com/blog/integration-strategies-between-sql-and-nosql-databases" rel="noopener nofollow" class="external-link" href="https://www.lonti.com/blog/integration-strategies-between-sql-and-nosql-databases" target="_blank">Integration Strategies Between SQL and NoSQL Databases</a>
<br><a data-tooltip-position="top" aria-label="https://www.softwaretestinghelp.com/hybrid-database/" rel="noopener nofollow" class="external-link" href="https://www.softwaretestinghelp.com/hybrid-database/" target="_blank">What Is Hybrid Database? List Of The Best Hybrid Databases</a>
<br><a data-tooltip-position="top" aria-label="https://medium.com/@gouri.benni/an-overview-on-a-hybrid-database-approach-using-graph-and-relational-database-fb216e0a24f1" rel="noopener nofollow" class="external-link" href="https://medium.com/@gouri.benni/an-overview-on-a-hybrid-database-approach-using-graph-and-relational-database-fb216e0a24f1" target="_blank">An Overview on “A Hybrid Database Approach Using Graph and Relational Database”</a>
<br><a data-tooltip-position="top" aria-label="https://ieeexplore.ieee.org/document/7887957" rel="noopener nofollow" class="external-link" href="https://ieeexplore.ieee.org/document/7887957" target="_blank">MySQL and NoSQL database comparison for IoT application</a>
]]></description><link>https://www.allenygy.vip/research/database/sql-and-nosql-integration.html</link><guid isPermaLink="false">Research/DataBase/SQL and NoSQL Integration.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407101124185.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/ALLENYGY/ImageSpace@master/IMAGE/Database/202407101124185.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TOC-As-3]]></title><description><![CDATA[ 
 <br><br><br><br><img alt="1-a" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/VNI4Oa.png" referrerpolicy="no-referrer"><br><br><img alt="1-b" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/3ee5yC.png" referrerpolicy="no-referrer"><br><br><img alt="1-c" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/xkao1Z.png" referrerpolicy="no-referrer"><br><br>Let <br>Assume L is context-free.<br>Let  which is a string in . <br>And  <br>Suppose , ,,, and <br>By the pumping lemma, <br><br>Because  and <br>Thus <br>Therefore  should at least be  <br>Which means  which is a contradiction.<br>Therefore  is not in L.<br>Therefore L is not context-free.<br><br><br><img alt="3" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/SXUiqs.png" referrerpolicy="no-referrer"><br><br><br><img alt="4-a" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/3tUAIb.png" referrerpolicy="no-referrer"><br><br><img alt="4-b" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/7wkKmc.png" referrerpolicy="no-referrer"><br><br><img alt="4-c" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/UFghXM.png" referrerpolicy="no-referrer"><br><br><img alt="4-d" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/FVDw40.png" referrerpolicy="no-referrer"><br><br>Let <br>
<br>
Use 0 to represent positive numbers in the unary system.

<br>
Use # as a separator between the two numbers.

<br>
Use - as a special marker to indicate a negative result when .

<br>
Use x as a symbol to do the subtraction.
Input Format

<br>
The first part of the tape will consist of a sequence of 0s representing .

<br>
The second part, after the separator #, will contain a sequence of 10s representing .

<br>For example:<br>
<br>000#00 represents , should be output as 0 (positive result).
<br>00#000 represents , and should be output as -0 (negative result).
<br><img alt="5" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/KmfTa9.png" referrerpolicy="no-referrer"><br><br><img alt="6" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/BvgF2s.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/theory-of-computation/assignment/toc-as-3.html</link><guid isPermaLink="false">Theory Of Computation/Assignment/TOC-As-3.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Sun, 01 Dec 2024 13:56:19 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/VNI4Oa.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/VNI4Oa.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TOC-As-2]]></title><description><![CDATA[ 
 <br><br><br>Convert the following NFA into an equivalent DFA. (20 pt)<br><img alt="Q1" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/ju3fRF.png" referrerpolicy="no-referrer"><br>First iteration<br>
<br>
<br>
<br>
<br>
<br>
<br>Second iteration<br>
<br>
<br>
<br>
<br>
<br>Third iteration<br>
<br>
<br>
<br>
<br>
<br><br><img alt="twQhiy" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/twQhiy.png" referrerpolicy="no-referrer"><br><br>Let . Give a regular expression for each of the following language. (10 pt for each)<br><br><br><br><br><br><br><br>Determine whether the following languages over  are regular. Prove your answer. Each question has two languages. You don’t need to do both, select one at your favor. In general, the original languages are difficult, the alternative ones are easy. You have your own choice. If you do both, we mark the easy one. (10 pt for each subquestion)<br><br> is not regular.<br>Assume  is regular. Suppose , Let  , which is a string in <br>By the pumping lemma,  is in the form . The substring  can be of the following three cases.<br>
<br>
If  only consists 's

<br>Suppose  consists of  .

<br>Then  or 
<br>, which is not in .




<br>
If  only consists 's

<br>Suppose  consists of  .

<br>Then 
<br>, which is not in .




<br>
If  consists both 's and 's

<br>Then  and   in  are intersecting with each other, which is not in the form of  Thus, .


<br><br><br> is not regular.<br>Assume  is regular. Suppose , Let  , which is a string in <br>By the pumping lemma,  is in the form . The substring  can be of the following three cases.<br>
<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then  ,

<br>, which is not in .


<br>Or 

<br>, which is not in .






<br>
If  only consists of 's

<br>Suppose  consists of  .
<br>then 

<br>, which is not in .




<br>
If  consists of both 's and 's

<br>Then  and   in  are intersecting with each other, which is not in the form of  Thus, .


<br><br><br> is not regular.<br>Assume  is regular. Suppose , , Let  , which is a string in <br>By the pumping lemma,  is in the form . The substring  can be of the following three cases.<br>
<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then  ,

<br>, which is not in .


<br>Or 

<br>, which is not in .






<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then 
<br>, which is not in .




<br>
If  consists of both 's and 's

<br>Then  and   in  are intersecting with each other, which is not in the form of  Thus, .


<br><br><br> is regular.<br>Since&nbsp; &nbsp; contains every possible string of&nbsp; &nbsp; (all strings with some number of&nbsp;  followed by some number of&nbsp; ), this language is equivalent to:<br><br>Therefore, I can construct a NFA that accepts this language.<br><img alt="3.d." src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/qLW5R5.png" referrerpolicy="no-referrer"><br><br><br>Are the following languages regular? Prove your answer. (10 pt for each)<br><br> is not regular.<br> can be divided into two parts.<br>
 and <br> is not regular.<br>
Assume  is regular.<br>
Suppose , Let  , which is a string in <br>By the pumping lemma,  is in the form . The substring  can be of the following three cases.<br>
<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then 
<br>, which is not in .




<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then 
<br>, which is not in .




<br>
If  consists of both 's and 's

<br>Then  and   in  are intersecting with each other, which is not in the form of  Thus, .


<br> is regular, because <br>Although  is regular,  is the union of  and , and  is not regular.<br>
we can not construct a NFA for . Thus,  is not regular.<br><br><br> is not regular.<br> can be divided into two parts.  and .<br>
Let  and <br> is not regular, the proof has been shown in the previous question.<br> is not regular.<br>
Assume  is regular. Suppose , Let  , which is a string in <br>By the pumping lemma,  is in the form . The substring  can be of the following three cases.<br>
<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then 
<br>, which is not in .




<br>
If  only consists of 's

<br>Suppose  consists of  .

<br>Then 
<br>, which is not in .




<br>
If  consists of both 's and 's

<br>Then  and   in  are intersecting with each other, which is not in the form of  Thus, .


<br> is not regular.  is also not regular. 	<br> is not regular, we can not construct a NFA for . Thus,  is not regular.]]></description><link>https://www.allenygy.vip/theory-of-computation/assignment/toc-as-2.html</link><guid isPermaLink="false">Theory Of Computation/Assignment/TOC-As-2.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/ju3fRF.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/ju3fRF.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TOC-As-1]]></title><description><![CDATA[ 
 <br><br><br><br>Construct a counting procedure as below:<br><img style="zoom:67%;" alt="1-a-counting-procedure" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8aSjkC.png" referrerpolicy="no-referrer"><br>Each pair corresponds to a unique natural number.<br>
Therefore  is countalbe<br><br><br>If  is a finite set with  element;<br>Then  which is finite. Therefore  is countable.<br><br>If  is a infinite and countable set;<br>
Then there must be a bijection between  and .<br>And for 2 countable sets  ,  is also a countable set.<br>For any element   , we can write   and    for some  .<br>Therefore,    corresponds to the pair   , which in turn corresponds to the natural number pair  .<br>To establish a one-to-one correspondence, we can use a pairing function that maps each pair    to a unique natural number  k .<br><br>Therefore,  is countable.<br>Since  n times.<br>And  is countable.<br>Therefore  is countable.<br><br>Solution:<br><br><img alt="Solution" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/eEmBAw.png" referrerpolicy="no-referrer"><br><br>Suppose a real number   denote as . Then we build the table as below:<br><br>Next we define a real number  such that<br>
.  We can see a xis not in the list!<br>
<br> and  are different at digit 0.
<br> and  are different at digit 1.
<br> and  are different at digit 2.
<br> and  are different at digit 3.<br>

<br>Thus,  is not counted and set of reals in (0, 10) is uncountable.<br><br>Assume that the set of functions from  to  is countable. 	<br>Suppose all such functions can be listed as .<br>Define a function  such that .<br>
This ensures that   differs from each  at least at position .<br>Since  is not equal to any  in the list, this contradicts the assumption that we have listed all possible functions.<br>Therefore, the set of functions from  to  is uncountable.<br><br>Prove the followings.(1 pt for each)<br><br><br><br>Two sets are isomorphic if they are of the same cardinality. Prove that the number of DFA's (without specifying ) is countable up to set isomorphism.<br><br>Let  Construct a DFA for each of the following languages. (10 pt for each)<br><br><br><img style="zoom:67%;" alt="3-a-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/RUB7TX.png" referrerpolicy="no-referrer"><br><br><br><img style="zoom:67%;" alt="3-b-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/HXpAK1.png" referrerpolicy="no-referrer"><br><br><br><img style="zoom:67%;" alt="3-c-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/mblQ2d.png" referrerpolicy="no-referrer"><br><br><br><img style="zoom: 67%;" alt="3-d-DFA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/CUkK9k.png" referrerpolicy="no-referrer"><br><br>Let  be an arbitrary DFA. We construct a new DFA  as . We need to prove that .<br>Note:  <br>
<br> is the set difference.  
<br> is the set complement.
<br><br>The goal  is understood as set equality.<br>
Thus, we need to prove , .<br>()<br>
Assume .<br>
Then .<br>
Thus, DFA  rejects .<br>
In other words, DFA  halts on a non-final state  by consuming all symbols in .<br>
By the construction of ,  is a final state of .<br>
Thus,  accepts , and .<br><br>()<br>
Assume .<br>
DFA  accepts .<br>
In other words, DFA  halts on a final state  by consuming all symbols in .<br>
By the construction of ,  is a non-final state of .<br>
Thus,  rejects , so .<br>
Thus, .<br>
.]]></description><link>https://www.allenygy.vip/theory-of-computation/assignment/toc-as-1.html</link><guid isPermaLink="false">Theory Of Computation/Assignment/TOC-As-1.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8aSjkC.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/8aSjkC.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[11-TOC-Computations as Functions <span class="math math-inline is-loaded"><mjx-container class="MathJax" jax="CHTML"><mjx-math class="MJX-TEX"><mjx-mi class="mjx-i"><mjx-c class="mjx-c1D706 TEX-I"></mjx-c></mjx-mi></mjx-math></mjx-container></span> Calculus]]></title><description><![CDATA[ 
 <br><br>Lambda calculus only contains functions.]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/11-toc-computations-as-functions.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/11-TOC-Computations as Functions.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 10 Dec 2024 07:34:26 GMT</pubDate></item><item><title><![CDATA[10-TOC-Undecidability and Reducibility]]></title><description><![CDATA[ 
 <br><br>]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/10-toc-undecidability-and-reducibility.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/10-TOC-Undecidability and Reducibility.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 06:45:59 GMT</pubDate></item><item><title><![CDATA[Church-Turing Thesis and TM Variants]]></title><description><![CDATA[ 
 <br><br><br>Church-Turing Thesis
Any real-world computation can be translated into an equivalent computation involving a Turing Machine.
<br><br>Turing completeness is the study to describe the computability of a computation model, or the expressability of a language.<br><br><br>A stay-option Turing Machine (TM) is the same as a standard TM except that the head can stay on the same tape cell in some transitions. Formally:<br>Def: Stay - Option TM
A stay-option TM is a 7-tuple , where:

<br>Each component is the same as a standard TM except for the transition function:

  Here,  represents the "stay" option, allowing the head to remain on the same tape cell.

<br><br>Simulating a standard TM on a stay-option TM is trivial, as it simply avoids using the "stay" option.<br>For the inverse (simulating a stay-option TM on a standard TM), we only need to simulate the transitions that stay at a tape cell. This is achieved by introducing an artificial state .<br><br><br><br><br>Where  represents an arbitrary symbol in  (the tape alphabet).<br><br><br>A multi tape Turing machine is like a standard Turing machine with k tapes for a constant k.<br>Each tape has its own head for reading and writing.<br>Initially , the input is on tape 1.<br>The transition function allows the Turing Machine (TM) to read, write, and move the heads on some or all of the tapes simultaneously. Formally, it is defined as:<br><br>The expression <br><br>  means:<br>
<br>: The current state of the TM.
<br>: The current tape symbols pointed to by each head.
<br>: The new tape symbols written by each head.
<br>: The movement direction of each head ( for left,  for right,  for stay).
<br><br>]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/09-toc-tm-variants.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/09-TOC-TM Variants.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Tue, 26 Nov 2024 09:11:05 GMT</pubDate></item><item><title><![CDATA[TOC-Intro]]></title><description><![CDATA[ 
 <br><br>Computation Definition
A computation is a procedure to calculate the desired output of a computational problem.
<br>If only solve decision problems, a computation is a procedure to decide whether an element is in a set or not.<br><br>Gottfried Wilhelm Leibniz 1646-1716<br>
<br>Calculus ratiocinator: a theoretical universal logical calculation framework
<br>Characteristica universalis: a universal conceptual language
<br>Gottlob Frege 1848-1925<br>
<br>Begriffsschrift: (concept-script)

<br>First book on symbolic logical
<br>To implement calculus ratiocinator


<br>Kurt Gödel 1906–1978  <br>
<br>Incompleteness theorem: if an axiom system contains natural numbers, then  

<br>there is a proposition which is unprovable;  
<br>and it cannot prove its consistency.


<br>Sabota g ed Hilbert’s program
<br>Alonzo Church 1903-1995<br>
<br>Lambda calculus
<br>Alan Turing 1912-1954<br>
<br>Turing machine
<br>这段历史概述了数学逻辑与计算机科学发展的几个关键人物及其贡献，涉及从17世纪到20世纪的重要理论基础。这些贡献共同构建了现代逻辑学、数学以及计算机科学的基础，以下是逐步的介绍：<br><br>莱布尼茨是一位德国哲学家、数学家，被认为是现代数学逻辑的奠基人之一。他的两项核心构想对后来的逻辑发展产生了深远影响：<br>
<br>Calculus ratiocinator（理性演算器）：一个假设性的通用逻辑计算框架，旨在通过数学和逻辑计算解决一切问题。
<br>Characteristica universalis（通用特征语言）：一种理想化的通用概念语言，试图以形式化的方式表达所有知识。这是莱布尼茨对人类知识进行逻辑编码的梦想，也是后来形式逻辑的前身。
<br>尽管莱布尼茨的构想在他在世时未能实现，但它为后来的逻辑学家提供了启发。<br><br><br>弗雷格是德国逻辑学家，被称为现代逻辑学的奠基人之一。他的主要贡献体现在：<br>
<br>Begriffsschrift（概念文字）：这是第一本关于符号逻辑的书，首次提出了一种形式化的逻辑语言，用以表达数学和逻辑推理。这一理论直接落实了莱布尼茨“理性演算器”的思想，是现代形式逻辑的起点。
<br>他还发展了谓词逻辑，为数学基础提供了更加严谨的框架。
<br>弗雷格的工作直接影响了后来的逻辑学家，包括罗素和维特根斯坦。<br><br><br>哥德尔是奥地利逻辑学家，以他的不完备性定理闻名，该定理对数学和逻辑的基础提出了深刻的限制：<br>
<br>不完备性定理指出：在任何包含自然数的公理系统中：

<br>存在一个无法被证明也无法被否定的命题（即“不可判定命题”）。
<br>这个系统无法证明自身的相容性。


<br>哥德尔的工作揭示了数学体系的固有局限性，破坏了希尔伯特“证明数学一致性”的乐观计划（Sabotaged Hilbert’s program）。
<br>哥德尔的理论对数理逻辑和理论计算机科学产生了重大影响。<br><br><br>丘奇是美国数学家，他的λ演算（Lambda Calculus）为计算理论奠定了重要基础：<br>
<br>λ演算是一种数学形式系统，用以研究函数定义和计算过程。它与图灵机被认为是等价的，提供了描述计算过程的一种抽象方法。
<br>丘奇证明了一些问题在形式系统中是不可判定的，这与哥德尔的结果相辅相成。
<br>λ演算后来成为编程语言理论的重要基础。<br><br><br>图灵是英国数学家、逻辑学家，被誉为计算机科学之父。他的贡献主要包括：<br>
<br>图灵机：一种假想的计算设备，旨在模拟任何可计算过程。这一模型定义了“可计算性”的概念，被认为是现代计算机的理论基础。
<br>图灵与哥德尔、丘奇的研究共同确立了计算理论的基本框架。
<br>图灵还提出了“图灵测试”，作为人工智能的早期概念。]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/01-toc-intro.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/01-TOC-Intro.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Mon, 25 Nov 2024 07:38:51 GMT</pubDate></item><item><title><![CDATA[TOC-PDA]]></title><description><![CDATA[ 
 <br><br>To access the infinite memory space, an NFA is upgraded by a stack. A stack has these basic operations.<br>
<br>Push 
<br>Pop
<br>The computational model combines a finite state machine and a stack is called pushdown automata .<br><img alt="Pushdown automata" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/oNeRHY.png" referrerpolicy="no-referrer"><br><br>A pushdown automaton is a 6-tuple , where <br>
<br> is the finite set of states;
<br> is the finite input alphabet;
<br> is the finite stack alphabet; 
<br> is the transition function;
<br> is the initial state;
<br> is the set of final states;
<br>The transition function  is understood as <br><br>If:<br>
<br>The current state is 
<br>The next input symbol is 
<br>The symbol on top of the stack is 
<br>Then:<br>
<br>The next state is 
<br>The new stack symbol on the top is 
<br>PDA is defined from NFA.<br>
<br> is included in  and .
<br>The domain of  is the power set .
<br> has multiple choices for the next state.
<br><br>An input string  is accepted by a PDA  if there exists a sequence of states  and a sequence of strings  such that:<br>
<br> (where  is the initial state);
<br> (the stack is empty initially);
<br> ( is a final state); and
<br>For ,<br>
where  and  for some  and .
<br>The last condition explains a transition.<br>
<br>Each string  is the content of the stack.
<br>The leftmost symbol in  is at the bottom of the stack.
<br>The rightmost symbol in  is at the top of the stack ( and ).
<br>The PDA consumes , changes the stack symbol from  to , and shifts to state .
<br><br>A PDA for <br><img alt="PDA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/twpf9Q.png" referrerpolicy="no-referrer">]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/07-toc-pda.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/07-TOC-PDA.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Thu, 26 Dec 2024 13:40:43 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/oNeRHY.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/oNeRHY.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TOC-TM]]></title><description><![CDATA[ 
 <br><br> is not context free.<br>Problem:<br>
Input: Given a string  in <br>
Question: Is ?<br>Algorithm:<br>
<br>load  on to memory
<br>Check if  has only one #, reject if no
<br>Repeat until no unmarked symbol

<br>Find the first unmarked symbol in first half
<br>Go right, exceed find the first unmarked symbol in second half
<br>mark s'
<br>reject if 
<br>go left exceed find the first unmarked symbol in first half


<br>accept if no more in second half.
<br><br><br><br><br><br><br>]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/08-toc-tm.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/08-TOC-TM.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[TOC-CFL]]></title><description><![CDATA[ 
 <br><br><br>A context-free grammar (CFG) is a 4-tuple , where <br>
<br> is a finite set called variables;
<br> is a finite set called terminals;
<br> is a finite set of production rules with each in the form 

where  is a variable and  is a string of variables and terminals; and 
<br> is the start variable.
<br>Definition: CFL
A language is context-free if exactly all strings in the language can be produced by a context-free grammar. 
<br>Theorem
A language is context-free if and only if it is recognized by a PDA. 
<br><br>A parse tree shows the structure of a string (sentence). However, CFG is strongly enough to create ambiguous. <br>Definition: Ambiguous
A grammar is ambiguous if a string in the language defined by the grammar can be presented by multiple parse trees with different structures.
<br>Also, checking whether a CFG is ambiguous is undecidable.<br>
Meaning that there is NO algorithm / machine which can tell an arbitrary CFG is ambiguous or not.<br><br><br>Theorem
A language is context-free if and only if it is recognized by a PDA. 
<br>Let  be an arbitrary context-free language.<br>
By the definition of CFL,  has a CFG  generating it.<br>
Then, we prove the theorem by introducing a conversion algorithm from  to a PDA  which recognizes  and vice versa.<br><br>To construct the PDA  from , let w be a string in L.<br>
<br> generates  by a sequence of productions.
<br>We construct  to simulate this procedure. 
<br> generates some strings and pushes them into the stack. 
<br>Then,  tries to match the stack with .
<br>In detail, P does the following things.<br>
<br>Push $ and the start variable  into the stack ($ first and E second).
<br>Repeat the followings. 

<br>If a variable  is on top of the stack, nondeterministically select the rules starts from A and replace A by the RHS of the rule (in the stack).
<br>If a terminal a is on top of the stack, check the next input symbol. If yes, continue; otherwise reject.
<br>If $ is on the top, accept the string if all symbols of w have been read; reject otherwise.


<br>Formally, let  be a CFG. Construct the following transitions. <br>
<br>
<br>
<br>
<br>For each production rule  in the form of , where ; construct the followings:

<br>

<br>;


<br>

<br> for 


<br>

<br>




<br>For each production rule .
<br>For each terminal .
<br>The PDA is called parser, which is used in compilers.<br><br><br>]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/06-toc-cfl.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/06-TOC-CFL.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 07:59:11 GMT</pubDate></item><item><title><![CDATA[TOC-Pumping Lemma]]></title><description><![CDATA[ 
 <br><br><br>Lemma (Pumping Lemma)
If  is a regular language, then there is a positive constant  such that every string  of length at least  can be written as  satisfying the following conditions

<br>for each 
<br>, and
<br>.

<br>p is the pumping length.<br>Instead of proving the lemma formally, let's try to understand it.<br>Assume  is regular and  is the  which recognizes .<br>
Let  be the number of states in .<br>Assume  in  of length .<br>To accept ,  goes through a sequence of states <br>By pigeonhole principle, some states  appears multiple times in the sequence.<br>Assuming , the sequence of states can be <br><br>Then, it's trivial that , , ,  are all in .<br><br>The pumping lemma is used to prove a language is not regular.<br><br>To prove the language  is not regular <br>
<br>Assume that  is regular.
<br>Construct a string  of length .
<br>Show that no matter how  is split into , there is always an  such that  (contradiction).
<br><br>Theorem
 is not regular.
<br>Proof:<br>Assume  is regular. Let , which is a string in . By the pumping lemma,  is in the form . The substring  can be of the following three cases.<br>
<br>
If  only consists of 's, then  (pump  one more time) has more 's than 's. Thus, .

<br>
If  only consists of 's, same as case 1.

<br>
If  has both 's and 's, then 's and 's in  are intersecting with each other, which is not in the form of . Thus, .

<br>In summary,  can never be split into  such that  for all . Thus,  is not regular.<br>Here are some notes.<br>The pumping length  depends on the machine. Different machines have different pumping length.<br>But the pumping lemma is "machine independent". Thus you cannot assume the value of .<br>The condition  ensures that the substring being pumped is not empty.<br>
Otherwise, <br>The condition  ensures that  always can be pumped by a machine.<br>The pumping lemma is only a necessary condition for regular.<br>
It is not a sufficient condition.<br>
In other words, if you cannot find a  or such  does not exist to accomplish the proof, you CANNOT say the language is regular. <br><br><br>Answer: Not regular.<br>Proof:<br>Assume  is regular. Consider the string , where  is a prime number and  (where  is a constant from the pumping lemma). By definition, . <br>Since prime numbers are infinite,  is constructible for some . (This point is crucial because, if  were not constructible, the proof could not proceed.)<br>By the pumping lemma,  can be split into three substrings , where:<br>
<br>,
<br>,
<br> for all .
<br>Here,  consists of only 's. Assume . Then .<br>Now, consider the string  (i.e.,  for ):<br>
<br>Its length is .
<br>However,  is not a prime number, because  is a prime number, and  (where ) is an integer greater than 1.<br>Thus, , which contradicts the pumping lemma. Therefore,  is not regular.<br><br>Answer: Not regular.<br>Proof (Sketch):<br>We can express  as:<br>
<br>
<br>Here, , and  are regular languages.
<br>Regular languages are closed under set union and complement.
<br>If  were regular, then  would also be regular (by closure properties of regular languages).<br>
However, this contradicts the result from , where  was proven to be not regular.<br>
Thus,  is not regular.<br><br>Answer: Regular. In fact, .<br>Proof:<br>Consider :<br>
<br>
Case 0: If , then .

<br>
Case 1: If  is a prime, then .

<br>
Case 2: If  is composite, then , where each  is a prime and  is a positive integer constant.

<br>Next,  for all .
<br>Thus, .


<br>Thus, .<br><br>Answer: Regular. <br>
<br>.
<br> is regular.
<br><br>Answer: Not regular.<br>Proof (Sketch):<br>
<br>Consider the string .
<br>Then, .
<br><br>Assume L is context-free. Let , which is a string in L.<br>
By the pumping lemma,  Then, we have two cases.<br><br>
<br>
<br>Case 1
<br>vxy  before the # <br> has more symbols before # then after. <br>
<br>Case 2
<br>vxy  before the # <br> <br>more 1's but less 0's]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/05-toc-pumping-lemma.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/05-TOC-Pumping Lemma.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 06:52:29 GMT</pubDate></item><item><title><![CDATA[TOC-Regular language]]></title><description><![CDATA[ 
 <br><br><br>Def: regular language
A language is regular if it is recognized by a DFA or an NFA.
<br>To Prove a Language is regular, we need to construct a DFA or an NFA for the language.<br><br>Def: Let  and  be languages.

<br>Union : 
<br>Concatenation: 

<br><br> <br>Note:  each  is a string in the language A. And  is the concatenation of  , until .<br>
Equivalently, <br>Def: Star operator
Let  be a language. 	 for  is recursively define

<br>
<br><br>


<br><br>Let  be an arbitrary DFA. And we construct a new DFA . Prove that .<br>Note:  <br>
<br> is the set difference.  
<br> is the set complement.
<br>The goal  is understood as set equality.<br>
Thus, we need to prove , .<br>()<br>
Assume .<br>
Then .<br>
Thus, DFA  rejects .<br>
In other words, DFA  halts on a non-final state  by consuming all symbols in .<br>
By the construction of ,  is a final state of .<br>
Thus,  accepts , and .<br><br>()<br>
Assume .<br>
DFA  accepts .<br>
In other words, DFA  halts on a final state  by consuming all symbols in .<br>
By the construction of ,  is a non-final state of .<br>
Thus,  rejects , so .<br>
Thus, .<br>.<br><br>Let .<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br><br> Theorem (Closure)
Regular language is closed under union, concatenation, star and complement.
<br>if A and B are two regular languages, then , , and  are also regular languages.<br><img alt="EaP8bA" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EaP8bA.png" referrerpolicy="no-referrer"><br><br><img alt="$A\cup B$" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/rW9gPM.png" referrerpolicy="no-referrer"><br><br><br><img alt="$A \circ B$" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/Y0x1Np.png" referrerpolicy="no-referrer"><br><br><br><img alt="$A^{*}$" src="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/TjkeUi.png" referrerpolicy="no-referrer"><br><br><br>Regular languages can be recursively constructed.<br>
A regular expression describes the common pattern the strings in a regular language (machine independent).<br>Def: Regular expression (Recursive Definition)
 is a regular expression over  if  is<br>


<br> for some ,
<br>, or
<br>



<br>, where  and  are regular expressions,
<br>, where  and  are regular expressions, or
<br>, where  is a regular expression.

<br><br>Def: Let  be a regular expression. The language  defined by  is 	


<br>,
<br>,
<br>,  .



<br>if  , then 
<br>if  , then 
<br>if  , then 

<br>Example:<br>Suppose . Describe the language defined by the following regular expressions in English.<br>
<br>
<br>
<br>
<br>
<br>   Match nothing
<br><br>Theorem
Regular expressions are equivalent to finite automata.
<br>The proof has two steps.<br>
<br>The language defined by a regular expression can be recognized by a finite automaton.
<br>The conversion is also doable vice versa.
<br>The conversion from a regular expression to an NFA is trivially ensured by the closure property .<br>
So, we only need to convert NFA to regular expressions.<br><br>The Conversion requires generalized NFA, which is a special type of NFA.<br>Only one start state and one final state.<br>
The start state is different from the final state.<br>
The transition function is<br>
<br>
<br>Suppose <br>
<br>It means transition from  to  requires .
<br>If the GNFA has only 2 states  and , then the label on the transition is the regular expression for the language.
<br>Thus, the conversion recursively merges states and transitions of the generalized NFA.
<br>


Algorithm Convert NFAε_\varepsilonε​ to 2-state gNFA


Input: An NFA N=(Q,Σ,δ,q0,F)N = (Q, \Sigma, \delta, q_0, F)N=(Q,Σ,δ,q0​,F)

Output: A regular expression which defines L(N)L(N)L(N)


N′←NN' \gets NN′←N // convert the domain and codomain of the transition function

Q′←Q′∪{q0′,qf′}Q' \gets Q' \cup \{q_0', q_f'\}Q′←Q′∪{q0′​,qf′​}

δ′(q0′,q0)=ε\delta'(q_0', q_0) = \varepsilonδ′(q0′​,q0​)=ε

for all q∈Fq \in Fq∈F do


δ′(q,qf′)=ε\delta'(q, q_f') = \varepsilonδ′(q,qf′​)=ε


end for

for all state qqq in Q′Q'Q′ except q0′q_0'q0′​ and qf′q_f'qf′​ do


Q′←Q′∖{q}Q' \gets Q' \setminus \{q\}Q′←Q′∖{q}

for all state qiq_iqi​ in Q′Q'Q′ except qf′q_f'qf′​ do


for all state qjq_jqj​ in Q′Q'Q′ except q0′q_0'q0′​ do


Suppose δ′(qi,q)=R1\delta'(q_i, q) = R_1δ′(qi​,q)=R1​, δ′(q,q)=R2\delta'(q, q) = R_2δ′(q,q)=R2​, δ′(q,qj)=R3\delta'(q, q_j) = R_3δ′(q,qj​)=R3​, and δ′(qi,qj)=R4\delta'(q_i, q_j) = R_4δ′(qi​,qj​)=R4​

δ′(qi,qj)=((R1)(R2)∗R3)∪(R4)\delta'(q_i, q_j) = ((R_1)(R_2)^* R_3) \cup (R_4)δ′(qi​,qj​)=((R1​)(R2​)∗R3​)∪(R4​)


end for


end for


end for

return δ′(q0′,qf′)\delta'(q_0', q_f')δ′(q0′​,qf′​)



Export to clipboard]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/04-toc-rl.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/04-TOC-RL.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate><enclosure url="https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EaP8bA.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/AllenYGY/ImageSpace@main/uPic/EaP8bA.png&quot;&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[TOC-Math]]></title><description><![CDATA[ 
 <br><br>“No one shall expel us from the paradise which Cantor has created for us.” ---David Hilbert, 1926<br><br>Def: A set (naively) is a collection of objects such that

<br>no order and no duplication

<br>An object  is in a set  is denoted as .<br>To represent a set, you need to <br>
<br>Put all members in a pair of curly brackets ;
<br>Enumerate all members, e.g. ; or
<br>Give a member representative and followed by the characteristic of members using a predicate, 

<br>e.g.  .


<br>Def: Empty set
 is an empty set, denoted by .
<br>"" is a concatenation (always false), Or equivalently,<br>Def: Empty set
 is an empty set if . 
<br><br>Def: Universal set	
A universal set is a set that contains all elements under a certain context.
<br>A universal set is usually denoted in the blackboard bold font. For example,<br>
<br>: the set of natural numbers;
<br>: the set of integers;
<br>: the set of rational numbers;
<br>: the set of real numbers;
<br>: the set of complex numbers;
<br>: the universal set without a specification.
<br>: the set of prime numbers.
<br>Def: subset
Set  is a subset of set  if  , denoted as .
<br>Def: Power set
Let A be a set.  is the power set of A.
<br>Let  .<br><br>Suppose  and  are two sets.<br>Def: Complement
A complement is the set .
<br>Def: Intersection
A intersection  is the set .
<br>Def: Union
A union  is the set .
<br>Def: Setminus 
A setminus  is the set .
<br><br> Suppose  and  are two sets.<br>Def: Cartesian product
The cartesian product of  and  is the set:<br>

<br>Each object  is a pair or generally a 2-tuple.<br>Def: Relation
A relation  between  and  is a subset of .
<br>If , we say  is related to , denoted by .<br>A relation  is on the set  if .<br>Let  be a relation on a set .  is:<br>
<br>reflexive if ;
<br>symmetric if ;
<br>anti-symmetric if ;
<br>transitive if .
<br><br>Def: Function
A relation  between  and  is a function if:

<br>
<br> is the domain.
<br> is the co-domain.
<br> means uniquely exists.
<br>Such a function is denoted as .
<br>Def: Image and pre-image
If  is an object of the function , we denote  and say:

<br> is the image of ;
<br> is the pre-image of .

<br>To denote a function:<br>
<br>Surely, one can enumerate all pairs in the function.
<br>But usually, people present the expression.<br>
For example,  such that .
<br>For the same example, one can also write .<br>Please distinguish “” and “”:<br>
<br>“” is from domain to co-domain.
<br>“” is from pre-image to image.
<br>Def: A function  is 

<br>Injection: If  

<br>不同x对应不同y	


<br>Surjection: If 

<br>任何y都有对应的x	


<br>Bijection: If  is both injection and surjection.

<br>For example, let .<br>
<br> is an injection but not a surjection.
<br> is a surjection but not an injection.
<br> is a bijection.
<br>Graph
00.10.20.30.40.50.60.70.80.91−1-0.8-0.6-0.4-0.200.20.40.60.81
<br><br>To precisely describe mathematics, algorithm, computation, and other procedures, formal languages are used. A language is a set of strings over an alphabet. Formally,<br>Def: Language 	
A language is a set of strings over a specific alphabet.
<br>Def: alphabet 
An alphabet is a nonempty finite set.
<br>For example, <br><br>Def: string 	
A string over an alphabet  is a finite sequence of symbols from that alphabet.
<br>Def: length	
If  is a string over the alphabet , the length of  is the number of  symbols in , denoted by  .
<br>Def: Empty string	
The empty string is the string of length 0, denoted by .
<br>Let  be a string of length n, where each .<br>Def: Reverse	
The reverse of a string  is the string , denoted by .
<br>Def: Substring 
The string  is a substring of  if  consecutively appears in .
<br>Def: Concatenation
The concatenation of two strings  and  is the string  of length .	
<br>For example, .<br>
Sometimes, the operator “” is omitted. <br>Language
A language is a set of strings over a specific alphabet.
<br><br>In this lecture, we only emphasize several proving techniques.<br>
<br>Constructive proof 
<br>Prove by contradiction 
<br>Induction 
<br>Diagonal argument
<br><br>
<br>Used to prove a predicate with existential quantifiers, like .
<br>First, construct an object .
<br>Second, prove  is true.
<br><br>
<br>Used to prove a proposition .
<br>First, assume  is false.
<br>Then, derive a contradiction.
<br>Last, claim  is true.
<br><br>
<br>To prove a predicate with universal quantifiers, one can use induction.
<br>Induction has two variants: simple and strong. But, they are equivalent.
<br>To prove :
<br><br>
<br>Prove  as a base case.
<br>Prove  as an induction.
<br>In the second step,  is the inductive hypothesis.
<br><br>
<br>Prove  as a base case.
<br>Prove .
<br>We assume  are all true in the strong induction.
<br><br>Def: Cardinality
The cardinality of a set  is the number of objects in , denoted as .
<br>Def: Cardinality
The set  and the set  are of the same cardinality if there is a bijection .
<br><br>
<br> and  are of the same cardinality because we can define a bijection  such that .
<br>The set of even numbers  and the set of integers  are also of the same cardinality because of the bijection .
<br>Note that the cardinality can be finite and infinite.<br><br>Def: Countable
A set is countable if it is finite or its cardinality is same as the set of natural number .
<br>Countable means that:<br>
<br>For every number  in the natural number (no matter how large the number is),
<br>if we count from 0,
<br>we can eventually  reach the number  within a finite time.
<br>In fact, the counting procedure constructs a bijection, mapping a natural number  to the  counted element.<br>We denote the cardinality of  by <br>To proof an infinite set  is countable, you need t construct a bijection <br><br>Georg Cantor developed a method to prove a set is uncountable.  <br>For example:<br>Theorem  
The set of all real numbers in the open interval  is uncountable.
<br>The intuition of the proof (by contradiction) is as follows:<br>
<br>Assume  is countable, then we can "count" the numbers one by one.
<br>Then, we can list all the numbers that we count in a table.
<br>Construct a real number in  but cannot be reached in the table.
<br>Thus, the set of reals in  is uncountable.<br>Suppose we denote a real number as . Then, we build the table in Step 2 of the proof.<br><br>Next, we define a real number  such that:<br>
<br>We can see  is not in the list:<br>
<br> and  are different at digit 0.
<br> and  are different at digit 1.
<br>
<br>Thus,  is not counted, and the set of reals in  is uncountable.<br> Here we list some facts about infinite sets:<br>
<br>The set of real numbers  has cardinality .
<br>The power set  of  also has cardinality .
<br> has cardinality .
<br>You can make such constructions by taking power sets.
<br>Hypothesis (Continuum Hypothesis - CH)
There is no set of cardinality strictly between  and .
<br>So far, people only know:<br>Theorem (Cohen 1964)
CH is unprovable under ZFC.
]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/02-toc-math.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/02-TOC-Math.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Compiler Construction Finite Automata]]></title><description><![CDATA[ 
 <br><br>The computation power of this model is rather weak. Because it can only use a limited (finite) memory. But it is also useful in some applications. <br><br>Deterministic finite automata 
A deterministic finite automata (DFA) is a 5-tuple   , where

<br> is a finite set called states,
<br> is a finite set called alphabet,
<br> is the transition function,
<br> is the start state (also called initial state), and 
<br> is the set of accept states (final states).

<br>The transition function  can also be represented as a transition table.<br>
The table has  rows and  columns.<br>
The value in each entry is a state.<br>
 is a total function. So, every entry has a value.<br>
The input of a DFA is a string in the language .<br>
The output of a DFA is only accept or reject.<br>Suppose  is a string in . The DFA  accepts  if and only if:<br>
      <br>Each  is a state of .<br>
Each  is a transition.<br>
 is a final state in .<br>The sequence of transitions can also be expressed as:<br>
<br>Remember, a DFA can be represented as a state graph. The features of the graph are listed:<br>
<br>A state is in a circle.
<br>A transition is an arc from the current state to the next state.
<br>The input symbol required by a transition is the label of the arc.
<br>The initial state is pointed by an arrow.
<br>Each final state is double circled.
<br>Example<br>Let  be a DFA, where the transition function  is:<br><br><br><br>If  is the set of all strings that  accepts, then:<br>
<br> is the language of machine ;
<br>;
<br> recognizes .
<br>   For example:<br>
<br>A language is regular if it is recognized by some DFA (Deterministic Finite Automaton).<br><br>Nondeterministic finite automata .
An NFA (Nondeterministic Finite Automaton) is a 5-tuple , where:

<br> is the set of states;
<br> is the alphabet;
<br> is the transition function;
<br> is the start state; and
<br> is the set of final states.

<br>Suppose  is an NFA to recognize the language .<br>
<br>
If  is a string in the language :

<br>Then there exists a "way" to reach the final state;
<br>It's also possible to reach a non-final state.


<br>
But if  is not a string in the language :

<br>Then there is no way to reach the final state.


<br>Please pay attention to the quantifiers.<br><br>The difference between a DFA and an NFA is the transition function .<br>
<br>DFA: 
<br>NFA: 

<br> is the power set of .


<br>This difference allows:<br>
<br>One state to transition to zero, one, or multiple states by taking one input symbol.
<br><br>Automatas can be further upgraded by a special transition.<br>
An  is a transition from one state to another state by taking no input symbol.
<br>Such automata is defined.<br>NFA with 	
An NFA with ε-moves is the same as an NFA (without ε-moves) except the transition function:<br>

<br>Later, we will see that ε-moves allow us to recursively construct NFAs, which is... elegant.<br><br><br>Let  and  be two computation models.  is as powerful as  if:<br>
<br>For all languages ,  is recognized by some machines in  if and only if it is recognized by some machines in .
<br> is more powerful than  if there is a language  which can be recognized by some machines in  but no machine in .<br>Note: A computation model is a set of all machines of the same type.<br> Theorem
DFA, NFA, and NFA with -moves are of the same computation power.
<br>For convenience, we denote the ordering on the power by , , , etc. Trivially,<br> Lemma

<br>Next, we only need to show .<br>It seems the content repeats the explanation for converting  to a DFA and introduces the concept of -closure more formally. Here's a summary in Markdown format for your reference:<br>The Intuition of the Proof:<br>
<br>For every , we can construct a DFA that recognizes the same language.
<br>This is equivalent to the process of converting an NFA to an equivalent DFA.
<br>Def:  -closure
Let  be an .<br>
The -closure of a state , denoted , is defined as:<br>

<br>
<br> represents the set of all states that can be reached starting from  only using -transitions.
<br>This closure includes  itself and any other states reachable via one or more -moves.
<br>Alternative Name: The -closure is sometimes referred to as the Kleene Star or Kleene Closure.
<br>Def:  of a Set of States
 Let  be a set of states for a given NFA. The -closure of , denoted , is:<br>

<br>This means the -closure of  is the union of the -closures of all individual states in .<br>
 is the set of states reachable from  using only -transitions.<br>Def: -Move of a Set of States:
Let  be a set of states, and let  be a symbol for a given NFA. The -move of , denoted , is:<br>

<br> This describes all the states reachable by:<br>
<br>First making an -transition from any state  in , and
<br>Then taking all -transitions from those resulting states.
<br>NOTE:  gives the set of states reachable by consuming the symbol .<br><br>Let  be an . We construct a DFA , where:<br>
<br>
<br> such that:<br>

<br>
<br>
<br><br>States ():<br>
<br>, the power set of .
<br>Each state in  is a subset of the states in .
<br>Transition Function ():<br> , defined as:<br>
<br>
<br>For each state  and symbol :
<br>Find all states  reachable by an -move from some , considering -closures.
<br>Start State ():<br>
<br>, the -closure of the initial state  of .
<br>Final States ():<br>
<br>.
<br>A subset  of states is a final state in  if it includes any final state of .
<br>Ensures  captures all possible behaviors of , including -transitions.<br>
Uses the power set of  as the state space to simulate nondeterminism deterministically.<br><br><br>


Algorithm Convert NFAε_\varepsilonε​ to DFA



Input: An NFAε_\varepsilonε​ N=(Q,Σ,δ,q0,F)N = (Q, \Sigma, \delta, q_0, F)N=(Q,Σ,δ,q0​,F)

Output: A DFA D=(Q′,Σ,δ′,q0′,F′)D = (Q', \Sigma, \delta', q_0', F')D=(Q′,Σ,δ′,q0′​,F′)

Q′←{E(q0)}Q' \gets \{E(q_0)\}Q′←{E(q0​)}, E(q0)E(q_0)E(q0​) is unmarked, and δ′←∅\delta' \gets \emptysetδ′←∅

while there exists an unmarked state R∈Q′R \in Q'R∈Q′ do


Mark RRR

for each symbol a∈Σa \in \Sigmaa∈Σ do


U←E(δ(R,a))U \gets E(\delta(R, a))U←E(δ(R,a))

if U∉Q′U \notin Q'U∈/​Q′ then


Add UUU to Q′Q'Q′


end if

Add δ′(R,a)=U\delta'(R, a) = Uδ′(R,a)=U to δ′\delta'δ′


end for


end while

q0′←E(q0)q_0' \gets E(q_0)q0′​←E(q0​)

F′←{R∣R&nbsp;has&nbsp;a&nbsp;final&nbsp;state&nbsp;in&nbsp;F}F' \gets \{R \mid R \text{ has a final state in } F\}F′←{R∣R&nbsp;has&nbsp;a&nbsp;final&nbsp;state&nbsp;in&nbsp;F}



return D←(Q′,Σ,δ′,q0′,F′)D \gets (Q', \Sigma, \delta', q_0', F')D←(Q′,Σ,δ′,q0′​,F′)



Export to clipboard<br><br>Let’s try to convert this  to .<br><br><br>Suppose the unmarked states are red.<br>
<br><br><br><br>
<br><br><br><br>
<br><br><br><br>
<br><br><br><br>
<br><br><br><br>
<br><br><br>
<br><br><br> and  are final states.<br>Rename the states to make the DFA more readable and beautiful: .<br><br> is a trap state because it has no valid transitions.]]></description><link>https://www.allenygy.vip/theory-of-computation/lecture/03-toc-finite-automata.html</link><guid isPermaLink="false">Theory Of Computation/Lecture/03-TOC-Finite Automata.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Archive]]></title><description><![CDATA[ 
 <br><br><br>
<br><a data-tooltip-position="top" aria-label="Machine Learning/ML-Cheat-Sheet.md" data-href="Machine Learning/ML-Cheat-Sheet.md" href="https://www.allenygy.vip/Machine Learning/ML-Cheat-Sheet" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Cheat-Sheet</a><a data-tooltip-position="top" aria-label="Machine Learning/ML-Cheat-Sheet.md" data-href="Machine Learning/ML-Cheat-Sheet.md" href="https://www.allenygy.vip/machine-learning/ml-cheat-sheet.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Cheat-Sheet</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Regression.md" data-href="Machine Learning/Lecture/ML-Regression.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Regression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Regression</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Regression.md" data-href="Machine Learning/Lecture/ML-Regression.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-regression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Regression</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Distance Measure.md" data-href="Machine Learning/Lecture/ML-Distance Measure.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Distance Measure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Distance Measure</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Distance Measure.md" data-href="Machine Learning/Lecture/ML-Distance Measure.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-distance-measure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Distance Measure</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cluster Distance Measure.md" data-href="Machine Learning/Lecture/ML-Cluster Distance Measure.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Cluster Distance Measure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Cluster Distance Measure</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cluster Distance Measure.md" data-href="Machine Learning/Lecture/ML-Cluster Distance Measure.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-cluster-distance-measure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Cluster Distance Measure</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Hierarchical Clustering.md" data-href="Machine Learning/Lecture/ML-Hierarchical Clustering.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Hierarchical Clustering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Hierarchical Clustering</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Hierarchical Clustering.md" data-href="Machine Learning/Lecture/ML-Hierarchical Clustering.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-hierarchical-clustering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Hierarchical Clustering</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-K Means.md" data-href="Machine Learning/Lecture/ML-K Means.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-K Means" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-K Means</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-K Means.md" data-href="Machine Learning/Lecture/ML-K Means.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-k-means.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-K Means</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Expectation Maximization.md" data-href="Machine Learning/Lecture/ML-Expectation Maximization.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Expectation Maximization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Expectation Maximization</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Expectation Maximization.md" data-href="Machine Learning/Lecture/ML-Expectation Maximization.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-expectation-maximization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Expectation Maximization</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" data-href="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Mean Shift Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Mean Shift Algorithm</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" data-href="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-mean-shift-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Mean Shift Algorithm</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Density Estimation.md" data-href="Machine Learning/Lecture/ML-Density Estimation.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Density Estimation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Density Estimation</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Density Estimation.md" data-href="Machine Learning/Lecture/ML-Density Estimation.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-density-estimation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Density Estimation</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" data-href="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Probability and Bayesian Perspective" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Probability and Bayesian Perspective</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" data-href="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-probability-and-bayesian-perspective.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Probability and Bayesian Perspective</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" data-href="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Evaluation of Classifiers" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Evaluation of Classifiers</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" data-href="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-evaluation-of-classifiers.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Evaluation of Classifiers</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Stream Data</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-stream-data.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Stream Data</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Advertising" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Advertising</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-advertising.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Advertising</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/BDA-Review.md" data-href="Data Analysis/Big Data Analysis/BDA-Review.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/BDA-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Review</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/BDA-Review.md" data-href="Data Analysis/Big Data Analysis/BDA-Review.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/bda-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Review</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Attention.md" data-href="Computer Vision/Lecture/CV-Attention.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Attention" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Attention</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Attention.md" data-href="Computer Vision/Lecture/CV-Attention.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-attention.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Attention</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Generate Model.md" data-href="Computer Vision/Lecture/CV-Generate Model.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Generate Model" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Generate Model</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Generate Model.md" data-href="Computer Vision/Lecture/CV-Generate Model.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-generate-model.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Generate Model</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Neural Network.md" data-href="Computer Vision/Lecture/CV-Neural Network.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Neural Network" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Neural Network</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Neural Network.md" data-href="Computer Vision/Lecture/CV-Neural Network.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-neural-network.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Neural Network</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/CV-Slides-Review.md" data-href="Computer Vision/CV-Slides-Review.md" href="https://www.allenygy.vip/Computer Vision/CV-Slides-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Slides-Review</a><a data-tooltip-position="top" aria-label="Computer Vision/CV-Slides-Review.md" data-href="Computer Vision/CV-Slides-Review.md" href="https://www.allenygy.vip/computer-vision/cv-slides-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Slides-Review</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/CV-Review.md" data-href="Computer Vision/CV-Review.md" href="https://www.allenygy.vip/Computer Vision/CV-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Review</a><a data-tooltip-position="top" aria-label="Computer Vision/CV-Review.md" data-href="Computer Vision/CV-Review.md" href="https://www.allenygy.vip/computer-vision/cv-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Review</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Project-Report</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-project-report.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Project-Report</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Project/ML-pre.md" data-href="Machine Learning/Project/ML-pre.md" href="https://www.allenygy.vip/Machine Learning/Project/ML-pre" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-pre</a><a data-tooltip-position="top" aria-label="Machine Learning/Project/ML-pre.md" data-href="Machine Learning/Project/ML-pre.md" href="https://www.allenygy.vip/machine-learning/project/ml-pre.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-pre</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-3.md" data-href="Computer Vision/Assignment/CV-As-3.md" href="https://www.allenygy.vip/Computer Vision/Assignment/CV-As-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-As-3</a><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-3.md" data-href="Computer Vision/Assignment/CV-As-3.md" href="https://www.allenygy.vip/computer-vision/assignment/cv-as-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-As-3</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Object Detection.md" data-href="Computer Vision/Lecture/CV-Object Detection.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Object Detection" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Object Detection</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Object Detection.md" data-href="Computer Vision/Lecture/CV-Object Detection.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-object-detection.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Object Detection</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-5.md" data-href="Machine Learning/Assignment/ML-As-5.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-5</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-5.md" data-href="Machine Learning/Assignment/ML-As-5.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-5</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Dimensionality Reduction.md" data-href="Machine Learning/Lecture/ML-Dimensionality Reduction.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Dimensionality Reduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Dimensionality Reduction</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Dimensionality Reduction.md" data-href="Machine Learning/Lecture/ML-Dimensionality Reduction.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-dimensionality-reduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Dimensionality Reduction</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/ML-Review.md" data-href="Machine Learning/ML-Review.md" href="https://www.allenygy.vip/Machine Learning/ML-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Review</a><a data-tooltip-position="top" aria-label="Machine Learning/ML-Review.md" data-href="Machine Learning/ML-Review.md" href="https://www.allenygy.vip/machine-learning/ml-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Review</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lab/BDA-Lab-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Lab-3</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Lab-3</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Prompting Engineering Techniques.md" data-href="Deep Learning/Prompting Engineering Techniques.md" href="https://www.allenygy.vip/Deep Learning/Prompting Engineering Techniques" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prompting Engineering Techniques</a><a data-tooltip-position="top" aria-label="Deep Learning/Prompting Engineering Techniques.md" data-href="Deep Learning/Prompting Engineering Techniques.md" href="https://www.allenygy.vip/deep-learning/prompting-engineering-techniques.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prompting Engineering Techniques</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Clustering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Clustering</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-clustering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Clustering</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Project/Comment Filtering System.md" data-href="Machine Learning/Project/Comment Filtering System.md" href="https://www.allenygy.vip/Machine Learning/Project/Comment Filtering System" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Comment Filtering System</a><a data-tooltip-position="top" aria-label="Machine Learning/Project/Comment Filtering System.md" data-href="Machine Learning/Project/Comment Filtering System.md" href="https://www.allenygy.vip/machine-learning/project/comment-filtering-system.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Comment Filtering System</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-DGIM" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-DGIM</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-dgim.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-DGIM</a>
<br><a data-tooltip-position="top" aria-label="Share/Causality Discovery.md" data-href="Share/Causality Discovery.md" href="https://www.allenygy.vip/Share/Causality Discovery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Causality Discovery</a><a data-tooltip-position="top" aria-label="Share/Causality Discovery.md" data-href="Share/Causality Discovery.md" href="https://www.allenygy.vip/share/causality-discovery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Causality Discovery</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-1.md" data-href="Machine Learning/Assignment/ML-As-1.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-1</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-1.md" data-href="Machine Learning/Assignment/ML-As-1.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-1</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-2.md" data-href="Machine Learning/Assignment/ML-As-2.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-2</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-2.md" data-href="Machine Learning/Assignment/ML-As-2.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-2</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-4.md" data-href="Machine Learning/Assignment/ML-As-4.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-4" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-4</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-4.md" data-href="Machine Learning/Assignment/ML-As-4.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-4.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-4</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-SVM.md" data-href="Machine Learning/Lecture/ML-SVM.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-SVM" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-SVM</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-SVM.md" data-href="Machine Learning/Lecture/ML-SVM.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-svm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-SVM</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-3.md" data-href="Machine Learning/Assignment/ML-As-3.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-3</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-3.md" data-href="Machine Learning/Assignment/ML-As-3.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-3</a>
<br><a data-tooltip-position="top" aria-label="Math/Optimization/Lagrange Multipliers.md" data-href="Math/Optimization/Lagrange Multipliers.md" href="https://www.allenygy.vip/Math/Optimization/Lagrange Multipliers" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Lagrange Multipliers</a><a data-tooltip-position="top" aria-label="Math/Optimization/Lagrange Multipliers.md" data-href="Math/Optimization/Lagrange Multipliers.md" href="https://www.allenygy.vip/math/optimization/lagrange-multipliers.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Lagrange Multipliers</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-1.md" data-href="Computer Vision/Assignment/CV-As-1.md" href="https://www.allenygy.vip/Computer Vision/Assignment/CV-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-As-1</a><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-1.md" data-href="Computer Vision/Assignment/CV-As-1.md" href="https://www.allenygy.vip/computer-vision/assignment/cv-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-As-1</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-2.md" data-href="Computer Vision/Assignment/CV-As-2.md" href="https://www.allenygy.vip/Computer Vision/Assignment/CV-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-As-2</a><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-2.md" data-href="Computer Vision/Assignment/CV-As-2.md" href="https://www.allenygy.vip/computer-vision/assignment/cv-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-As-2</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Find Similar Items</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-find-similar-items.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Find Similar Items</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Peoject/BDA-Survey" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Survey</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-survey.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Survey</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" data-href="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Big Data Analysis Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Big Data Analysis Overview</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" data-href="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/big-data-analysis-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Big Data Analysis Overview</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-As-2.md" data-href="Algorithm/DSA/Assignment/DSA-As-2.md" href="https://www.allenygy.vip/Algorithm/DSA/Assignment/DSA-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DSA-As-2</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-As-2.md" data-href="Algorithm/DSA/Assignment/DSA-As-2.md" href="https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DSA-As-2</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-1.md" data-href="Algorithm/DSA/Assignment/DSA-AS-1.md" href="https://www.allenygy.vip/Algorithm/DSA/Assignment/DSA-AS-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DSA-AS-1</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-1.md" data-href="Algorithm/DSA/Assignment/DSA-AS-1.md" href="https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DSA-AS-1</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Sliding Window.md" data-href="Algorithm/Basic Algorithm/Sliding Window.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Sliding Window" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Sliding Window</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Sliding Window.md" data-href="Algorithm/Basic Algorithm/Sliding Window.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/sliding-window.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Sliding Window</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Discretization.md" data-href="Algorithm/Basic Algorithm/Discretization.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Discretization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discretization</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Discretization.md" data-href="Algorithm/Basic Algorithm/Discretization.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/discretization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discretization</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Union-Find.md" data-href="Algorithm/DAA/Algorithm/Union-Find.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Union-Find" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Union-Find</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Union-Find.md" data-href="Algorithm/DAA/Algorithm/Union-Find.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/union-find.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Union-Find</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" data-href="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Basic-Algorithm-overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Basic-Algorithm-overview</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" data-href="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/basic-algorithm-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Basic-Algorithm-overview</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Binary Search.md" data-href="Algorithm/Basic Algorithm/Binary Search.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Binary Search" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Binary Search</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Binary Search.md" data-href="Algorithm/Basic Algorithm/Binary Search.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/binary-search.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Binary Search</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Algorithm.md" data-href="Algorithm/Algorithm.md" href="https://www.allenygy.vip/Algorithm/Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/Algorithm.md" data-href="Algorithm/Algorithm.md" href="https://www.allenygy.vip/algorithm/algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Algorithm</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" data-href="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Divide-and-Conquer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Divide-and-Conquer</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" data-href="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/divide-and-conquer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Divide-and-Conquer</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration.md" data-href="Algorithm/DAA/Algorithm/Enumeration.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Enumeration" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Enumeration</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration.md" data-href="Algorithm/DAA/Algorithm/Enumeration.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/enumeration.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Enumeration</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration-subset.md" data-href="Algorithm/DAA/Algorithm/Enumeration-subset.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Enumeration-subset" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Enumeration-subset</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration-subset.md" data-href="Algorithm/DAA/Algorithm/Enumeration-subset.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/enumeration-subset.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Enumeration-subset</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Graph-algorithm.md" data-href="Algorithm/DAA/Algorithm/Graph-algorithm.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Graph-algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Graph-algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Graph-algorithm.md" data-href="Algorithm/DAA/Algorithm/Graph-algorithm.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/graph-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Graph-algorithm</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Sort.md" data-href="Algorithm/DAA/Algorithm/Sort.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Sort" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Sort</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Sort.md" data-href="Algorithm/DAA/Algorithm/Sort.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/sort.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Sort</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-0.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-0.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Assignment-0" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Assignment-0</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-0.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-0.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-0.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Assignment-0</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-1.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-1.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Assignment-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Assignment-1</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-1.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-1.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Assignment-1</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-2.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-2.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Assignment-2</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-2.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-2.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Assignment-2</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" data-href="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Programming-Assignment" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Programming-Assignment</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" data-href="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-programming-assignment.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Programming-Assignment</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Tutorial/Tutorial-1.md" data-href="Algorithm/DAA/Tutorial/Tutorial-1.md" href="https://www.allenygy.vip/Algorithm/DAA/Tutorial/Tutorial-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Tutorial-1</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Tutorial/Tutorial-1.md" data-href="Algorithm/DAA/Tutorial/Tutorial-1.md" href="https://www.allenygy.vip/algorithm/daa/tutorial/tutorial-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Tutorial-1</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Graph/Graph-Overview.md" data-href="Algorithm/Graph/Graph-Overview.md" href="https://www.allenygy.vip/Algorithm/Graph/Graph-Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Graph-Overview</a><a data-tooltip-position="top" aria-label="Algorithm/Graph/Graph-Overview.md" data-href="Algorithm/Graph/Graph-Overview.md" href="https://www.allenygy.vip/algorithm/graph/graph-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Graph-Overview</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/AVL.md" data-href="Algorithm/DSA/AVL.md" href="https://www.allenygy.vip/Algorithm/DSA/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/AVL.md" data-href="Algorithm/DSA/AVL.md" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-am.md" data-href="Algorithm/DSA/Assignment/DSA-AS-am.md" href="https://www.allenygy.vip/Algorithm/DSA/Assignment/DSA-AS-am" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DSA-AS-am</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-am.md" data-href="Algorithm/DSA/Assignment/DSA-AS-am.md" href="https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-am.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DSA-AS-am</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/B+Tree.md" data-href="Algorithm/DSA/B+Tree.md" href="https://www.allenygy.vip/Algorithm/DSA/B+Tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">B+Tree</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/B+Tree.md" data-href="Algorithm/DSA/B+Tree.md" href="https://www.allenygy.vip/algorithm/dsa/b+tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">B+Tree</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/BinaryTree.md" data-href="Algorithm/DSA/BinaryTree.md" href="https://www.allenygy.vip/Algorithm/DSA/BinaryTree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BinaryTree</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/BinaryTree.md" data-href="Algorithm/DSA/BinaryTree.md" href="https://www.allenygy.vip/algorithm/dsa/binarytree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BinaryTree</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/NumberTheory/Prime-Sieve.md" data-href="Algorithm/NumberTheory/Prime-Sieve.md" href="https://www.allenygy.vip/Algorithm/NumberTheory/Prime-Sieve" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prime-Sieve</a><a data-tooltip-position="top" aria-label="Algorithm/NumberTheory/Prime-Sieve.md" data-href="Algorithm/NumberTheory/Prime-Sieve.md" href="https://www.allenygy.vip/algorithm/numbertheory/prime-sieve.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prime-Sieve</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归-二叉树.md" data-href="Algorithm/Recursion/递归-二叉树.md" href="https://www.allenygy.vip/Algorithm/Recursion/递归-二叉树" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">递归-二叉树</a><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归-二叉树.md" data-href="Algorithm/Recursion/递归-二叉树.md" href="https://www.allenygy.vip/algorithm/recursion/递归-二叉树.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">递归-二叉树</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归.md" data-href="Algorithm/Recursion/递归.md" href="https://www.allenygy.vip/Algorithm/Recursion/递归" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">递归</a><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归.md" data-href="Algorithm/Recursion/递归.md" href="https://www.allenygy.vip/algorithm/recursion/递归.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">递归</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递推.md" data-href="Algorithm/Recursion/递推.md" href="https://www.allenygy.vip/Algorithm/Recursion/递推" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">递推</a><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递推.md" data-href="Algorithm/Recursion/递推.md" href="https://www.allenygy.vip/algorithm/recursion/递推.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">递推</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Aho-Corasick.md" data-href="Algorithm/String/Aho-Corasick.md" href="https://www.allenygy.vip/Algorithm/String/Aho-Corasick" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Aho-Corasick</a><a data-tooltip-position="top" aria-label="Algorithm/String/Aho-Corasick.md" data-href="Algorithm/String/Aho-Corasick.md" href="https://www.allenygy.vip/algorithm/string/aho-corasick.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Aho-Corasick</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Manacher-Algorithm.md" data-href="Algorithm/String/Manacher-Algorithm.md" href="https://www.allenygy.vip/Algorithm/String/Manacher-Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Manacher-Algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/String/Manacher-Algorithm.md" data-href="Algorithm/String/Manacher-Algorithm.md" href="https://www.allenygy.vip/algorithm/string/manacher-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Manacher-Algorithm</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/String-Overview.md" data-href="Algorithm/String/String-Overview.md" href="https://www.allenygy.vip/Algorithm/String/String-Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">String-Overview</a><a data-tooltip-position="top" aria-label="Algorithm/String/String-Overview.md" data-href="Algorithm/String/String-Overview.md" href="https://www.allenygy.vip/algorithm/string/string-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">String-Overview</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/KMP.md" data-href="Algorithm/String/KMP.md" href="https://www.allenygy.vip/Algorithm/String/KMP" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">KMP</a><a data-tooltip-position="top" aria-label="Algorithm/String/KMP.md" data-href="Algorithm/String/KMP.md" href="https://www.allenygy.vip/algorithm/string/kmp.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">KMP</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Tire-Tree.md" data-href="Algorithm/String/Tire-Tree.md" href="https://www.allenygy.vip/Algorithm/String/Tire-Tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Tire-Tree</a><a data-tooltip-position="top" aria-label="Algorithm/String/Tire-Tree.md" data-href="Algorithm/String/Tire-Tree.md" href="https://www.allenygy.vip/algorithm/string/tire-tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Tire-Tree</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Z-Function.md" data-href="Algorithm/String/Z-Function.md" href="https://www.allenygy.vip/Algorithm/String/Z-Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Z-Function</a><a data-tooltip-position="top" aria-label="Algorithm/String/Z-Function.md" data-href="Algorithm/String/Z-Function.md" href="https://www.allenygy.vip/algorithm/string/z-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Z-Function</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab2.md" data-href="Computer Organization/Lab/CO-Lab2.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab2</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab2.md" data-href="Computer Organization/Lab/CO-Lab2.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab2</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab3.md" data-href="Computer Organization/Lab/CO-Lab3.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab3</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab3.md" data-href="Computer Organization/Lab/CO-Lab3.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab3</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab7.md" data-href="Computer Organization/Lab/CO-Lab7.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab7" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab7</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab7.md" data-href="Computer Organization/Lab/CO-Lab7.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab7.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab7</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab8.md" data-href="Computer Organization/Lab/CO-Lab8.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab8" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab8</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab8.md" data-href="Computer Organization/Lab/CO-Lab8.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab8.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab8</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab6.md" data-href="Computer Organization/Lab/CO-Lab6.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab6" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab6</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab6.md" data-href="Computer Organization/Lab/CO-Lab6.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab6.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab6</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab5.md" data-href="Computer Organization/Lab/CO-Lab5.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab5</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab5.md" data-href="Computer Organization/Lab/CO-Lab5.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab5</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Computer Organization Overview.md" data-href="Computer Organization/Computer Organization Overview.md" href="https://www.allenygy.vip/Computer Organization/Computer Organization Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Computer Organization Overview</a><a data-tooltip-position="top" aria-label="Computer Organization/Computer Organization Overview.md" data-href="Computer Organization/Computer Organization Overview.md" href="https://www.allenygy.vip/computer-organization/computer-organization-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Computer Organization Overview</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/01-What is a Computer.md" data-href="Computer Organization/Lecture/01-What is a Computer.md" href="https://www.allenygy.vip/Computer Organization/Lecture/01-What is a Computer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-What is a Computer</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/01-What is a Computer.md" data-href="Computer Organization/Lecture/01-What is a Computer.md" href="https://www.allenygy.vip/computer-organization/lecture/01-what-is-a-computer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-What is a Computer</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" data-href="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" href="https://www.allenygy.vip/Computer Organization/Lecture/02-Bits Data Representation and Manipulation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Bits Data Representation and Manipulation</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" data-href="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" href="https://www.allenygy.vip/computer-organization/lecture/02-bits-data-representation-and-manipulation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Bits Data Representation and Manipulation</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-From-Gates-to-Circuits-I-Combinational-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/05-from-gates-to-circuits-i-combinational-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-From-Gates-to-Circuits-I-Combinational-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" data-href="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" href="https://www.allenygy.vip/Computer Organization/Lecture/04-From-Transistors-to-Gates" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-From-Transistors-to-Gates</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" data-href="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" href="https://www.allenygy.vip/computer-organization/lecture/04-from-transistors-to-gates.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-From-Transistors-to-Gates</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Boolean-Algebra-from-Bits-to-Logic</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/computer-organization/lecture/03-boolean-algebra-from-bits-to-logic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Boolean-Algebra-from-Bits-to-Logic</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-From-Gates-to-Circuits-II-Sequential-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/06-from-gates-to-circuits-ii-sequential-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-From-Gates-to-Circuits-II-Sequential-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/07-Circuit-Design.md" data-href="Computer Organization/Lecture/07-Circuit-Design.md" href="https://www.allenygy.vip/Computer Organization/Lecture/07-Circuit-Design" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Circuit-Design</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/07-Circuit-Design.md" data-href="Computer Organization/Lecture/07-Circuit-Design.md" href="https://www.allenygy.vip/computer-organization/lecture/07-circuit-design.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Circuit-Design</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/08-Finite-State-Machine.md" data-href="Computer Organization/Lecture/08-Finite-State-Machine.md" href="https://www.allenygy.vip/Computer Organization/Lecture/08-Finite-State-Machine" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Finite-State-Machine</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/08-Finite-State-Machine.md" data-href="Computer Organization/Lecture/08-Finite-State-Machine.md" href="https://www.allenygy.vip/computer-organization/lecture/08-finite-state-machine.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Finite-State-Machine</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/09-Microarchitecture.md" data-href="Computer Organization/Lecture/09-Microarchitecture.md" href="https://www.allenygy.vip/Computer Organization/Lecture/09-Microarchitecture" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-Microarchitecture</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/09-Microarchitecture.md" data-href="Computer Organization/Lecture/09-Microarchitecture.md" href="https://www.allenygy.vip/computer-organization/lecture/09-microarchitecture.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-Microarchitecture</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/10-ISA.md" data-href="Computer Organization/Lecture/10-ISA.md" href="https://www.allenygy.vip/Computer Organization/Lecture/10-ISA" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-ISA</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/10-ISA.md" data-href="Computer Organization/Lecture/10-ISA.md" href="https://www.allenygy.vip/computer-organization/lecture/10-isa.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-ISA</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">11-From-Machine-Language-to-Assembly-Language</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/computer-organization/lecture/11-from-machine-language-to-assembly-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">11-From-Machine-Language-to-Assembly-Language</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" data-href="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-1/CO-Assignment-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-1</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" data-href="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-1/co-assignment-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-1</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" data-href="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-2/CO-Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-2</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" data-href="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-2/co-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-2</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" data-href="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-3/CO-Assignment-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-3</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" data-href="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-3/co-assignment-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-3</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" data-href="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-4/CO-Assignment-4" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-4</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" data-href="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-4/co-assignment-4.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-4</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Computer Vision Overview.md" data-href="Computer Vision/Computer Vision Overview.md" href="https://www.allenygy.vip/Computer Vision/Computer Vision Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Computer Vision Overview</a><a data-tooltip-position="top" aria-label="Computer Vision/Computer Vision Overview.md" data-href="Computer Vision/Computer Vision Overview.md" href="https://www.allenygy.vip/computer-vision/computer-vision-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Computer Vision Overview</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-1.md" data-href="Computer Vision/Homework/CV-HW-1.md" href="https://www.allenygy.vip/Computer Vision/Homework/CV-HW-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-HW-1</a><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-1.md" data-href="Computer Vision/Homework/CV-HW-1.md" href="https://www.allenygy.vip/computer-vision/homework/cv-hw-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-HW-1</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-2.md" data-href="Computer Vision/Homework/CV-HW-2.md" href="https://www.allenygy.vip/Computer Vision/Homework/CV-HW-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-HW-2</a><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-2.md" data-href="Computer Vision/Homework/CV-HW-2.md" href="https://www.allenygy.vip/computer-vision/homework/cv-hw-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-HW-2</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-3.md" data-href="Computer Vision/Homework/CV-HW-3.md" href="https://www.allenygy.vip/Computer Vision/Homework/CV-HW-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-HW-3</a><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-3.md" data-href="Computer Vision/Homework/CV-HW-3.md" href="https://www.allenygy.vip/computer-vision/homework/cv-hw-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-HW-3</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Back Propagation.md" data-href="Computer Vision/Lecture/CV-Back Propagation.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Back Propagation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Back Propagation</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Back Propagation.md" data-href="Computer Vision/Lecture/CV-Back Propagation.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-back-propagation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Back Propagation</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Convolutional and image filtering.md" data-href="Computer Vision/Lecture/CV-Convolutional and image filtering.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Convolutional and image filtering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Convolutional and image filtering</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Convolutional and image filtering.md" data-href="Computer Vision/Lecture/CV-Convolutional and image filtering.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-convolutional-and-image-filtering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Convolutional and image filtering</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Fourier Transformation.md" data-href="Computer Vision/Lecture/CV-Fourier Transformation.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Fourier Transformation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Fourier Transformation</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Fourier Transformation.md" data-href="Computer Vision/Lecture/CV-Fourier Transformation.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-fourier-transformation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Fourier Transformation</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Normalization Methods.md" data-href="Computer Vision/Lecture/CV-Normalization Methods.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Normalization Methods" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Normalization Methods</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Normalization Methods.md" data-href="Computer Vision/Lecture/CV-Normalization Methods.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-normalization-methods.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Normalization Methods</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Signal and Image Processing.md" data-href="Computer Vision/Lecture/CV-Signal and Image Processing.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Signal and Image Processing" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Signal and Image Processing</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Signal and Image Processing.md" data-href="Computer Vision/Lecture/CV-Signal and Image Processing.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-signal-and-image-processing.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Signal and Image Processing</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Weight Initialization.md" data-href="Computer Vision/Lecture/CV-Weight Initialization.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Weight Initialization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Weight Initialization</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Weight Initialization.md" data-href="Computer Vision/Lecture/CV-Weight Initialization.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-weight-initialization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Weight Initialization</a>
<br><a data-tooltip-position="top" aria-label="Contest/Contest-Overview.md" data-href="Contest/Contest-Overview.md" href="https://www.allenygy.vip/Contest/Contest-Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Contest-Overview</a><a data-tooltip-position="top" aria-label="Contest/Contest-Overview.md" data-href="Contest/Contest-Overview.md" href="https://www.allenygy.vip/contest/contest-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Contest-Overview</a>
<br><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-1.md" data-href="Contest/Lanqiao/Train-1.md" href="https://www.allenygy.vip/Contest/Lanqiao/Train-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Train-1</a><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-1.md" data-href="Contest/Lanqiao/Train-1.md" href="https://www.allenygy.vip/contest/lanqiao/train-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Train-1</a>
<br><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-2.md" data-href="Contest/Lanqiao/Train-2.md" href="https://www.allenygy.vip/Contest/Lanqiao/Train-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Train-2</a><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-2.md" data-href="Contest/Lanqiao/Train-2.md" href="https://www.allenygy.vip/contest/lanqiao/train-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Train-2</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-contest-133.md" data-href="Contest/Leetcode/Biweekly-contest-133.md" href="https://www.allenygy.vip/Contest/Leetcode/Biweekly-contest-133" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Biweekly-contest-133</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-contest-133.md" data-href="Contest/Leetcode/Biweekly-contest-133.md" href="https://www.allenygy.vip/contest/leetcode/biweekly-contest-133.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Biweekly-contest-133</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-122.md" data-href="Contest/Leetcode/Biweekly-Contest-122.md" href="https://www.allenygy.vip/Contest/Leetcode/Biweekly-Contest-122" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Biweekly-Contest-122</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-122.md" data-href="Contest/Leetcode/Biweekly-Contest-122.md" href="https://www.allenygy.vip/contest/leetcode/biweekly-contest-122.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Biweekly-Contest-122</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-123.md" data-href="Contest/Leetcode/Biweekly-Contest-123.md" href="https://www.allenygy.vip/Contest/Leetcode/Biweekly-Contest-123" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Biweekly-Contest-123</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-123.md" data-href="Contest/Leetcode/Biweekly-Contest-123.md" href="https://www.allenygy.vip/contest/leetcode/biweekly-contest-123.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Biweekly-Contest-123</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-381.md" data-href="Contest/Leetcode/Weekly-Contest-381.md" href="https://www.allenygy.vip/Contest/Leetcode/Weekly-Contest-381" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Weekly-Contest-381</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-381.md" data-href="Contest/Leetcode/Weekly-Contest-381.md" href="https://www.allenygy.vip/contest/leetcode/weekly-contest-381.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Weekly-Contest-381</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-403.md" data-href="Contest/Leetcode/Weekly-Contest-403.md" href="https://www.allenygy.vip/Contest/Leetcode/Weekly-Contest-403" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Weekly-Contest-403</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-403.md" data-href="Contest/Leetcode/Weekly-Contest-403.md" href="https://www.allenygy.vip/contest/leetcode/weekly-contest-403.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Weekly-Contest-403</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-402.md" data-href="Contest/Leetcode/Weekly-Contest-402.md" href="https://www.allenygy.vip/Contest/Leetcode/Weekly-Contest-402" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Weekly-Contest-402</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-402.md" data-href="Contest/Leetcode/Weekly-Contest-402.md" href="https://www.allenygy.vip/contest/leetcode/weekly-contest-402.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Weekly-Contest-402</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lab/BDA-Lab-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Lab-1</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Lab-1</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lab/BDA-Lab-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Lab-2</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Lab-2</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Link Analysis</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-link-analysis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Link Analysis</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-MapReduce</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-mapreduce.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-MapReduce</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Peoject/BDA-Proposal" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Proposal</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-proposal.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Proposal</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Data Analysis Overview.md" data-href="Data Analysis/Data Analysis Overview.md" href="https://www.allenygy.vip/Data Analysis/Data Analysis Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Data Analysis Overview</a><a data-tooltip-position="top" aria-label="Data Analysis/Data Analysis Overview.md" data-href="Data Analysis/Data Analysis Overview.md" href="https://www.allenygy.vip/data-analysis/data-analysis-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Data Analysis Overview</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" data-href="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" href="https://www.allenygy.vip/Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Hans-On-Data-Analysis-For-Everyone</a><a data-tooltip-position="top" aria-label="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" data-href="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" href="https://www.allenygy.vip/data-analysis/hands-on-data-analysis/hans-on-data-analysis-for-everyone.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Hans-On-Data-Analysis-For-Everyone</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Database Management System Overview.md" data-href="Database Management System/Database Management System Overview.md" href="https://www.allenygy.vip/Database Management System/Database Management System Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Database Management System Overview</a><a data-tooltip-position="top" aria-label="Database Management System/Database Management System Overview.md" data-href="Database Management System/Database Management System Overview.md" href="https://www.allenygy.vip/database-management-system/database-management-system-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Database Management System Overview</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/02-Cross-table-Query.md" data-href="Database Management System/MySQL/02-Cross-table-Query.md" href="https://www.allenygy.vip/Database Management System/MySQL/02-Cross-table-Query" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Cross-table-Query</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/02-Cross-table-Query.md" data-href="Database Management System/MySQL/02-Cross-table-Query.md" href="https://www.allenygy.vip/database-management-system/mysql/02-cross-table-query.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Cross-table-Query</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/04-Aggregation.md" data-href="Database Management System/MySQL/04-Aggregation.md" href="https://www.allenygy.vip/Database Management System/MySQL/04-Aggregation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Aggregation</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/04-Aggregation.md" data-href="Database Management System/MySQL/04-Aggregation.md" href="https://www.allenygy.vip/database-management-system/mysql/04-aggregation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Aggregation</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/05-Data-Definition.md" data-href="Database Management System/MySQL/05-Data-Definition.md" href="https://www.allenygy.vip/Database Management System/MySQL/05-Data-Definition" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-Data-Definition</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/05-Data-Definition.md" data-href="Database Management System/MySQL/05-Data-Definition.md" href="https://www.allenygy.vip/database-management-system/mysql/05-data-definition.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-Data-Definition</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/06-Data-Modification.md" data-href="Database Management System/MySQL/06-Data-Modification.md" href="https://www.allenygy.vip/Database Management System/MySQL/06-Data-Modification" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-Data-Modification</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/06-Data-Modification.md" data-href="Database Management System/MySQL/06-Data-Modification.md" href="https://www.allenygy.vip/database-management-system/mysql/06-data-modification.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-Data-Modification</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/07-Null-Subquery.md" data-href="Database Management System/MySQL/07-Null-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/07-Null-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Null-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/07-Null-Subquery.md" data-href="Database Management System/MySQL/07-Null-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/07-null-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Null-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Set-Operation-&amp;-Where-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/08-set-operation-&amp;-where-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Set-Operation-&amp;-Where-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/09-Division-and-Correlated-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-Division-and-Correlated-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/09-division-and-correlated-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-Division-and-Correlated-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/01-Basic-MySQL.md" data-href="Database Management System/MySQL/01-Basic-MySQL.md" href="https://www.allenygy.vip/Database Management System/MySQL/01-Basic-MySQL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-Basic-MySQL</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/01-Basic-MySQL.md" data-href="Database Management System/MySQL/01-Basic-MySQL.md" href="https://www.allenygy.vip/database-management-system/mysql/01-basic-mysql.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-Basic-MySQL</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/10-Advanced-SQL.md" data-href="Database Management System/MySQL/10-Advanced-SQL.md" href="https://www.allenygy.vip/Database Management System/MySQL/10-Advanced-SQL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-Advanced-SQL</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/10-Advanced-SQL.md" data-href="Database Management System/MySQL/10-Advanced-SQL.md" href="https://www.allenygy.vip/database-management-system/mysql/10-advanced-sql.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-Advanced-SQL</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/03-Join.md" data-href="Database Management System/MySQL/03-Join.md" href="https://www.allenygy.vip/Database Management System/MySQL/03-Join" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Join</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/03-Join.md" data-href="Database Management System/MySQL/03-Join.md" href="https://www.allenygy.vip/database-management-system/mysql/03-join.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Join</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Cassandra.md" data-href="Database Management System/NoSQL/Cassandra.md" href="https://www.allenygy.vip/Database Management System/NoSQL/Cassandra" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Cassandra</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Cassandra.md" data-href="Database Management System/NoSQL/Cassandra.md" href="https://www.allenygy.vip/database-management-system/nosql/cassandra.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Cassandra</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/MongoDB.md" data-href="Database Management System/NoSQL/MongoDB.md" href="https://www.allenygy.vip/Database Management System/NoSQL/MongoDB" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MongoDB</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/MongoDB.md" data-href="Database Management System/NoSQL/MongoDB.md" href="https://www.allenygy.vip/database-management-system/nosql/mongodb.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MongoDB</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Neo4j.md" data-href="Database Management System/NoSQL/Neo4j.md" href="https://www.allenygy.vip/Database Management System/NoSQL/Neo4j" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Neo4j</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Neo4j.md" data-href="Database Management System/NoSQL/Neo4j.md" href="https://www.allenygy.vip/database-management-system/nosql/neo4j.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Neo4j</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL-Review.md" data-href="Database Management System/NoSQL/NoSQL-Review.md" href="https://www.allenygy.vip/Database Management System/NoSQL/NoSQL-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL-Review</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL-Review.md" data-href="Database Management System/NoSQL/NoSQL-Review.md" href="https://www.allenygy.vip/database-management-system/nosql/nosql-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL-Review</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL.md" data-href="Database Management System/NoSQL/NoSQL.md" href="https://www.allenygy.vip/Database Management System/NoSQL/NoSQL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL.md" data-href="Database Management System/NoSQL/NoSQL.md" href="https://www.allenygy.vip/database-management-system/nosql/nosql.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Redis.md" data-href="Database Management System/NoSQL/Redis.md" href="https://www.allenygy.vip/Database Management System/NoSQL/Redis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Redis</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Redis.md" data-href="Database Management System/NoSQL/Redis.md" href="https://www.allenygy.vip/database-management-system/nosql/redis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Redis</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-Entity-Relationship-Model-Modeling</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/database-management-system/rdbms/01-entity-relationship-model-modeling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-Entity-Relationship-Model-Modeling</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Entity-Relationship-Model-Constraints</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/database-management-system/rdbms/02-entity-relationship-model-constraints.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Entity-Relationship-Model-Constraints</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Entity-Relationship-Model-Extended-Features</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/database-management-system/rdbms/03-entity-relationship-model-extended-features.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Entity-Relationship-Model-Extended-Features</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/04-Design-Issues.md" data-href="Database Management System/RDBMS/04-Design-Issues.md" href="https://www.allenygy.vip/Database Management System/RDBMS/04-Design-Issues" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Design-Issues</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/04-Design-Issues.md" data-href="Database Management System/RDBMS/04-Design-Issues.md" href="https://www.allenygy.vip/database-management-system/rdbms/04-design-issues.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Design-Issues</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/05-Logical-Design.md" data-href="Database Management System/RDBMS/05-Logical-Design.md" href="https://www.allenygy.vip/Database Management System/RDBMS/05-Logical-Design" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-Logical-Design</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/05-Logical-Design.md" data-href="Database Management System/RDBMS/05-Logical-Design.md" href="https://www.allenygy.vip/database-management-system/rdbms/05-logical-design.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-Logical-Design</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/06-Key-Concept.md" data-href="Database Management System/RDBMS/06-Key-Concept.md" href="https://www.allenygy.vip/Database Management System/RDBMS/06-Key-Concept" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-Key-Concept</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/06-Key-Concept.md" data-href="Database Management System/RDBMS/06-Key-Concept.md" href="https://www.allenygy.vip/database-management-system/rdbms/06-key-concept.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-Key-Concept</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/07-relational-database-design-purpose-&amp;-first-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Relational-Database-Design-Functional-Dependency</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/database-management-system/rdbms/08-relational-database-design-functional-dependency.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Relational-Database-Design-Functional-Dependency</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/Database Management System/RDBMS/09-Relational-Database-Design-BCNF" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-Relational-Database-Design-BCNF</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/database-management-system/rdbms/09-relational-database-design-bcnf.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-Relational-Database-Design-BCNF</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-Relational-Database-Design-3rd-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/10-relational-database-design-3rd-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-Relational-Database-Design-3rd-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/DBMS-Review.md" data-href="Database Management System/RDBMS/DBMS-Review.md" href="https://www.allenygy.vip/Database Management System/RDBMS/DBMS-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DBMS-Review</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/DBMS-Review.md" data-href="Database Management System/RDBMS/DBMS-Review.md" href="https://www.allenygy.vip/database-management-system/rdbms/dbms-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DBMS-Review</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-1.md" data-href="Database Management System/Assignment/NoSQL-As-1.md" href="https://www.allenygy.vip/Database Management System/Assignment/NoSQL-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL-As-1</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-1.md" data-href="Database Management System/Assignment/NoSQL-As-1.md" href="https://www.allenygy.vip/database-management-system/assignment/nosql-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL-As-1</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-2.md" data-href="Database Management System/Assignment/NoSQL-As-2.md" href="https://www.allenygy.vip/Database Management System/Assignment/NoSQL-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL-As-2</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-2.md" data-href="Database Management System/Assignment/NoSQL-As-2.md" href="https://www.allenygy.vip/database-management-system/assignment/nosql-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL-As-2</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-1.md" data-href="Database Management System/Assignment/RDBMS-As-1.md" href="https://www.allenygy.vip/Database Management System/Assignment/RDBMS-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">RDBMS-As-1</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-1.md" data-href="Database Management System/Assignment/RDBMS-As-1.md" href="https://www.allenygy.vip/database-management-system/assignment/rdbms-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">RDBMS-As-1</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-2.md" data-href="Database Management System/Assignment/RDBMS-As-2.md" href="https://www.allenygy.vip/Database Management System/Assignment/RDBMS-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">RDBMS-As-2</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-2.md" data-href="Database Management System/Assignment/RDBMS-As-2.md" href="https://www.allenygy.vip/database-management-system/assignment/rdbms-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">RDBMS-As-2</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-3.md" data-href="Database Management System/Assignment/RDBMS-As-3.md" href="https://www.allenygy.vip/Database Management System/Assignment/RDBMS-As-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">RDBMS-As-3</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-3.md" data-href="Database Management System/Assignment/RDBMS-As-3.md" href="https://www.allenygy.vip/database-management-system/assignment/rdbms-as-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">RDBMS-As-3</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Application/MySQL+Redis.md" data-href="Database Management System/Application/MySQL+Redis.md" href="https://www.allenygy.vip/Database Management System/Application/MySQL+Redis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MySQL+Redis</a><a data-tooltip-position="top" aria-label="Database Management System/Application/MySQL+Redis.md" data-href="Database Management System/Application/MySQL+Redis.md" href="https://www.allenygy.vip/database-management-system/application/mysql+redis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MySQL+Redis</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Activation Function.md" data-href="Deep Learning/00-Basic/Activation Function.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Activation Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Activation Function</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Activation Function.md" data-href="Deep Learning/00-Basic/Activation Function.md" href="https://www.allenygy.vip/deep-learning/00-basic/activation-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Activation Function</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Dropout.md" data-href="Deep Learning/00-Basic/Dropout.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Dropout" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Dropout</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Dropout.md" data-href="Deep Learning/00-Basic/Dropout.md" href="https://www.allenygy.vip/deep-learning/00-basic/dropout.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Dropout</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Gradient Descent.md" data-href="Deep Learning/00-Basic/Gradient Descent.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Gradient Descent" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Gradient Descent</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Gradient Descent.md" data-href="Deep Learning/00-Basic/Gradient Descent.md" href="https://www.allenygy.vip/deep-learning/00-basic/gradient-descent.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Gradient Descent</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/K Cross Verified.md" data-href="Deep Learning/00-Basic/K Cross Verified.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/K Cross Verified" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">K Cross Verified</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/K Cross Verified.md" data-href="Deep Learning/00-Basic/K Cross Verified.md" href="https://www.allenygy.vip/deep-learning/00-basic/k-cross-verified.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">K Cross Verified</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Loss Function.md" data-href="Deep Learning/00-Basic/Loss Function.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Loss Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Loss Function</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Loss Function.md" data-href="Deep Learning/00-Basic/Loss Function.md" href="https://www.allenygy.vip/deep-learning/00-basic/loss-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Loss Function</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Overfitting and Underfitting.md" data-href="Deep Learning/00-Basic/Overfitting and Underfitting.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Overfitting and Underfitting" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Overfitting and Underfitting</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Overfitting and Underfitting.md" data-href="Deep Learning/00-Basic/Overfitting and Underfitting.md" href="https://www.allenygy.vip/deep-learning/00-basic/overfitting-and-underfitting.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Overfitting and Underfitting</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Softmax and Argmax.md" data-href="Deep Learning/00-Basic/Softmax and Argmax.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Softmax and Argmax" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Softmax and Argmax</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Softmax and Argmax.md" data-href="Deep Learning/00-Basic/Softmax and Argmax.md" href="https://www.allenygy.vip/deep-learning/00-basic/softmax-and-argmax.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Softmax and Argmax</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/01-Linear Regression/Basic torch.md" data-href="Deep Learning/01-Linear Regression/Basic torch.md" href="https://www.allenygy.vip/Deep Learning/01-Linear Regression/Basic torch" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Basic torch</a><a data-tooltip-position="top" aria-label="Deep Learning/01-Linear Regression/Basic torch.md" data-href="Deep Learning/01-Linear Regression/Basic torch.md" href="https://www.allenygy.vip/deep-learning/01-linear-regression/basic-torch.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Basic torch</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/03-Multiple Layer Perceptron/MLP.md" data-href="Deep Learning/03-Multiple Layer Perceptron/MLP.md" href="https://www.allenygy.vip/Deep Learning/03-Multiple Layer Perceptron/MLP" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MLP</a><a data-tooltip-position="top" aria-label="Deep Learning/03-Multiple Layer Perceptron/MLP.md" data-href="Deep Learning/03-Multiple Layer Perceptron/MLP.md" href="https://www.allenygy.vip/deep-learning/03-multiple-layer-perceptron/mlp.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MLP</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Activation Function.md" data-href="Deep Learning/Activation Function.md" href="https://www.allenygy.vip/Deep Learning/Activation Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Activation Function</a><a data-tooltip-position="top" aria-label="Deep Learning/Activation Function.md" data-href="Deep Learning/Activation Function.md" href="https://www.allenygy.vip/deep-learning/activation-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Activation Function</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Attention.md" data-href="Deep Learning/Attention.md" href="https://www.allenygy.vip/Deep Learning/Attention" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Attention</a><a data-tooltip-position="top" aria-label="Deep Learning/Attention.md" data-href="Deep Learning/Attention.md" href="https://www.allenygy.vip/deep-learning/attention.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Attention</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Deep Learning.md" data-href="Deep Learning/Deep Learning.md" href="https://www.allenygy.vip/Deep Learning/Deep Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Deep Learning</a><a data-tooltip-position="top" aria-label="Deep Learning/Deep Learning.md" data-href="Deep Learning/Deep Learning.md" href="https://www.allenygy.vip/deep-learning/deep-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Deep Learning</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/02-SoftMax Regression/Softmax Regression.md" data-href="Deep Learning/02-SoftMax Regression/Softmax Regression.md" href="https://www.allenygy.vip/Deep Learning/02-SoftMax Regression/Softmax Regression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Softmax Regression</a><a data-tooltip-position="top" aria-label="Deep Learning/02-SoftMax Regression/Softmax Regression.md" data-href="Deep Learning/02-SoftMax Regression/Softmax Regression.md" href="https://www.allenygy.vip/deep-learning/02-softmax-regression/softmax-regression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Softmax Regression</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Fine-Tuning.md" data-href="Deep Learning/Fine-Tuning.md" href="https://www.allenygy.vip/Deep Learning/Fine-Tuning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Fine-Tuning</a><a data-tooltip-position="top" aria-label="Deep Learning/Fine-Tuning.md" data-href="Deep Learning/Fine-Tuning.md" href="https://www.allenygy.vip/deep-learning/fine-tuning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Fine-Tuning</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/NLP/Bert.md" data-href="Deep Learning/NLP/Bert.md" href="https://www.allenygy.vip/Deep Learning/NLP/Bert" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bert</a><a data-tooltip-position="top" aria-label="Deep Learning/NLP/Bert.md" data-href="Deep Learning/NLP/Bert.md" href="https://www.allenygy.vip/deep-learning/nlp/bert.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bert</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Prompting and In Context Learning.md" data-href="Deep Learning/Prompting and In Context Learning.md" href="https://www.allenygy.vip/Deep Learning/Prompting and In Context Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prompting and In Context Learning</a><a data-tooltip-position="top" aria-label="Deep Learning/Prompting and In Context Learning.md" data-href="Deep Learning/Prompting and In Context Learning.md" href="https://www.allenygy.vip/deep-learning/prompting-and-in-context-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prompting and In Context Learning</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Bayesian Estimation.md" data-href="Machine Learning/Lecture/ML-Bayesian Estimation.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Bayesian Estimation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Bayesian Estimation</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Bayesian Estimation.md" data-href="Machine Learning/Lecture/ML-Bayesian Estimation.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-bayesian-estimation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Bayesian Estimation</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cross Validation.md" data-href="Machine Learning/Lecture/ML-Cross Validation.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Cross Validation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Cross Validation</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cross Validation.md" data-href="Machine Learning/Lecture/ML-Cross Validation.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-cross-validation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Cross Validation</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Navie Bayes.md" data-href="Machine Learning/Lecture/ML-Navie Bayes.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Navie Bayes" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Navie Bayes</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Navie Bayes.md" data-href="Machine Learning/Lecture/ML-Navie Bayes.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-navie-bayes.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Navie Bayes</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Statistical Learning.md" data-href="Machine Learning/Lecture/ML-Statistical Learning.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Statistical Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Statistical Learning</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Statistical Learning.md" data-href="Machine Learning/Lecture/ML-Statistical Learning.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-statistical-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Statistical Learning</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-2</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-2</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-3</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-3</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-5</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-5</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-6</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-6.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-6</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-7</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-7.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-7</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-8</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-8.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-8</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Tutorial</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-tutorial.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Tutorial</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/boolean-expressions.md" data-href="Math/Discrete Structure/Lecture/boolean-expressions.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/boolean-expressions" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">boolean-expressions</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/boolean-expressions.md" data-href="Math/Discrete Structure/Lecture/boolean-expressions.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/boolean-expressions.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">boolean-expressions</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/counting-principles.md" data-href="Math/Discrete Structure/Lecture/counting-principles.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/counting-principles" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">counting-principles</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/counting-principles.md" data-href="Math/Discrete Structure/Lecture/counting-principles.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/counting-principles.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">counting-principles</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" data-href="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/functions-sequence-and-summations" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">functions-sequence-and-summations</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" data-href="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/functions-sequence-and-summations.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">functions-sequence-and-summations</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/graph-theory.md" data-href="Math/Discrete Structure/Lecture/graph-theory.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/graph-theory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">graph-theory</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/graph-theory.md" data-href="Math/Discrete Structure/Lecture/graph-theory.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/graph-theory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">graph-theory</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/logic-circuits.md" data-href="Math/Discrete Structure/Lecture/logic-circuits.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/logic-circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">logic-circuits</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/logic-circuits.md" data-href="Math/Discrete Structure/Lecture/logic-circuits.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/logic-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">logic-circuits</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-equivalence.md" data-href="Math/Discrete Structure/Lecture/propositional-equivalence.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/propositional-equivalence" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">propositional-equivalence</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-equivalence.md" data-href="Math/Discrete Structure/Lecture/propositional-equivalence.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/propositional-equivalence.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">propositional-equivalence</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-logic.md" data-href="Math/Discrete Structure/Lecture/propositional-logic.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/propositional-logic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">propositional-logic</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-logic.md" data-href="Math/Discrete Structure/Lecture/propositional-logic.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/propositional-logic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">propositional-logic</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/relation.md" data-href="Math/Discrete Structure/Lecture/relation.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/relation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">relation</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/relation.md" data-href="Math/Discrete Structure/Lecture/relation.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/relation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">relation</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" data-href="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/representing-graph-and-connectivity" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">representing-graph-and-connectivity</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" data-href="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/representing-graph-and-connectivity.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">representing-graph-and-connectivity</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" data-href="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/sets-and-n-tuple" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">sets-and-n-tuple</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" data-href="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/sets-and-n-tuple.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">sets-and-n-tuple</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/tree.md" data-href="Math/Discrete Structure/Lecture/tree.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">tree</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/tree.md" data-href="Math/Discrete Structure/Lecture/tree.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">tree</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" data-href="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" href="https://www.allenygy.vip/Math/Linear Algebra/Eigenvalues and Eigenvectors" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Eigenvalues and Eigenvectors</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" data-href="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" href="https://www.allenygy.vip/math/linear-algebra/eigenvalues-and-eigenvectors.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Eigenvalues and Eigenvectors</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Judgment.md" data-href="Math/Linear Algebra/Judgment.md" href="https://www.allenygy.vip/Math/Linear Algebra/Judgment" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Judgment</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Judgment.md" data-href="Math/Linear Algebra/Judgment.md" href="https://www.allenygy.vip/math/linear-algebra/judgment.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Judgment</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Linear Transformations.md" data-href="Math/Linear Algebra/Linear Transformations.md" href="https://www.allenygy.vip/Math/Linear Algebra/Linear Transformations" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Linear Transformations</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Linear Transformations.md" data-href="Math/Linear Algebra/Linear Transformations.md" href="https://www.allenygy.vip/math/linear-algebra/linear-transformations.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Linear Transformations</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Matrix Operation.md" data-href="Math/Linear Algebra/Matrix Operation.md" href="https://www.allenygy.vip/Math/Linear Algebra/Matrix Operation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Matrix Operation</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Matrix Operation.md" data-href="Math/Linear Algebra/Matrix Operation.md" href="https://www.allenygy.vip/math/linear-algebra/matrix-operation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Matrix Operation</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Orthogonality.md" data-href="Math/Linear Algebra/Orthogonality.md" href="https://www.allenygy.vip/Math/Linear Algebra/Orthogonality" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Orthogonality</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Orthogonality.md" data-href="Math/Linear Algebra/Orthogonality.md" href="https://www.allenygy.vip/math/linear-algebra/orthogonality.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Orthogonality</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Product.md" data-href="Math/Linear Algebra/Product.md" href="https://www.allenygy.vip/Math/Linear Algebra/Product" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Product</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Product.md" data-href="Math/Linear Algebra/Product.md" href="https://www.allenygy.vip/math/linear-algebra/product.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Product</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigen-Decomposition-Review.md" data-href="Math/Linear Algebra/Eigen-Decomposition-Review.md" href="https://www.allenygy.vip/Math/Linear Algebra/Eigen-Decomposition-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Eigen-Decomposition-Review</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigen-Decomposition-Review.md" data-href="Math/Linear Algebra/Eigen-Decomposition-Review.md" href="https://www.allenygy.vip/math/linear-algebra/eigen-decomposition-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Eigen-Decomposition-Review</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Vector Space.md" data-href="Math/Linear Algebra/Vector Space.md" href="https://www.allenygy.vip/Math/Linear Algebra/Vector Space" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Vector Space</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Vector Space.md" data-href="Math/Linear Algebra/Vector Space.md" href="https://www.allenygy.vip/math/linear-algebra/vector-space.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Vector Space</a>
<br><a data-tooltip-position="top" aria-label="Math/Math.md" data-href="Math/Math.md" href="https://www.allenygy.vip/Math/Math" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Math</a><a data-tooltip-position="top" aria-label="Math/Math.md" data-href="Math/Math.md" href="https://www.allenygy.vip/math/math.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Math</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Chi-Square-Tests.md" data-href="Math/Probability Statistics/Chi-Square-Tests.md" href="https://www.allenygy.vip/Math/Probability Statistics/Chi-Square-Tests" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Chi-Square-Tests</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Chi-Square-Tests.md" data-href="Math/Probability Statistics/Chi-Square-Tests.md" href="https://www.allenygy.vip/math/probability-statistics/chi-square-tests.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Chi-Square-Tests</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Confidence-Interval.md" data-href="Math/Probability Statistics/Confidence-Interval.md" href="https://www.allenygy.vip/Math/Probability Statistics/Confidence-Interval" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Confidence-Interval</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Confidence-Interval.md" data-href="Math/Probability Statistics/Confidence-Interval.md" href="https://www.allenygy.vip/math/probability-statistics/confidence-interval.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Confidence-Interval</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" href="https://www.allenygy.vip/Math/Probability Statistics/Hypothesis-Testing-Two-Population" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Hypothesis-Testing-Two-Population</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" href="https://www.allenygy.vip/math/probability-statistics/hypothesis-testing-two-population.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Hypothesis-Testing-Two-Population</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" href="https://www.allenygy.vip/Math/Probability Statistics/Hypothesis-Testing-Single-Population" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Hypothesis-Testing-Single-Population</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" href="https://www.allenygy.vip/math/probability-statistics/hypothesis-testing-single-population.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Hypothesis-Testing-Single-Population</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Probability-Theory.md" data-href="Math/Probability Statistics/Probability-Theory.md" href="https://www.allenygy.vip/Math/Probability Statistics/Probability-Theory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Probability-Theory</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Probability-Theory.md" data-href="Math/Probability Statistics/Probability-Theory.md" href="https://www.allenygy.vip/math/probability-statistics/probability-theory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Probability-Theory</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" data-href="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" href="https://www.allenygy.vip/Math/Probability Statistics/Poisson-Distribution-Midterm-Pre" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Poisson-Distribution-Midterm-Pre</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" data-href="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" href="https://www.allenygy.vip/math/probability-statistics/poisson-distribution-midterm-pre.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Poisson-Distribution-Midterm-Pre</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Extend/NJU OS PA0.md" data-href="Operating System/Extend/NJU OS PA0.md" href="https://www.allenygy.vip/Operating System/Extend/NJU OS PA0" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NJU OS PA0</a><a data-tooltip-position="top" aria-label="Operating System/Extend/NJU OS PA0.md" data-href="Operating System/Extend/NJU OS PA0.md" href="https://www.allenygy.vip/operating-system/extend/nju-os-pa0.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NJU OS PA0</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Extend/Linux Basic Operation.md" data-href="Operating System/Extend/Linux Basic Operation.md" href="https://www.allenygy.vip/Operating System/Extend/Linux Basic Operation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Linux Basic Operation</a><a data-tooltip-position="top" aria-label="Operating System/Extend/Linux Basic Operation.md" data-href="Operating System/Extend/Linux Basic Operation.md" href="https://www.allenygy.vip/operating-system/extend/linux-basic-operation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Linux Basic Operation</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/01-Operating System Introduction.md" data-href="Operating System/Lecture/01-Operating System Introduction.md" href="https://www.allenygy.vip/Operating System/Lecture/01-Operating System Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-Operating System Introduction</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/01-Operating System Introduction.md" data-href="Operating System/Lecture/01-Operating System Introduction.md" href="https://www.allenygy.vip/operating-system/lecture/01-operating-system-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-Operating System Introduction</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/02-Operating System Structure.md" data-href="Operating System/Lecture/02-Operating System Structure.md" href="https://www.allenygy.vip/Operating System/Lecture/02-Operating System Structure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Operating System Structure</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/02-Operating System Structure.md" data-href="Operating System/Lecture/02-Operating System Structure.md" href="https://www.allenygy.vip/operating-system/lecture/02-operating-system-structure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Operating System Structure</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/03-Process.md" data-href="Operating System/Lecture/03-Process.md" href="https://www.allenygy.vip/Operating System/Lecture/03-Process" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Process</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/03-Process.md" data-href="Operating System/Lecture/03-Process.md" href="https://www.allenygy.vip/operating-system/lecture/03-process.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Process</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/04-Threads.md" data-href="Operating System/Lecture/04-Threads.md" href="https://www.allenygy.vip/Operating System/Lecture/04-Threads" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Threads</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/04-Threads.md" data-href="Operating System/Lecture/04-Threads.md" href="https://www.allenygy.vip/operating-system/lecture/04-threads.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Threads</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/05-CPU Scheduling.md" data-href="Operating System/Lecture/05-CPU Scheduling.md" href="https://www.allenygy.vip/Operating System/Lecture/05-CPU Scheduling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-CPU Scheduling</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/05-CPU Scheduling.md" data-href="Operating System/Lecture/05-CPU Scheduling.md" href="https://www.allenygy.vip/operating-system/lecture/05-cpu-scheduling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-CPU Scheduling</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/06-Process Synchronization.md" data-href="Operating System/Lecture/06-Process Synchronization.md" href="https://www.allenygy.vip/Operating System/Lecture/06-Process Synchronization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-Process Synchronization</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/06-Process Synchronization.md" data-href="Operating System/Lecture/06-Process Synchronization.md" href="https://www.allenygy.vip/operating-system/lecture/06-process-synchronization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-Process Synchronization</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/07-Main Memory.md" data-href="Operating System/Lecture/07-Main Memory.md" href="https://www.allenygy.vip/Operating System/Lecture/07-Main Memory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Main Memory</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/07-Main Memory.md" data-href="Operating System/Lecture/07-Main Memory.md" href="https://www.allenygy.vip/operating-system/lecture/07-main-memory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Main Memory</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/08-Virtual Memory.md" data-href="Operating System/Lecture/08-Virtual Memory.md" href="https://www.allenygy.vip/Operating System/Lecture/08-Virtual Memory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Virtual Memory</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/08-Virtual Memory.md" data-href="Operating System/Lecture/08-Virtual Memory.md" href="https://www.allenygy.vip/operating-system/lecture/08-virtual-memory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Virtual Memory</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/09-File System Interface.md" data-href="Operating System/Lecture/09-File System Interface.md" href="https://www.allenygy.vip/Operating System/Lecture/09-File System Interface" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-File System Interface</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/09-File System Interface.md" data-href="Operating System/Lecture/09-File System Interface.md" href="https://www.allenygy.vip/operating-system/lecture/09-file-system-interface.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-File System Interface</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/10-File System Implementation.md" data-href="Operating System/Lecture/10-File System Implementation.md" href="https://www.allenygy.vip/Operating System/Lecture/10-File System Implementation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-File System Implementation</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/10-File System Implementation.md" data-href="Operating System/Lecture/10-File System Implementation.md" href="https://www.allenygy.vip/operating-system/lecture/10-file-system-implementation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-File System Implementation</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Operating System Overview.md" data-href="Operating System/Operating System Overview.md" href="https://www.allenygy.vip/Operating System/Operating System Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Operating System Overview</a><a data-tooltip-position="top" aria-label="Operating System/Operating System Overview.md" data-href="Operating System/Operating System Overview.md" href="https://www.allenygy.vip/operating-system/operating-system-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Operating System Overview</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/Macro.md" data-href="Programming/C/Macro.md" href="https://www.allenygy.vip/Programming/C/Macro" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Macro</a><a data-tooltip-position="top" aria-label="Programming/C/Macro.md" data-href="Programming/C/Macro.md" href="https://www.allenygy.vip/programming/c/macro.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Macro</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/Multithreads.md" data-href="Programming/C/Multithreads.md" href="https://www.allenygy.vip/Programming/C/Multithreads" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Multithreads</a><a data-tooltip-position="top" aria-label="Programming/C/Multithreads.md" data-href="Programming/C/Multithreads.md" href="https://www.allenygy.vip/programming/c/multithreads.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Multithreads</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/Pointers.md" data-href="Programming/C/Pointers.md" href="https://www.allenygy.vip/Programming/C/Pointers" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Pointers</a><a data-tooltip-position="top" aria-label="Programming/C/Pointers.md" data-href="Programming/C/Pointers.md" href="https://www.allenygy.vip/programming/c/pointers.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Pointers</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/fileoperation.md" data-href="Programming/C/fileoperation.md" href="https://www.allenygy.vip/Programming/C/fileoperation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">fileoperation</a><a data-tooltip-position="top" aria-label="Programming/C/fileoperation.md" data-href="Programming/C/fileoperation.md" href="https://www.allenygy.vip/programming/c/fileoperation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">fileoperation</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Bitest.md" data-href="Programming/Cpp/Bitest.md" href="https://www.allenygy.vip/Programming/Cpp/Bitest" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bitest</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Bitest.md" data-href="Programming/Cpp/Bitest.md" href="https://www.allenygy.vip/programming/cpp/bitest.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bitest</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Algorithm-Library.md" data-href="Programming/Cpp/Algorithm-Library.md" href="https://www.allenygy.vip/Programming/Cpp/Algorithm-Library" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Algorithm-Library</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Algorithm-Library.md" data-href="Programming/Cpp/Algorithm-Library.md" href="https://www.allenygy.vip/programming/cpp/algorithm-library.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Algorithm-Library</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Iota.md" data-href="Programming/Cpp/Iota.md" href="https://www.allenygy.vip/Programming/Cpp/Iota" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Iota</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Iota.md" data-href="Programming/Cpp/Iota.md" href="https://www.allenygy.vip/programming/cpp/iota.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Iota</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Map.md" data-href="Programming/Cpp/Map.md" href="https://www.allenygy.vip/Programming/Cpp/Map" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Map</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Map.md" data-href="Programming/Cpp/Map.md" href="https://www.allenygy.vip/programming/cpp/map.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Map</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Priority-Queue.md" data-href="Programming/Cpp/Priority-Queue.md" href="https://www.allenygy.vip/Programming/Cpp/Priority-Queue" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Priority-Queue</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Priority-Queue.md" data-href="Programming/Cpp/Priority-Queue.md" href="https://www.allenygy.vip/programming/cpp/priority-queue.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Priority-Queue</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" data-href="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Abstract Methods and Classes Interfaces" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Abstract Methods and Classes Interfaces</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" data-href="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" href="https://www.allenygy.vip/programming/java/lecture/abstract-methods-and-classes-interfaces.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Abstract Methods and Classes Interfaces</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Array and Generics.md" data-href="Programming/Java/Lecture/Array and Generics.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Array and Generics" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Array and Generics</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Array and Generics.md" data-href="Programming/Java/Lecture/Array and Generics.md" href="https://www.allenygy.vip/programming/java/lecture/array-and-generics.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Array and Generics</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Creating Java Classes.md" data-href="Programming/Java/Lecture/Creating Java Classes.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Creating Java Classes" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Creating Java Classes</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Creating Java Classes.md" data-href="Programming/Java/Lecture/Creating Java Classes.md" href="https://www.allenygy.vip/programming/java/lecture/creating-java-classes.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Creating Java Classes</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Exception Handling.md" data-href="Programming/Java/Lecture/Exception Handling.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Exception Handling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Exception Handling</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Exception Handling.md" data-href="Programming/Java/Lecture/Exception Handling.md" href="https://www.allenygy.vip/programming/java/lecture/exception-handling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Exception Handling</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Introduction.md" data-href="Programming/Java/Lecture/Java Introduction.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Java Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Java Introduction</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Introduction.md" data-href="Programming/Java/Lecture/Java Introduction.md" href="https://www.allenygy.vip/programming/java/lecture/java-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Java Introduction</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Programming Essentials.md" data-href="Programming/Java/Lecture/Java Programming Essentials.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Java Programming Essentials" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Java Programming Essentials</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Programming Essentials.md" data-href="Programming/Java/Lecture/Java Programming Essentials.md" href="https://www.allenygy.vip/programming/java/lecture/java-programming-essentials.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Java Programming Essentials</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Inheritance.md" data-href="Programming/Java/Lecture/Inheritance.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Inheritance" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Inheritance</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Inheritance.md" data-href="Programming/Java/Lecture/Inheritance.md" href="https://www.allenygy.vip/programming/java/lecture/inheritance.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Inheritance</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Unified Modeling Language.md" data-href="Programming/Java/Lecture/Unified Modeling Language.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Unified Modeling Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Unified Modeling Language</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Unified Modeling Language.md" data-href="Programming/Java/Lecture/Unified Modeling Language.md" href="https://www.allenygy.vip/programming/java/lecture/unified-modeling-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Unified Modeling Language</a>
<br><a data-tooltip-position="top" aria-label="Programming/Javascript/quick-start.md" data-href="Programming/Javascript/quick-start.md" href="https://www.allenygy.vip/Programming/Javascript/quick-start" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">quick-start</a><a data-tooltip-position="top" aria-label="Programming/Javascript/quick-start.md" data-href="Programming/Javascript/quick-start.md" href="https://www.allenygy.vip/programming/javascript/quick-start.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">quick-start</a>
<br><a data-tooltip-position="top" aria-label="Programming/Program Language.md" data-href="Programming/Program Language.md" href="https://www.allenygy.vip/Programming/Program Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Program Language</a><a data-tooltip-position="top" aria-label="Programming/Program Language.md" data-href="Programming/Program Language.md" href="https://www.allenygy.vip/programming/program-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Program Language</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Beautiful Soup.md" data-href="Programming/Python/Beautiful Soup.md" href="https://www.allenygy.vip/Programming/Python/Beautiful Soup" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Beautiful Soup</a><a data-tooltip-position="top" aria-label="Programming/Python/Beautiful Soup.md" data-href="Programming/Python/Beautiful Soup.md" href="https://www.allenygy.vip/programming/python/beautiful-soup.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Beautiful Soup</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Datetime.md" data-href="Programming/Python/Datetime.md" href="https://www.allenygy.vip/Programming/Python/Datetime" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Datetime</a><a data-tooltip-position="top" aria-label="Programming/Python/Datetime.md" data-href="Programming/Python/Datetime.md" href="https://www.allenygy.vip/programming/python/datetime.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Datetime</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Matplotlib.md" data-href="Programming/Python/Matplotlib.md" href="https://www.allenygy.vip/Programming/Python/Matplotlib" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Matplotlib</a><a data-tooltip-position="top" aria-label="Programming/Python/Matplotlib.md" data-href="Programming/Python/Matplotlib.md" href="https://www.allenygy.vip/programming/python/matplotlib.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Matplotlib</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Numpy.md" data-href="Programming/Python/Numpy.md" href="https://www.allenygy.vip/Programming/Python/Numpy" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Numpy</a><a data-tooltip-position="top" aria-label="Programming/Python/Numpy.md" data-href="Programming/Python/Numpy.md" href="https://www.allenygy.vip/programming/python/numpy.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Numpy</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Pandas.md" data-href="Programming/Python/Pandas.md" href="https://www.allenygy.vip/Programming/Python/Pandas" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Pandas</a><a data-tooltip-position="top" aria-label="Programming/Python/Pandas.md" data-href="Programming/Python/Pandas.md" href="https://www.allenygy.vip/programming/python/pandas.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Pandas</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Python Basic.md" data-href="Programming/Python/Python Basic.md" href="https://www.allenygy.vip/Programming/Python/Python Basic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Python Basic</a><a data-tooltip-position="top" aria-label="Programming/Python/Python Basic.md" data-href="Programming/Python/Python Basic.md" href="https://www.allenygy.vip/programming/python/python-basic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Python Basic</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Python Environment Management.md" data-href="Programming/Python/Python Environment Management.md" href="https://www.allenygy.vip/Programming/Python/Python Environment Management" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Python Environment Management</a><a data-tooltip-position="top" aria-label="Programming/Python/Python Environment Management.md" data-href="Programming/Python/Python Environment Management.md" href="https://www.allenygy.vip/programming/python/python-environment-management.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Python Environment Management</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Python Exceptions.md" data-href="Programming/Python/Python Exceptions.md" href="https://www.allenygy.vip/Programming/Python/Python Exceptions" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Python Exceptions</a><a data-tooltip-position="top" aria-label="Programming/Python/Python Exceptions.md" data-href="Programming/Python/Python Exceptions.md" href="https://www.allenygy.vip/programming/python/python-exceptions.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Python Exceptions</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Regular Expression.md" data-href="Programming/Python/Regular Expression.md" href="https://www.allenygy.vip/Programming/Python/Regular Expression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Regular Expression</a><a data-tooltip-position="top" aria-label="Programming/Python/Regular Expression.md" data-href="Programming/Python/Regular Expression.md" href="https://www.allenygy.vip/programming/python/regular-expression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Regular Expression</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/python-environment-management.md" data-href="Programming/Python/python-environment-management.md" href="https://www.allenygy.vip/Programming/Python/python-environment-management" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">python-environment-management</a><a data-tooltip-position="top" aria-label="Programming/Python/python-environment-management.md" data-href="Programming/Python/python-environment-management.md" href="https://www.allenygy.vip/programming/python/python-environment-management.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">python-environment-management</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/python-exceptions.md" data-href="Programming/Python/python-exceptions.md" href="https://www.allenygy.vip/Programming/Python/python-exceptions" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">python-exceptions</a><a data-tooltip-position="top" aria-label="Programming/Python/python-exceptions.md" data-href="Programming/Python/python-exceptions.md" href="https://www.allenygy.vip/programming/python/python-exceptions.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">python-exceptions</a>
<br><a data-tooltip-position="top" aria-label="Programming/R/Basic R.md" data-href="Programming/R/Basic R.md" href="https://www.allenygy.vip/Programming/R/Basic R" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Basic R</a><a data-tooltip-position="top" aria-label="Programming/R/Basic R.md" data-href="Programming/R/Basic R.md" href="https://www.allenygy.vip/programming/r/basic-r.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Basic R</a>
<br><a data-tooltip-position="top" aria-label="Programming/R/R Data Structure.md" data-href="Programming/R/R Data Structure.md" href="https://www.allenygy.vip/Programming/R/R Data Structure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">R Data Structure</a><a data-tooltip-position="top" aria-label="Programming/R/R Data Structure.md" data-href="Programming/R/R Data Structure.md" href="https://www.allenygy.vip/programming/r/r-data-structure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">R Data Structure</a>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/AlphaFold2.md" data-href="Research/BioInfo/AlphaFold2.md" href="https://www.allenygy.vip/Research/BioInfo/AlphaFold2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AlphaFold2</a><a data-tooltip-position="top" aria-label="Research/BioInfo/AlphaFold2.md" data-href="Research/BioInfo/AlphaFold2.md" href="https://www.allenygy.vip/research/bioinfo/alphafold2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AlphaFold2</a>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/Calculate SE.md" data-href="Research/BioInfo/Calculate SE.md" href="https://www.allenygy.vip/Research/BioInfo/Calculate SE" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Calculate SE</a><a data-tooltip-position="top" aria-label="Research/BioInfo/Calculate SE.md" data-href="Research/BioInfo/Calculate SE.md" href="https://www.allenygy.vip/research/bioinfo/calculate-se.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Calculate SE</a>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy.md" data-href="Research/BioInfo/Ploidy/Ploidy.md" href="https://www.allenygy.vip/Research/BioInfo/Ploidy/Ploidy" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Ploidy</a><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy.md" data-href="Research/BioInfo/Ploidy/Ploidy.md" href="https://www.allenygy.vip/research/bioinfo/ploidy/ploidy.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Ploidy</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report Script.md" data-href="Research/CoT/CoT Individual Report Script.md" href="https://www.allenygy.vip/Research/CoT/CoT Individual Report Script" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT Individual Report Script</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report Script.md" data-href="Research/CoT/CoT Individual Report Script.md" href="https://www.allenygy.vip/research/cot/cot-individual-report-script.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT Individual Report Script</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report.md" data-href="Research/CoT/CoT Individual Report.md" href="https://www.allenygy.vip/Research/CoT/CoT Individual Report" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT Individual Report</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report.md" data-href="Research/CoT/CoT Individual Report.md" href="https://www.allenygy.vip/research/cot/cot-individual-report.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT Individual Report</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Decoding.md" data-href="Research/CoT/CoT-Decoding.md" href="https://www.allenygy.vip/Research/CoT/CoT-Decoding" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT-Decoding</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Decoding.md" data-href="Research/CoT/CoT-Decoding.md" href="https://www.allenygy.vip/research/cot/cot-decoding.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT-Decoding</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Reading-List.md" data-href="Research/CoT/CoT-Reading-List.md" href="https://www.allenygy.vip/Research/CoT/CoT-Reading-List" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT-Reading-List</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Reading-List.md" data-href="Research/CoT/CoT-Reading-List.md" href="https://www.allenygy.vip/research/cot/cot-reading-list.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT-Reading-List</a>
<br><a data-tooltip-position="top" aria-label="Research/DataBase/SQL and NoSQL Integration.md" data-href="Research/DataBase/SQL and NoSQL Integration.md" href="https://www.allenygy.vip/Research/DataBase/SQL and NoSQL Integration" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">SQL and NoSQL Integration</a><a data-tooltip-position="top" aria-label="Research/DataBase/SQL and NoSQL Integration.md" data-href="Research/DataBase/SQL and NoSQL Integration.md" href="https://www.allenygy.vip/research/database/sql-and-nosql-integration.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">SQL and NoSQL Integration</a>
<br><a data-tooltip-position="top" aria-label="Research/Read Paper Process.md" data-href="Research/Read Paper Process.md" href="https://www.allenygy.vip/Research/Read Paper Process" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Read Paper Process</a><a data-tooltip-position="top" aria-label="Research/Read Paper Process.md" data-href="Research/Read Paper Process.md" href="https://www.allenygy.vip/research/read-paper-process.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Read Paper Process</a>
<br><a data-tooltip-position="top" aria-label="Share/Network-Deconvolution.md" data-href="Share/Network-Deconvolution.md" href="https://www.allenygy.vip/Share/Network-Deconvolution" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Network-Deconvolution</a><a data-tooltip-position="top" aria-label="Share/Network-Deconvolution.md" data-href="Share/Network-Deconvolution.md" href="https://www.allenygy.vip/share/network-deconvolution.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Network-Deconvolution</a>
<br><a data-tooltip-position="top" aria-label="Web/CSS/CSS-Introduction.md" data-href="Web/CSS/CSS-Introduction.md" href="https://www.allenygy.vip/Web/CSS/CSS-Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CSS-Introduction</a><a data-tooltip-position="top" aria-label="Web/CSS/CSS-Introduction.md" data-href="Web/CSS/CSS-Introduction.md" href="https://www.allenygy.vip/web/css/css-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CSS-Introduction</a>
<br><a data-tooltip-position="top" aria-label="Web/Javascript/Quick-Start.md" data-href="Web/Javascript/Quick-Start.md" href="https://www.allenygy.vip/Web/Javascript/Quick-Start" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Quick-Start</a><a data-tooltip-position="top" aria-label="Web/Javascript/Quick-Start.md" data-href="Web/Javascript/Quick-Start.md" href="https://www.allenygy.vip/web/javascript/quick-start.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Quick-Start</a>
<br><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Application.md" data-href="Web/Vue/Vue-Application.md" href="https://www.allenygy.vip/Web/Vue/Vue-Application" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Vue-Application</a><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Application.md" data-href="Web/Vue/Vue-Application.md" href="https://www.allenygy.vip/web/vue/vue-application.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Vue-Application</a>
<br><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Basic.md" data-href="Web/Vue/Vue-Basic.md" href="https://www.allenygy.vip/Web/Vue/Vue-Basic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Vue-Basic</a><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Basic.md" data-href="Web/Vue/Vue-Basic.md" href="https://www.allenygy.vip/web/vue/vue-basic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Vue-Basic</a>
<br><a data-tooltip-position="top" aria-label="Tools/Docker/Docker.md" data-href="Tools/Docker/Docker.md" href="https://www.allenygy.vip/Tools/Docker/Docker" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Docker</a><a data-tooltip-position="top" aria-label="Tools/Docker/Docker.md" data-href="Tools/Docker/Docker.md" href="https://www.allenygy.vip/tools/docker/docker.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Docker</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-For-Beginners.md" data-href="Tools/Git/Git-For-Beginners.md" href="https://www.allenygy.vip/Tools/Git/Git-For-Beginners" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-For-Beginners</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-For-Beginners.md" data-href="Tools/Git/Git-For-Beginners.md" href="https://www.allenygy.vip/tools/git/git-for-beginners.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-For-Beginners</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-Introduction.md" data-href="Tools/Git/Git-Introduction.md" href="https://www.allenygy.vip/Tools/Git/Git-Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-Introduction</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-Introduction.md" data-href="Tools/Git/Git-Introduction.md" href="https://www.allenygy.vip/tools/git/git-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-Introduction</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-Remote-Repository.md" data-href="Tools/Git/Git-Remote-Repository.md" href="https://www.allenygy.vip/Tools/Git/Git-Remote-Repository" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-Remote-Repository</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-Remote-Repository.md" data-href="Tools/Git/Git-Remote-Repository.md" href="https://www.allenygy.vip/tools/git/git-remote-repository.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-Remote-Repository</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-Workflow-Model.md" data-href="Tools/Git/Git-Workflow-Model.md" href="https://www.allenygy.vip/Tools/Git/Git-Workflow-Model" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-Workflow-Model</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-Workflow-Model.md" data-href="Tools/Git/Git-Workflow-Model.md" href="https://www.allenygy.vip/tools/git/git-workflow-model.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-Workflow-Model</a>
<br><a data-tooltip-position="top" aria-label="Tools/Regex/Regular-Expression.md" data-href="Tools/Regex/Regular-Expression.md" href="https://www.allenygy.vip/Tools/Regex/Regular-Expression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Regular-Expression</a><a data-tooltip-position="top" aria-label="Tools/Regex/Regular-Expression.md" data-href="Tools/Regex/Regular-Expression.md" href="https://www.allenygy.vip/tools/regex/regular-expression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Regular-Expression</a>
<br><a data-tooltip-position="top" aria-label="Tools/Shell/Shell.md" data-href="Tools/Shell/Shell.md" href="https://www.allenygy.vip/Tools/Shell/Shell" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Shell</a><a data-tooltip-position="top" aria-label="Tools/Shell/Shell.md" data-href="Tools/Shell/Shell.md" href="https://www.allenygy.vip/tools/shell/shell.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Shell</a>
<br><a data-tooltip-position="top" aria-label="Tools/Tools.md" data-href="Tools/Tools.md" href="https://www.allenygy.vip/Tools/Tools" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Tools</a><a data-tooltip-position="top" aria-label="Tools/Tools.md" data-href="Tools/Tools.md" href="https://www.allenygy.vip/tools/tools.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Tools</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Image Pyramid.md" data-href="Computer Vision/Lecture/CV-Image Pyramid.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Image Pyramid" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Image Pyramid</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Image Pyramid.md" data-href="Computer Vision/Lecture/CV-Image Pyramid.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-image-pyramid.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Image Pyramid</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy Review.md" data-href="Research/BioInfo/Ploidy/Ploidy Review.md" href="https://www.allenygy.vip/Research/BioInfo/Ploidy/Ploidy Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Ploidy Review</a><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy Review.md" data-href="Research/BioInfo/Ploidy/Ploidy Review.md" href="https://www.allenygy.vip/research/bioinfo/ploidy/ploidy-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Ploidy Review</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Entity-Relationship-Model-Modeling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Modeling</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-modeling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Modeling</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Conda/Conda.md" data-href="Tools/Conda/Conda.md" href="https://www.allenygy.vip/Tools/Conda/Conda" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Conda</a><a data-tooltip-position="top" aria-label="Tools/Conda/Conda.md" data-href="Tools/Conda/Conda.md" href="https://www.allenygy.vip/tools/conda/conda.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Conda</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Set-Operation-&amp;-Where-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/set-operation-&amp;-where-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Set-Operation-&amp;-Where-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/Division-and-Correlated-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Division-and-Correlated-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/division-and-correlated-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Division-and-Correlated-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-purpose-&amp;-first-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-Functional-Dependency</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-functional-dependency.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-Functional-Dependency</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-BCNF" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-BCNF</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-bcnf.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-BCNF</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-3rd-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-3rd-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-3rd-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Extended-Features</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-extended-features.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Extended-Features</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Entity-Relationship-Model-Constraints" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Constraints</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-constraints.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Constraints</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">From-Machine-Language-to-Assembly-Language</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/computer-organization/lecture/from-machine-language-to-assembly-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">From-Machine-Language-to-Assembly-Language</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">From-Gates-to-Circuits-II-Sequential-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/from-gates-to-circuits-ii-sequential-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">From-Gates-to-Circuits-II-Sequential-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">From-Gates-to-Circuits-I-Combinational-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/from-gates-to-circuits-i-combinational-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">From-Gates-to-Circuits-I-Combinational-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Boolean-Algebra-from-Bits-to-Logic</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/computer-organization/lecture/boolean-algebra-from-bits-to-logic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Boolean-Algebra-from-Bits-to-Logic</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" data-href="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" href="https://www.allenygy.vip/Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bits-Data-Representation-and-Manipulation</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" data-href="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" href="https://www.allenygy.vip/computer-organization/lecture/bits-data-representation-and-manipulation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bits-Data-Representation-and-Manipulation</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Fenwick.md" data-href="Algorithm/DSA/Fenwick.md" href="https://www.allenygy.vip/Algorithm/DSA/Fenwick" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Fenwick</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Fenwick.md" data-href="Algorithm/DSA/Fenwick.md" href="https://www.allenygy.vip/algorithm/dsa/fenwick.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Fenwick</a>
]]></description><link>https://www.allenygy.vip/archive.html</link><guid isPermaLink="false">Archive.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 09:03:12 GMT</pubDate></item><item><title><![CDATA[Class]]></title><description><![CDATA[ 
 <br><br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/Algorithm.md" data-href="Algorithm/Algorithm.md" href="https://www.allenygy.vip/Algorithm/Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/Algorithm.md" data-href="Algorithm/Algorithm.md" href="https://www.allenygy.vip/algorithm/algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Algorithm</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Sliding Window.md" data-href="Algorithm/Basic Algorithm/Sliding Window.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Sliding Window" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Sliding Window</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Sliding Window.md" data-href="Algorithm/Basic Algorithm/Sliding Window.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/sliding-window.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Sliding Window</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Discretization.md" data-href="Algorithm/Basic Algorithm/Discretization.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Discretization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discretization</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Discretization.md" data-href="Algorithm/Basic Algorithm/Discretization.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/discretization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discretization</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" data-href="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Basic-Algorithm-overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Basic-Algorithm-overview</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" data-href="Algorithm/Basic Algorithm/Basic-Algorithm-overview.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/basic-algorithm-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Basic-Algorithm-overview</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Binary Search.md" data-href="Algorithm/Basic Algorithm/Binary Search.md" href="https://www.allenygy.vip/Algorithm/Basic Algorithm/Binary Search" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Binary Search</a><a data-tooltip-position="top" aria-label="Algorithm/Basic Algorithm/Binary Search.md" data-href="Algorithm/Basic Algorithm/Binary Search.md" href="https://www.allenygy.vip/algorithm/basic-algorithm/binary-search.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Binary Search</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Union-Find.md" data-href="Algorithm/DAA/Algorithm/Union-Find.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Union-Find" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Union-Find</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Union-Find.md" data-href="Algorithm/DAA/Algorithm/Union-Find.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/union-find.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Union-Find</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" data-href="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Divide-and-Conquer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Divide-and-Conquer</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" data-href="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/divide-and-conquer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Divide-and-Conquer</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration.md" data-href="Algorithm/DAA/Algorithm/Enumeration.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Enumeration" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Enumeration</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration.md" data-href="Algorithm/DAA/Algorithm/Enumeration.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/enumeration.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Enumeration</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration-subset.md" data-href="Algorithm/DAA/Algorithm/Enumeration-subset.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Enumeration-subset" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Enumeration-subset</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration-subset.md" data-href="Algorithm/DAA/Algorithm/Enumeration-subset.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/enumeration-subset.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Enumeration-subset</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Graph-algorithm.md" data-href="Algorithm/DAA/Algorithm/Graph-algorithm.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Graph-algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Graph-algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Graph-algorithm.md" data-href="Algorithm/DAA/Algorithm/Graph-algorithm.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/graph-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Graph-algorithm</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Sort.md" data-href="Algorithm/DAA/Algorithm/Sort.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Sort" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Sort</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Sort.md" data-href="Algorithm/DAA/Algorithm/Sort.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/sort.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Sort</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Union-Find.md" data-href="Algorithm/DAA/Algorithm/Union-Find.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Union-Find" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Union-Find</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Union-Find.md" data-href="Algorithm/DAA/Algorithm/Union-Find.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/union-find.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Union-Find</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" data-href="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Divide-and-Conquer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Divide-and-Conquer</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" data-href="Algorithm/DAA/Algorithm/Divide-and-Conquer.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/divide-and-conquer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Divide-and-Conquer</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration.md" data-href="Algorithm/DAA/Algorithm/Enumeration.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Enumeration" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Enumeration</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration.md" data-href="Algorithm/DAA/Algorithm/Enumeration.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/enumeration.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Enumeration</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration-subset.md" data-href="Algorithm/DAA/Algorithm/Enumeration-subset.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Enumeration-subset" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Enumeration-subset</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Enumeration-subset.md" data-href="Algorithm/DAA/Algorithm/Enumeration-subset.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/enumeration-subset.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Enumeration-subset</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Graph-algorithm.md" data-href="Algorithm/DAA/Algorithm/Graph-algorithm.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Graph-algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Graph-algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Graph-algorithm.md" data-href="Algorithm/DAA/Algorithm/Graph-algorithm.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/graph-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Graph-algorithm</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Sort.md" data-href="Algorithm/DAA/Algorithm/Sort.md" href="https://www.allenygy.vip/Algorithm/DAA/Algorithm/Sort" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Sort</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Algorithm/Sort.md" data-href="Algorithm/DAA/Algorithm/Sort.md" href="https://www.allenygy.vip/algorithm/daa/algorithm/sort.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Sort</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-0.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-0.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Assignment-0" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Assignment-0</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-0.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-0.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-0.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Assignment-0</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-1.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-1.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Assignment-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Assignment-1</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-1.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-1.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Assignment-1</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-2.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-2.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Assignment-2</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Assignment-2.md" data-href="Algorithm/DAA/Assignment/DAA-Assignment-2.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Assignment-2</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" data-href="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" href="https://www.allenygy.vip/Algorithm/DAA/Assignment/DAA-Programming-Assignment" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DAA-Programming-Assignment</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" data-href="Algorithm/DAA/Assignment/DAA-Programming-Assignment.md" href="https://www.allenygy.vip/algorithm/daa/assignment/daa-programming-assignment.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DAA-Programming-Assignment</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/DAA/Tutorial/Tutorial-1.md" data-href="Algorithm/DAA/Tutorial/Tutorial-1.md" href="https://www.allenygy.vip/Algorithm/DAA/Tutorial/Tutorial-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Tutorial-1</a><a data-tooltip-position="top" aria-label="Algorithm/DAA/Tutorial/Tutorial-1.md" data-href="Algorithm/DAA/Tutorial/Tutorial-1.md" href="https://www.allenygy.vip/algorithm/daa/tutorial/tutorial-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Tutorial-1</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/AVL.md" data-href="Algorithm/DSA/AVL.md" href="https://www.allenygy.vip/Algorithm/DSA/AVL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AVL</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/AVL.md" data-href="Algorithm/DSA/AVL.md" href="https://www.allenygy.vip/algorithm/dsa/avl.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AVL</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/B+Tree.md" data-href="Algorithm/DSA/B+Tree.md" href="https://www.allenygy.vip/Algorithm/DSA/B+Tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">B+Tree</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/B+Tree.md" data-href="Algorithm/DSA/B+Tree.md" href="https://www.allenygy.vip/algorithm/dsa/b+tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">B+Tree</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/BinaryTree.md" data-href="Algorithm/DSA/BinaryTree.md" href="https://www.allenygy.vip/Algorithm/DSA/BinaryTree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BinaryTree</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/BinaryTree.md" data-href="Algorithm/DSA/BinaryTree.md" href="https://www.allenygy.vip/algorithm/dsa/binarytree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BinaryTree</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Fenwick.md" data-href="Algorithm/DSA/Fenwick.md" href="https://www.allenygy.vip/Algorithm/DSA/Fenwick" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Fenwick</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Fenwick.md" data-href="Algorithm/DSA/Fenwick.md" href="https://www.allenygy.vip/algorithm/dsa/fenwick.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Fenwick</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-As-2.md" data-href="Algorithm/DSA/Assignment/DSA-As-2.md" href="https://www.allenygy.vip/Algorithm/DSA/Assignment/DSA-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DSA-As-2</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-As-2.md" data-href="Algorithm/DSA/Assignment/DSA-As-2.md" href="https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DSA-As-2</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-1.md" data-href="Algorithm/DSA/Assignment/DSA-AS-1.md" href="https://www.allenygy.vip/Algorithm/DSA/Assignment/DSA-AS-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DSA-AS-1</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-1.md" data-href="Algorithm/DSA/Assignment/DSA-AS-1.md" href="https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DSA-AS-1</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-am.md" data-href="Algorithm/DSA/Assignment/DSA-AS-am.md" href="https://www.allenygy.vip/Algorithm/DSA/Assignment/DSA-AS-am" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DSA-AS-am</a><a data-tooltip-position="top" aria-label="Algorithm/DSA/Assignment/DSA-AS-am.md" data-href="Algorithm/DSA/Assignment/DSA-AS-am.md" href="https://www.allenygy.vip/algorithm/dsa/assignment/dsa-as-am.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DSA-AS-am</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/Graph/Graph-Overview.md" data-href="Algorithm/Graph/Graph-Overview.md" href="https://www.allenygy.vip/Algorithm/Graph/Graph-Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Graph-Overview</a><a data-tooltip-position="top" aria-label="Algorithm/Graph/Graph-Overview.md" data-href="Algorithm/Graph/Graph-Overview.md" href="https://www.allenygy.vip/algorithm/graph/graph-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Graph-Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/NumberTheory/Prime-Sieve.md" data-href="Algorithm/NumberTheory/Prime-Sieve.md" href="https://www.allenygy.vip/Algorithm/NumberTheory/Prime-Sieve" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prime-Sieve</a><a data-tooltip-position="top" aria-label="Algorithm/NumberTheory/Prime-Sieve.md" data-href="Algorithm/NumberTheory/Prime-Sieve.md" href="https://www.allenygy.vip/algorithm/numbertheory/prime-sieve.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prime-Sieve</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归-二叉树.md" data-href="Algorithm/Recursion/递归-二叉树.md" href="https://www.allenygy.vip/Algorithm/Recursion/递归-二叉树" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">递归-二叉树</a><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归-二叉树.md" data-href="Algorithm/Recursion/递归-二叉树.md" href="https://www.allenygy.vip/algorithm/recursion/递归-二叉树.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">递归-二叉树</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归.md" data-href="Algorithm/Recursion/递归.md" href="https://www.allenygy.vip/Algorithm/Recursion/递归" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">递归</a><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递归.md" data-href="Algorithm/Recursion/递归.md" href="https://www.allenygy.vip/algorithm/recursion/递归.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">递归</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递推.md" data-href="Algorithm/Recursion/递推.md" href="https://www.allenygy.vip/Algorithm/Recursion/递推" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">递推</a><a data-tooltip-position="top" aria-label="Algorithm/Recursion/递推.md" data-href="Algorithm/Recursion/递推.md" href="https://www.allenygy.vip/algorithm/recursion/递推.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">递推</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Aho-Corasick.md" data-href="Algorithm/String/Aho-Corasick.md" href="https://www.allenygy.vip/Algorithm/String/Aho-Corasick" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Aho-Corasick</a><a data-tooltip-position="top" aria-label="Algorithm/String/Aho-Corasick.md" data-href="Algorithm/String/Aho-Corasick.md" href="https://www.allenygy.vip/algorithm/string/aho-corasick.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Aho-Corasick</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Manacher-Algorithm.md" data-href="Algorithm/String/Manacher-Algorithm.md" href="https://www.allenygy.vip/Algorithm/String/Manacher-Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Manacher-Algorithm</a><a data-tooltip-position="top" aria-label="Algorithm/String/Manacher-Algorithm.md" data-href="Algorithm/String/Manacher-Algorithm.md" href="https://www.allenygy.vip/algorithm/string/manacher-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Manacher-Algorithm</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/String-Overview.md" data-href="Algorithm/String/String-Overview.md" href="https://www.allenygy.vip/Algorithm/String/String-Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">String-Overview</a><a data-tooltip-position="top" aria-label="Algorithm/String/String-Overview.md" data-href="Algorithm/String/String-Overview.md" href="https://www.allenygy.vip/algorithm/string/string-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">String-Overview</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/KMP.md" data-href="Algorithm/String/KMP.md" href="https://www.allenygy.vip/Algorithm/String/KMP" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">KMP</a><a data-tooltip-position="top" aria-label="Algorithm/String/KMP.md" data-href="Algorithm/String/KMP.md" href="https://www.allenygy.vip/algorithm/string/kmp.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">KMP</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Tire-Tree.md" data-href="Algorithm/String/Tire-Tree.md" href="https://www.allenygy.vip/Algorithm/String/Tire-Tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Tire-Tree</a><a data-tooltip-position="top" aria-label="Algorithm/String/Tire-Tree.md" data-href="Algorithm/String/Tire-Tree.md" href="https://www.allenygy.vip/algorithm/string/tire-tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Tire-Tree</a>
<br><a data-tooltip-position="top" aria-label="Algorithm/String/Z-Function.md" data-href="Algorithm/String/Z-Function.md" href="https://www.allenygy.vip/Algorithm/String/Z-Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Z-Function</a><a data-tooltip-position="top" aria-label="Algorithm/String/Z-Function.md" data-href="Algorithm/String/Z-Function.md" href="https://www.allenygy.vip/algorithm/string/z-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Z-Function</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Computer Organization Overview.md" data-href="Computer Organization/Computer Organization Overview.md" href="https://www.allenygy.vip/Computer Organization/Computer Organization Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Computer Organization Overview</a><a data-tooltip-position="top" aria-label="Computer Organization/Computer Organization Overview.md" data-href="Computer Organization/Computer Organization Overview.md" href="https://www.allenygy.vip/computer-organization/computer-organization-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Computer Organization Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" data-href="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-1/CO-Assignment-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-1</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" data-href="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-1/co-assignment-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-1</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" data-href="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-1/CO-Assignment-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-1</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" data-href="Computer Organization/Assignment/Assignment-1/CO-Assignment-1.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-1/co-assignment-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-1</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" data-href="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-2/CO-Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-2</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" data-href="Computer Organization/Assignment/Assignment-2/CO-Assignment-2.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-2/co-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-2</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" data-href="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-3/CO-Assignment-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-3</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" data-href="Computer Organization/Assignment/Assignment-3/CO-Assignment-3.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-3/co-assignment-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-3</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" data-href="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" href="https://www.allenygy.vip/Computer Organization/Assignment/Assignment-4/CO-Assignment-4" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Assignment-4</a><a data-tooltip-position="top" aria-label="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" data-href="Computer Organization/Assignment/Assignment-4/CO-Assignment-4.md" href="https://www.allenygy.vip/computer-organization/assignment/assignment-4/co-assignment-4.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Assignment-4</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab2.md" data-href="Computer Organization/Lab/CO-Lab2.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab2</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab2.md" data-href="Computer Organization/Lab/CO-Lab2.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab2</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab3.md" data-href="Computer Organization/Lab/CO-Lab3.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab3</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab3.md" data-href="Computer Organization/Lab/CO-Lab3.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab3</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab7.md" data-href="Computer Organization/Lab/CO-Lab7.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab7" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab7</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab7.md" data-href="Computer Organization/Lab/CO-Lab7.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab7.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab7</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab8.md" data-href="Computer Organization/Lab/CO-Lab8.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab8" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab8</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab8.md" data-href="Computer Organization/Lab/CO-Lab8.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab8.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab8</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab6.md" data-href="Computer Organization/Lab/CO-Lab6.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab6" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab6</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab6.md" data-href="Computer Organization/Lab/CO-Lab6.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab6.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab6</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab5.md" data-href="Computer Organization/Lab/CO-Lab5.md" href="https://www.allenygy.vip/Computer Organization/Lab/CO-Lab5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CO-Lab5</a><a data-tooltip-position="top" aria-label="Computer Organization/Lab/CO-Lab5.md" data-href="Computer Organization/Lab/CO-Lab5.md" href="https://www.allenygy.vip/computer-organization/lab/co-lab5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CO-Lab5</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/01-What is a Computer.md" data-href="Computer Organization/Lecture/01-What is a Computer.md" href="https://www.allenygy.vip/Computer Organization/Lecture/01-What is a Computer" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-What is a Computer</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/01-What is a Computer.md" data-href="Computer Organization/Lecture/01-What is a Computer.md" href="https://www.allenygy.vip/computer-organization/lecture/01-what-is-a-computer.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-What is a Computer</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" data-href="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" href="https://www.allenygy.vip/Computer Organization/Lecture/02-Bits Data Representation and Manipulation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Bits Data Representation and Manipulation</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" data-href="Computer Organization/Lecture/02-Bits Data Representation and Manipulation.md" href="https://www.allenygy.vip/computer-organization/lecture/02-bits-data-representation-and-manipulation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Bits Data Representation and Manipulation</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-From-Gates-to-Circuits-I-Combinational-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/05-From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/05-from-gates-to-circuits-i-combinational-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-From-Gates-to-Circuits-I-Combinational-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" data-href="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" href="https://www.allenygy.vip/Computer Organization/Lecture/04-From-Transistors-to-Gates" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-From-Transistors-to-Gates</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" data-href="Computer Organization/Lecture/04-From-Transistors-to-Gates.md" href="https://www.allenygy.vip/computer-organization/lecture/04-from-transistors-to-gates.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-From-Transistors-to-Gates</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Boolean-Algebra-from-Bits-to-Logic</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/03-Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/computer-organization/lecture/03-boolean-algebra-from-bits-to-logic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Boolean-Algebra-from-Bits-to-Logic</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-From-Gates-to-Circuits-II-Sequential-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/06-From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/06-from-gates-to-circuits-ii-sequential-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-From-Gates-to-Circuits-II-Sequential-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/07-Circuit-Design.md" data-href="Computer Organization/Lecture/07-Circuit-Design.md" href="https://www.allenygy.vip/Computer Organization/Lecture/07-Circuit-Design" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Circuit-Design</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/07-Circuit-Design.md" data-href="Computer Organization/Lecture/07-Circuit-Design.md" href="https://www.allenygy.vip/computer-organization/lecture/07-circuit-design.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Circuit-Design</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/08-Finite-State-Machine.md" data-href="Computer Organization/Lecture/08-Finite-State-Machine.md" href="https://www.allenygy.vip/Computer Organization/Lecture/08-Finite-State-Machine" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Finite-State-Machine</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/08-Finite-State-Machine.md" data-href="Computer Organization/Lecture/08-Finite-State-Machine.md" href="https://www.allenygy.vip/computer-organization/lecture/08-finite-state-machine.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Finite-State-Machine</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/09-Microarchitecture.md" data-href="Computer Organization/Lecture/09-Microarchitecture.md" href="https://www.allenygy.vip/Computer Organization/Lecture/09-Microarchitecture" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-Microarchitecture</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/09-Microarchitecture.md" data-href="Computer Organization/Lecture/09-Microarchitecture.md" href="https://www.allenygy.vip/computer-organization/lecture/09-microarchitecture.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-Microarchitecture</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/10-ISA.md" data-href="Computer Organization/Lecture/10-ISA.md" href="https://www.allenygy.vip/Computer Organization/Lecture/10-ISA" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-ISA</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/10-ISA.md" data-href="Computer Organization/Lecture/10-ISA.md" href="https://www.allenygy.vip/computer-organization/lecture/10-isa.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-ISA</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">11-From-Machine-Language-to-Assembly-Language</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/11-From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/computer-organization/lecture/11-from-machine-language-to-assembly-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">11-From-Machine-Language-to-Assembly-Language</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">From-Machine-Language-to-Assembly-Language</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" data-href="Computer Organization/Lecture/From-Machine-Language-to-Assembly-Language.md" href="https://www.allenygy.vip/computer-organization/lecture/from-machine-language-to-assembly-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">From-Machine-Language-to-Assembly-Language</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">From-Gates-to-Circuits-II-Sequential-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-II-Sequential-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/from-gates-to-circuits-ii-sequential-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">From-Gates-to-Circuits-II-Sequential-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">From-Gates-to-Circuits-I-Combinational-Circuits</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" data-href="Computer Organization/Lecture/From-Gates-to-Circuits-I-Combinational-Circuits.md" href="https://www.allenygy.vip/computer-organization/lecture/from-gates-to-circuits-i-combinational-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">From-Gates-to-Circuits-I-Combinational-Circuits</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Boolean-Algebra-from-Bits-to-Logic</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" data-href="Computer Organization/Lecture/Boolean-Algebra-from-Bits-to-Logic.md" href="https://www.allenygy.vip/computer-organization/lecture/boolean-algebra-from-bits-to-logic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Boolean-Algebra-from-Bits-to-Logic</a>
<br><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" data-href="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" href="https://www.allenygy.vip/Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bits-Data-Representation-and-Manipulation</a><a data-tooltip-position="top" aria-label="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" data-href="Computer Organization/Lecture/Bits-Data-Representation-and-Manipulation.md" href="https://www.allenygy.vip/computer-organization/lecture/bits-data-representation-and-manipulation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bits-Data-Representation-and-Manipulation</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Vision/CV-Slides-Review.md" data-href="Computer Vision/CV-Slides-Review.md" href="https://www.allenygy.vip/Computer Vision/CV-Slides-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Slides-Review</a><a data-tooltip-position="top" aria-label="Computer Vision/CV-Slides-Review.md" data-href="Computer Vision/CV-Slides-Review.md" href="https://www.allenygy.vip/computer-vision/cv-slides-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Slides-Review</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/CV-Review.md" data-href="Computer Vision/CV-Review.md" href="https://www.allenygy.vip/Computer Vision/CV-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Review</a><a data-tooltip-position="top" aria-label="Computer Vision/CV-Review.md" data-href="Computer Vision/CV-Review.md" href="https://www.allenygy.vip/computer-vision/cv-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Review</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Computer Vision Overview.md" data-href="Computer Vision/Computer Vision Overview.md" href="https://www.allenygy.vip/Computer Vision/Computer Vision Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Computer Vision Overview</a><a data-tooltip-position="top" aria-label="Computer Vision/Computer Vision Overview.md" data-href="Computer Vision/Computer Vision Overview.md" href="https://www.allenygy.vip/computer-vision/computer-vision-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Computer Vision Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-3.md" data-href="Computer Vision/Assignment/CV-As-3.md" href="https://www.allenygy.vip/Computer Vision/Assignment/CV-As-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-As-3</a><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-3.md" data-href="Computer Vision/Assignment/CV-As-3.md" href="https://www.allenygy.vip/computer-vision/assignment/cv-as-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-As-3</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-1.md" data-href="Computer Vision/Assignment/CV-As-1.md" href="https://www.allenygy.vip/Computer Vision/Assignment/CV-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-As-1</a><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-1.md" data-href="Computer Vision/Assignment/CV-As-1.md" href="https://www.allenygy.vip/computer-vision/assignment/cv-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-As-1</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-2.md" data-href="Computer Vision/Assignment/CV-As-2.md" href="https://www.allenygy.vip/Computer Vision/Assignment/CV-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-As-2</a><a data-tooltip-position="top" aria-label="Computer Vision/Assignment/CV-As-2.md" data-href="Computer Vision/Assignment/CV-As-2.md" href="https://www.allenygy.vip/computer-vision/assignment/cv-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-As-2</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-1.md" data-href="Computer Vision/Homework/CV-HW-1.md" href="https://www.allenygy.vip/Computer Vision/Homework/CV-HW-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-HW-1</a><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-1.md" data-href="Computer Vision/Homework/CV-HW-1.md" href="https://www.allenygy.vip/computer-vision/homework/cv-hw-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-HW-1</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-2.md" data-href="Computer Vision/Homework/CV-HW-2.md" href="https://www.allenygy.vip/Computer Vision/Homework/CV-HW-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-HW-2</a><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-2.md" data-href="Computer Vision/Homework/CV-HW-2.md" href="https://www.allenygy.vip/computer-vision/homework/cv-hw-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-HW-2</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-3.md" data-href="Computer Vision/Homework/CV-HW-3.md" href="https://www.allenygy.vip/Computer Vision/Homework/CV-HW-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-HW-3</a><a data-tooltip-position="top" aria-label="Computer Vision/Homework/CV-HW-3.md" data-href="Computer Vision/Homework/CV-HW-3.md" href="https://www.allenygy.vip/computer-vision/homework/cv-hw-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-HW-3</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Attention.md" data-href="Computer Vision/Lecture/CV-Attention.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Attention" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Attention</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Attention.md" data-href="Computer Vision/Lecture/CV-Attention.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-attention.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Attention</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Generate Model.md" data-href="Computer Vision/Lecture/CV-Generate Model.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Generate Model" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Generate Model</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Generate Model.md" data-href="Computer Vision/Lecture/CV-Generate Model.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-generate-model.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Generate Model</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Neural Network.md" data-href="Computer Vision/Lecture/CV-Neural Network.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Neural Network" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Neural Network</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Neural Network.md" data-href="Computer Vision/Lecture/CV-Neural Network.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-neural-network.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Neural Network</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Object Detection.md" data-href="Computer Vision/Lecture/CV-Object Detection.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Object Detection" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Object Detection</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Object Detection.md" data-href="Computer Vision/Lecture/CV-Object Detection.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-object-detection.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Object Detection</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Back Propagation.md" data-href="Computer Vision/Lecture/CV-Back Propagation.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Back Propagation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Back Propagation</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Back Propagation.md" data-href="Computer Vision/Lecture/CV-Back Propagation.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-back-propagation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Back Propagation</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Convolutional and image filtering.md" data-href="Computer Vision/Lecture/CV-Convolutional and image filtering.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Convolutional and image filtering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Convolutional and image filtering</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Convolutional and image filtering.md" data-href="Computer Vision/Lecture/CV-Convolutional and image filtering.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-convolutional-and-image-filtering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Convolutional and image filtering</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Fourier Transformation.md" data-href="Computer Vision/Lecture/CV-Fourier Transformation.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Fourier Transformation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Fourier Transformation</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Fourier Transformation.md" data-href="Computer Vision/Lecture/CV-Fourier Transformation.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-fourier-transformation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Fourier Transformation</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Normalization Methods.md" data-href="Computer Vision/Lecture/CV-Normalization Methods.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Normalization Methods" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Normalization Methods</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Normalization Methods.md" data-href="Computer Vision/Lecture/CV-Normalization Methods.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-normalization-methods.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Normalization Methods</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Signal and Image Processing.md" data-href="Computer Vision/Lecture/CV-Signal and Image Processing.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Signal and Image Processing" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Signal and Image Processing</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Signal and Image Processing.md" data-href="Computer Vision/Lecture/CV-Signal and Image Processing.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-signal-and-image-processing.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Signal and Image Processing</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Weight Initialization.md" data-href="Computer Vision/Lecture/CV-Weight Initialization.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Weight Initialization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Weight Initialization</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Weight Initialization.md" data-href="Computer Vision/Lecture/CV-Weight Initialization.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-weight-initialization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Weight Initialization</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Image Pyramid.md" data-href="Computer Vision/Lecture/CV-Image Pyramid.md" href="https://www.allenygy.vip/Computer Vision/Lecture/CV-Image Pyramid" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CV-Image Pyramid</a><a data-tooltip-position="top" aria-label="Computer Vision/Lecture/CV-Image Pyramid.md" data-href="Computer Vision/Lecture/CV-Image Pyramid.md" href="https://www.allenygy.vip/computer-vision/lecture/cv-image-pyramid.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CV-Image Pyramid</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Contest/Contest-Overview.md" data-href="Contest/Contest-Overview.md" href="https://www.allenygy.vip/Contest/Contest-Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Contest-Overview</a><a data-tooltip-position="top" aria-label="Contest/Contest-Overview.md" data-href="Contest/Contest-Overview.md" href="https://www.allenygy.vip/contest/contest-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Contest-Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-1.md" data-href="Contest/Lanqiao/Train-1.md" href="https://www.allenygy.vip/Contest/Lanqiao/Train-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Train-1</a><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-1.md" data-href="Contest/Lanqiao/Train-1.md" href="https://www.allenygy.vip/contest/lanqiao/train-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Train-1</a>
<br><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-2.md" data-href="Contest/Lanqiao/Train-2.md" href="https://www.allenygy.vip/Contest/Lanqiao/Train-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Train-2</a><a data-tooltip-position="top" aria-label="Contest/Lanqiao/Train-2.md" data-href="Contest/Lanqiao/Train-2.md" href="https://www.allenygy.vip/contest/lanqiao/train-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Train-2</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-contest-133.md" data-href="Contest/Leetcode/Biweekly-contest-133.md" href="https://www.allenygy.vip/Contest/Leetcode/Biweekly-contest-133" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Biweekly-contest-133</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-contest-133.md" data-href="Contest/Leetcode/Biweekly-contest-133.md" href="https://www.allenygy.vip/contest/leetcode/biweekly-contest-133.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Biweekly-contest-133</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-122.md" data-href="Contest/Leetcode/Biweekly-Contest-122.md" href="https://www.allenygy.vip/Contest/Leetcode/Biweekly-Contest-122" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Biweekly-Contest-122</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-122.md" data-href="Contest/Leetcode/Biweekly-Contest-122.md" href="https://www.allenygy.vip/contest/leetcode/biweekly-contest-122.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Biweekly-Contest-122</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-123.md" data-href="Contest/Leetcode/Biweekly-Contest-123.md" href="https://www.allenygy.vip/Contest/Leetcode/Biweekly-Contest-123" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Biweekly-Contest-123</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Biweekly-Contest-123.md" data-href="Contest/Leetcode/Biweekly-Contest-123.md" href="https://www.allenygy.vip/contest/leetcode/biweekly-contest-123.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Biweekly-Contest-123</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-381.md" data-href="Contest/Leetcode/Weekly-Contest-381.md" href="https://www.allenygy.vip/Contest/Leetcode/Weekly-Contest-381" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Weekly-Contest-381</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-381.md" data-href="Contest/Leetcode/Weekly-Contest-381.md" href="https://www.allenygy.vip/contest/leetcode/weekly-contest-381.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Weekly-Contest-381</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-403.md" data-href="Contest/Leetcode/Weekly-Contest-403.md" href="https://www.allenygy.vip/Contest/Leetcode/Weekly-Contest-403" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Weekly-Contest-403</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-403.md" data-href="Contest/Leetcode/Weekly-Contest-403.md" href="https://www.allenygy.vip/contest/leetcode/weekly-contest-403.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Weekly-Contest-403</a>
<br><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-402.md" data-href="Contest/Leetcode/Weekly-Contest-402.md" href="https://www.allenygy.vip/Contest/Leetcode/Weekly-Contest-402" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Weekly-Contest-402</a><a data-tooltip-position="top" aria-label="Contest/Leetcode/Weekly-Contest-402.md" data-href="Contest/Leetcode/Weekly-Contest-402.md" href="https://www.allenygy.vip/contest/leetcode/weekly-contest-402.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Weekly-Contest-402</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Data Analysis Overview.md" data-href="Data Analysis/Data Analysis Overview.md" href="https://www.allenygy.vip/Data Analysis/Data Analysis Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Data Analysis Overview</a><a data-tooltip-position="top" aria-label="Data Analysis/Data Analysis Overview.md" data-href="Data Analysis/Data Analysis Overview.md" href="https://www.allenygy.vip/data-analysis/data-analysis-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Data Analysis Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/BDA-Review.md" data-href="Data Analysis/Big Data Analysis/BDA-Review.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/BDA-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Review</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/BDA-Review.md" data-href="Data Analysis/Big Data Analysis/BDA-Review.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/bda-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Review</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" data-href="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Big Data Analysis Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Big Data Analysis Overview</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" data-href="Data Analysis/Big Data Analysis/Big Data Analysis Overview.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/big-data-analysis-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Big Data Analysis Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lab/BDA-Lab-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Lab-3</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-3.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Lab-3</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lab/BDA-Lab-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Lab-1</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-1.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Lab-1</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lab/BDA-Lab-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Lab-2</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" data-href="Data Analysis/Big Data Analysis/Lab/BDA-Lab-2.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lab/bda-lab-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Lab-2</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Stream Data</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Stream Data.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-stream-data.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Stream Data</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Advertising" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Advertising</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Advertising.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-advertising.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Advertising</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Clustering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Clustering</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Clustering.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-clustering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Clustering</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-DGIM" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-DGIM</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-DGIM.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-dgim.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-DGIM</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Find Similar Items</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Find Similar Items.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-find-similar-items.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Find Similar Items</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Link Analysis</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-Link Analysis.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-link-analysis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Link Analysis</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-MapReduce</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" data-href="Data Analysis/Big Data Analysis/Lecture/BDA-MapReduce.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/lecture/bda-mapreduce.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-MapReduce</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Project-Report</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Project-Report.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-project-report.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Project-Report</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Peoject/BDA-Survey" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Survey</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Survey.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-survey.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Survey</a>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" href="https://www.allenygy.vip/Data Analysis/Big Data Analysis/Peoject/BDA-Proposal" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BDA-Proposal</a><a data-tooltip-position="top" aria-label="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" data-href="Data Analysis/Big Data Analysis/Peoject/BDA-Proposal.md" href="https://www.allenygy.vip/data-analysis/big-data-analysis/peoject/bda-proposal.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BDA-Proposal</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" data-href="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" href="https://www.allenygy.vip/Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Hans-On-Data-Analysis-For-Everyone</a><a data-tooltip-position="top" aria-label="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" data-href="Data Analysis/Hands on Data Analysis/Hans-On-Data-Analysis-For-Everyone.md" href="https://www.allenygy.vip/data-analysis/hands-on-data-analysis/hans-on-data-analysis-for-everyone.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Hans-On-Data-Analysis-For-Everyone</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Database Management System/Database Management System Overview.md" data-href="Database Management System/Database Management System Overview.md" href="https://www.allenygy.vip/Database Management System/Database Management System Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Database Management System Overview</a><a data-tooltip-position="top" aria-label="Database Management System/Database Management System Overview.md" data-href="Database Management System/Database Management System Overview.md" href="https://www.allenygy.vip/database-management-system/database-management-system-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Database Management System Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Database Management System/Application/MySQL+Redis.md" data-href="Database Management System/Application/MySQL+Redis.md" href="https://www.allenygy.vip/Database Management System/Application/MySQL+Redis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MySQL+Redis</a><a data-tooltip-position="top" aria-label="Database Management System/Application/MySQL+Redis.md" data-href="Database Management System/Application/MySQL+Redis.md" href="https://www.allenygy.vip/database-management-system/application/mysql+redis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MySQL+Redis</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-1.md" data-href="Database Management System/Assignment/NoSQL-As-1.md" href="https://www.allenygy.vip/Database Management System/Assignment/NoSQL-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL-As-1</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-1.md" data-href="Database Management System/Assignment/NoSQL-As-1.md" href="https://www.allenygy.vip/database-management-system/assignment/nosql-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL-As-1</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-2.md" data-href="Database Management System/Assignment/NoSQL-As-2.md" href="https://www.allenygy.vip/Database Management System/Assignment/NoSQL-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL-As-2</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/NoSQL-As-2.md" data-href="Database Management System/Assignment/NoSQL-As-2.md" href="https://www.allenygy.vip/database-management-system/assignment/nosql-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL-As-2</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-1.md" data-href="Database Management System/Assignment/RDBMS-As-1.md" href="https://www.allenygy.vip/Database Management System/Assignment/RDBMS-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">RDBMS-As-1</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-1.md" data-href="Database Management System/Assignment/RDBMS-As-1.md" href="https://www.allenygy.vip/database-management-system/assignment/rdbms-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">RDBMS-As-1</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-2.md" data-href="Database Management System/Assignment/RDBMS-As-2.md" href="https://www.allenygy.vip/Database Management System/Assignment/RDBMS-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">RDBMS-As-2</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-2.md" data-href="Database Management System/Assignment/RDBMS-As-2.md" href="https://www.allenygy.vip/database-management-system/assignment/rdbms-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">RDBMS-As-2</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-3.md" data-href="Database Management System/Assignment/RDBMS-As-3.md" href="https://www.allenygy.vip/Database Management System/Assignment/RDBMS-As-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">RDBMS-As-3</a><a data-tooltip-position="top" aria-label="Database Management System/Assignment/RDBMS-As-3.md" data-href="Database Management System/Assignment/RDBMS-As-3.md" href="https://www.allenygy.vip/database-management-system/assignment/rdbms-as-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">RDBMS-As-3</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/02-Cross-table-Query.md" data-href="Database Management System/MySQL/02-Cross-table-Query.md" href="https://www.allenygy.vip/Database Management System/MySQL/02-Cross-table-Query" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Cross-table-Query</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/02-Cross-table-Query.md" data-href="Database Management System/MySQL/02-Cross-table-Query.md" href="https://www.allenygy.vip/database-management-system/mysql/02-cross-table-query.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Cross-table-Query</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/04-Aggregation.md" data-href="Database Management System/MySQL/04-Aggregation.md" href="https://www.allenygy.vip/Database Management System/MySQL/04-Aggregation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Aggregation</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/04-Aggregation.md" data-href="Database Management System/MySQL/04-Aggregation.md" href="https://www.allenygy.vip/database-management-system/mysql/04-aggregation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Aggregation</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/05-Data-Definition.md" data-href="Database Management System/MySQL/05-Data-Definition.md" href="https://www.allenygy.vip/Database Management System/MySQL/05-Data-Definition" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-Data-Definition</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/05-Data-Definition.md" data-href="Database Management System/MySQL/05-Data-Definition.md" href="https://www.allenygy.vip/database-management-system/mysql/05-data-definition.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-Data-Definition</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/06-Data-Modification.md" data-href="Database Management System/MySQL/06-Data-Modification.md" href="https://www.allenygy.vip/Database Management System/MySQL/06-Data-Modification" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-Data-Modification</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/06-Data-Modification.md" data-href="Database Management System/MySQL/06-Data-Modification.md" href="https://www.allenygy.vip/database-management-system/mysql/06-data-modification.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-Data-Modification</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/07-Null-Subquery.md" data-href="Database Management System/MySQL/07-Null-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/07-Null-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Null-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/07-Null-Subquery.md" data-href="Database Management System/MySQL/07-Null-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/07-null-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Null-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Set-Operation-&amp;-Where-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/08-Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/08-set-operation-&amp;-where-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Set-Operation-&amp;-Where-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/09-Division-and-Correlated-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-Division-and-Correlated-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/09-Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/09-division-and-correlated-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-Division-and-Correlated-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/01-Basic-MySQL.md" data-href="Database Management System/MySQL/01-Basic-MySQL.md" href="https://www.allenygy.vip/Database Management System/MySQL/01-Basic-MySQL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-Basic-MySQL</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/01-Basic-MySQL.md" data-href="Database Management System/MySQL/01-Basic-MySQL.md" href="https://www.allenygy.vip/database-management-system/mysql/01-basic-mysql.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-Basic-MySQL</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/10-Advanced-SQL.md" data-href="Database Management System/MySQL/10-Advanced-SQL.md" href="https://www.allenygy.vip/Database Management System/MySQL/10-Advanced-SQL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-Advanced-SQL</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/10-Advanced-SQL.md" data-href="Database Management System/MySQL/10-Advanced-SQL.md" href="https://www.allenygy.vip/database-management-system/mysql/10-advanced-sql.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-Advanced-SQL</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/03-Join.md" data-href="Database Management System/MySQL/03-Join.md" href="https://www.allenygy.vip/Database Management System/MySQL/03-Join" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Join</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/03-Join.md" data-href="Database Management System/MySQL/03-Join.md" href="https://www.allenygy.vip/database-management-system/mysql/03-join.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Join</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Set-Operation-&amp;-Where-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" data-href="Database Management System/MySQL/Set-Operation-&amp;-Where-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/set-operation-&amp;-where-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Set-Operation-&amp;-Where-Subquery</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/Database Management System/MySQL/Division-and-Correlated-Subquery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Division-and-Correlated-Subquery</a><a data-tooltip-position="top" aria-label="Database Management System/MySQL/Division-and-Correlated-Subquery.md" data-href="Database Management System/MySQL/Division-and-Correlated-Subquery.md" href="https://www.allenygy.vip/database-management-system/mysql/division-and-correlated-subquery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Division-and-Correlated-Subquery</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Cassandra.md" data-href="Database Management System/NoSQL/Cassandra.md" href="https://www.allenygy.vip/Database Management System/NoSQL/Cassandra" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Cassandra</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Cassandra.md" data-href="Database Management System/NoSQL/Cassandra.md" href="https://www.allenygy.vip/database-management-system/nosql/cassandra.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Cassandra</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/MongoDB.md" data-href="Database Management System/NoSQL/MongoDB.md" href="https://www.allenygy.vip/Database Management System/NoSQL/MongoDB" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MongoDB</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/MongoDB.md" data-href="Database Management System/NoSQL/MongoDB.md" href="https://www.allenygy.vip/database-management-system/nosql/mongodb.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MongoDB</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Neo4j.md" data-href="Database Management System/NoSQL/Neo4j.md" href="https://www.allenygy.vip/Database Management System/NoSQL/Neo4j" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Neo4j</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Neo4j.md" data-href="Database Management System/NoSQL/Neo4j.md" href="https://www.allenygy.vip/database-management-system/nosql/neo4j.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Neo4j</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL-Review.md" data-href="Database Management System/NoSQL/NoSQL-Review.md" href="https://www.allenygy.vip/Database Management System/NoSQL/NoSQL-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL-Review</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL-Review.md" data-href="Database Management System/NoSQL/NoSQL-Review.md" href="https://www.allenygy.vip/database-management-system/nosql/nosql-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL-Review</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL.md" data-href="Database Management System/NoSQL/NoSQL.md" href="https://www.allenygy.vip/Database Management System/NoSQL/NoSQL" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NoSQL</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/NoSQL.md" data-href="Database Management System/NoSQL/NoSQL.md" href="https://www.allenygy.vip/database-management-system/nosql/nosql.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NoSQL</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Redis.md" data-href="Database Management System/NoSQL/Redis.md" href="https://www.allenygy.vip/Database Management System/NoSQL/Redis" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Redis</a><a data-tooltip-position="top" aria-label="Database Management System/NoSQL/Redis.md" data-href="Database Management System/NoSQL/Redis.md" href="https://www.allenygy.vip/database-management-system/nosql/redis.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Redis</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-Entity-Relationship-Model-Modeling</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/01-Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/database-management-system/rdbms/01-entity-relationship-model-modeling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-Entity-Relationship-Model-Modeling</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Entity-Relationship-Model-Constraints</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/02-Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/database-management-system/rdbms/02-entity-relationship-model-constraints.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Entity-Relationship-Model-Constraints</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Entity-Relationship-Model-Extended-Features</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/03-Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/database-management-system/rdbms/03-entity-relationship-model-extended-features.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Entity-Relationship-Model-Extended-Features</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/04-Design-Issues.md" data-href="Database Management System/RDBMS/04-Design-Issues.md" href="https://www.allenygy.vip/Database Management System/RDBMS/04-Design-Issues" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Design-Issues</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/04-Design-Issues.md" data-href="Database Management System/RDBMS/04-Design-Issues.md" href="https://www.allenygy.vip/database-management-system/rdbms/04-design-issues.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Design-Issues</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/05-Logical-Design.md" data-href="Database Management System/RDBMS/05-Logical-Design.md" href="https://www.allenygy.vip/Database Management System/RDBMS/05-Logical-Design" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-Logical-Design</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/05-Logical-Design.md" data-href="Database Management System/RDBMS/05-Logical-Design.md" href="https://www.allenygy.vip/database-management-system/rdbms/05-logical-design.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-Logical-Design</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/06-Key-Concept.md" data-href="Database Management System/RDBMS/06-Key-Concept.md" href="https://www.allenygy.vip/Database Management System/RDBMS/06-Key-Concept" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-Key-Concept</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/06-Key-Concept.md" data-href="Database Management System/RDBMS/06-Key-Concept.md" href="https://www.allenygy.vip/database-management-system/rdbms/06-key-concept.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-Key-Concept</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/07-relational-database-design-purpose-&amp;-first-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Relational-Database-Design-Functional-Dependency</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/08-Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/database-management-system/rdbms/08-relational-database-design-functional-dependency.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Relational-Database-Design-Functional-Dependency</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/Database Management System/RDBMS/09-Relational-Database-Design-BCNF" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-Relational-Database-Design-BCNF</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/09-Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/database-management-system/rdbms/09-relational-database-design-bcnf.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-Relational-Database-Design-BCNF</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-Relational-Database-Design-3rd-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/10-Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/10-relational-database-design-3rd-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-Relational-Database-Design-3rd-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/DBMS-Review.md" data-href="Database Management System/RDBMS/DBMS-Review.md" href="https://www.allenygy.vip/Database Management System/RDBMS/DBMS-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DBMS-Review</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/DBMS-Review.md" data-href="Database Management System/RDBMS/DBMS-Review.md" href="https://www.allenygy.vip/database-management-system/rdbms/dbms-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DBMS-Review</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Entity-Relationship-Model-Modeling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Modeling</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Modeling.md" href="https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-modeling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Modeling</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Purpose-&amp;-First-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-purpose-&amp;-first-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-Purpose-&amp;-First-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-Functional-Dependency</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" data-href="Database Management System/RDBMS/Relational-Database-Design-Functional-Dependency.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-functional-dependency.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-Functional-Dependency</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-BCNF" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-BCNF</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" data-href="Database Management System/RDBMS/Relational-Database-Design-BCNF.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-bcnf.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-BCNF</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Relational-Database-Design-3rd-Normal-Form</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" data-href="Database Management System/RDBMS/Relational-Database-Design-3rd-Normal-Form.md" href="https://www.allenygy.vip/database-management-system/rdbms/relational-database-design-3rd-normal-form.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Relational-Database-Design-3rd-Normal-Form</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Extended-Features</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Extended-Features.md" href="https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-extended-features.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Extended-Features</a>
<br><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/Database Management System/RDBMS/Entity-Relationship-Model-Constraints" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Entity-Relationship-Model-Constraints</a><a data-tooltip-position="top" aria-label="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" data-href="Database Management System/RDBMS/Entity-Relationship-Model-Constraints.md" href="https://www.allenygy.vip/database-management-system/rdbms/entity-relationship-model-constraints.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Entity-Relationship-Model-Constraints</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Prompting Engineering Techniques.md" data-href="Deep Learning/Prompting Engineering Techniques.md" href="https://www.allenygy.vip/Deep Learning/Prompting Engineering Techniques" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prompting Engineering Techniques</a><a data-tooltip-position="top" aria-label="Deep Learning/Prompting Engineering Techniques.md" data-href="Deep Learning/Prompting Engineering Techniques.md" href="https://www.allenygy.vip/deep-learning/prompting-engineering-techniques.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prompting Engineering Techniques</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Activation Function.md" data-href="Deep Learning/Activation Function.md" href="https://www.allenygy.vip/Deep Learning/Activation Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Activation Function</a><a data-tooltip-position="top" aria-label="Deep Learning/Activation Function.md" data-href="Deep Learning/Activation Function.md" href="https://www.allenygy.vip/deep-learning/activation-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Activation Function</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Attention.md" data-href="Deep Learning/Attention.md" href="https://www.allenygy.vip/Deep Learning/Attention" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Attention</a><a data-tooltip-position="top" aria-label="Deep Learning/Attention.md" data-href="Deep Learning/Attention.md" href="https://www.allenygy.vip/deep-learning/attention.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Attention</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Deep Learning.md" data-href="Deep Learning/Deep Learning.md" href="https://www.allenygy.vip/Deep Learning/Deep Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Deep Learning</a><a data-tooltip-position="top" aria-label="Deep Learning/Deep Learning.md" data-href="Deep Learning/Deep Learning.md" href="https://www.allenygy.vip/deep-learning/deep-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Deep Learning</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Fine-Tuning.md" data-href="Deep Learning/Fine-Tuning.md" href="https://www.allenygy.vip/Deep Learning/Fine-Tuning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Fine-Tuning</a><a data-tooltip-position="top" aria-label="Deep Learning/Fine-Tuning.md" data-href="Deep Learning/Fine-Tuning.md" href="https://www.allenygy.vip/deep-learning/fine-tuning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Fine-Tuning</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/Prompting and In Context Learning.md" data-href="Deep Learning/Prompting and In Context Learning.md" href="https://www.allenygy.vip/Deep Learning/Prompting and In Context Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Prompting and In Context Learning</a><a data-tooltip-position="top" aria-label="Deep Learning/Prompting and In Context Learning.md" data-href="Deep Learning/Prompting and In Context Learning.md" href="https://www.allenygy.vip/deep-learning/prompting-and-in-context-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Prompting and In Context Learning</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Activation Function.md" data-href="Deep Learning/00-Basic/Activation Function.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Activation Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Activation Function</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Activation Function.md" data-href="Deep Learning/00-Basic/Activation Function.md" href="https://www.allenygy.vip/deep-learning/00-basic/activation-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Activation Function</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Dropout.md" data-href="Deep Learning/00-Basic/Dropout.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Dropout" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Dropout</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Dropout.md" data-href="Deep Learning/00-Basic/Dropout.md" href="https://www.allenygy.vip/deep-learning/00-basic/dropout.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Dropout</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Gradient Descent.md" data-href="Deep Learning/00-Basic/Gradient Descent.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Gradient Descent" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Gradient Descent</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Gradient Descent.md" data-href="Deep Learning/00-Basic/Gradient Descent.md" href="https://www.allenygy.vip/deep-learning/00-basic/gradient-descent.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Gradient Descent</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/K Cross Verified.md" data-href="Deep Learning/00-Basic/K Cross Verified.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/K Cross Verified" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">K Cross Verified</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/K Cross Verified.md" data-href="Deep Learning/00-Basic/K Cross Verified.md" href="https://www.allenygy.vip/deep-learning/00-basic/k-cross-verified.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">K Cross Verified</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Loss Function.md" data-href="Deep Learning/00-Basic/Loss Function.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Loss Function" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Loss Function</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Loss Function.md" data-href="Deep Learning/00-Basic/Loss Function.md" href="https://www.allenygy.vip/deep-learning/00-basic/loss-function.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Loss Function</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Overfitting and Underfitting.md" data-href="Deep Learning/00-Basic/Overfitting and Underfitting.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Overfitting and Underfitting" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Overfitting and Underfitting</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Overfitting and Underfitting.md" data-href="Deep Learning/00-Basic/Overfitting and Underfitting.md" href="https://www.allenygy.vip/deep-learning/00-basic/overfitting-and-underfitting.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Overfitting and Underfitting</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Softmax and Argmax.md" data-href="Deep Learning/00-Basic/Softmax and Argmax.md" href="https://www.allenygy.vip/Deep Learning/00-Basic/Softmax and Argmax" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Softmax and Argmax</a><a data-tooltip-position="top" aria-label="Deep Learning/00-Basic/Softmax and Argmax.md" data-href="Deep Learning/00-Basic/Softmax and Argmax.md" href="https://www.allenygy.vip/deep-learning/00-basic/softmax-and-argmax.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Softmax and Argmax</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Deep Learning/01-Linear Regression/Basic torch.md" data-href="Deep Learning/01-Linear Regression/Basic torch.md" href="https://www.allenygy.vip/Deep Learning/01-Linear Regression/Basic torch" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Basic torch</a><a data-tooltip-position="top" aria-label="Deep Learning/01-Linear Regression/Basic torch.md" data-href="Deep Learning/01-Linear Regression/Basic torch.md" href="https://www.allenygy.vip/deep-learning/01-linear-regression/basic-torch.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Basic torch</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Deep Learning/02-SoftMax Regression/Softmax Regression.md" data-href="Deep Learning/02-SoftMax Regression/Softmax Regression.md" href="https://www.allenygy.vip/Deep Learning/02-SoftMax Regression/Softmax Regression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Softmax Regression</a><a data-tooltip-position="top" aria-label="Deep Learning/02-SoftMax Regression/Softmax Regression.md" data-href="Deep Learning/02-SoftMax Regression/Softmax Regression.md" href="https://www.allenygy.vip/deep-learning/02-softmax-regression/softmax-regression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Softmax Regression</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Deep Learning/03-Multiple Layer Perceptron/MLP.md" data-href="Deep Learning/03-Multiple Layer Perceptron/MLP.md" href="https://www.allenygy.vip/Deep Learning/03-Multiple Layer Perceptron/MLP" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">MLP</a><a data-tooltip-position="top" aria-label="Deep Learning/03-Multiple Layer Perceptron/MLP.md" data-href="Deep Learning/03-Multiple Layer Perceptron/MLP.md" href="https://www.allenygy.vip/deep-learning/03-multiple-layer-perceptron/mlp.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">MLP</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Deep Learning/NLP/Bert.md" data-href="Deep Learning/NLP/Bert.md" href="https://www.allenygy.vip/Deep Learning/NLP/Bert" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bert</a><a data-tooltip-position="top" aria-label="Deep Learning/NLP/Bert.md" data-href="Deep Learning/NLP/Bert.md" href="https://www.allenygy.vip/deep-learning/nlp/bert.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bert</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Machine Learning/ML-Cheat-Sheet.md" data-href="Machine Learning/ML-Cheat-Sheet.md" href="https://www.allenygy.vip/Machine Learning/ML-Cheat-Sheet" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Cheat-Sheet</a><a data-tooltip-position="top" aria-label="Machine Learning/ML-Cheat-Sheet.md" data-href="Machine Learning/ML-Cheat-Sheet.md" href="https://www.allenygy.vip/machine-learning/ml-cheat-sheet.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Cheat-Sheet</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/ML-Review.md" data-href="Machine Learning/ML-Review.md" href="https://www.allenygy.vip/Machine Learning/ML-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Review</a><a data-tooltip-position="top" aria-label="Machine Learning/ML-Review.md" data-href="Machine Learning/ML-Review.md" href="https://www.allenygy.vip/machine-learning/ml-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Review</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-5.md" data-href="Machine Learning/Assignment/ML-As-5.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-5</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-5.md" data-href="Machine Learning/Assignment/ML-As-5.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-5</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-1.md" data-href="Machine Learning/Assignment/ML-As-1.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-1" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-1</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-1.md" data-href="Machine Learning/Assignment/ML-As-1.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-1.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-1</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-2.md" data-href="Machine Learning/Assignment/ML-As-2.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-2</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-2.md" data-href="Machine Learning/Assignment/ML-As-2.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-2</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-4.md" data-href="Machine Learning/Assignment/ML-As-4.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-4" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-4</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-4.md" data-href="Machine Learning/Assignment/ML-As-4.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-4.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-4</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-3.md" data-href="Machine Learning/Assignment/ML-As-3.md" href="https://www.allenygy.vip/Machine Learning/Assignment/ML-As-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-As-3</a><a data-tooltip-position="top" aria-label="Machine Learning/Assignment/ML-As-3.md" data-href="Machine Learning/Assignment/ML-As-3.md" href="https://www.allenygy.vip/machine-learning/assignment/ml-as-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-As-3</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Regression.md" data-href="Machine Learning/Lecture/ML-Regression.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Regression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Regression</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Regression.md" data-href="Machine Learning/Lecture/ML-Regression.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-regression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Regression</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Distance Measure.md" data-href="Machine Learning/Lecture/ML-Distance Measure.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Distance Measure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Distance Measure</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Distance Measure.md" data-href="Machine Learning/Lecture/ML-Distance Measure.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-distance-measure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Distance Measure</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cluster Distance Measure.md" data-href="Machine Learning/Lecture/ML-Cluster Distance Measure.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Cluster Distance Measure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Cluster Distance Measure</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cluster Distance Measure.md" data-href="Machine Learning/Lecture/ML-Cluster Distance Measure.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-cluster-distance-measure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Cluster Distance Measure</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Hierarchical Clustering.md" data-href="Machine Learning/Lecture/ML-Hierarchical Clustering.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Hierarchical Clustering" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Hierarchical Clustering</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Hierarchical Clustering.md" data-href="Machine Learning/Lecture/ML-Hierarchical Clustering.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-hierarchical-clustering.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Hierarchical Clustering</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-K Means.md" data-href="Machine Learning/Lecture/ML-K Means.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-K Means" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-K Means</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-K Means.md" data-href="Machine Learning/Lecture/ML-K Means.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-k-means.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-K Means</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Expectation Maximization.md" data-href="Machine Learning/Lecture/ML-Expectation Maximization.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Expectation Maximization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Expectation Maximization</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Expectation Maximization.md" data-href="Machine Learning/Lecture/ML-Expectation Maximization.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-expectation-maximization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Expectation Maximization</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" data-href="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Mean Shift Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Mean Shift Algorithm</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" data-href="Machine Learning/Lecture/ML-Mean Shift Algorithm.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-mean-shift-algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Mean Shift Algorithm</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Density Estimation.md" data-href="Machine Learning/Lecture/ML-Density Estimation.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Density Estimation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Density Estimation</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Density Estimation.md" data-href="Machine Learning/Lecture/ML-Density Estimation.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-density-estimation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Density Estimation</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" data-href="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Probability and Bayesian Perspective" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Probability and Bayesian Perspective</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" data-href="Machine Learning/Lecture/ML-Probability and Bayesian Perspective.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-probability-and-bayesian-perspective.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Probability and Bayesian Perspective</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" data-href="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Evaluation of Classifiers" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Evaluation of Classifiers</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" data-href="Machine Learning/Lecture/ML-Evaluation of Classifiers.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-evaluation-of-classifiers.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Evaluation of Classifiers</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Dimensionality Reduction.md" data-href="Machine Learning/Lecture/ML-Dimensionality Reduction.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Dimensionality Reduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Dimensionality Reduction</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Dimensionality Reduction.md" data-href="Machine Learning/Lecture/ML-Dimensionality Reduction.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-dimensionality-reduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Dimensionality Reduction</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-SVM.md" data-href="Machine Learning/Lecture/ML-SVM.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-SVM" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-SVM</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-SVM.md" data-href="Machine Learning/Lecture/ML-SVM.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-svm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-SVM</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Bayesian Estimation.md" data-href="Machine Learning/Lecture/ML-Bayesian Estimation.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Bayesian Estimation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Bayesian Estimation</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Bayesian Estimation.md" data-href="Machine Learning/Lecture/ML-Bayesian Estimation.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-bayesian-estimation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Bayesian Estimation</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cross Validation.md" data-href="Machine Learning/Lecture/ML-Cross Validation.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Cross Validation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Cross Validation</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Cross Validation.md" data-href="Machine Learning/Lecture/ML-Cross Validation.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-cross-validation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Cross Validation</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Navie Bayes.md" data-href="Machine Learning/Lecture/ML-Navie Bayes.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Navie Bayes" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Navie Bayes</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Navie Bayes.md" data-href="Machine Learning/Lecture/ML-Navie Bayes.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-navie-bayes.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Navie Bayes</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Statistical Learning.md" data-href="Machine Learning/Lecture/ML-Statistical Learning.md" href="https://www.allenygy.vip/Machine Learning/Lecture/ML-Statistical Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-Statistical Learning</a><a data-tooltip-position="top" aria-label="Machine Learning/Lecture/ML-Statistical Learning.md" data-href="Machine Learning/Lecture/ML-Statistical Learning.md" href="https://www.allenygy.vip/machine-learning/lecture/ml-statistical-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-Statistical Learning</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Project/ML-pre.md" data-href="Machine Learning/Project/ML-pre.md" href="https://www.allenygy.vip/Machine Learning/Project/ML-pre" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ML-pre</a><a data-tooltip-position="top" aria-label="Machine Learning/Project/ML-pre.md" data-href="Machine Learning/Project/ML-pre.md" href="https://www.allenygy.vip/machine-learning/project/ml-pre.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ML-pre</a>
<br><a data-tooltip-position="top" aria-label="Machine Learning/Project/Comment Filtering System.md" data-href="Machine Learning/Project/Comment Filtering System.md" href="https://www.allenygy.vip/Machine Learning/Project/Comment Filtering System" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Comment Filtering System</a><a data-tooltip-position="top" aria-label="Machine Learning/Project/Comment Filtering System.md" data-href="Machine Learning/Project/Comment Filtering System.md" href="https://www.allenygy.vip/machine-learning/project/comment-filtering-system.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Comment Filtering System</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Math.md" data-href="Math/Math.md" href="https://www.allenygy.vip/Math/Math" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Math</a><a data-tooltip-position="top" aria-label="Math/Math.md" data-href="Math/Math.md" href="https://www.allenygy.vip/math/math.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Math</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-2</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-2</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-3</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-3</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-5</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-5</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-6</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-6.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-6</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-7</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-7.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-7</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-8</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-8.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-8</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Tutorial</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-tutorial.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Tutorial</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-2</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-2.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-2</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-3</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-3.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-3.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-3</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-5</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-5.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-5.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-5</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-6</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-6.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-6.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-6</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-7</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-7.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-7.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-7</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Assignment-8</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Assignment-8.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-assignment-8.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Assignment-8</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" href="https://www.allenygy.vip/Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Discrete Mathematics Tutorial</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" data-href="Math/Discrete Structure/Assignment/Discrete Mathematics Tutorial.md" href="https://www.allenygy.vip/math/discrete-structure/assignment/discrete-mathematics-tutorial.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Discrete Mathematics Tutorial</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/boolean-expressions.md" data-href="Math/Discrete Structure/Lecture/boolean-expressions.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/boolean-expressions" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">boolean-expressions</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/boolean-expressions.md" data-href="Math/Discrete Structure/Lecture/boolean-expressions.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/boolean-expressions.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">boolean-expressions</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/counting-principles.md" data-href="Math/Discrete Structure/Lecture/counting-principles.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/counting-principles" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">counting-principles</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/counting-principles.md" data-href="Math/Discrete Structure/Lecture/counting-principles.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/counting-principles.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">counting-principles</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" data-href="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/functions-sequence-and-summations" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">functions-sequence-and-summations</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" data-href="Math/Discrete Structure/Lecture/functions-sequence-and-summations.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/functions-sequence-and-summations.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">functions-sequence-and-summations</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/graph-theory.md" data-href="Math/Discrete Structure/Lecture/graph-theory.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/graph-theory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">graph-theory</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/graph-theory.md" data-href="Math/Discrete Structure/Lecture/graph-theory.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/graph-theory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">graph-theory</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/logic-circuits.md" data-href="Math/Discrete Structure/Lecture/logic-circuits.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/logic-circuits" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">logic-circuits</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/logic-circuits.md" data-href="Math/Discrete Structure/Lecture/logic-circuits.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/logic-circuits.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">logic-circuits</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-equivalence.md" data-href="Math/Discrete Structure/Lecture/propositional-equivalence.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/propositional-equivalence" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">propositional-equivalence</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-equivalence.md" data-href="Math/Discrete Structure/Lecture/propositional-equivalence.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/propositional-equivalence.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">propositional-equivalence</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-logic.md" data-href="Math/Discrete Structure/Lecture/propositional-logic.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/propositional-logic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">propositional-logic</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/propositional-logic.md" data-href="Math/Discrete Structure/Lecture/propositional-logic.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/propositional-logic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">propositional-logic</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/relation.md" data-href="Math/Discrete Structure/Lecture/relation.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/relation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">relation</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/relation.md" data-href="Math/Discrete Structure/Lecture/relation.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/relation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">relation</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" data-href="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/representing-graph-and-connectivity" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">representing-graph-and-connectivity</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" data-href="Math/Discrete Structure/Lecture/representing-graph-and-connectivity.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/representing-graph-and-connectivity.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">representing-graph-and-connectivity</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" data-href="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/sets-and-n-tuple" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">sets-and-n-tuple</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" data-href="Math/Discrete Structure/Lecture/sets-and-n-tuple.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/sets-and-n-tuple.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">sets-and-n-tuple</a>
<br><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/tree.md" data-href="Math/Discrete Structure/Lecture/tree.md" href="https://www.allenygy.vip/Math/Discrete Structure/Lecture/tree" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">tree</a><a data-tooltip-position="top" aria-label="Math/Discrete Structure/Lecture/tree.md" data-href="Math/Discrete Structure/Lecture/tree.md" href="https://www.allenygy.vip/math/discrete-structure/lecture/tree.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">tree</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" data-href="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" href="https://www.allenygy.vip/Math/Linear Algebra/Eigenvalues and Eigenvectors" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Eigenvalues and Eigenvectors</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" data-href="Math/Linear Algebra/Eigenvalues and Eigenvectors.md" href="https://www.allenygy.vip/math/linear-algebra/eigenvalues-and-eigenvectors.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Eigenvalues and Eigenvectors</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Judgment.md" data-href="Math/Linear Algebra/Judgment.md" href="https://www.allenygy.vip/Math/Linear Algebra/Judgment" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Judgment</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Judgment.md" data-href="Math/Linear Algebra/Judgment.md" href="https://www.allenygy.vip/math/linear-algebra/judgment.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Judgment</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Linear Transformations.md" data-href="Math/Linear Algebra/Linear Transformations.md" href="https://www.allenygy.vip/Math/Linear Algebra/Linear Transformations" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Linear Transformations</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Linear Transformations.md" data-href="Math/Linear Algebra/Linear Transformations.md" href="https://www.allenygy.vip/math/linear-algebra/linear-transformations.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Linear Transformations</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Matrix Operation.md" data-href="Math/Linear Algebra/Matrix Operation.md" href="https://www.allenygy.vip/Math/Linear Algebra/Matrix Operation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Matrix Operation</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Matrix Operation.md" data-href="Math/Linear Algebra/Matrix Operation.md" href="https://www.allenygy.vip/math/linear-algebra/matrix-operation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Matrix Operation</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Orthogonality.md" data-href="Math/Linear Algebra/Orthogonality.md" href="https://www.allenygy.vip/Math/Linear Algebra/Orthogonality" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Orthogonality</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Orthogonality.md" data-href="Math/Linear Algebra/Orthogonality.md" href="https://www.allenygy.vip/math/linear-algebra/orthogonality.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Orthogonality</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Product.md" data-href="Math/Linear Algebra/Product.md" href="https://www.allenygy.vip/Math/Linear Algebra/Product" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Product</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Product.md" data-href="Math/Linear Algebra/Product.md" href="https://www.allenygy.vip/math/linear-algebra/product.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Product</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigen-Decomposition-Review.md" data-href="Math/Linear Algebra/Eigen-Decomposition-Review.md" href="https://www.allenygy.vip/Math/Linear Algebra/Eigen-Decomposition-Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Eigen-Decomposition-Review</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Eigen-Decomposition-Review.md" data-href="Math/Linear Algebra/Eigen-Decomposition-Review.md" href="https://www.allenygy.vip/math/linear-algebra/eigen-decomposition-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Eigen-Decomposition-Review</a>
<br><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Vector Space.md" data-href="Math/Linear Algebra/Vector Space.md" href="https://www.allenygy.vip/Math/Linear Algebra/Vector Space" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Vector Space</a><a data-tooltip-position="top" aria-label="Math/Linear Algebra/Vector Space.md" data-href="Math/Linear Algebra/Vector Space.md" href="https://www.allenygy.vip/math/linear-algebra/vector-space.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Vector Space</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Optimization/Lagrange Multipliers.md" data-href="Math/Optimization/Lagrange Multipliers.md" href="https://www.allenygy.vip/Math/Optimization/Lagrange Multipliers" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Lagrange Multipliers</a><a data-tooltip-position="top" aria-label="Math/Optimization/Lagrange Multipliers.md" data-href="Math/Optimization/Lagrange Multipliers.md" href="https://www.allenygy.vip/math/optimization/lagrange-multipliers.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Lagrange Multipliers</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Chi-Square-Tests.md" data-href="Math/Probability Statistics/Chi-Square-Tests.md" href="https://www.allenygy.vip/Math/Probability Statistics/Chi-Square-Tests" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Chi-Square-Tests</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Chi-Square-Tests.md" data-href="Math/Probability Statistics/Chi-Square-Tests.md" href="https://www.allenygy.vip/math/probability-statistics/chi-square-tests.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Chi-Square-Tests</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Confidence-Interval.md" data-href="Math/Probability Statistics/Confidence-Interval.md" href="https://www.allenygy.vip/Math/Probability Statistics/Confidence-Interval" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Confidence-Interval</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Confidence-Interval.md" data-href="Math/Probability Statistics/Confidence-Interval.md" href="https://www.allenygy.vip/math/probability-statistics/confidence-interval.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Confidence-Interval</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" href="https://www.allenygy.vip/Math/Probability Statistics/Hypothesis-Testing-Two-Population" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Hypothesis-Testing-Two-Population</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Two-Population.md" href="https://www.allenygy.vip/math/probability-statistics/hypothesis-testing-two-population.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Hypothesis-Testing-Two-Population</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" href="https://www.allenygy.vip/Math/Probability Statistics/Hypothesis-Testing-Single-Population" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Hypothesis-Testing-Single-Population</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" data-href="Math/Probability Statistics/Hypothesis-Testing-Single-Population.md" href="https://www.allenygy.vip/math/probability-statistics/hypothesis-testing-single-population.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Hypothesis-Testing-Single-Population</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Probability-Theory.md" data-href="Math/Probability Statistics/Probability-Theory.md" href="https://www.allenygy.vip/Math/Probability Statistics/Probability-Theory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Probability-Theory</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Probability-Theory.md" data-href="Math/Probability Statistics/Probability-Theory.md" href="https://www.allenygy.vip/math/probability-statistics/probability-theory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Probability-Theory</a>
<br><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" data-href="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" href="https://www.allenygy.vip/Math/Probability Statistics/Poisson-Distribution-Midterm-Pre" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Poisson-Distribution-Midterm-Pre</a><a data-tooltip-position="top" aria-label="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" data-href="Math/Probability Statistics/Poisson-Distribution-Midterm-Pre.md" href="https://www.allenygy.vip/math/probability-statistics/poisson-distribution-midterm-pre.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Poisson-Distribution-Midterm-Pre</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Operating System/Operating System Overview.md" data-href="Operating System/Operating System Overview.md" href="https://www.allenygy.vip/Operating System/Operating System Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Operating System Overview</a><a data-tooltip-position="top" aria-label="Operating System/Operating System Overview.md" data-href="Operating System/Operating System Overview.md" href="https://www.allenygy.vip/operating-system/operating-system-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Operating System Overview</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Operating System/Extend/NJU OS PA0.md" data-href="Operating System/Extend/NJU OS PA0.md" href="https://www.allenygy.vip/Operating System/Extend/NJU OS PA0" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">NJU OS PA0</a><a data-tooltip-position="top" aria-label="Operating System/Extend/NJU OS PA0.md" data-href="Operating System/Extend/NJU OS PA0.md" href="https://www.allenygy.vip/operating-system/extend/nju-os-pa0.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">NJU OS PA0</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Extend/Linux Basic Operation.md" data-href="Operating System/Extend/Linux Basic Operation.md" href="https://www.allenygy.vip/Operating System/Extend/Linux Basic Operation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Linux Basic Operation</a><a data-tooltip-position="top" aria-label="Operating System/Extend/Linux Basic Operation.md" data-href="Operating System/Extend/Linux Basic Operation.md" href="https://www.allenygy.vip/operating-system/extend/linux-basic-operation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Linux Basic Operation</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/01-Operating System Introduction.md" data-href="Operating System/Lecture/01-Operating System Introduction.md" href="https://www.allenygy.vip/Operating System/Lecture/01-Operating System Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">01-Operating System Introduction</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/01-Operating System Introduction.md" data-href="Operating System/Lecture/01-Operating System Introduction.md" href="https://www.allenygy.vip/operating-system/lecture/01-operating-system-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">01-Operating System Introduction</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/02-Operating System Structure.md" data-href="Operating System/Lecture/02-Operating System Structure.md" href="https://www.allenygy.vip/Operating System/Lecture/02-Operating System Structure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">02-Operating System Structure</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/02-Operating System Structure.md" data-href="Operating System/Lecture/02-Operating System Structure.md" href="https://www.allenygy.vip/operating-system/lecture/02-operating-system-structure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">02-Operating System Structure</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/03-Process.md" data-href="Operating System/Lecture/03-Process.md" href="https://www.allenygy.vip/Operating System/Lecture/03-Process" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">03-Process</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/03-Process.md" data-href="Operating System/Lecture/03-Process.md" href="https://www.allenygy.vip/operating-system/lecture/03-process.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">03-Process</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/04-Threads.md" data-href="Operating System/Lecture/04-Threads.md" href="https://www.allenygy.vip/Operating System/Lecture/04-Threads" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">04-Threads</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/04-Threads.md" data-href="Operating System/Lecture/04-Threads.md" href="https://www.allenygy.vip/operating-system/lecture/04-threads.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">04-Threads</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/05-CPU Scheduling.md" data-href="Operating System/Lecture/05-CPU Scheduling.md" href="https://www.allenygy.vip/Operating System/Lecture/05-CPU Scheduling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">05-CPU Scheduling</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/05-CPU Scheduling.md" data-href="Operating System/Lecture/05-CPU Scheduling.md" href="https://www.allenygy.vip/operating-system/lecture/05-cpu-scheduling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">05-CPU Scheduling</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/06-Process Synchronization.md" data-href="Operating System/Lecture/06-Process Synchronization.md" href="https://www.allenygy.vip/Operating System/Lecture/06-Process Synchronization" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">06-Process Synchronization</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/06-Process Synchronization.md" data-href="Operating System/Lecture/06-Process Synchronization.md" href="https://www.allenygy.vip/operating-system/lecture/06-process-synchronization.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">06-Process Synchronization</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/07-Main Memory.md" data-href="Operating System/Lecture/07-Main Memory.md" href="https://www.allenygy.vip/Operating System/Lecture/07-Main Memory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">07-Main Memory</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/07-Main Memory.md" data-href="Operating System/Lecture/07-Main Memory.md" href="https://www.allenygy.vip/operating-system/lecture/07-main-memory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">07-Main Memory</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/08-Virtual Memory.md" data-href="Operating System/Lecture/08-Virtual Memory.md" href="https://www.allenygy.vip/Operating System/Lecture/08-Virtual Memory" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">08-Virtual Memory</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/08-Virtual Memory.md" data-href="Operating System/Lecture/08-Virtual Memory.md" href="https://www.allenygy.vip/operating-system/lecture/08-virtual-memory.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">08-Virtual Memory</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/09-File System Interface.md" data-href="Operating System/Lecture/09-File System Interface.md" href="https://www.allenygy.vip/Operating System/Lecture/09-File System Interface" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">09-File System Interface</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/09-File System Interface.md" data-href="Operating System/Lecture/09-File System Interface.md" href="https://www.allenygy.vip/operating-system/lecture/09-file-system-interface.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">09-File System Interface</a>
<br><a data-tooltip-position="top" aria-label="Operating System/Lecture/10-File System Implementation.md" data-href="Operating System/Lecture/10-File System Implementation.md" href="https://www.allenygy.vip/Operating System/Lecture/10-File System Implementation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">10-File System Implementation</a><a data-tooltip-position="top" aria-label="Operating System/Lecture/10-File System Implementation.md" data-href="Operating System/Lecture/10-File System Implementation.md" href="https://www.allenygy.vip/operating-system/lecture/10-file-system-implementation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">10-File System Implementation</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/Program Language.md" data-href="Programming/Program Language.md" href="https://www.allenygy.vip/Programming/Program Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Program Language</a><a data-tooltip-position="top" aria-label="Programming/Program Language.md" data-href="Programming/Program Language.md" href="https://www.allenygy.vip/programming/program-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Program Language</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/C/Macro.md" data-href="Programming/C/Macro.md" href="https://www.allenygy.vip/Programming/C/Macro" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Macro</a><a data-tooltip-position="top" aria-label="Programming/C/Macro.md" data-href="Programming/C/Macro.md" href="https://www.allenygy.vip/programming/c/macro.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Macro</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/Multithreads.md" data-href="Programming/C/Multithreads.md" href="https://www.allenygy.vip/Programming/C/Multithreads" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Multithreads</a><a data-tooltip-position="top" aria-label="Programming/C/Multithreads.md" data-href="Programming/C/Multithreads.md" href="https://www.allenygy.vip/programming/c/multithreads.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Multithreads</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/Pointers.md" data-href="Programming/C/Pointers.md" href="https://www.allenygy.vip/Programming/C/Pointers" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Pointers</a><a data-tooltip-position="top" aria-label="Programming/C/Pointers.md" data-href="Programming/C/Pointers.md" href="https://www.allenygy.vip/programming/c/pointers.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Pointers</a>
<br><a data-tooltip-position="top" aria-label="Programming/C/fileoperation.md" data-href="Programming/C/fileoperation.md" href="https://www.allenygy.vip/Programming/C/fileoperation" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">fileoperation</a><a data-tooltip-position="top" aria-label="Programming/C/fileoperation.md" data-href="Programming/C/fileoperation.md" href="https://www.allenygy.vip/programming/c/fileoperation.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">fileoperation</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Bitest.md" data-href="Programming/Cpp/Bitest.md" href="https://www.allenygy.vip/Programming/Cpp/Bitest" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Bitest</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Bitest.md" data-href="Programming/Cpp/Bitest.md" href="https://www.allenygy.vip/programming/cpp/bitest.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Bitest</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Algorithm-Library.md" data-href="Programming/Cpp/Algorithm-Library.md" href="https://www.allenygy.vip/Programming/Cpp/Algorithm-Library" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Algorithm-Library</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Algorithm-Library.md" data-href="Programming/Cpp/Algorithm-Library.md" href="https://www.allenygy.vip/programming/cpp/algorithm-library.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Algorithm-Library</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Iota.md" data-href="Programming/Cpp/Iota.md" href="https://www.allenygy.vip/Programming/Cpp/Iota" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Iota</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Iota.md" data-href="Programming/Cpp/Iota.md" href="https://www.allenygy.vip/programming/cpp/iota.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Iota</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Map.md" data-href="Programming/Cpp/Map.md" href="https://www.allenygy.vip/Programming/Cpp/Map" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Map</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Map.md" data-href="Programming/Cpp/Map.md" href="https://www.allenygy.vip/programming/cpp/map.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Map</a>
<br><a data-tooltip-position="top" aria-label="Programming/Cpp/Priority-Queue.md" data-href="Programming/Cpp/Priority-Queue.md" href="https://www.allenygy.vip/Programming/Cpp/Priority-Queue" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Priority-Queue</a><a data-tooltip-position="top" aria-label="Programming/Cpp/Priority-Queue.md" data-href="Programming/Cpp/Priority-Queue.md" href="https://www.allenygy.vip/programming/cpp/priority-queue.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Priority-Queue</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" data-href="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Abstract Methods and Classes Interfaces" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Abstract Methods and Classes Interfaces</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" data-href="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" href="https://www.allenygy.vip/programming/java/lecture/abstract-methods-and-classes-interfaces.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Abstract Methods and Classes Interfaces</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Array and Generics.md" data-href="Programming/Java/Lecture/Array and Generics.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Array and Generics" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Array and Generics</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Array and Generics.md" data-href="Programming/Java/Lecture/Array and Generics.md" href="https://www.allenygy.vip/programming/java/lecture/array-and-generics.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Array and Generics</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Creating Java Classes.md" data-href="Programming/Java/Lecture/Creating Java Classes.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Creating Java Classes" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Creating Java Classes</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Creating Java Classes.md" data-href="Programming/Java/Lecture/Creating Java Classes.md" href="https://www.allenygy.vip/programming/java/lecture/creating-java-classes.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Creating Java Classes</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Exception Handling.md" data-href="Programming/Java/Lecture/Exception Handling.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Exception Handling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Exception Handling</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Exception Handling.md" data-href="Programming/Java/Lecture/Exception Handling.md" href="https://www.allenygy.vip/programming/java/lecture/exception-handling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Exception Handling</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Introduction.md" data-href="Programming/Java/Lecture/Java Introduction.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Java Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Java Introduction</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Introduction.md" data-href="Programming/Java/Lecture/Java Introduction.md" href="https://www.allenygy.vip/programming/java/lecture/java-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Java Introduction</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Programming Essentials.md" data-href="Programming/Java/Lecture/Java Programming Essentials.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Java Programming Essentials" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Java Programming Essentials</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Programming Essentials.md" data-href="Programming/Java/Lecture/Java Programming Essentials.md" href="https://www.allenygy.vip/programming/java/lecture/java-programming-essentials.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Java Programming Essentials</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Inheritance.md" data-href="Programming/Java/Lecture/Inheritance.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Inheritance" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Inheritance</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Inheritance.md" data-href="Programming/Java/Lecture/Inheritance.md" href="https://www.allenygy.vip/programming/java/lecture/inheritance.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Inheritance</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Unified Modeling Language.md" data-href="Programming/Java/Lecture/Unified Modeling Language.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Unified Modeling Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Unified Modeling Language</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Unified Modeling Language.md" data-href="Programming/Java/Lecture/Unified Modeling Language.md" href="https://www.allenygy.vip/programming/java/lecture/unified-modeling-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Unified Modeling Language</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" data-href="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Abstract Methods and Classes Interfaces" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Abstract Methods and Classes Interfaces</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" data-href="Programming/Java/Lecture/Abstract Methods and Classes Interfaces.md" href="https://www.allenygy.vip/programming/java/lecture/abstract-methods-and-classes-interfaces.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Abstract Methods and Classes Interfaces</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Array and Generics.md" data-href="Programming/Java/Lecture/Array and Generics.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Array and Generics" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Array and Generics</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Array and Generics.md" data-href="Programming/Java/Lecture/Array and Generics.md" href="https://www.allenygy.vip/programming/java/lecture/array-and-generics.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Array and Generics</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Creating Java Classes.md" data-href="Programming/Java/Lecture/Creating Java Classes.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Creating Java Classes" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Creating Java Classes</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Creating Java Classes.md" data-href="Programming/Java/Lecture/Creating Java Classes.md" href="https://www.allenygy.vip/programming/java/lecture/creating-java-classes.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Creating Java Classes</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Exception Handling.md" data-href="Programming/Java/Lecture/Exception Handling.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Exception Handling" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Exception Handling</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Exception Handling.md" data-href="Programming/Java/Lecture/Exception Handling.md" href="https://www.allenygy.vip/programming/java/lecture/exception-handling.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Exception Handling</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Introduction.md" data-href="Programming/Java/Lecture/Java Introduction.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Java Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Java Introduction</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Introduction.md" data-href="Programming/Java/Lecture/Java Introduction.md" href="https://www.allenygy.vip/programming/java/lecture/java-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Java Introduction</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Programming Essentials.md" data-href="Programming/Java/Lecture/Java Programming Essentials.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Java Programming Essentials" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Java Programming Essentials</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Java Programming Essentials.md" data-href="Programming/Java/Lecture/Java Programming Essentials.md" href="https://www.allenygy.vip/programming/java/lecture/java-programming-essentials.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Java Programming Essentials</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Inheritance.md" data-href="Programming/Java/Lecture/Inheritance.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Inheritance" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Inheritance</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Inheritance.md" data-href="Programming/Java/Lecture/Inheritance.md" href="https://www.allenygy.vip/programming/java/lecture/inheritance.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Inheritance</a>
<br><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Unified Modeling Language.md" data-href="Programming/Java/Lecture/Unified Modeling Language.md" href="https://www.allenygy.vip/Programming/Java/Lecture/Unified Modeling Language" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Unified Modeling Language</a><a data-tooltip-position="top" aria-label="Programming/Java/Lecture/Unified Modeling Language.md" data-href="Programming/Java/Lecture/Unified Modeling Language.md" href="https://www.allenygy.vip/programming/java/lecture/unified-modeling-language.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Unified Modeling Language</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/Javascript/quick-start.md" data-href="Programming/Javascript/quick-start.md" href="https://www.allenygy.vip/Programming/Javascript/quick-start" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">quick-start</a><a data-tooltip-position="top" aria-label="Programming/Javascript/quick-start.md" data-href="Programming/Javascript/quick-start.md" href="https://www.allenygy.vip/programming/javascript/quick-start.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">quick-start</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Beautiful Soup.md" data-href="Programming/Python/Beautiful Soup.md" href="https://www.allenygy.vip/Programming/Python/Beautiful Soup" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Beautiful Soup</a><a data-tooltip-position="top" aria-label="Programming/Python/Beautiful Soup.md" data-href="Programming/Python/Beautiful Soup.md" href="https://www.allenygy.vip/programming/python/beautiful-soup.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Beautiful Soup</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Datetime.md" data-href="Programming/Python/Datetime.md" href="https://www.allenygy.vip/Programming/Python/Datetime" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Datetime</a><a data-tooltip-position="top" aria-label="Programming/Python/Datetime.md" data-href="Programming/Python/Datetime.md" href="https://www.allenygy.vip/programming/python/datetime.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Datetime</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Matplotlib.md" data-href="Programming/Python/Matplotlib.md" href="https://www.allenygy.vip/Programming/Python/Matplotlib" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Matplotlib</a><a data-tooltip-position="top" aria-label="Programming/Python/Matplotlib.md" data-href="Programming/Python/Matplotlib.md" href="https://www.allenygy.vip/programming/python/matplotlib.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Matplotlib</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Numpy.md" data-href="Programming/Python/Numpy.md" href="https://www.allenygy.vip/Programming/Python/Numpy" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Numpy</a><a data-tooltip-position="top" aria-label="Programming/Python/Numpy.md" data-href="Programming/Python/Numpy.md" href="https://www.allenygy.vip/programming/python/numpy.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Numpy</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Pandas.md" data-href="Programming/Python/Pandas.md" href="https://www.allenygy.vip/Programming/Python/Pandas" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Pandas</a><a data-tooltip-position="top" aria-label="Programming/Python/Pandas.md" data-href="Programming/Python/Pandas.md" href="https://www.allenygy.vip/programming/python/pandas.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Pandas</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Python Basic.md" data-href="Programming/Python/Python Basic.md" href="https://www.allenygy.vip/Programming/Python/Python Basic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Python Basic</a><a data-tooltip-position="top" aria-label="Programming/Python/Python Basic.md" data-href="Programming/Python/Python Basic.md" href="https://www.allenygy.vip/programming/python/python-basic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Python Basic</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Python Environment Management.md" data-href="Programming/Python/Python Environment Management.md" href="https://www.allenygy.vip/Programming/Python/Python Environment Management" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Python Environment Management</a><a data-tooltip-position="top" aria-label="Programming/Python/Python Environment Management.md" data-href="Programming/Python/Python Environment Management.md" href="https://www.allenygy.vip/programming/python/python-environment-management.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Python Environment Management</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Python Exceptions.md" data-href="Programming/Python/Python Exceptions.md" href="https://www.allenygy.vip/Programming/Python/Python Exceptions" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Python Exceptions</a><a data-tooltip-position="top" aria-label="Programming/Python/Python Exceptions.md" data-href="Programming/Python/Python Exceptions.md" href="https://www.allenygy.vip/programming/python/python-exceptions.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Python Exceptions</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/Regular Expression.md" data-href="Programming/Python/Regular Expression.md" href="https://www.allenygy.vip/Programming/Python/Regular Expression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Regular Expression</a><a data-tooltip-position="top" aria-label="Programming/Python/Regular Expression.md" data-href="Programming/Python/Regular Expression.md" href="https://www.allenygy.vip/programming/python/regular-expression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Regular Expression</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/python-environment-management.md" data-href="Programming/Python/python-environment-management.md" href="https://www.allenygy.vip/Programming/Python/python-environment-management" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">python-environment-management</a><a data-tooltip-position="top" aria-label="Programming/Python/python-environment-management.md" data-href="Programming/Python/python-environment-management.md" href="https://www.allenygy.vip/programming/python/python-environment-management.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">python-environment-management</a>
<br><a data-tooltip-position="top" aria-label="Programming/Python/python-exceptions.md" data-href="Programming/Python/python-exceptions.md" href="https://www.allenygy.vip/Programming/Python/python-exceptions" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">python-exceptions</a><a data-tooltip-position="top" aria-label="Programming/Python/python-exceptions.md" data-href="Programming/Python/python-exceptions.md" href="https://www.allenygy.vip/programming/python/python-exceptions.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">python-exceptions</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Programming/R/Basic R.md" data-href="Programming/R/Basic R.md" href="https://www.allenygy.vip/Programming/R/Basic R" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Basic R</a><a data-tooltip-position="top" aria-label="Programming/R/Basic R.md" data-href="Programming/R/Basic R.md" href="https://www.allenygy.vip/programming/r/basic-r.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Basic R</a>
<br><a data-tooltip-position="top" aria-label="Programming/R/R Data Structure.md" data-href="Programming/R/R Data Structure.md" href="https://www.allenygy.vip/Programming/R/R Data Structure" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">R Data Structure</a><a data-tooltip-position="top" aria-label="Programming/R/R Data Structure.md" data-href="Programming/R/R Data Structure.md" href="https://www.allenygy.vip/programming/r/r-data-structure.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">R Data Structure</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Research/Read Paper Process.md" data-href="Research/Read Paper Process.md" href="https://www.allenygy.vip/Research/Read Paper Process" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Read Paper Process</a><a data-tooltip-position="top" aria-label="Research/Read Paper Process.md" data-href="Research/Read Paper Process.md" href="https://www.allenygy.vip/research/read-paper-process.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Read Paper Process</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/AlphaFold2.md" data-href="Research/BioInfo/AlphaFold2.md" href="https://www.allenygy.vip/Research/BioInfo/AlphaFold2" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">AlphaFold2</a><a data-tooltip-position="top" aria-label="Research/BioInfo/AlphaFold2.md" data-href="Research/BioInfo/AlphaFold2.md" href="https://www.allenygy.vip/research/bioinfo/alphafold2.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">AlphaFold2</a>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/Calculate SE.md" data-href="Research/BioInfo/Calculate SE.md" href="https://www.allenygy.vip/Research/BioInfo/Calculate SE" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Calculate SE</a><a data-tooltip-position="top" aria-label="Research/BioInfo/Calculate SE.md" data-href="Research/BioInfo/Calculate SE.md" href="https://www.allenygy.vip/research/bioinfo/calculate-se.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Calculate SE</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy.md" data-href="Research/BioInfo/Ploidy/Ploidy.md" href="https://www.allenygy.vip/Research/BioInfo/Ploidy/Ploidy" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Ploidy</a><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy.md" data-href="Research/BioInfo/Ploidy/Ploidy.md" href="https://www.allenygy.vip/research/bioinfo/ploidy/ploidy.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Ploidy</a>
<br><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy Review.md" data-href="Research/BioInfo/Ploidy/Ploidy Review.md" href="https://www.allenygy.vip/Research/BioInfo/Ploidy/Ploidy Review" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Ploidy Review</a><a data-tooltip-position="top" aria-label="Research/BioInfo/Ploidy/Ploidy Review.md" data-href="Research/BioInfo/Ploidy/Ploidy Review.md" href="https://www.allenygy.vip/research/bioinfo/ploidy/ploidy-review.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Ploidy Review</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report Script.md" data-href="Research/CoT/CoT Individual Report Script.md" href="https://www.allenygy.vip/Research/CoT/CoT Individual Report Script" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT Individual Report Script</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report Script.md" data-href="Research/CoT/CoT Individual Report Script.md" href="https://www.allenygy.vip/research/cot/cot-individual-report-script.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT Individual Report Script</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report.md" data-href="Research/CoT/CoT Individual Report.md" href="https://www.allenygy.vip/Research/CoT/CoT Individual Report" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT Individual Report</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT Individual Report.md" data-href="Research/CoT/CoT Individual Report.md" href="https://www.allenygy.vip/research/cot/cot-individual-report.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT Individual Report</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Decoding.md" data-href="Research/CoT/CoT-Decoding.md" href="https://www.allenygy.vip/Research/CoT/CoT-Decoding" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT-Decoding</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Decoding.md" data-href="Research/CoT/CoT-Decoding.md" href="https://www.allenygy.vip/research/cot/cot-decoding.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT-Decoding</a>
<br><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Reading-List.md" data-href="Research/CoT/CoT-Reading-List.md" href="https://www.allenygy.vip/Research/CoT/CoT-Reading-List" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CoT-Reading-List</a><a data-tooltip-position="top" aria-label="Research/CoT/CoT-Reading-List.md" data-href="Research/CoT/CoT-Reading-List.md" href="https://www.allenygy.vip/research/cot/cot-reading-list.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CoT-Reading-List</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Research/DataBase/SQL and NoSQL Integration.md" data-href="Research/DataBase/SQL and NoSQL Integration.md" href="https://www.allenygy.vip/Research/DataBase/SQL and NoSQL Integration" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">SQL and NoSQL Integration</a><a data-tooltip-position="top" aria-label="Research/DataBase/SQL and NoSQL Integration.md" data-href="Research/DataBase/SQL and NoSQL Integration.md" href="https://www.allenygy.vip/research/database/sql-and-nosql-integration.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">SQL and NoSQL Integration</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Share/Causality Discovery.md" data-href="Share/Causality Discovery.md" href="https://www.allenygy.vip/Share/Causality Discovery" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Causality Discovery</a><a data-tooltip-position="top" aria-label="Share/Causality Discovery.md" data-href="Share/Causality Discovery.md" href="https://www.allenygy.vip/share/causality-discovery.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Causality Discovery</a>
<br><a data-tooltip-position="top" aria-label="Share/Network-Deconvolution.md" data-href="Share/Network-Deconvolution.md" href="https://www.allenygy.vip/Share/Network-Deconvolution" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Network-Deconvolution</a><a data-tooltip-position="top" aria-label="Share/Network-Deconvolution.md" data-href="Share/Network-Deconvolution.md" href="https://www.allenygy.vip/share/network-deconvolution.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Network-Deconvolution</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Tools.md" data-href="Tools/Tools.md" href="https://www.allenygy.vip/Tools/Tools" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Tools</a><a data-tooltip-position="top" aria-label="Tools/Tools.md" data-href="Tools/Tools.md" href="https://www.allenygy.vip/tools/tools.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Tools</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Conda/Conda.md" data-href="Tools/Conda/Conda.md" href="https://www.allenygy.vip/Tools/Conda/Conda" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Conda</a><a data-tooltip-position="top" aria-label="Tools/Conda/Conda.md" data-href="Tools/Conda/Conda.md" href="https://www.allenygy.vip/tools/conda/conda.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Conda</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Docker/Docker.md" data-href="Tools/Docker/Docker.md" href="https://www.allenygy.vip/Tools/Docker/Docker" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Docker</a><a data-tooltip-position="top" aria-label="Tools/Docker/Docker.md" data-href="Tools/Docker/Docker.md" href="https://www.allenygy.vip/tools/docker/docker.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Docker</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-For-Beginners.md" data-href="Tools/Git/Git-For-Beginners.md" href="https://www.allenygy.vip/Tools/Git/Git-For-Beginners" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-For-Beginners</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-For-Beginners.md" data-href="Tools/Git/Git-For-Beginners.md" href="https://www.allenygy.vip/tools/git/git-for-beginners.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-For-Beginners</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-Introduction.md" data-href="Tools/Git/Git-Introduction.md" href="https://www.allenygy.vip/Tools/Git/Git-Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-Introduction</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-Introduction.md" data-href="Tools/Git/Git-Introduction.md" href="https://www.allenygy.vip/tools/git/git-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-Introduction</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-Remote-Repository.md" data-href="Tools/Git/Git-Remote-Repository.md" href="https://www.allenygy.vip/Tools/Git/Git-Remote-Repository" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-Remote-Repository</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-Remote-Repository.md" data-href="Tools/Git/Git-Remote-Repository.md" href="https://www.allenygy.vip/tools/git/git-remote-repository.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-Remote-Repository</a>
<br><a data-tooltip-position="top" aria-label="Tools/Git/Git-Workflow-Model.md" data-href="Tools/Git/Git-Workflow-Model.md" href="https://www.allenygy.vip/Tools/Git/Git-Workflow-Model" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Git-Workflow-Model</a><a data-tooltip-position="top" aria-label="Tools/Git/Git-Workflow-Model.md" data-href="Tools/Git/Git-Workflow-Model.md" href="https://www.allenygy.vip/tools/git/git-workflow-model.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Git-Workflow-Model</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Regex/Regular-Expression.md" data-href="Tools/Regex/Regular-Expression.md" href="https://www.allenygy.vip/Tools/Regex/Regular-Expression" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Regular-Expression</a><a data-tooltip-position="top" aria-label="Tools/Regex/Regular-Expression.md" data-href="Tools/Regex/Regular-Expression.md" href="https://www.allenygy.vip/tools/regex/regular-expression.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Regular-Expression</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Tools/Shell/Shell.md" data-href="Tools/Shell/Shell.md" href="https://www.allenygy.vip/Tools/Shell/Shell" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Shell</a><a data-tooltip-position="top" aria-label="Tools/Shell/Shell.md" data-href="Tools/Shell/Shell.md" href="https://www.allenygy.vip/tools/shell/shell.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Shell</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Web/CSS/CSS-Introduction.md" data-href="Web/CSS/CSS-Introduction.md" href="https://www.allenygy.vip/Web/CSS/CSS-Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CSS-Introduction</a><a data-tooltip-position="top" aria-label="Web/CSS/CSS-Introduction.md" data-href="Web/CSS/CSS-Introduction.md" href="https://www.allenygy.vip/web/css/css-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CSS-Introduction</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Web/CSS/CSS-Introduction.md" data-href="Web/CSS/CSS-Introduction.md" href="https://www.allenygy.vip/Web/CSS/CSS-Introduction" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CSS-Introduction</a><a data-tooltip-position="top" aria-label="Web/CSS/CSS-Introduction.md" data-href="Web/CSS/CSS-Introduction.md" href="https://www.allenygy.vip/web/css/css-introduction.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CSS-Introduction</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Web/Javascript/Quick-Start.md" data-href="Web/Javascript/Quick-Start.md" href="https://www.allenygy.vip/Web/Javascript/Quick-Start" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Quick-Start</a><a data-tooltip-position="top" aria-label="Web/Javascript/Quick-Start.md" data-href="Web/Javascript/Quick-Start.md" href="https://www.allenygy.vip/web/javascript/quick-start.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Quick-Start</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Application.md" data-href="Web/Vue/Vue-Application.md" href="https://www.allenygy.vip/Web/Vue/Vue-Application" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Vue-Application</a><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Application.md" data-href="Web/Vue/Vue-Application.md" href="https://www.allenygy.vip/web/vue/vue-application.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Vue-Application</a>
<br><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Basic.md" data-href="Web/Vue/Vue-Basic.md" href="https://www.allenygy.vip/Web/Vue/Vue-Basic" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Vue-Basic</a><a data-tooltip-position="top" aria-label="Web/Vue/Vue-Basic.md" data-href="Web/Vue/Vue-Basic.md" href="https://www.allenygy.vip/web/vue/vue-basic.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Vue-Basic</a>
]]></description><link>https://www.allenygy.vip/class.html</link><guid isPermaLink="false">Class.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Fri, 27 Dec 2024 09:03:12 GMT</pubDate></item><item><title><![CDATA[Friends]]></title><description><![CDATA[ 
 <br><br><br>]]></description><link>https://www.allenygy.vip/friends.html</link><guid isPermaLink="false">Friends.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item><item><title><![CDATA[Home]]></title><description><![CDATA[ 
 <br><br><br><br>
<br>OVERVIEW

<br><a data-tooltip-position="top" aria-label="Computer Organization Overview" data-href="Computer Organization Overview" href="https://www.allenygy.vip/Computer Organization Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Computer Organization</a><a data-tooltip-position="top" aria-label="Computer Organization Overview" data-href="Computer Organization Overview" href="https://www.allenygy.vip/computer-organization/computer-organization-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Computer Organization</a>
<br><a data-tooltip-position="top" aria-label="Computer Network Overview" data-href="Computer Network Overview" href="https://www.allenygy.vip/Computer Network Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Computer Network</a><a data-tooltip-position="top" aria-label="Computer Network Overview" data-href="Computer Network Overview" href="https://www.allenygy.vip/computer-network/computer-network-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Computer Network</a>
<br><a data-tooltip-position="top" aria-label="Operating System Overview" data-href="Operating System Overview" href="https://www.allenygy.vip/Operating System Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">Operating System</a><a data-tooltip-position="top" aria-label="Operating System Overview" data-href="Operating System Overview" href="https://www.allenygy.vip/operating-system/operating-system-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">Operating System</a>
<br><a data-tooltip-position="top" aria-label="Database Management System Overview" data-href="Database Management System Overview" href="https://www.allenygy.vip/Database Management System Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DATABASE</a><a data-tooltip-position="top" aria-label="Database Management System Overview" data-href="Database Management System Overview" href="https://www.allenygy.vip/database-management-system/database-management-system-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DATABASE</a>


<br>WORK

<br><a data-tooltip-position="top" aria-label="Archive" data-href="Archive" href="https://www.allenygy.vip/Archive" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ARCHIVE</a><a data-tooltip-position="top" aria-label="Archive" data-href="Archive" href="https://www.allenygy.vip/archive.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ARCHIVE</a>
<br><a data-tooltip-position="top" aria-label="Class" data-href="Class" href="https://www.allenygy.vip/Class" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">CLASS</a><a data-tooltip-position="top" aria-label="Class" data-href="Class" href="https://www.allenygy.vip/class.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">CLASS</a>
<br><a data-tooltip-position="top" aria-label="Friends" data-href="Friends" href="https://www.allenygy.vip/Friends" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">FRIENDS</a><a data-tooltip-position="top" aria-label="Friends" data-href="Friends" href="https://www.allenygy.vip/friends.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">FRIENDS</a>
<br><a data-tooltip-position="top" aria-label="Slides" data-href="Slides" href="https://www.allenygy.vip/Slides" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">SLIDES</a><a data-tooltip-position="top" aria-label="Slides" data-href="Slides" href="https://www.allenygy.vip/slides.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">SLIDES</a>


<br>Focus

<br><a data-tooltip-position="top" aria-label="Algorithm" data-href="Algorithm" href="https://www.allenygy.vip/Algorithm" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">ALGORITHM</a><a data-tooltip-position="top" aria-label="Algorithm" data-href="Algorithm" href="https://www.allenygy.vip/algorithm/algorithm.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">ALGORITHM</a>
<br><a data-tooltip-position="top" aria-label="Deep Learning" data-href="Deep Learning" href="https://www.allenygy.vip/Deep Learning" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">DEEP LEARNING</a><a data-tooltip-position="top" aria-label="Deep Learning" data-href="Deep Learning" href="https://www.allenygy.vip/deep-learning/deep-learning.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">DEEP LEARNING</a>
<br><a data-tooltip-position="top" aria-label="Big Data Analysis Overview" data-href="Big Data Analysis Overview" href="https://www.allenygy.vip/Big Data Analysis Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">BIG DATA</a><a data-tooltip-position="top" aria-label="Big Data Analysis Overview" data-href="Big Data Analysis Overview" href="https://www.allenygy.vip/data-analysis/big-data-analysis/big-data-analysis-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">BIG DATA</a>
<br><a data-tooltip-position="top" aria-label="Computer Vision Overview" data-href="Computer Vision Overview" href="https://www.allenygy.vip/Computer Vision Overview" class="original-internal-link" target="_blank" rel="noopener nofollow" style="display: none;">COMPUTER VISION</a><a data-tooltip-position="top" aria-label="Computer Vision Overview" data-href="Computer Vision Overview" href="https://www.allenygy.vip/computer-vision/computer-vision-overview.html" class="internal-link mathLink-internal-link" target="_self" rel="noopener nofollow">COMPUTER VISION</a>


<br><br>使用 Obsidian 186 天，共创建 500 篇笔记、283 个标签、70个待办。 <br>MonWedFriJulAugSepOctNovDeclessmore<br>







]]></description><link>https://www.allenygy.vip/home.html</link><guid isPermaLink="false">Home.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 15:04:33 GMT</pubDate></item><item><title><![CDATA[Slides]]></title><description><![CDATA[ 
 <br><br><br><br>]]></description><link>https://www.allenygy.vip/slides.html</link><guid isPermaLink="false">Slides.md</guid><dc:creator><![CDATA[AllenYGY]]></dc:creator><pubDate>Wed, 20 Nov 2024 13:00:22 GMT</pubDate></item></channel></rss>